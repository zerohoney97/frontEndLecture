{
	"id": "a057cce9e7918a7a094dd608119bd578",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.21",
	"solcLongVersion": "0.8.21+commit.d9974bed",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/saleNFT.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.20;\r\n\r\nimport \"./myNFT.sol\";\r\n\r\ncontract SaleNFT {\r\n    // 누가 판매등록을 한 NFT들이 보여야 하니까\r\n    // 판매금액이 얼마인지를 다루는 컨트랙트\r\n\r\n    // 상호작용할 CA의 주소가 필요하다.\r\n    MyNFT public _nft;\r\n    // CA 상호작용할 컨트랙트를 담을 상태 변수\r\n\r\n    constructor(address _nftCA){\r\n        _nft = MyNFT(_nftCA);\r\n        // 상호작용할 CA 인스턴스 생성\r\n    }\r\n\r\n    function _saleNFTmint(string memory url) public {\r\n        // CA에서 CA로 메시지 전송 메서드 실행\r\n        _nft.minting(url);\r\n    }\r\n\r\n    // 판매에 대한 내용의 함수를 작성을 하고\r\n    // saleNFT에서 myNFT로 메시지를 보내서 NFT 권한을 위임받는 함수를 실행 해보자.\r\n\r\n    function setApprovalForAll() public {\r\n        // 판매 컨트랙트가 지금 컨트랙트를 실행시킨사람의 NFT 모든 권한을 위임받았다.\r\n        _nft.setAppAll(msg.sender, address(this), true);\r\n    }\r\n\r\n    // 검증할때, 값이 있는지 없는지를 확인, 값을 비교,\r\n    // 실행시킨 사람이 판매 컨트랙트에게 NFT의 권한을 위임했는지 확인하는 함수\r\n    function salesNFT() public view returns (bool) {\r\n        return _nft.isApprovedForAll(msg.sender, address(this));\r\n    }\r\n\r\n    // 판매 내용\r\n    // 누가 판매등록했는지 담을 상태변수등\r\n    // 금액은 얼마로 설정했는지\r\n    // 판매에 대한 시기\r\n    // 구매자가 구매의사를 표현하면서 구매 신청을 할때 상품의 금액만큼 CA에 이더를 보낸다.\r\n    // 판매자가 확인을 할 수 있고, 판매확인 버튼을 누르면 이더를 받고 소유권을 구매자에게 넘긴다.\r\n    // 그럼 거래 끝.\r\n}\r\n"
			},
			"contracts/myNFT.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.20;\r\n\r\nimport \"../main/node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\";\r\n\r\ncontract MyNFT is ERC721 {\r\n    constructor(\r\n        string memory _name,\r\n        string memory _symbol\r\n    ) ERC721(_name, _symbol) {}\r\n\r\n    mapping(uint256 tokenId => string tokenURI) _tokenURIs;\r\n    uint totalSupply = 0;\r\n\r\n    function minting(string memory tokenURI) public {\r\n        _tokenURIs[totalSupply] = tokenURI;\r\n        _mint(msg.sender, totalSupply);\r\n        totalSupply += 1;\r\n    }\r\n\r\n    // tokenURI와 아래 _baseURI는 opensea 사이트에 들어갔을때 자동으로 실행이 됨. 따로 실행시키는 함수는 없음.\r\n    function tokenURI(\r\n        uint256 _tokenId\r\n    ) public view override returns (string memory) {\r\n        // return \"QmYw7AxGRzxMxxi7NumrdRMcFbi7aiqFTxdLzXQ77bjZrM\";\r\n        // ipfs 해시값\r\n\r\n        return _tokenURIs[_tokenId];\r\n    }\r\n\r\n    function _baseURI() internal view override returns (string memory) {\r\n        return \"https://ivory-traditional-cod-350.mypinata.cloud/ipfs/\";\r\n    }\r\n\r\n    // 1017\r\n    // NFT에 관련된 메서드는 여기에\r\n    // NFㅌㄴ의 판매 권한을 줄 함수를 여기에 작성하자\r\n    function setAppAll(address owner, address operator, bool approved) public {\r\n        _setApprovalForAll(owner, operator, approved);\r\n    }\r\n\r\n    function getOwnerOf(uint256 index) public view returns (address) {\r\n        return _ownerOf(index);\r\n    }\r\n\r\n    function getTotalSupply() public view returns (uint256) {\r\n        return totalSupply;\r\n    }\r\n\r\n    // NFT의 소유권 및 권한 설정\r\n    // 민팅\r\n\r\n    function transferFrom(address to, uint256 tokenId) public payable {\r\n        transferFrom(msg.sender, to, tokenId);\r\n    }\r\n}\r\n"
			},
			"main/node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC721/ERC721.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC721} from \"./IERC721.sol\";\nimport {IERC721Receiver} from \"./IERC721Receiver.sol\";\nimport {IERC721Metadata} from \"./extensions/IERC721Metadata.sol\";\nimport {Context} from \"../../utils/Context.sol\";\nimport {Strings} from \"../../utils/Strings.sol\";\nimport {IERC165, ERC165} from \"../../utils/introspection/ERC165.sol\";\nimport {IERC721Errors} from \"../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including\n * the Metadata extension, but not including the Enumerable extension, which is available separately as\n * {ERC721Enumerable}.\n */\nabstract contract ERC721 is Context, ERC165, IERC721, IERC721Metadata, IERC721Errors {\n    using Strings for uint256;\n\n    // Token name\n    string private _name;\n\n    // Token symbol\n    string private _symbol;\n\n    mapping(uint256 tokenId => address) private _owners;\n\n    mapping(address owner => uint256) private _balances;\n\n    mapping(uint256 tokenId => address) private _tokenApprovals;\n\n    mapping(address owner => mapping(address operator => bool)) private _operatorApprovals;\n\n    /**\n     * @dev Initializes the contract by setting a `name` and a `symbol` to the token collection.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {\n        return\n            interfaceId == type(IERC721).interfaceId ||\n            interfaceId == type(IERC721Metadata).interfaceId ||\n            super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev See {IERC721-balanceOf}.\n     */\n    function balanceOf(address owner) public view virtual returns (uint256) {\n        if (owner == address(0)) {\n            revert ERC721InvalidOwner(address(0));\n        }\n        return _balances[owner];\n    }\n\n    /**\n     * @dev See {IERC721-ownerOf}.\n     */\n    function ownerOf(uint256 tokenId) public view virtual returns (address) {\n        return _requireOwned(tokenId);\n    }\n\n    /**\n     * @dev See {IERC721Metadata-name}.\n     */\n    function name() public view virtual returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev See {IERC721Metadata-symbol}.\n     */\n    function symbol() public view virtual returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev See {IERC721Metadata-tokenURI}.\n     */\n    function tokenURI(uint256 tokenId) public view virtual returns (string memory) {\n        _requireOwned(tokenId);\n\n        string memory baseURI = _baseURI();\n        return bytes(baseURI).length > 0 ? string.concat(baseURI, tokenId.toString()) : \"\";\n    }\n\n    /**\n     * @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\n     * token will be the concatenation of the `baseURI` and the `tokenId`. Empty\n     * by default, can be overridden in child contracts.\n     */\n    function _baseURI() internal view virtual returns (string memory) {\n        return \"\";\n    }\n\n    /**\n     * @dev See {IERC721-approve}.\n     */\n    function approve(address to, uint256 tokenId) public virtual {\n        _approve(to, tokenId, _msgSender());\n    }\n\n    /**\n     * @dev See {IERC721-getApproved}.\n     */\n    function getApproved(uint256 tokenId) public view virtual returns (address) {\n        _requireOwned(tokenId);\n\n        return _getApproved(tokenId);\n    }\n\n    /**\n     * @dev See {IERC721-setApprovalForAll}.\n     */\n    function setApprovalForAll(address operator, bool approved) public virtual {\n        _setApprovalForAll(_msgSender(), operator, approved);\n    }\n\n    /**\n     * @dev See {IERC721-isApprovedForAll}.\n     */\n    function isApprovedForAll(address owner, address operator) public view virtual returns (bool) {\n        return _operatorApprovals[owner][operator];\n    }\n\n    /**\n     * @dev See {IERC721-transferFrom}.\n     */\n    function transferFrom(address from, address to, uint256 tokenId) public virtual {\n        if (to == address(0)) {\n            revert ERC721InvalidReceiver(address(0));\n        }\n        // Setting an \"auth\" arguments enables the `_isAuthorized` check which verifies that the token exists\n        // (from != 0). Therefore, it is not needed to verify that the return value is not 0 here.\n        address previousOwner = _update(to, tokenId, _msgSender());\n        if (previousOwner != from) {\n            revert ERC721IncorrectOwner(from, tokenId, previousOwner);\n        }\n    }\n\n    /**\n     * @dev See {IERC721-safeTransferFrom}.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId) public {\n        safeTransferFrom(from, to, tokenId, \"\");\n    }\n\n    /**\n     * @dev See {IERC721-safeTransferFrom}.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId, bytes memory data) public virtual {\n        transferFrom(from, to, tokenId);\n        _checkOnERC721Received(from, to, tokenId, data);\n    }\n\n    /**\n     * @dev Returns the owner of the `tokenId`. Does NOT revert if token doesn't exist\n     *\n     * IMPORTANT: Any overrides to this function that add ownership of tokens not tracked by the\n     * core ERC721 logic MUST be matched with the use of {_increaseBalance} to keep balances\n     * consistent with ownership. The invariant to preserve is that for any address `a` the value returned by\n     * `balanceOf(a)` must be equal to the number of tokens such that `_ownerOf(tokenId)` is `a`.\n     */\n    function _ownerOf(uint256 tokenId) internal view virtual returns (address) {\n        return _owners[tokenId];\n    }\n\n    /**\n     * @dev Returns the approved address for `tokenId`. Returns 0 if `tokenId` is not minted.\n     */\n    function _getApproved(uint256 tokenId) internal view virtual returns (address) {\n        return _tokenApprovals[tokenId];\n    }\n\n    /**\n     * @dev Returns whether `spender` is allowed to manage `owner`'s tokens, or `tokenId` in\n     * particular (ignoring whether it is owned by `owner`).\n     *\n     * WARNING: This function assumes that `owner` is the actual owner of `tokenId` and does not verify this\n     * assumption.\n     */\n    function _isAuthorized(address owner, address spender, uint256 tokenId) internal view virtual returns (bool) {\n        return\n            spender != address(0) &&\n            (owner == spender || isApprovedForAll(owner, spender) || _getApproved(tokenId) == spender);\n    }\n\n    /**\n     * @dev Checks if `spender` can operate on `tokenId`, assuming the provided `owner` is the actual owner.\n     * Reverts if `spender` does not have approval from the provided `owner` for the given token or for all its assets\n     * the `spender` for the specific `tokenId`.\n     *\n     * WARNING: This function assumes that `owner` is the actual owner of `tokenId` and does not verify this\n     * assumption.\n     */\n    function _checkAuthorized(address owner, address spender, uint256 tokenId) internal view virtual {\n        if (!_isAuthorized(owner, spender, tokenId)) {\n            if (owner == address(0)) {\n                revert ERC721NonexistentToken(tokenId);\n            } else {\n                revert ERC721InsufficientApproval(spender, tokenId);\n            }\n        }\n    }\n\n    /**\n     * @dev Unsafe write access to the balances, used by extensions that \"mint\" tokens using an {ownerOf} override.\n     *\n     * NOTE: the value is limited to type(uint128).max. This protect against _balance overflow. It is unrealistic that\n     * a uint256 would ever overflow from increments when these increments are bounded to uint128 values.\n     *\n     * WARNING: Increasing an account's balance using this function tends to be paired with an override of the\n     * {_ownerOf} function to resolve the ownership of the corresponding tokens so that balances and ownership\n     * remain consistent with one another.\n     */\n    function _increaseBalance(address account, uint128 value) internal virtual {\n        unchecked {\n            _balances[account] += value;\n        }\n    }\n\n    /**\n     * @dev Transfers `tokenId` from its current owner to `to`, or alternatively mints (or burns) if the current owner\n     * (or `to`) is the zero address. Returns the owner of the `tokenId` before the update.\n     *\n     * The `auth` argument is optional. If the value passed is non 0, then this function will check that\n     * `auth` is either the owner of the token, or approved to operate on the token (by the owner).\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: If overriding this function in a way that tracks balances, see also {_increaseBalance}.\n     */\n    function _update(address to, uint256 tokenId, address auth) internal virtual returns (address) {\n        address from = _ownerOf(tokenId);\n\n        // Perform (optional) operator check\n        if (auth != address(0)) {\n            _checkAuthorized(from, auth, tokenId);\n        }\n\n        // Execute the update\n        if (from != address(0)) {\n            // Clear approval. No need to re-authorize or emit the Approval event\n            _approve(address(0), tokenId, address(0), false);\n\n            unchecked {\n                _balances[from] -= 1;\n            }\n        }\n\n        if (to != address(0)) {\n            unchecked {\n                _balances[to] += 1;\n            }\n        }\n\n        _owners[tokenId] = to;\n\n        emit Transfer(from, to, tokenId);\n\n        return from;\n    }\n\n    /**\n     * @dev Mints `tokenId` and transfers it to `to`.\n     *\n     * WARNING: Usage of this method is discouraged, use {_safeMint} whenever possible\n     *\n     * Requirements:\n     *\n     * - `tokenId` must not exist.\n     * - `to` cannot be the zero address.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _mint(address to, uint256 tokenId) internal {\n        if (to == address(0)) {\n            revert ERC721InvalidReceiver(address(0));\n        }\n        address previousOwner = _update(to, tokenId, address(0));\n        if (previousOwner != address(0)) {\n            revert ERC721InvalidSender(address(0));\n        }\n    }\n\n    /**\n     * @dev Mints `tokenId`, transfers it to `to` and checks for `to` acceptance.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must not exist.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _safeMint(address to, uint256 tokenId) internal {\n        _safeMint(to, tokenId, \"\");\n    }\n\n    /**\n     * @dev Same as {xref-ERC721-_safeMint-address-uint256-}[`_safeMint`], with an additional `data` parameter which is\n     * forwarded in {IERC721Receiver-onERC721Received} to contract recipients.\n     */\n    function _safeMint(address to, uint256 tokenId, bytes memory data) internal virtual {\n        _mint(to, tokenId);\n        _checkOnERC721Received(address(0), to, tokenId, data);\n    }\n\n    /**\n     * @dev Destroys `tokenId`.\n     * The approval is cleared when the token is burned.\n     * This is an internal function that does not check if the sender is authorized to operate on the token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _burn(uint256 tokenId) internal {\n        address previousOwner = _update(address(0), tokenId, address(0));\n        if (previousOwner == address(0)) {\n            revert ERC721NonexistentToken(tokenId);\n        }\n    }\n\n    /**\n     * @dev Transfers `tokenId` from `from` to `to`.\n     *  As opposed to {transferFrom}, this imposes no restrictions on msg.sender.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _transfer(address from, address to, uint256 tokenId) internal {\n        if (to == address(0)) {\n            revert ERC721InvalidReceiver(address(0));\n        }\n        address previousOwner = _update(to, tokenId, address(0));\n        if (previousOwner == address(0)) {\n            revert ERC721NonexistentToken(tokenId);\n        } else if (previousOwner != from) {\n            revert ERC721IncorrectOwner(from, tokenId, previousOwner);\n        }\n    }\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking that contract recipients\n     * are aware of the ERC721 standard to prevent tokens from being forever locked.\n     *\n     * `data` is additional data, it has no specified format and it is sent in call to `to`.\n     *\n     * This internal function is like {safeTransferFrom} in the sense that it invokes\n     * {IERC721Receiver-onERC721Received} on the receiver, and can be used to e.g.\n     * implement alternative mechanisms to perform token transfer, such as signature-based.\n     *\n     * Requirements:\n     *\n     * - `tokenId` token must exist and be owned by `from`.\n     * - `to` cannot be the zero address.\n     * - `from` cannot be the zero address.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _safeTransfer(address from, address to, uint256 tokenId) internal {\n        _safeTransfer(from, to, tokenId, \"\");\n    }\n\n    /**\n     * @dev Same as {xref-ERC721-_safeTransfer-address-address-uint256-}[`_safeTransfer`], with an additional `data` parameter which is\n     * forwarded in {IERC721Receiver-onERC721Received} to contract recipients.\n     */\n    function _safeTransfer(address from, address to, uint256 tokenId, bytes memory data) internal virtual {\n        _transfer(from, to, tokenId);\n        _checkOnERC721Received(from, to, tokenId, data);\n    }\n\n    /**\n     * @dev Approve `to` to operate on `tokenId`\n     *\n     * The `auth` argument is optional. If the value passed is non 0, then this function will check that `auth` is\n     * either the owner of the token, or approved to operate on all tokens held by this owner.\n     *\n     * Emits an {Approval} event.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address to, uint256 tokenId, address auth) internal {\n        _approve(to, tokenId, auth, true);\n    }\n\n    /**\n     * @dev Variant of `_approve` with an optional flag to enable or disable the {Approval} event. The event is not\n     * emitted in the context of transfers.\n     */\n    function _approve(address to, uint256 tokenId, address auth, bool emitEvent) internal virtual {\n        // Avoid reading the owner unless necessary\n        if (emitEvent || auth != address(0)) {\n            address owner = _requireOwned(tokenId);\n\n            // We do not use _isAuthorized because single-token approvals should not be able to call approve\n            if (auth != address(0) && owner != auth && !isApprovedForAll(owner, auth)) {\n                revert ERC721InvalidApprover(auth);\n            }\n\n            if (emitEvent) {\n                emit Approval(owner, to, tokenId);\n            }\n        }\n\n        _tokenApprovals[tokenId] = to;\n    }\n\n    /**\n     * @dev Approve `operator` to operate on all of `owner` tokens\n     *\n     * Requirements:\n     * - operator can't be the address zero.\n     *\n     * Emits an {ApprovalForAll} event.\n     */\n    function _setApprovalForAll(address owner, address operator, bool approved) internal virtual {\n        if (operator == address(0)) {\n            revert ERC721InvalidOperator(operator);\n        }\n        _operatorApprovals[owner][operator] = approved;\n        emit ApprovalForAll(owner, operator, approved);\n    }\n\n    /**\n     * @dev Reverts if the `tokenId` doesn't have a current owner (it hasn't been minted, or it has been burned).\n     * Returns the owner.\n     *\n     * Overrides to ownership logic should be done to {_ownerOf}.\n     */\n    function _requireOwned(uint256 tokenId) internal view returns (address) {\n        address owner = _ownerOf(tokenId);\n        if (owner == address(0)) {\n            revert ERC721NonexistentToken(tokenId);\n        }\n        return owner;\n    }\n\n    /**\n     * @dev Private function to invoke {IERC721Receiver-onERC721Received} on a target address. This will revert if the\n     * recipient doesn't accept the token transfer. The call is not executed if the target address is not a contract.\n     *\n     * @param from address representing the previous owner of the given token ID\n     * @param to target address that will receive the tokens\n     * @param tokenId uint256 ID of the token to be transferred\n     * @param data bytes optional data to send along with the call\n     */\n    function _checkOnERC721Received(address from, address to, uint256 tokenId, bytes memory data) private {\n        if (to.code.length > 0) {\n            try IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data) returns (bytes4 retval) {\n                if (retval != IERC721Receiver.onERC721Received.selector) {\n                    revert ERC721InvalidReceiver(to);\n                }\n            } catch (bytes memory reason) {\n                if (reason.length == 0) {\n                    revert ERC721InvalidReceiver(to);\n                } else {\n                    /// @solidity memory-safe-assembly\n                    assembly {\n                        revert(add(32, reason), mload(reason))\n                    }\n                }\n            }\n        }\n    }\n}\n"
			},
			"main/node_modules/@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/draft-IERC6093.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard ERC20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n"
			},
			"main/node_modules/@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/introspection/ERC165.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"./IERC165.sol\";\n\n/**\n * @dev Implementation of the {IERC165} interface.\n *\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n * for the additional interface id that will be supported. For example:\n *\n * ```solidity\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n * }\n * ```\n */\nabstract contract ERC165 is IERC165 {\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {\n        return interfaceId == type(IERC165).interfaceId;\n    }\n}\n"
			},
			"main/node_modules/@openzeppelin/contracts/utils/Strings.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Strings.sol)\n\npragma solidity ^0.8.20;\n\nimport {Math} from \"./math/Math.sol\";\nimport {SignedMath} from \"./math/SignedMath.sol\";\n\n/**\n * @dev String operations.\n */\nlibrary Strings {\n    bytes16 private constant HEX_DIGITS = \"0123456789abcdef\";\n    uint8 private constant ADDRESS_LENGTH = 20;\n\n    /**\n     * @dev The `value` string doesn't fit in the specified `length`.\n     */\n    error StringsInsufficientHexLength(uint256 value, uint256 length);\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\n     */\n    function toString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            uint256 length = Math.log10(value) + 1;\n            string memory buffer = new string(length);\n            uint256 ptr;\n            /// @solidity memory-safe-assembly\n            assembly {\n                ptr := add(buffer, add(32, length))\n            }\n            while (true) {\n                ptr--;\n                /// @solidity memory-safe-assembly\n                assembly {\n                    mstore8(ptr, byte(mod(value, 10), HEX_DIGITS))\n                }\n                value /= 10;\n                if (value == 0) break;\n            }\n            return buffer;\n        }\n    }\n\n    /**\n     * @dev Converts a `int256` to its ASCII `string` decimal representation.\n     */\n    function toStringSigned(int256 value) internal pure returns (string memory) {\n        return string.concat(value < 0 ? \"-\" : \"\", toString(SignedMath.abs(value)));\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\n     */\n    function toHexString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            return toHexString(value, Math.log256(value) + 1);\n        }\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\n     */\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\n        uint256 localValue = value;\n        bytes memory buffer = new bytes(2 * length + 2);\n        buffer[0] = \"0\";\n        buffer[1] = \"x\";\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\n            buffer[i] = HEX_DIGITS[localValue & 0xf];\n            localValue >>= 4;\n        }\n        if (localValue != 0) {\n            revert StringsInsufficientHexLength(value, length);\n        }\n        return string(buffer);\n    }\n\n    /**\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal\n     * representation.\n     */\n    function toHexString(address addr) internal pure returns (string memory) {\n        return toHexString(uint256(uint160(addr)), ADDRESS_LENGTH);\n    }\n\n    /**\n     * @dev Returns true if the two strings are equal.\n     */\n    function equal(string memory a, string memory b) internal pure returns (bool) {\n        return bytes(a).length == bytes(b).length && keccak256(bytes(a)) == keccak256(bytes(b));\n    }\n}\n"
			},
			"main/node_modules/@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n"
			},
			"main/node_modules/@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC721/extensions/IERC721Metadata.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC721} from \"../IERC721.sol\";\n\n/**\n * @title ERC-721 Non-Fungible Token Standard, optional metadata extension\n * @dev See https://eips.ethereum.org/EIPS/eip-721\n */\ninterface IERC721Metadata is IERC721 {\n    /**\n     * @dev Returns the token collection name.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the token collection symbol.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token.\n     */\n    function tokenURI(uint256 tokenId) external view returns (string memory);\n}\n"
			},
			"main/node_modules/@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC721/IERC721Receiver.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @title ERC721 token receiver interface\n * @dev Interface for any contract that wants to support safeTransfers\n * from ERC721 asset contracts.\n */\ninterface IERC721Receiver {\n    /**\n     * @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\n     * by `operator` from `from`, this function is called.\n     *\n     * It must return its Solidity selector to confirm the token transfer.\n     * If any other value is returned or the interface is not implemented by the recipient, the transfer will be\n     * reverted.\n     *\n     * The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\n     */\n    function onERC721Received(\n        address operator,\n        address from,\n        uint256 tokenId,\n        bytes calldata data\n    ) external returns (bytes4);\n}\n"
			},
			"main/node_modules/@openzeppelin/contracts/token/ERC721/IERC721.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC721/IERC721.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"../../utils/introspection/IERC165.sol\";\n\n/**\n * @dev Required interface of an ERC721 compliant contract.\n */\ninterface IERC721 is IERC165 {\n    /**\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\n     */\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\n     */\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\n\n    /**\n     * @dev Returns the number of tokens in ``owner``'s account.\n     */\n    function balanceOf(address owner) external view returns (uint256 balance);\n\n    /**\n     * @dev Returns the owner of the `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function ownerOf(uint256 tokenId) external view returns (address owner);\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n     *   a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId, bytes calldata data) external;\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must have been allowed to move this token by either {approve} or\n     *   {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n     *   a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId) external;\n\n    /**\n     * @dev Transfers `tokenId` token from `from` to `to`.\n     *\n     * WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721\n     * or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\n     * understand this adds an external call which potentially creates a reentrancy vulnerability.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 tokenId) external;\n\n    /**\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\n     * The approval is cleared when the token is transferred.\n     *\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n     *\n     * Requirements:\n     *\n     * - The caller must own the token or be an approved operator.\n     * - `tokenId` must exist.\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address to, uint256 tokenId) external;\n\n    /**\n     * @dev Approve or remove `operator` as an operator for the caller.\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n     *\n     * Requirements:\n     *\n     * - The `operator` cannot be the address zero.\n     *\n     * Emits an {ApprovalForAll} event.\n     */\n    function setApprovalForAll(address operator, bool approved) external;\n\n    /**\n     * @dev Returns the account approved for `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function getApproved(uint256 tokenId) external view returns (address operator);\n\n    /**\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n     *\n     * See {setApprovalForAll}\n     */\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\n}\n"
			},
			"main/node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"
			},
			"main/node_modules/@openzeppelin/contracts/utils/math/SignedMath.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/math/SignedMath.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard signed math utilities missing in the Solidity language.\n */\nlibrary SignedMath {\n    /**\n     * @dev Returns the largest of two signed numbers.\n     */\n    function max(int256 a, int256 b) internal pure returns (int256) {\n        return a > b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two signed numbers.\n     */\n    function min(int256 a, int256 b) internal pure returns (int256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two signed numbers without overflow.\n     * The result is rounded towards zero.\n     */\n    function average(int256 a, int256 b) internal pure returns (int256) {\n        // Formula from the book \"Hacker's Delight\"\n        int256 x = (a & b) + ((a ^ b) >> 1);\n        return x + (int256(uint256(x) >> 255) & (a ^ b));\n    }\n\n    /**\n     * @dev Returns the absolute unsigned value of a signed value.\n     */\n    function abs(int256 n) internal pure returns (uint256) {\n        unchecked {\n            // must be unchecked in order to support `n = type(int256).min`\n            return uint256(n >= 0 ? n : -n);\n        }\n    }\n}\n"
			},
			"main/node_modules/@openzeppelin/contracts/utils/math/Math.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/math/Math.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard math utilities missing in the Solidity language.\n */\nlibrary Math {\n    /**\n     * @dev Muldiv operation overflow.\n     */\n    error MathOverflowedMulDiv();\n\n    enum Rounding {\n        Floor, // Toward negative infinity\n        Ceil, // Toward positive infinity\n        Trunc, // Toward zero\n        Expand // Away from zero\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            uint256 c = a + b;\n            if (c < a) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, with an overflow flag.\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b > a) return (false, 0);\n            return (true, a - b);\n        }\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n            // benefit is lost if 'b' is also tested.\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n            if (a == 0) return (true, 0);\n            uint256 c = a * b;\n            if (c / a != b) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a / b);\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a % b);\n        }\n    }\n\n    /**\n     * @dev Returns the largest of two numbers.\n     */\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a > b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two numbers.\n     */\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two numbers. The result is rounded towards\n     * zero.\n     */\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b) / 2 can overflow.\n        return (a & b) + (a ^ b) / 2;\n    }\n\n    /**\n     * @dev Returns the ceiling of the division of two numbers.\n     *\n     * This differs from standard division with `/` in that it rounds towards infinity instead\n     * of rounding towards zero.\n     */\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\n        if (b == 0) {\n            // Guarantee the same behavior as in a regular Solidity division.\n            return a / b;\n        }\n\n        // (a + b - 1) / b can overflow on addition, so we distribute.\n        return a == 0 ? 0 : (a - 1) / b + 1;\n    }\n\n    /**\n     * @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n     * denominator == 0.\n     * @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n     * Uniswap Labs also under MIT license.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator) internal pure returns (uint256 result) {\n        unchecked {\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2^256 and mod 2^256 - 1, then use\n            // use the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\n            // variables such that product = prod1 * 2^256 + prod0.\n            uint256 prod0 = x * y; // Least significant 256 bits of the product\n            uint256 prod1; // Most significant 256 bits of the product\n            assembly {\n                let mm := mulmod(x, y, not(0))\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\n            }\n\n            // Handle non-overflow cases, 256 by 256 division.\n            if (prod1 == 0) {\n                // Solidity will revert if denominator == 0, unlike the div opcode on its own.\n                // The surrounding unchecked block does not change this fact.\n                // See https://docs.soliditylang.org/en/latest/control-structures.html#checked-or-unchecked-arithmetic.\n                return prod0 / denominator;\n            }\n\n            // Make sure the result is less than 2^256. Also prevents denominator == 0.\n            if (denominator <= prod1) {\n                revert MathOverflowedMulDiv();\n            }\n\n            ///////////////////////////////////////////////\n            // 512 by 256 division.\n            ///////////////////////////////////////////////\n\n            // Make division exact by subtracting the remainder from [prod1 prod0].\n            uint256 remainder;\n            assembly {\n                // Compute remainder using mulmod.\n                remainder := mulmod(x, y, denominator)\n\n                // Subtract 256 bit number from 512 bit number.\n                prod1 := sub(prod1, gt(remainder, prod0))\n                prod0 := sub(prod0, remainder)\n            }\n\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator.\n            // Always >= 1. See https://cs.stackexchange.com/q/138556/92363.\n\n            uint256 twos = denominator & (0 - denominator);\n            assembly {\n                // Divide denominator by twos.\n                denominator := div(denominator, twos)\n\n                // Divide [prod1 prod0] by twos.\n                prod0 := div(prod0, twos)\n\n                // Flip twos such that it is 2^256 / twos. If twos is zero, then it becomes one.\n                twos := add(div(sub(0, twos), twos), 1)\n            }\n\n            // Shift in bits from prod1 into prod0.\n            prod0 |= prod1 * twos;\n\n            // Invert denominator mod 2^256. Now that denominator is an odd number, it has an inverse modulo 2^256 such\n            // that denominator * inv = 1 mod 2^256. Compute the inverse by starting with a seed that is correct for\n            // four bits. That is, denominator * inv = 1 mod 2^4.\n            uint256 inverse = (3 * denominator) ^ 2;\n\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also\n            // works in modular arithmetic, doubling the correct bits in each step.\n            inverse *= 2 - denominator * inverse; // inverse mod 2^8\n            inverse *= 2 - denominator * inverse; // inverse mod 2^16\n            inverse *= 2 - denominator * inverse; // inverse mod 2^32\n            inverse *= 2 - denominator * inverse; // inverse mod 2^64\n            inverse *= 2 - denominator * inverse; // inverse mod 2^128\n            inverse *= 2 - denominator * inverse; // inverse mod 2^256\n\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\n            // This will give us the correct result modulo 2^256. Since the preconditions guarantee that the outcome is\n            // less than 2^256, this is the final result. We don't need to compute the high bits of the result and prod1\n            // is no longer required.\n            result = prod0 * inverse;\n            return result;\n        }\n    }\n\n    /**\n     * @notice Calculates x * y / denominator with full precision, following the selected rounding direction.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator, Rounding rounding) internal pure returns (uint256) {\n        uint256 result = mulDiv(x, y, denominator);\n        if (unsignedRoundsUp(rounding) && mulmod(x, y, denominator) > 0) {\n            result += 1;\n        }\n        return result;\n    }\n\n    /**\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n     * towards zero.\n     *\n     * Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11).\n     */\n    function sqrt(uint256 a) internal pure returns (uint256) {\n        if (a == 0) {\n            return 0;\n        }\n\n        // For our first guess, we get the biggest power of 2 which is smaller than the square root of the target.\n        //\n        // We know that the \"msb\" (most significant bit) of our target number `a` is a power of 2 such that we have\n        // `msb(a) <= a < 2*msb(a)`. This value can be written `msb(a)=2**k` with `k=log2(a)`.\n        //\n        // This can be rewritten `2**log2(a) <= a < 2**(log2(a) + 1)`\n        // → `sqrt(2**k) <= sqrt(a) < sqrt(2**(k+1))`\n        // → `2**(k/2) <= sqrt(a) < 2**((k+1)/2) <= 2**(k/2 + 1)`\n        //\n        // Consequently, `2**(log2(a) / 2)` is a good first approximation of `sqrt(a)` with at least 1 correct bit.\n        uint256 result = 1 << (log2(a) >> 1);\n\n        // At this point `result` is an estimation with one bit of precision. We know the true value is a uint128,\n        // since it is the square root of a uint256. Newton's method converges quadratically (precision doubles at\n        // every iteration). We thus need at most 7 iteration to turn our partial result with one bit of precision\n        // into the expected uint128 result.\n        unchecked {\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            return min(result, a / result);\n        }\n    }\n\n    /**\n     * @notice Calculates sqrt(a), following the selected rounding direction.\n     */\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = sqrt(a);\n            return result + (unsignedRoundsUp(rounding) && result * result < a ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 2 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 128;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 64;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 32;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 16;\n            }\n            if (value >> 8 > 0) {\n                value >>= 8;\n                result += 8;\n            }\n            if (value >> 4 > 0) {\n                value >>= 4;\n                result += 4;\n            }\n            if (value >> 2 > 0) {\n                value >>= 2;\n                result += 2;\n            }\n            if (value >> 1 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log2(value);\n            return result + (unsignedRoundsUp(rounding) && 1 << result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 10 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >= 10 ** 64) {\n                value /= 10 ** 64;\n                result += 64;\n            }\n            if (value >= 10 ** 32) {\n                value /= 10 ** 32;\n                result += 32;\n            }\n            if (value >= 10 ** 16) {\n                value /= 10 ** 16;\n                result += 16;\n            }\n            if (value >= 10 ** 8) {\n                value /= 10 ** 8;\n                result += 8;\n            }\n            if (value >= 10 ** 4) {\n                value /= 10 ** 4;\n                result += 4;\n            }\n            if (value >= 10 ** 2) {\n                value /= 10 ** 2;\n                result += 2;\n            }\n            if (value >= 10 ** 1) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log10(value);\n            return result + (unsignedRoundsUp(rounding) && 10 ** result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 256 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     *\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\n     */\n    function log256(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 16;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 8;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 4;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 2;\n            }\n            if (value >> 8 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log256(value);\n            return result + (unsignedRoundsUp(rounding) && 1 << (result << 3) < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers.\n     */\n    function unsignedRoundsUp(Rounding rounding) internal pure returns (bool) {\n        return uint8(rounding) % 2 == 1;\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"contracts/myNFT.sol": {
				"MyNFT": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "_name",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "_symbol",
									"type": "string"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "index",
									"type": "uint256"
								}
							],
							"name": "getOwnerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getTotalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "tokenURI",
									"type": "string"
								}
							],
							"name": "minting",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setAppAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_tokenId",
									"type": "uint256"
								}
							],
							"name": "tokenURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "See {IERC721-approve}."
							},
							"balanceOf(address)": {
								"details": "See {IERC721-balanceOf}."
							},
							"getApproved(uint256)": {
								"details": "See {IERC721-getApproved}."
							},
							"isApprovedForAll(address,address)": {
								"details": "See {IERC721-isApprovedForAll}."
							},
							"name()": {
								"details": "See {IERC721Metadata-name}."
							},
							"ownerOf(uint256)": {
								"details": "See {IERC721-ownerOf}."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "See {IERC721-safeTransferFrom}."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "See {IERC721-safeTransferFrom}."
							},
							"setApprovalForAll(address,bool)": {
								"details": "See {IERC721-setApprovalForAll}."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							},
							"symbol()": {
								"details": "See {IERC721Metadata-symbol}."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC721-transferFrom}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/myNFT.sol\":143:1788  contract MyNFT is ERC721 {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/myNFT.sol\":369:370  0 */\n  0x00\n    /* \"contracts/myNFT.sol\":350:370  uint totalSupply = 0 */\n  0x07\n  sstore\n    /* \"contracts/myNFT.sol\":175:281  constructor(... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"contracts/myNFT.sol\":263:268  _name */\n  dup2\n    /* \"contracts/myNFT.sol\":270:277  _symbol */\n  dup2\n    /* \"main/node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":1455:1460  name_ */\n  dup2\n    /* \"main/node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":1447:1452  _name */\n  0x00\n    /* \"main/node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":1447:1460  _name = name_ */\n  swap1\n  dup2\n  tag_7\n  swap2\n  swap1\n  tag_8\n  jump\t// in\ntag_7:\n  pop\n    /* \"main/node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":1480:1487  symbol_ */\n  dup1\n    /* \"main/node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":1470:1477  _symbol */\n  0x01\n    /* \"main/node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":1470:1487  _symbol = symbol_ */\n  swap1\n  dup2\n  tag_9\n  swap2\n  swap1\n  tag_8\n  jump\t// in\ntag_9:\n  pop\n    /* \"main/node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":1381:1494  constructor(string memory name_, string memory symbol_) {... */\n  pop\n  pop\n    /* \"contracts/myNFT.sol\":175:281  constructor(... */\n  pop\n  pop\n    /* \"contracts/myNFT.sol\":143:1788  contract MyNFT is ERC721 {... */\n  jump(tag_11)\n    /* \"#utility.yul\":7:82   */\ntag_12:\n    /* \"#utility.yul\":40:46   */\n  0x00\n    /* \"#utility.yul\":73:75   */\n  0x40\n    /* \"#utility.yul\":67:76   */\n  mload\n    /* \"#utility.yul\":57:76   */\n  swap1\n  pop\n    /* \"#utility.yul\":7:82   */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":88:205   */\ntag_13:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  dup1\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":211:328   */\ntag_14:\n    /* \"#utility.yul\":320:321   */\n  0x00\n    /* \"#utility.yul\":317:318   */\n  dup1\n    /* \"#utility.yul\":310:322   */\n  revert\n    /* \"#utility.yul\":334:451   */\ntag_15:\n    /* \"#utility.yul\":443:444   */\n  0x00\n    /* \"#utility.yul\":440:441   */\n  dup1\n    /* \"#utility.yul\":433:445   */\n  revert\n    /* \"#utility.yul\":457:574   */\ntag_16:\n    /* \"#utility.yul\":566:567   */\n  0x00\n    /* \"#utility.yul\":563:564   */\n  dup1\n    /* \"#utility.yul\":556:568   */\n  revert\n    /* \"#utility.yul\":580:682   */\ntag_17:\n    /* \"#utility.yul\":621:627   */\n  0x00\n    /* \"#utility.yul\":672:674   */\n  0x1f\n    /* \"#utility.yul\":668:675   */\n  not\n    /* \"#utility.yul\":663:665   */\n  0x1f\n    /* \"#utility.yul\":656:661   */\n  dup4\n    /* \"#utility.yul\":652:666   */\n  add\n    /* \"#utility.yul\":648:676   */\n  and\n    /* \"#utility.yul\":638:676   */\n  swap1\n  pop\n    /* \"#utility.yul\":580:682   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":688:868   */\ntag_18:\n    /* \"#utility.yul\":736:813   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":733:734   */\n  0x00\n    /* \"#utility.yul\":726:814   */\n  mstore\n    /* \"#utility.yul\":833:837   */\n  0x41\n    /* \"#utility.yul\":830:831   */\n  0x04\n    /* \"#utility.yul\":823:838   */\n  mstore\n    /* \"#utility.yul\":857:861   */\n  0x24\n    /* \"#utility.yul\":854:855   */\n  0x00\n    /* \"#utility.yul\":847:862   */\n  revert\n    /* \"#utility.yul\":874:1155   */\ntag_19:\n    /* \"#utility.yul\":957:984   */\n  tag_53\n    /* \"#utility.yul\":979:983   */\n  dup3\n    /* \"#utility.yul\":957:984   */\n  tag_17\n  jump\t// in\ntag_53:\n    /* \"#utility.yul\":949:955   */\n  dup2\n    /* \"#utility.yul\":945:985   */\n  add\n    /* \"#utility.yul\":1087:1093   */\n  dup2\n    /* \"#utility.yul\":1075:1085   */\n  dup2\n    /* \"#utility.yul\":1072:1094   */\n  lt\n    /* \"#utility.yul\":1051:1069   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":1039:1049   */\n  dup3\n    /* \"#utility.yul\":1036:1070   */\n  gt\n    /* \"#utility.yul\":1033:1095   */\n  or\n    /* \"#utility.yul\":1030:1118   */\n  iszero\n  tag_54\n  jumpi\n    /* \"#utility.yul\":1098:1116   */\n  tag_55\n  tag_18\n  jump\t// in\ntag_55:\n    /* \"#utility.yul\":1030:1118   */\ntag_54:\n    /* \"#utility.yul\":1138:1148   */\n  dup1\n    /* \"#utility.yul\":1134:1136   */\n  0x40\n    /* \"#utility.yul\":1127:1149   */\n  mstore\n    /* \"#utility.yul\":917:1155   */\n  pop\n    /* \"#utility.yul\":874:1155   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1161:1290   */\ntag_20:\n    /* \"#utility.yul\":1195:1201   */\n  0x00\n    /* \"#utility.yul\":1222:1242   */\n  tag_57\n  tag_12\n  jump\t// in\ntag_57:\n    /* \"#utility.yul\":1212:1242   */\n  swap1\n  pop\n    /* \"#utility.yul\":1251:1284   */\n  tag_58\n    /* \"#utility.yul\":1279:1283   */\n  dup3\n    /* \"#utility.yul\":1271:1277   */\n  dup3\n    /* \"#utility.yul\":1251:1284   */\n  tag_19\n  jump\t// in\ntag_58:\n    /* \"#utility.yul\":1161:1290   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1296:1604   */\ntag_21:\n    /* \"#utility.yul\":1358:1362   */\n  0x00\n    /* \"#utility.yul\":1448:1466   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":1440:1446   */\n  dup3\n    /* \"#utility.yul\":1437:1467   */\n  gt\n    /* \"#utility.yul\":1434:1490   */\n  iszero\n  tag_60\n  jumpi\n    /* \"#utility.yul\":1470:1488   */\n  tag_61\n  tag_18\n  jump\t// in\ntag_61:\n    /* \"#utility.yul\":1434:1490   */\ntag_60:\n    /* \"#utility.yul\":1508:1537   */\n  tag_62\n    /* \"#utility.yul\":1530:1536   */\n  dup3\n    /* \"#utility.yul\":1508:1537   */\n  tag_17\n  jump\t// in\ntag_62:\n    /* \"#utility.yul\":1500:1537   */\n  swap1\n  pop\n    /* \"#utility.yul\":1592:1596   */\n  0x20\n    /* \"#utility.yul\":1586:1590   */\n  dup2\n    /* \"#utility.yul\":1582:1597   */\n  add\n    /* \"#utility.yul\":1574:1597   */\n  swap1\n  pop\n    /* \"#utility.yul\":1296:1604   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1610:1856   */\ntag_22:\n    /* \"#utility.yul\":1691:1692   */\n  0x00\n    /* \"#utility.yul\":1701:1814   */\ntag_64:\n    /* \"#utility.yul\":1715:1721   */\n  dup4\n    /* \"#utility.yul\":1712:1713   */\n  dup2\n    /* \"#utility.yul\":1709:1722   */\n  lt\n    /* \"#utility.yul\":1701:1814   */\n  iszero\n  tag_66\n  jumpi\n    /* \"#utility.yul\":1800:1801   */\n  dup1\n    /* \"#utility.yul\":1795:1798   */\n  dup3\n    /* \"#utility.yul\":1791:1802   */\n  add\n    /* \"#utility.yul\":1785:1803   */\n  mload\n    /* \"#utility.yul\":1781:1782   */\n  dup2\n    /* \"#utility.yul\":1776:1779   */\n  dup5\n    /* \"#utility.yul\":1772:1783   */\n  add\n    /* \"#utility.yul\":1765:1804   */\n  mstore\n    /* \"#utility.yul\":1737:1739   */\n  0x20\n    /* \"#utility.yul\":1734:1735   */\n  dup2\n    /* \"#utility.yul\":1730:1740   */\n  add\n    /* \"#utility.yul\":1725:1740   */\n  swap1\n  pop\n    /* \"#utility.yul\":1701:1814   */\n  jump(tag_64)\ntag_66:\n    /* \"#utility.yul\":1848:1849   */\n  0x00\n    /* \"#utility.yul\":1839:1845   */\n  dup5\n    /* \"#utility.yul\":1834:1837   */\n  dup5\n    /* \"#utility.yul\":1830:1846   */\n  add\n    /* \"#utility.yul\":1823:1850   */\n  mstore\n    /* \"#utility.yul\":1672:1856   */\n  pop\n    /* \"#utility.yul\":1610:1856   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1862:2296   */\ntag_23:\n    /* \"#utility.yul\":1951:1956   */\n  0x00\n    /* \"#utility.yul\":1976:2042   */\n  tag_68\n    /* \"#utility.yul\":1992:2041   */\n  tag_69\n    /* \"#utility.yul\":2034:2040   */\n  dup5\n    /* \"#utility.yul\":1992:2041   */\n  tag_21\n  jump\t// in\ntag_69:\n    /* \"#utility.yul\":1976:2042   */\n  tag_20\n  jump\t// in\ntag_68:\n    /* \"#utility.yul\":1967:2042   */\n  swap1\n  pop\n    /* \"#utility.yul\":2065:2071   */\n  dup3\n    /* \"#utility.yul\":2058:2063   */\n  dup2\n    /* \"#utility.yul\":2051:2072   */\n  mstore\n    /* \"#utility.yul\":2103:2107   */\n  0x20\n    /* \"#utility.yul\":2096:2101   */\n  dup2\n    /* \"#utility.yul\":2092:2108   */\n  add\n    /* \"#utility.yul\":2141:2144   */\n  dup5\n    /* \"#utility.yul\":2132:2138   */\n  dup5\n    /* \"#utility.yul\":2127:2130   */\n  dup5\n    /* \"#utility.yul\":2123:2139   */\n  add\n    /* \"#utility.yul\":2120:2145   */\n  gt\n    /* \"#utility.yul\":2117:2229   */\n  iszero\n  tag_70\n  jumpi\n    /* \"#utility.yul\":2148:2227   */\n  tag_71\n  tag_16\n  jump\t// in\ntag_71:\n    /* \"#utility.yul\":2117:2229   */\ntag_70:\n    /* \"#utility.yul\":2238:2290   */\n  tag_72\n    /* \"#utility.yul\":2283:2289   */\n  dup5\n    /* \"#utility.yul\":2278:2281   */\n  dup3\n    /* \"#utility.yul\":2273:2276   */\n  dup6\n    /* \"#utility.yul\":2238:2290   */\n  tag_22\n  jump\t// in\ntag_72:\n    /* \"#utility.yul\":1957:2296   */\n  pop\n    /* \"#utility.yul\":1862:2296   */\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2316:2671   */\ntag_24:\n    /* \"#utility.yul\":2383:2388   */\n  0x00\n    /* \"#utility.yul\":2432:2435   */\n  dup3\n    /* \"#utility.yul\":2425:2429   */\n  0x1f\n    /* \"#utility.yul\":2417:2423   */\n  dup4\n    /* \"#utility.yul\":2413:2430   */\n  add\n    /* \"#utility.yul\":2409:2436   */\n  slt\n    /* \"#utility.yul\":2399:2521   */\n  tag_74\n  jumpi\n    /* \"#utility.yul\":2440:2519   */\n  tag_75\n  tag_15\n  jump\t// in\ntag_75:\n    /* \"#utility.yul\":2399:2521   */\ntag_74:\n    /* \"#utility.yul\":2550:2556   */\n  dup2\n    /* \"#utility.yul\":2544:2557   */\n  mload\n    /* \"#utility.yul\":2575:2665   */\n  tag_76\n    /* \"#utility.yul\":2661:2664   */\n  dup5\n    /* \"#utility.yul\":2653:2659   */\n  dup3\n    /* \"#utility.yul\":2646:2650   */\n  0x20\n    /* \"#utility.yul\":2638:2644   */\n  dup7\n    /* \"#utility.yul\":2634:2651   */\n  add\n    /* \"#utility.yul\":2575:2665   */\n  tag_23\n  jump\t// in\ntag_76:\n    /* \"#utility.yul\":2566:2665   */\n  swap2\n  pop\n    /* \"#utility.yul\":2389:2671   */\n  pop\n    /* \"#utility.yul\":2316:2671   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2677:3530   */\ntag_3:\n    /* \"#utility.yul\":2776:2782   */\n  0x00\n    /* \"#utility.yul\":2784:2790   */\n  dup1\n    /* \"#utility.yul\":2833:2835   */\n  0x40\n    /* \"#utility.yul\":2821:2830   */\n  dup4\n    /* \"#utility.yul\":2812:2819   */\n  dup6\n    /* \"#utility.yul\":2808:2831   */\n  sub\n    /* \"#utility.yul\":2804:2836   */\n  slt\n    /* \"#utility.yul\":2801:2920   */\n  iszero\n  tag_78\n  jumpi\n    /* \"#utility.yul\":2839:2918   */\n  tag_79\n  tag_13\n  jump\t// in\ntag_79:\n    /* \"#utility.yul\":2801:2920   */\ntag_78:\n    /* \"#utility.yul\":2980:2981   */\n  0x00\n    /* \"#utility.yul\":2969:2978   */\n  dup4\n    /* \"#utility.yul\":2965:2982   */\n  add\n    /* \"#utility.yul\":2959:2983   */\n  mload\n    /* \"#utility.yul\":3010:3028   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":3002:3008   */\n  dup2\n    /* \"#utility.yul\":2999:3029   */\n  gt\n    /* \"#utility.yul\":2996:3113   */\n  iszero\n  tag_80\n  jumpi\n    /* \"#utility.yul\":3032:3111   */\n  tag_81\n  tag_14\n  jump\t// in\ntag_81:\n    /* \"#utility.yul\":2996:3113   */\ntag_80:\n    /* \"#utility.yul\":3137:3211   */\n  tag_82\n    /* \"#utility.yul\":3203:3210   */\n  dup6\n    /* \"#utility.yul\":3194:3200   */\n  dup3\n    /* \"#utility.yul\":3183:3192   */\n  dup7\n    /* \"#utility.yul\":3179:3201   */\n  add\n    /* \"#utility.yul\":3137:3211   */\n  tag_24\n  jump\t// in\ntag_82:\n    /* \"#utility.yul\":3127:3211   */\n  swap3\n  pop\n    /* \"#utility.yul\":2930:3221   */\n  pop\n    /* \"#utility.yul\":3281:3283   */\n  0x20\n    /* \"#utility.yul\":3270:3279   */\n  dup4\n    /* \"#utility.yul\":3266:3284   */\n  add\n    /* \"#utility.yul\":3260:3285   */\n  mload\n    /* \"#utility.yul\":3312:3330   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":3304:3310   */\n  dup2\n    /* \"#utility.yul\":3301:3331   */\n  gt\n    /* \"#utility.yul\":3298:3415   */\n  iszero\n  tag_83\n  jumpi\n    /* \"#utility.yul\":3334:3413   */\n  tag_84\n  tag_14\n  jump\t// in\ntag_84:\n    /* \"#utility.yul\":3298:3415   */\ntag_83:\n    /* \"#utility.yul\":3439:3513   */\n  tag_85\n    /* \"#utility.yul\":3505:3512   */\n  dup6\n    /* \"#utility.yul\":3496:3502   */\n  dup3\n    /* \"#utility.yul\":3485:3494   */\n  dup7\n    /* \"#utility.yul\":3481:3503   */\n  add\n    /* \"#utility.yul\":3439:3513   */\n  tag_24\n  jump\t// in\ntag_85:\n    /* \"#utility.yul\":3429:3513   */\n  swap2\n  pop\n    /* \"#utility.yul\":3231:3523   */\n  pop\n    /* \"#utility.yul\":2677:3530   */\n  swap3\n  pop\n  swap3\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3536:3635   */\ntag_25:\n    /* \"#utility.yul\":3588:3594   */\n  0x00\n    /* \"#utility.yul\":3622:3627   */\n  dup2\n    /* \"#utility.yul\":3616:3628   */\n  mload\n    /* \"#utility.yul\":3606:3628   */\n  swap1\n  pop\n    /* \"#utility.yul\":3536:3635   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3641:3821   */\ntag_26:\n    /* \"#utility.yul\":3689:3766   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":3686:3687   */\n  0x00\n    /* \"#utility.yul\":3679:3767   */\n  mstore\n    /* \"#utility.yul\":3786:3790   */\n  0x22\n    /* \"#utility.yul\":3783:3784   */\n  0x04\n    /* \"#utility.yul\":3776:3791   */\n  mstore\n    /* \"#utility.yul\":3810:3814   */\n  0x24\n    /* \"#utility.yul\":3807:3808   */\n  0x00\n    /* \"#utility.yul\":3800:3815   */\n  revert\n    /* \"#utility.yul\":3827:4147   */\ntag_27:\n    /* \"#utility.yul\":3871:3877   */\n  0x00\n    /* \"#utility.yul\":3908:3909   */\n  0x02\n    /* \"#utility.yul\":3902:3906   */\n  dup3\n    /* \"#utility.yul\":3898:3910   */\n  div\n    /* \"#utility.yul\":3888:3910   */\n  swap1\n  pop\n    /* \"#utility.yul\":3955:3956   */\n  0x01\n    /* \"#utility.yul\":3949:3953   */\n  dup3\n    /* \"#utility.yul\":3945:3957   */\n  and\n    /* \"#utility.yul\":3976:3994   */\n  dup1\n    /* \"#utility.yul\":3966:4047   */\n  tag_89\n  jumpi\n    /* \"#utility.yul\":4032:4036   */\n  0x7f\n    /* \"#utility.yul\":4024:4030   */\n  dup3\n    /* \"#utility.yul\":4020:4037   */\n  and\n    /* \"#utility.yul\":4010:4037   */\n  swap2\n  pop\n    /* \"#utility.yul\":3966:4047   */\ntag_89:\n    /* \"#utility.yul\":4094:4096   */\n  0x20\n    /* \"#utility.yul\":4086:4092   */\n  dup3\n    /* \"#utility.yul\":4083:4097   */\n  lt\n    /* \"#utility.yul\":4063:4081   */\n  dup2\n    /* \"#utility.yul\":4060:4098   */\n  sub\n    /* \"#utility.yul\":4057:4141   */\n  tag_90\n  jumpi\n    /* \"#utility.yul\":4113:4131   */\n  tag_91\n  tag_26\n  jump\t// in\ntag_91:\n    /* \"#utility.yul\":4057:4141   */\ntag_90:\n    /* \"#utility.yul\":3878:4147   */\n  pop\n    /* \"#utility.yul\":3827:4147   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4153:4294   */\ntag_28:\n    /* \"#utility.yul\":4202:4206   */\n  0x00\n    /* \"#utility.yul\":4225:4228   */\n  dup2\n    /* \"#utility.yul\":4217:4228   */\n  swap1\n  pop\n    /* \"#utility.yul\":4248:4251   */\n  dup2\n    /* \"#utility.yul\":4245:4246   */\n  0x00\n    /* \"#utility.yul\":4238:4252   */\n  mstore\n    /* \"#utility.yul\":4282:4286   */\n  0x20\n    /* \"#utility.yul\":4279:4280   */\n  0x00\n    /* \"#utility.yul\":4269:4287   */\n  keccak256\n    /* \"#utility.yul\":4261:4287   */\n  swap1\n  pop\n    /* \"#utility.yul\":4153:4294   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4300:4393   */\ntag_29:\n    /* \"#utility.yul\":4337:4343   */\n  0x00\n    /* \"#utility.yul\":4384:4386   */\n  0x20\n    /* \"#utility.yul\":4379:4381   */\n  0x1f\n    /* \"#utility.yul\":4372:4377   */\n  dup4\n    /* \"#utility.yul\":4368:4382   */\n  add\n    /* \"#utility.yul\":4364:4387   */\n  div\n    /* \"#utility.yul\":4354:4387   */\n  swap1\n  pop\n    /* \"#utility.yul\":4300:4393   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4399:4506   */\ntag_30:\n    /* \"#utility.yul\":4443:4451   */\n  0x00\n    /* \"#utility.yul\":4493:4498   */\n  dup3\n    /* \"#utility.yul\":4487:4491   */\n  dup3\n    /* \"#utility.yul\":4483:4499   */\n  shl\n    /* \"#utility.yul\":4462:4499   */\n  swap1\n  pop\n    /* \"#utility.yul\":4399:4506   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4512:4905   */\ntag_31:\n    /* \"#utility.yul\":4581:4587   */\n  0x00\n    /* \"#utility.yul\":4631:4632   */\n  0x08\n    /* \"#utility.yul\":4619:4629   */\n  dup4\n    /* \"#utility.yul\":4615:4633   */\n  mul\n    /* \"#utility.yul\":4654:4751   */\n  tag_96\n    /* \"#utility.yul\":4684:4750   */\n  0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":4673:4682   */\n  dup3\n    /* \"#utility.yul\":4654:4751   */\n  tag_30\n  jump\t// in\ntag_96:\n    /* \"#utility.yul\":4772:4811   */\n  tag_97\n    /* \"#utility.yul\":4802:4810   */\n  dup7\n    /* \"#utility.yul\":4791:4800   */\n  dup4\n    /* \"#utility.yul\":4772:4811   */\n  tag_30\n  jump\t// in\ntag_97:\n    /* \"#utility.yul\":4760:4811   */\n  swap6\n  pop\n    /* \"#utility.yul\":4844:4848   */\n  dup1\n    /* \"#utility.yul\":4840:4849   */\n  not\n    /* \"#utility.yul\":4833:4838   */\n  dup5\n    /* \"#utility.yul\":4829:4850   */\n  and\n    /* \"#utility.yul\":4820:4850   */\n  swap4\n  pop\n    /* \"#utility.yul\":4893:4897   */\n  dup1\n    /* \"#utility.yul\":4883:4891   */\n  dup7\n    /* \"#utility.yul\":4879:4898   */\n  and\n    /* \"#utility.yul\":4872:4877   */\n  dup5\n    /* \"#utility.yul\":4869:4899   */\n  or\n    /* \"#utility.yul\":4859:4899   */\n  swap3\n  pop\n    /* \"#utility.yul\":4588:4905   */\n  pop\n  pop\n    /* \"#utility.yul\":4512:4905   */\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4911:4988   */\ntag_32:\n    /* \"#utility.yul\":4948:4955   */\n  0x00\n    /* \"#utility.yul\":4977:4982   */\n  dup2\n    /* \"#utility.yul\":4966:4982   */\n  swap1\n  pop\n    /* \"#utility.yul\":4911:4988   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4994:5054   */\ntag_33:\n    /* \"#utility.yul\":5022:5025   */\n  0x00\n    /* \"#utility.yul\":5043:5048   */\n  dup2\n    /* \"#utility.yul\":5036:5048   */\n  swap1\n  pop\n    /* \"#utility.yul\":4994:5054   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5060:5202   */\ntag_34:\n    /* \"#utility.yul\":5110:5119   */\n  0x00\n    /* \"#utility.yul\":5143:5196   */\n  tag_101\n    /* \"#utility.yul\":5161:5195   */\n  tag_102\n    /* \"#utility.yul\":5170:5194   */\n  tag_103\n    /* \"#utility.yul\":5188:5193   */\n  dup5\n    /* \"#utility.yul\":5170:5194   */\n  tag_32\n  jump\t// in\ntag_103:\n    /* \"#utility.yul\":5161:5195   */\n  tag_33\n  jump\t// in\ntag_102:\n    /* \"#utility.yul\":5143:5196   */\n  tag_32\n  jump\t// in\ntag_101:\n    /* \"#utility.yul\":5130:5196   */\n  swap1\n  pop\n    /* \"#utility.yul\":5060:5202   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5208:5283   */\ntag_35:\n    /* \"#utility.yul\":5251:5254   */\n  0x00\n    /* \"#utility.yul\":5272:5277   */\n  dup2\n    /* \"#utility.yul\":5265:5277   */\n  swap1\n  pop\n    /* \"#utility.yul\":5208:5283   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5289:5558   */\ntag_36:\n    /* \"#utility.yul\":5399:5438   */\n  tag_106\n    /* \"#utility.yul\":5430:5437   */\n  dup4\n    /* \"#utility.yul\":5399:5438   */\n  tag_34\n  jump\t// in\ntag_106:\n    /* \"#utility.yul\":5460:5551   */\n  tag_107\n    /* \"#utility.yul\":5509:5550   */\n  tag_108\n    /* \"#utility.yul\":5533:5549   */\n  dup3\n    /* \"#utility.yul\":5509:5550   */\n  tag_35\n  jump\t// in\ntag_108:\n    /* \"#utility.yul\":5501:5507   */\n  dup5\n    /* \"#utility.yul\":5494:5498   */\n  dup5\n    /* \"#utility.yul\":5488:5499   */\n  sload\n    /* \"#utility.yul\":5460:5551   */\n  tag_31\n  jump\t// in\ntag_107:\n    /* \"#utility.yul\":5454:5458   */\n  dup3\n    /* \"#utility.yul\":5447:5552   */\n  sstore\n    /* \"#utility.yul\":5365:5558   */\n  pop\n    /* \"#utility.yul\":5289:5558   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5564:5637   */\ntag_37:\n    /* \"#utility.yul\":5609:5612   */\n  0x00\n    /* \"#utility.yul\":5564:5637   */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":5643:5832   */\ntag_38:\n    /* \"#utility.yul\":5720:5752   */\n  tag_111\n  tag_37\n  jump\t// in\ntag_111:\n    /* \"#utility.yul\":5761:5826   */\n  tag_112\n    /* \"#utility.yul\":5819:5825   */\n  dup2\n    /* \"#utility.yul\":5811:5817   */\n  dup5\n    /* \"#utility.yul\":5805:5809   */\n  dup5\n    /* \"#utility.yul\":5761:5826   */\n  tag_36\n  jump\t// in\ntag_112:\n    /* \"#utility.yul\":5696:5832   */\n  pop\n    /* \"#utility.yul\":5643:5832   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5838:6024   */\ntag_39:\n    /* \"#utility.yul\":5898:6018   */\ntag_114:\n    /* \"#utility.yul\":5915:5918   */\n  dup2\n    /* \"#utility.yul\":5908:5913   */\n  dup2\n    /* \"#utility.yul\":5905:5919   */\n  lt\n    /* \"#utility.yul\":5898:6018   */\n  iszero\n  tag_116\n  jumpi\n    /* \"#utility.yul\":5969:6008   */\n  tag_117\n    /* \"#utility.yul\":6006:6007   */\n  0x00\n    /* \"#utility.yul\":5999:6004   */\n  dup3\n    /* \"#utility.yul\":5969:6008   */\n  tag_38\n  jump\t// in\ntag_117:\n    /* \"#utility.yul\":5942:5943   */\n  0x01\n    /* \"#utility.yul\":5935:5940   */\n  dup2\n    /* \"#utility.yul\":5931:5944   */\n  add\n    /* \"#utility.yul\":5922:5944   */\n  swap1\n  pop\n    /* \"#utility.yul\":5898:6018   */\n  jump(tag_114)\ntag_116:\n    /* \"#utility.yul\":5838:6024   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6030:6573   */\ntag_40:\n    /* \"#utility.yul\":6131:6133   */\n  0x1f\n    /* \"#utility.yul\":6126:6129   */\n  dup3\n    /* \"#utility.yul\":6123:6134   */\n  gt\n    /* \"#utility.yul\":6120:6566   */\n  iszero\n  tag_119\n  jumpi\n    /* \"#utility.yul\":6165:6203   */\n  tag_120\n    /* \"#utility.yul\":6197:6202   */\n  dup2\n    /* \"#utility.yul\":6165:6203   */\n  tag_28\n  jump\t// in\ntag_120:\n    /* \"#utility.yul\":6249:6278   */\n  tag_121\n    /* \"#utility.yul\":6267:6277   */\n  dup5\n    /* \"#utility.yul\":6249:6278   */\n  tag_29\n  jump\t// in\ntag_121:\n    /* \"#utility.yul\":6239:6247   */\n  dup2\n    /* \"#utility.yul\":6235:6279   */\n  add\n    /* \"#utility.yul\":6432:6434   */\n  0x20\n    /* \"#utility.yul\":6420:6430   */\n  dup6\n    /* \"#utility.yul\":6417:6435   */\n  lt\n    /* \"#utility.yul\":6414:6463   */\n  iszero\n  tag_122\n  jumpi\n    /* \"#utility.yul\":6453:6461   */\n  dup2\n    /* \"#utility.yul\":6438:6461   */\n  swap1\n  pop\n    /* \"#utility.yul\":6414:6463   */\ntag_122:\n    /* \"#utility.yul\":6476:6556   */\n  tag_123\n    /* \"#utility.yul\":6532:6554   */\n  tag_124\n    /* \"#utility.yul\":6550:6553   */\n  dup6\n    /* \"#utility.yul\":6532:6554   */\n  tag_29\n  jump\t// in\ntag_124:\n    /* \"#utility.yul\":6522:6530   */\n  dup4\n    /* \"#utility.yul\":6518:6555   */\n  add\n    /* \"#utility.yul\":6505:6516   */\n  dup3\n    /* \"#utility.yul\":6476:6556   */\n  tag_39\n  jump\t// in\ntag_123:\n    /* \"#utility.yul\":6135:6566   */\n  pop\n  pop\n    /* \"#utility.yul\":6120:6566   */\ntag_119:\n    /* \"#utility.yul\":6030:6573   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6579:6696   */\ntag_41:\n    /* \"#utility.yul\":6633:6641   */\n  0x00\n    /* \"#utility.yul\":6683:6688   */\n  dup3\n    /* \"#utility.yul\":6677:6681   */\n  dup3\n    /* \"#utility.yul\":6673:6689   */\n  shr\n    /* \"#utility.yul\":6652:6689   */\n  swap1\n  pop\n    /* \"#utility.yul\":6579:6696   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6702:6871   */\ntag_42:\n    /* \"#utility.yul\":6746:6752   */\n  0x00\n    /* \"#utility.yul\":6779:6830   */\n  tag_127\n    /* \"#utility.yul\":6827:6828   */\n  0x00\n    /* \"#utility.yul\":6823:6829   */\n  not\n    /* \"#utility.yul\":6815:6820   */\n  dup5\n    /* \"#utility.yul\":6812:6813   */\n  0x08\n    /* \"#utility.yul\":6808:6821   */\n  mul\n    /* \"#utility.yul\":6779:6830   */\n  tag_41\n  jump\t// in\ntag_127:\n    /* \"#utility.yul\":6775:6831   */\n  not\n    /* \"#utility.yul\":6860:6864   */\n  dup1\n    /* \"#utility.yul\":6854:6858   */\n  dup4\n    /* \"#utility.yul\":6850:6865   */\n  and\n    /* \"#utility.yul\":6840:6865   */\n  swap2\n  pop\n    /* \"#utility.yul\":6753:6871   */\n  pop\n    /* \"#utility.yul\":6702:6871   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6876:7171   */\ntag_43:\n    /* \"#utility.yul\":6952:6956   */\n  0x00\n    /* \"#utility.yul\":7098:7127   */\n  tag_129\n    /* \"#utility.yul\":7123:7126   */\n  dup4\n    /* \"#utility.yul\":7117:7121   */\n  dup4\n    /* \"#utility.yul\":7098:7127   */\n  tag_42\n  jump\t// in\ntag_129:\n    /* \"#utility.yul\":7090:7127   */\n  swap2\n  pop\n    /* \"#utility.yul\":7160:7163   */\n  dup3\n    /* \"#utility.yul\":7157:7158   */\n  0x02\n    /* \"#utility.yul\":7153:7164   */\n  mul\n    /* \"#utility.yul\":7147:7151   */\n  dup3\n    /* \"#utility.yul\":7144:7165   */\n  or\n    /* \"#utility.yul\":7136:7165   */\n  swap1\n  pop\n    /* \"#utility.yul\":6876:7171   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7176:8571   */\ntag_8:\n    /* \"#utility.yul\":7293:7330   */\n  tag_131\n    /* \"#utility.yul\":7326:7329   */\n  dup3\n    /* \"#utility.yul\":7293:7330   */\n  tag_25\n  jump\t// in\ntag_131:\n    /* \"#utility.yul\":7395:7413   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":7387:7393   */\n  dup2\n    /* \"#utility.yul\":7384:7414   */\n  gt\n    /* \"#utility.yul\":7381:7437   */\n  iszero\n  tag_132\n  jumpi\n    /* \"#utility.yul\":7417:7435   */\n  tag_133\n  tag_18\n  jump\t// in\ntag_133:\n    /* \"#utility.yul\":7381:7437   */\ntag_132:\n    /* \"#utility.yul\":7461:7499   */\n  tag_134\n    /* \"#utility.yul\":7493:7497   */\n  dup3\n    /* \"#utility.yul\":7487:7498   */\n  sload\n    /* \"#utility.yul\":7461:7499   */\n  tag_27\n  jump\t// in\ntag_134:\n    /* \"#utility.yul\":7546:7613   */\n  tag_135\n    /* \"#utility.yul\":7606:7612   */\n  dup3\n    /* \"#utility.yul\":7598:7604   */\n  dup3\n    /* \"#utility.yul\":7592:7596   */\n  dup6\n    /* \"#utility.yul\":7546:7613   */\n  tag_40\n  jump\t// in\ntag_135:\n    /* \"#utility.yul\":7640:7641   */\n  0x00\n    /* \"#utility.yul\":7664:7668   */\n  0x20\n    /* \"#utility.yul\":7651:7668   */\n  swap1\n  pop\n    /* \"#utility.yul\":7696:7698   */\n  0x1f\n    /* \"#utility.yul\":7688:7694   */\n  dup4\n    /* \"#utility.yul\":7685:7699   */\n  gt\n    /* \"#utility.yul\":7713:7714   */\n  0x01\n    /* \"#utility.yul\":7708:8326   */\n  dup2\n  eq\n  tag_137\n  jumpi\n    /* \"#utility.yul\":8370:8371   */\n  0x00\n    /* \"#utility.yul\":8387:8393   */\n  dup5\n    /* \"#utility.yul\":8384:8461   */\n  iszero\n  tag_138\n  jumpi\n    /* \"#utility.yul\":8436:8445   */\n  dup3\n    /* \"#utility.yul\":8431:8434   */\n  dup8\n    /* \"#utility.yul\":8427:8446   */\n  add\n    /* \"#utility.yul\":8421:8447   */\n  mload\n    /* \"#utility.yul\":8412:8447   */\n  swap1\n  pop\n    /* \"#utility.yul\":8384:8461   */\ntag_138:\n    /* \"#utility.yul\":8487:8554   */\n  tag_139\n    /* \"#utility.yul\":8547:8553   */\n  dup6\n    /* \"#utility.yul\":8540:8545   */\n  dup3\n    /* \"#utility.yul\":8487:8554   */\n  tag_43\n  jump\t// in\ntag_139:\n    /* \"#utility.yul\":8481:8485   */\n  dup7\n    /* \"#utility.yul\":8474:8555   */\n  sstore\n    /* \"#utility.yul\":8343:8565   */\n  pop\n    /* \"#utility.yul\":7678:8565   */\n  jump(tag_136)\n    /* \"#utility.yul\":7708:8326   */\ntag_137:\n    /* \"#utility.yul\":7760:7764   */\n  0x1f\n    /* \"#utility.yul\":7756:7765   */\n  not\n    /* \"#utility.yul\":7748:7754   */\n  dup5\n    /* \"#utility.yul\":7744:7766   */\n  and\n    /* \"#utility.yul\":7794:7831   */\n  tag_140\n    /* \"#utility.yul\":7826:7830   */\n  dup7\n    /* \"#utility.yul\":7794:7831   */\n  tag_28\n  jump\t// in\ntag_140:\n    /* \"#utility.yul\":7853:7854   */\n  0x00\n    /* \"#utility.yul\":7867:8075   */\ntag_141:\n    /* \"#utility.yul\":7881:7888   */\n  dup3\n    /* \"#utility.yul\":7878:7879   */\n  dup2\n    /* \"#utility.yul\":7875:7889   */\n  lt\n    /* \"#utility.yul\":7867:8075   */\n  iszero\n  tag_143\n  jumpi\n    /* \"#utility.yul\":7960:7969   */\n  dup5\n    /* \"#utility.yul\":7955:7958   */\n  dup10\n    /* \"#utility.yul\":7951:7970   */\n  add\n    /* \"#utility.yul\":7945:7971   */\n  mload\n    /* \"#utility.yul\":7937:7943   */\n  dup3\n    /* \"#utility.yul\":7930:7972   */\n  sstore\n    /* \"#utility.yul\":8011:8012   */\n  0x01\n    /* \"#utility.yul\":8003:8009   */\n  dup3\n    /* \"#utility.yul\":7999:8013   */\n  add\n    /* \"#utility.yul\":7989:8013   */\n  swap2\n  pop\n    /* \"#utility.yul\":8058:8060   */\n  0x20\n    /* \"#utility.yul\":8047:8056   */\n  dup6\n    /* \"#utility.yul\":8043:8061   */\n  add\n    /* \"#utility.yul\":8030:8061   */\n  swap5\n  pop\n    /* \"#utility.yul\":7904:7908   */\n  0x20\n    /* \"#utility.yul\":7901:7902   */\n  dup2\n    /* \"#utility.yul\":7897:7909   */\n  add\n    /* \"#utility.yul\":7892:7909   */\n  swap1\n  pop\n    /* \"#utility.yul\":7867:8075   */\n  jump(tag_141)\ntag_143:\n    /* \"#utility.yul\":8103:8109   */\n  dup7\n    /* \"#utility.yul\":8094:8101   */\n  dup4\n    /* \"#utility.yul\":8091:8110   */\n  lt\n    /* \"#utility.yul\":8088:8267   */\n  iszero\n  tag_144\n  jumpi\n    /* \"#utility.yul\":8161:8170   */\n  dup5\n    /* \"#utility.yul\":8156:8159   */\n  dup10\n    /* \"#utility.yul\":8152:8171   */\n  add\n    /* \"#utility.yul\":8146:8172   */\n  mload\n    /* \"#utility.yul\":8204:8252   */\n  tag_145\n    /* \"#utility.yul\":8246:8250   */\n  0x1f\n    /* \"#utility.yul\":8238:8244   */\n  dup10\n    /* \"#utility.yul\":8234:8251   */\n  and\n    /* \"#utility.yul\":8223:8232   */\n  dup3\n    /* \"#utility.yul\":8204:8252   */\n  tag_42\n  jump\t// in\ntag_145:\n    /* \"#utility.yul\":8196:8202   */\n  dup4\n    /* \"#utility.yul\":8189:8253   */\n  sstore\n    /* \"#utility.yul\":8111:8267   */\n  pop\n    /* \"#utility.yul\":8088:8267   */\ntag_144:\n    /* \"#utility.yul\":8313:8314   */\n  0x01\n    /* \"#utility.yul\":8309:8310   */\n  0x02\n    /* \"#utility.yul\":8301:8307   */\n  dup9\n    /* \"#utility.yul\":8297:8311   */\n  mul\n    /* \"#utility.yul\":8293:8315   */\n  add\n    /* \"#utility.yul\":8287:8291   */\n  dup9\n    /* \"#utility.yul\":8280:8316   */\n  sstore\n    /* \"#utility.yul\":7715:8326   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":7678:8565   */\ntag_136:\n  pop\n    /* \"#utility.yul\":7268:8571   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":7176:8571   */\n  pop\n  pop\n  jump\t// out\n    /* \"contracts/myNFT.sol\":143:1788  contract MyNFT is ERC721 {... */\ntag_11:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/myNFT.sol\":143:1788  contract MyNFT is ERC721 {... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x6352211e\n      gt\n      tag_20\n      jumpi\n      dup1\n      0xa22cb465\n      gt\n      tag_21\n      jumpi\n      dup1\n      0xa22cb465\n      eq\n      tag_15\n      jumpi\n      dup1\n      0xb88d4fde\n      eq\n      tag_16\n      jumpi\n      dup1\n      0xc4e41b22\n      eq\n      tag_17\n      jumpi\n      dup1\n      0xc87b56dd\n      eq\n      tag_18\n      jumpi\n      dup1\n      0xe985e9c5\n      eq\n      tag_19\n      jumpi\n      jump(tag_1)\n    tag_21:\n      dup1\n      0x6352211e\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x83638710\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_14\n      jumpi\n      jump(tag_1)\n    tag_20:\n      dup1\n      0x095ea7b3\n      gt\n      tag_22\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x0bdc9008\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x29d6724e\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x42842e0e\n      eq\n      tag_10\n      jumpi\n      jump(tag_1)\n    tag_22:\n      dup1\n      0x01c6adc3\n      eq\n      tag_2\n      jumpi\n      dup1\n      0x01ffc9a7\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x06fdde03\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x081812fc\n      eq\n      tag_5\n      jumpi\n    tag_1:\n      0x00\n      dup1\n      revert\n        /* \"contracts/myNFT.sol\":1663:1785  function transferFrom(address to, uint256 tokenId) public payable {... */\n    tag_2:\n      tag_23\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_24\n      swap2\n      swap1\n      tag_25\n      jump\t// in\n    tag_24:\n      tag_26\n      jump\t// in\n    tag_23:\n      stop\n        /* \"main/node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":1561:1861  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {... */\n    tag_3:\n      callvalue\n      dup1\n      iszero\n      tag_27\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_27:\n      pop\n      tag_28\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_29\n      swap2\n      swap1\n      tag_30\n      jump\t// in\n    tag_29:\n      tag_31\n      jump\t// in\n    tag_28:\n      mload(0x40)\n      tag_32\n      swap2\n      swap1\n      tag_33\n      jump\t// in\n    tag_32:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"main/node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":2365:2454  function name() public view virtual returns (string memory) {... */\n    tag_4:\n      callvalue\n      dup1\n      iszero\n      tag_34\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_34:\n      pop\n      tag_35\n      tag_36\n      jump\t// in\n    tag_35:\n      mload(0x40)\n      tag_37\n      swap2\n      swap1\n      tag_38\n      jump\t// in\n    tag_37:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"main/node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":3497:3651  function getApproved(uint256 tokenId) public view virtual returns (address) {... */\n    tag_5:\n      callvalue\n      dup1\n      iszero\n      tag_39\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_39:\n      pop\n      tag_40\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_41\n      swap2\n      swap1\n      tag_42\n      jump\t// in\n    tag_41:\n      tag_43\n      jump\t// in\n    tag_40:\n      mload(0x40)\n      tag_44\n      swap2\n      swap1\n      tag_45\n      jump\t// in\n    tag_44:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"main/node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":3323:3436  function approve(address to, uint256 tokenId) public virtual {... */\n    tag_6:\n      callvalue\n      dup1\n      iszero\n      tag_46\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_46:\n      pop\n      tag_47\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_48\n      swap2\n      swap1\n      tag_25\n      jump\t// in\n    tag_48:\n      tag_49\n      jump\t// in\n    tag_47:\n      stop\n        /* \"contracts/myNFT.sol\":379:548  function minting(string memory tokenURI) public {... */\n    tag_7:\n      callvalue\n      dup1\n      iszero\n      tag_50\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_50:\n      pop\n      tag_51\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_52\n      swap2\n      swap1\n      tag_53\n      jump\t// in\n    tag_52:\n      tag_54\n      jump\t// in\n    tag_51:\n      stop\n        /* \"main/node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":4143:4721  function transferFrom(address from, address to, uint256 tokenId) public virtual {... */\n    tag_8:\n      callvalue\n      dup1\n      iszero\n      tag_55\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_55:\n      pop\n      tag_56\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_57\n      swap2\n      swap1\n      tag_58\n      jump\t// in\n    tag_57:\n      tag_59\n      jump\t// in\n    tag_56:\n      stop\n        /* \"contracts/myNFT.sol\":1242:1380  function setAppAll(address owner, address operator, bool approved) public {... */\n    tag_9:\n      callvalue\n      dup1\n      iszero\n      tag_60\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_60:\n      pop\n      tag_61\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_62\n      swap2\n      swap1\n      tag_63\n      jump\t// in\n    tag_62:\n      tag_64\n      jump\t// in\n    tag_61:\n      stop\n        /* \"main/node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":4787:4919  function safeTransferFrom(address from, address to, uint256 tokenId) public {... */\n    tag_10:\n      callvalue\n      dup1\n      iszero\n      tag_65\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_65:\n      pop\n      tag_66\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_67\n      swap2\n      swap1\n      tag_58\n      jump\t// in\n    tag_67:\n      tag_68\n      jump\t// in\n    tag_66:\n      stop\n        /* \"main/node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":2185:2303  function ownerOf(uint256 tokenId) public view virtual returns (address) {... */\n    tag_11:\n      callvalue\n      dup1\n      iszero\n      tag_69\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_69:\n      pop\n      tag_70\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_71\n      swap2\n      swap1\n      tag_42\n      jump\t// in\n    tag_71:\n      tag_72\n      jump\t// in\n    tag_70:\n      mload(0x40)\n      tag_73\n      swap2\n      swap1\n      tag_45\n      jump\t// in\n    tag_73:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"main/node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":1920:2128  function balanceOf(address owner) public view virtual returns (uint256) {... */\n    tag_12:\n      callvalue\n      dup1\n      iszero\n      tag_74\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_74:\n      pop\n      tag_75\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_76\n      swap2\n      swap1\n      tag_77\n      jump\t// in\n    tag_76:\n      tag_78\n      jump\t// in\n    tag_75:\n      mload(0x40)\n      tag_79\n      swap2\n      swap1\n      tag_80\n      jump\t// in\n    tag_79:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/myNFT.sol\":1388:1494  function getOwnerOf(uint256 index) public view returns (address) {... */\n    tag_13:\n      callvalue\n      dup1\n      iszero\n      tag_81\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_81:\n      pop\n      tag_82\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_83\n      swap2\n      swap1\n      tag_42\n      jump\t// in\n    tag_83:\n      tag_84\n      jump\t// in\n    tag_82:\n      mload(0x40)\n      tag_85\n      swap2\n      swap1\n      tag_45\n      jump\t// in\n    tag_85:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"main/node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":2518:2611  function symbol() public view virtual returns (string memory) {... */\n    tag_14:\n      callvalue\n      dup1\n      iszero\n      tag_86\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_86:\n      pop\n      tag_87\n      tag_88\n      jump\t// in\n    tag_87:\n      mload(0x40)\n      tag_89\n      swap2\n      swap1\n      tag_38\n      jump\t// in\n    tag_89:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"main/node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":3718:3862  function setApprovalForAll(address operator, bool approved) public virtual {... */\n    tag_15:\n      callvalue\n      dup1\n      iszero\n      tag_90\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_90:\n      pop\n      tag_91\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_92\n      swap2\n      swap1\n      tag_93\n      jump\t// in\n    tag_92:\n      tag_94\n      jump\t// in\n    tag_91:\n      stop\n        /* \"main/node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":4985:5193  function safeTransferFrom(address from, address to, uint256 tokenId, bytes memory data) public virtual {... */\n    tag_16:\n      callvalue\n      dup1\n      iszero\n      tag_95\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_95:\n      pop\n      tag_96\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_97\n      swap2\n      swap1\n      tag_98\n      jump\t// in\n    tag_97:\n      tag_99\n      jump\t// in\n    tag_96:\n      stop\n        /* \"contracts/myNFT.sol\":1502:1595  function getTotalSupply() public view returns (uint256) {... */\n    tag_17:\n      callvalue\n      dup1\n      iszero\n      tag_100\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_100:\n      pop\n      tag_101\n      tag_102\n      jump\t// in\n    tag_101:\n      mload(0x40)\n      tag_103\n      swap2\n      swap1\n      tag_80\n      jump\t// in\n    tag_103:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/myNFT.sol\":701:942  function tokenURI(... */\n    tag_18:\n      callvalue\n      dup1\n      iszero\n      tag_104\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_104:\n      pop\n      tag_105\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_106\n      swap2\n      swap1\n      tag_42\n      jump\t// in\n    tag_106:\n      tag_107\n      jump\t// in\n    tag_105:\n      mload(0x40)\n      tag_108\n      swap2\n      swap1\n      tag_38\n      jump\t// in\n    tag_108:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"main/node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":3928:4081  function isApprovedForAll(address owner, address operator) public view virtual returns (bool) {... */\n    tag_19:\n      callvalue\n      dup1\n      iszero\n      tag_109\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_109:\n      pop\n      tag_110\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_111\n      swap2\n      swap1\n      tag_112\n      jump\t// in\n    tag_111:\n      tag_113\n      jump\t// in\n    tag_110:\n      mload(0x40)\n      tag_114\n      swap2\n      swap1\n      tag_33\n      jump\t// in\n    tag_114:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/myNFT.sol\":1663:1785  function transferFrom(address to, uint256 tokenId) public payable {... */\n    tag_26:\n        /* \"contracts/myNFT.sol\":1740:1777  transferFrom(msg.sender, to, tokenId) */\n      tag_116\n        /* \"contracts/myNFT.sol\":1753:1763  msg.sender */\n      caller\n        /* \"contracts/myNFT.sol\":1765:1767  to */\n      dup4\n        /* \"contracts/myNFT.sol\":1769:1776  tokenId */\n      dup4\n        /* \"contracts/myNFT.sol\":1740:1752  transferFrom */\n      tag_59\n        /* \"contracts/myNFT.sol\":1740:1777  transferFrom(msg.sender, to, tokenId) */\n      jump\t// in\n    tag_116:\n        /* \"contracts/myNFT.sol\":1663:1785  function transferFrom(address to, uint256 tokenId) public payable {... */\n      pop\n      pop\n      jump\t// out\n        /* \"main/node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":1561:1861  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {... */\n    tag_31:\n        /* \"main/node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":1663:1667  bool */\n      0x00\n        /* \"main/node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":1713:1738  type(IERC721).interfaceId */\n      0x80ac58cd00000000000000000000000000000000000000000000000000000000\n        /* \"main/node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":1698:1738  interfaceId == type(IERC721).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"main/node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":1698:1709  interfaceId */\n      dup3\n        /* \"main/node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":1698:1738  interfaceId == type(IERC721).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"main/node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":1698:1802  interfaceId == type(IERC721).interfaceId ||... */\n      dup1\n      tag_118\n      jumpi\n      pop\n        /* \"main/node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":1769:1802  type(IERC721Metadata).interfaceId */\n      0x5b5e139f00000000000000000000000000000000000000000000000000000000\n        /* \"main/node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":1754:1802  interfaceId == type(IERC721Metadata).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"main/node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":1754:1765  interfaceId */\n      dup3\n        /* \"main/node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":1754:1802  interfaceId == type(IERC721Metadata).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"main/node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":1698:1802  interfaceId == type(IERC721).interfaceId ||... */\n    tag_118:\n        /* \"main/node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":1698:1854  interfaceId == type(IERC721).interfaceId ||... */\n      dup1\n      tag_119\n      jumpi\n      pop\n        /* \"main/node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":1818:1854  super.supportsInterface(interfaceId) */\n      tag_120\n        /* \"main/node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":1842:1853  interfaceId */\n      dup3\n        /* \"main/node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":1818:1841  super.supportsInterface */\n      tag_121\n        /* \"main/node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":1818:1854  super.supportsInterface(interfaceId) */\n      jump\t// in\n    tag_120:\n        /* \"main/node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":1698:1854  interfaceId == type(IERC721).interfaceId ||... */\n    tag_119:\n        /* \"main/node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":1679:1854  return... */\n      swap1\n      pop\n        /* \"main/node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":1561:1861  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"main/node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":2365:2454  function name() public view virtual returns (string memory) {... */\n    tag_36:\n        /* \"main/node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":2410:2423  string memory */\n      0x60\n        /* \"main/node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":2442:2447  _name */\n      0x00\n        /* \"main/node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":2435:2447  return _name */\n      dup1\n      sload\n      tag_123\n      swap1\n      tag_124\n      jump\t// in\n    tag_123:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_125\n      swap1\n      tag_124\n      jump\t// in\n    tag_125:\n      dup1\n      iszero\n      tag_126\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_127\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_126)\n    tag_127:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_128:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_128\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_126:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"main/node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":2365:2454  function name() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"main/node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":3497:3651  function getApproved(uint256 tokenId) public view virtual returns (address) {... */\n    tag_43:\n        /* \"main/node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":3564:3571  address */\n      0x00\n        /* \"main/node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":3583:3605  _requireOwned(tokenId) */\n      tag_130\n        /* \"main/node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":3597:3604  tokenId */\n      dup3\n        /* \"main/node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":3583:3596  _requireOwned */\n      tag_131\n        /* \"main/node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":3583:3605  _requireOwned(tokenId) */\n      jump\t// in\n    tag_130:\n      pop\n        /* \"main/node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":3623:3644  _getApproved(tokenId) */\n      tag_132\n        /* \"main/node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":3636:3643  tokenId */\n      dup3\n        /* \"main/node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":3623:3635  _getApproved */\n      tag_133\n        /* \"main/node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":3623:3644  _getApproved(tokenId) */\n      jump\t// in\n    tag_132:\n        /* \"main/node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":3616:3644  return _getApproved(tokenId) */\n      swap1\n      pop\n        /* \"main/node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":3497:3651  function getApproved(uint256 tokenId) public view virtual returns (address) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"main/node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":3323:3436  function approve(address to, uint256 tokenId) public virtual {... */\n    tag_49:\n        /* \"main/node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":3394:3429  _approve(to, tokenId, _msgSender()) */\n      tag_135\n        /* \"main/node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":3403:3405  to */\n      dup3\n        /* \"main/node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":3407:3414  tokenId */\n      dup3\n        /* \"main/node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":3416:3428  _msgSender() */\n      tag_136\n        /* \"main/node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":3416:3426  _msgSender */\n      tag_137\n        /* \"main/node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":3416:3428  _msgSender() */\n      jump\t// in\n    tag_136:\n        /* \"main/node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":3394:3402  _approve */\n      tag_138\n        /* \"main/node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":3394:3429  _approve(to, tokenId, _msgSender()) */\n      jump\t// in\n    tag_135:\n        /* \"main/node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":3323:3436  function approve(address to, uint256 tokenId) public virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/myNFT.sol\":379:548  function minting(string memory tokenURI) public {... */\n    tag_54:\n        /* \"contracts/myNFT.sol\":464:472  tokenURI */\n      dup1\n        /* \"contracts/myNFT.sol\":438:448  _tokenURIs */\n      0x06\n        /* \"contracts/myNFT.sol\":438:461  _tokenURIs[totalSupply] */\n      0x00\n        /* \"contracts/myNFT.sol\":449:460  totalSupply */\n      sload(0x07)\n        /* \"contracts/myNFT.sol\":438:461  _tokenURIs[totalSupply] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/myNFT.sol\":438:472  _tokenURIs[totalSupply] = tokenURI */\n      swap1\n      dup2\n      tag_140\n      swap2\n      swap1\n      tag_141\n      jump\t// in\n    tag_140:\n      pop\n        /* \"contracts/myNFT.sol\":483:513  _mint(msg.sender, totalSupply) */\n      tag_142\n        /* \"contracts/myNFT.sol\":489:499  msg.sender */\n      caller\n        /* \"contracts/myNFT.sol\":501:512  totalSupply */\n      sload(0x07)\n        /* \"contracts/myNFT.sol\":483:488  _mint */\n      tag_143\n        /* \"contracts/myNFT.sol\":483:513  _mint(msg.sender, totalSupply) */\n      jump\t// in\n    tag_142:\n        /* \"contracts/myNFT.sol\":539:540  1 */\n      0x01\n        /* \"contracts/myNFT.sol\":524:535  totalSupply */\n      0x07\n      0x00\n        /* \"contracts/myNFT.sol\":524:540  totalSupply += 1 */\n      dup3\n      dup3\n      sload\n      tag_144\n      swap2\n      swap1\n      tag_145\n      jump\t// in\n    tag_144:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/myNFT.sol\":379:548  function minting(string memory tokenURI) public {... */\n      pop\n      jump\t// out\n        /* \"main/node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":4143:4721  function transferFrom(address from, address to, uint256 tokenId) public virtual {... */\n    tag_59:\n        /* \"main/node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":4251:4252  0 */\n      0x00\n        /* \"main/node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":4237:4253  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"main/node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":4237:4239  to */\n      dup3\n        /* \"main/node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":4237:4253  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"main/node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":4233:4320  if (to == address(0)) {... */\n      tag_147\n      jumpi\n        /* \"main/node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":4306:4307  0 */\n      0x00\n        /* \"main/node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":4276:4309  ERC721InvalidReceiver(address(0)) */\n      mload(0x40)\n      0x64a0ae9200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_148\n      swap2\n      swap1\n      tag_45\n      jump\t// in\n    tag_148:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"main/node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":4233:4320  if (to == address(0)) {... */\n    tag_147:\n        /* \"main/node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":4538:4559  address previousOwner */\n      0x00\n        /* \"main/node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":4562:4596  _update(to, tokenId, _msgSender()) */\n      tag_149\n        /* \"main/node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":4570:4572  to */\n      dup4\n        /* \"main/node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":4574:4581  tokenId */\n      dup4\n        /* \"main/node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":4583:4595  _msgSender() */\n      tag_150\n        /* \"main/node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":4583:4593  _msgSender */\n      tag_137\n        /* \"main/node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":4583:4595  _msgSender() */\n      jump\t// in\n    tag_150:\n        /* \"main/node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":4562:4569  _update */\n      tag_151\n        /* \"main/node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":4562:4596  _update(to, tokenId, _msgSender()) */\n      jump\t// in\n    tag_149:\n        /* \"main/node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":4538:4596  address previousOwner = _update(to, tokenId, _msgSender()) */\n      swap1\n      pop\n        /* \"main/node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":4627:4631  from */\n      dup4\n        /* \"main/node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":4610:4631  previousOwner != from */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"main/node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":4610:4623  previousOwner */\n      dup2\n        /* \"main/node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":4610:4631  previousOwner != from */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"main/node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":4606:4715  if (previousOwner != from) {... */\n      tag_152\n      jumpi\n        /* \"main/node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":4675:4679  from */\n      dup4\n        /* \"main/node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":4681:4688  tokenId */\n      dup3\n        /* \"main/node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":4690:4703  previousOwner */\n      dup3\n        /* \"main/node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":4654:4704  ERC721IncorrectOwner(from, tokenId, previousOwner) */\n      mload(0x40)\n      0x64283d7b00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_153\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_154\n      jump\t// in\n    tag_153:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"main/node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":4606:4715  if (previousOwner != from) {... */\n    tag_152:\n        /* \"main/node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":4223:4721  {... */\n      pop\n        /* \"main/node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":4143:4721  function transferFrom(address from, address to, uint256 tokenId) public virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/myNFT.sol\":1242:1380  function setAppAll(address owner, address operator, bool approved) public {... */\n    tag_64:\n        /* \"contracts/myNFT.sol\":1327:1372  _setApprovalForAll(owner, operator, approved) */\n      tag_156\n        /* \"contracts/myNFT.sol\":1346:1351  owner */\n      dup4\n        /* \"contracts/myNFT.sol\":1353:1361  operator */\n      dup4\n        /* \"contracts/myNFT.sol\":1363:1371  approved */\n      dup4\n        /* \"contracts/myNFT.sol\":1327:1345  _setApprovalForAll */\n      tag_157\n        /* \"contracts/myNFT.sol\":1327:1372  _setApprovalForAll(owner, operator, approved) */\n      jump\t// in\n    tag_156:\n        /* \"contracts/myNFT.sol\":1242:1380  function setAppAll(address owner, address operator, bool approved) public {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"main/node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":4787:4919  function safeTransferFrom(address from, address to, uint256 tokenId) public {... */\n    tag_68:\n        /* \"main/node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":4873:4912  safeTransferFrom(from, to, tokenId, \"\") */\n      tag_159\n        /* \"main/node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":4890:4894  from */\n      dup4\n        /* \"main/node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":4896:4898  to */\n      dup4\n        /* \"main/node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":4900:4907  tokenId */\n      dup4\n        /* \"main/node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":4873:4912  safeTransferFrom(from, to, tokenId, \"\") */\n      mload(0x40)\n      dup1\n      0x20\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      pop\n        /* \"main/node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":4873:4889  safeTransferFrom */\n      tag_99\n        /* \"main/node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":4873:4912  safeTransferFrom(from, to, tokenId, \"\") */\n      jump\t// in\n    tag_159:\n        /* \"main/node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":4787:4919  function safeTransferFrom(address from, address to, uint256 tokenId) public {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"main/node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":2185:2303  function ownerOf(uint256 tokenId) public view virtual returns (address) {... */\n    tag_72:\n        /* \"main/node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":2248:2255  address */\n      0x00\n        /* \"main/node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":2274:2296  _requireOwned(tokenId) */\n      tag_161\n        /* \"main/node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":2288:2295  tokenId */\n      dup3\n        /* \"main/node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":2274:2287  _requireOwned */\n      tag_131\n        /* \"main/node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":2274:2296  _requireOwned(tokenId) */\n      jump\t// in\n    tag_161:\n        /* \"main/node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":2267:2296  return _requireOwned(tokenId) */\n      swap1\n      pop\n        /* \"main/node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":2185:2303  function ownerOf(uint256 tokenId) public view virtual returns (address) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"main/node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":1920:2128  function balanceOf(address owner) public view virtual returns (uint256) {... */\n    tag_78:\n        /* \"main/node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":1983:1990  uint256 */\n      0x00\n        /* \"main/node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":2023:2024  0 */\n      dup1\n        /* \"main/node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":2006:2025  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"main/node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":2006:2011  owner */\n      dup3\n        /* \"main/node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":2006:2025  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"main/node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":2002:2089  if (owner == address(0)) {... */\n      tag_163\n      jumpi\n        /* \"main/node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":2075:2076  0 */\n      0x00\n        /* \"main/node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":2048:2078  ERC721InvalidOwner(address(0)) */\n      mload(0x40)\n      0x89c62b6400000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_164\n      swap2\n      swap1\n      tag_45\n      jump\t// in\n    tag_164:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"main/node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":2002:2089  if (owner == address(0)) {... */\n    tag_163:\n        /* \"main/node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":2105:2114  _balances */\n      0x03\n        /* \"main/node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":2105:2121  _balances[owner] */\n      0x00\n        /* \"main/node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":2115:2120  owner */\n      dup4\n        /* \"main/node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":2105:2121  _balances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"main/node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":2098:2121  return _balances[owner] */\n      swap1\n      pop\n        /* \"main/node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":1920:2128  function balanceOf(address owner) public view virtual returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/myNFT.sol\":1388:1494  function getOwnerOf(uint256 index) public view returns (address) {... */\n    tag_84:\n        /* \"contracts/myNFT.sol\":1444:1451  address */\n      0x00\n        /* \"contracts/myNFT.sol\":1471:1486  _ownerOf(index) */\n      tag_166\n        /* \"contracts/myNFT.sol\":1480:1485  index */\n      dup3\n        /* \"contracts/myNFT.sol\":1471:1479  _ownerOf */\n      tag_167\n        /* \"contracts/myNFT.sol\":1471:1486  _ownerOf(index) */\n      jump\t// in\n    tag_166:\n        /* \"contracts/myNFT.sol\":1464:1486  return _ownerOf(index) */\n      swap1\n      pop\n        /* \"contracts/myNFT.sol\":1388:1494  function getOwnerOf(uint256 index) public view returns (address) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"main/node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":2518:2611  function symbol() public view virtual returns (string memory) {... */\n    tag_88:\n        /* \"main/node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":2565:2578  string memory */\n      0x60\n        /* \"main/node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":2597:2604  _symbol */\n      0x01\n        /* \"main/node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":2590:2604  return _symbol */\n      dup1\n      sload\n      tag_169\n      swap1\n      tag_124\n      jump\t// in\n    tag_169:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_170\n      swap1\n      tag_124\n      jump\t// in\n    tag_170:\n      dup1\n      iszero\n      tag_171\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_172\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_171)\n    tag_172:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_173:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_173\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_171:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"main/node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":2518:2611  function symbol() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"main/node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":3718:3862  function setApprovalForAll(address operator, bool approved) public virtual {... */\n    tag_94:\n        /* \"main/node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":3803:3855  _setApprovalForAll(_msgSender(), operator, approved) */\n      tag_175\n        /* \"main/node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":3822:3834  _msgSender() */\n      tag_176\n        /* \"main/node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":3822:3832  _msgSender */\n      tag_137\n        /* \"main/node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":3822:3834  _msgSender() */\n      jump\t// in\n    tag_176:\n        /* \"main/node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":3836:3844  operator */\n      dup4\n        /* \"main/node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":3846:3854  approved */\n      dup4\n        /* \"main/node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":3803:3821  _setApprovalForAll */\n      tag_157\n        /* \"main/node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":3803:3855  _setApprovalForAll(_msgSender(), operator, approved) */\n      jump\t// in\n    tag_175:\n        /* \"main/node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":3718:3862  function setApprovalForAll(address operator, bool approved) public virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"main/node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":4985:5193  function safeTransferFrom(address from, address to, uint256 tokenId, bytes memory data) public virtual {... */\n    tag_99:\n        /* \"main/node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":5098:5129  transferFrom(from, to, tokenId) */\n      tag_178\n        /* \"main/node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":5111:5115  from */\n      dup5\n        /* \"main/node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":5117:5119  to */\n      dup5\n        /* \"main/node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":5121:5128  tokenId */\n      dup5\n        /* \"main/node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":5098:5110  transferFrom */\n      tag_59\n        /* \"main/node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":5098:5129  transferFrom(from, to, tokenId) */\n      jump\t// in\n    tag_178:\n        /* \"main/node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":5139:5186  _checkOnERC721Received(from, to, tokenId, data) */\n      tag_179\n        /* \"main/node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":5162:5166  from */\n      dup5\n        /* \"main/node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":5168:5170  to */\n      dup5\n        /* \"main/node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":5172:5179  tokenId */\n      dup5\n        /* \"main/node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":5181:5185  data */\n      dup5\n        /* \"main/node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":5139:5161  _checkOnERC721Received */\n      tag_180\n        /* \"main/node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":5139:5186  _checkOnERC721Received(from, to, tokenId, data) */\n      jump\t// in\n    tag_179:\n        /* \"main/node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":4985:5193  function safeTransferFrom(address from, address to, uint256 tokenId, bytes memory data) public virtual {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/myNFT.sol\":1502:1595  function getTotalSupply() public view returns (uint256) {... */\n    tag_102:\n        /* \"contracts/myNFT.sol\":1549:1556  uint256 */\n      0x00\n        /* \"contracts/myNFT.sol\":1576:1587  totalSupply */\n      sload(0x07)\n        /* \"contracts/myNFT.sol\":1569:1587  return totalSupply */\n      swap1\n      pop\n        /* \"contracts/myNFT.sol\":1502:1595  function getTotalSupply() public view returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/myNFT.sol\":701:942  function tokenURI(... */\n    tag_107:\n        /* \"contracts/myNFT.sol\":783:796  string memory */\n      0x60\n        /* \"contracts/myNFT.sol\":914:924  _tokenURIs */\n      0x06\n        /* \"contracts/myNFT.sol\":914:934  _tokenURIs[_tokenId] */\n      0x00\n        /* \"contracts/myNFT.sol\":925:933  _tokenId */\n      dup4\n        /* \"contracts/myNFT.sol\":914:934  _tokenURIs[_tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/myNFT.sol\":907:934  return _tokenURIs[_tokenId] */\n      dup1\n      sload\n      tag_183\n      swap1\n      tag_124\n      jump\t// in\n    tag_183:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_184\n      swap1\n      tag_124\n      jump\t// in\n    tag_184:\n      dup1\n      iszero\n      tag_185\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_186\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_185)\n    tag_186:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_187:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_187\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_185:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"contracts/myNFT.sol\":701:942  function tokenURI(... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"main/node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":3928:4081  function isApprovedForAll(address owner, address operator) public view virtual returns (bool) {... */\n    tag_113:\n        /* \"main/node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":4016:4020  bool */\n      0x00\n        /* \"main/node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":4039:4057  _operatorApprovals */\n      0x05\n        /* \"main/node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":4039:4064  _operatorApprovals[owner] */\n      0x00\n        /* \"main/node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":4058:4063  owner */\n      dup5\n        /* \"main/node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":4039:4064  _operatorApprovals[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"main/node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":4039:4074  _operatorApprovals[owner][operator] */\n      0x00\n        /* \"main/node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":4065:4073  operator */\n      dup4\n        /* \"main/node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":4039:4074  _operatorApprovals[owner][operator] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"main/node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":4032:4074  return _operatorApprovals[owner][operator] */\n      swap1\n      pop\n        /* \"main/node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":3928:4081  function isApprovedForAll(address owner, address operator) public view virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"main/node_modules/@openzeppelin/contracts/utils/introspection/ERC165.sol\":762:908  function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {... */\n    tag_121:\n        /* \"main/node_modules/@openzeppelin/contracts/utils/introspection/ERC165.sol\":838:842  bool */\n      0x00\n        /* \"main/node_modules/@openzeppelin/contracts/utils/introspection/ERC165.sol\":876:901  type(IERC165).interfaceId */\n      0x01ffc9a700000000000000000000000000000000000000000000000000000000\n        /* \"main/node_modules/@openzeppelin/contracts/utils/introspection/ERC165.sol\":861:901  interfaceId == type(IERC165).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"main/node_modules/@openzeppelin/contracts/utils/introspection/ERC165.sol\":861:872  interfaceId */\n      dup3\n        /* \"main/node_modules/@openzeppelin/contracts/utils/introspection/ERC165.sol\":861:901  interfaceId == type(IERC165).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"main/node_modules/@openzeppelin/contracts/utils/introspection/ERC165.sol\":854:901  return interfaceId == type(IERC165).interfaceId */\n      swap1\n      pop\n        /* \"main/node_modules/@openzeppelin/contracts/utils/introspection/ERC165.sol\":762:908  function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"main/node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":16138:16379  function _requireOwned(uint256 tokenId) internal view returns (address) {... */\n    tag_131:\n        /* \"main/node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":16201:16208  address */\n      0x00\n        /* \"main/node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":16220:16233  address owner */\n      dup1\n        /* \"main/node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":16236:16253  _ownerOf(tokenId) */\n      tag_191\n        /* \"main/node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":16245:16252  tokenId */\n      dup4\n        /* \"main/node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":16236:16244  _ownerOf */\n      tag_167\n        /* \"main/node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":16236:16253  _ownerOf(tokenId) */\n      jump\t// in\n    tag_191:\n        /* \"main/node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":16220:16253  address owner = _ownerOf(tokenId) */\n      swap1\n      pop\n        /* \"main/node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":16284:16285  0 */\n      0x00\n        /* \"main/node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":16267:16286  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"main/node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":16267:16272  owner */\n      dup2\n        /* \"main/node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":16267:16286  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"main/node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":16263:16351  if (owner == address(0)) {... */\n      tag_192\n      jumpi\n        /* \"main/node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":16332:16339  tokenId */\n      dup3\n        /* \"main/node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":16309:16340  ERC721NonexistentToken(tokenId) */\n      mload(0x40)\n      0x7e27328900000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_193\n      swap2\n      swap1\n      tag_80\n      jump\t// in\n    tag_193:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"main/node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":16263:16351  if (owner == address(0)) {... */\n    tag_192:\n        /* \"main/node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":16367:16372  owner */\n      dup1\n        /* \"main/node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":16360:16372  return owner */\n      swap2\n      pop\n      pop\n        /* \"main/node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":16138:16379  function _requireOwned(uint256 tokenId) internal view returns (address) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"main/node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":5938:6065  function _getApproved(uint256 tokenId) internal view virtual returns (address) {... */\n    tag_133:\n        /* \"main/node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":6008:6015  address */\n      0x00\n        /* \"main/node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":6034:6049  _tokenApprovals */\n      0x04\n        /* \"main/node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":6034:6058  _tokenApprovals[tokenId] */\n      0x00\n        /* \"main/node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":6050:6057  tokenId */\n      dup4\n        /* \"main/node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":6034:6058  _tokenApprovals[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"main/node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":6027:6058  return _tokenApprovals[tokenId] */\n      swap1\n      pop\n        /* \"main/node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":5938:6065  function _getApproved(uint256 tokenId) internal view virtual returns (address) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"main/node_modules/@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n    tag_137:\n        /* \"main/node_modules/@openzeppelin/contracts/utils/Context.sol\":709:716  address */\n      0x00\n        /* \"main/node_modules/@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"main/node_modules/@openzeppelin/contracts/utils/Context.sol\":728:745  return msg.sender */\n      swap1\n      pop\n        /* \"main/node_modules/@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"main/node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":14418:14538  function _approve(address to, uint256 tokenId, address auth) internal {... */\n    tag_138:\n        /* \"main/node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":14498:14531  _approve(to, tokenId, auth, true) */\n      tag_197\n        /* \"main/node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":14507:14509  to */\n      dup4\n        /* \"main/node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":14511:14518  tokenId */\n      dup4\n        /* \"main/node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":14520:14524  auth */\n      dup4\n        /* \"main/node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":14526:14530  true */\n      0x01\n        /* \"main/node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":14498:14506  _approve */\n      tag_198\n        /* \"main/node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":14498:14531  _approve(to, tokenId, auth, true) */\n      jump\t// in\n    tag_197:\n        /* \"main/node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":14418:14538  function _approve(address to, uint256 tokenId, address auth) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"main/node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":9955:10282  function _mint(address to, uint256 tokenId) internal {... */\n    tag_143:\n        /* \"main/node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":10036:10037  0 */\n      0x00\n        /* \"main/node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":10022:10038  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"main/node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":10022:10024  to */\n      dup3\n        /* \"main/node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":10022:10038  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"main/node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":10018:10105  if (to == address(0)) {... */\n      tag_200\n      jumpi\n        /* \"main/node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":10091:10092  0 */\n      0x00\n        /* \"main/node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":10061:10094  ERC721InvalidReceiver(address(0)) */\n      mload(0x40)\n      0x64a0ae9200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_201\n      swap2\n      swap1\n      tag_45\n      jump\t// in\n    tag_201:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"main/node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":10018:10105  if (to == address(0)) {... */\n    tag_200:\n        /* \"main/node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":10114:10135  address previousOwner */\n      0x00\n        /* \"main/node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":10138:10170  _update(to, tokenId, address(0)) */\n      tag_202\n        /* \"main/node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":10146:10148  to */\n      dup4\n        /* \"main/node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":10150:10157  tokenId */\n      dup4\n        /* \"main/node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":10167:10168  0 */\n      0x00\n        /* \"main/node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":10138:10145  _update */\n      tag_151\n        /* \"main/node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":10138:10170  _update(to, tokenId, address(0)) */\n      jump\t// in\n    tag_202:\n        /* \"main/node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":10114:10170  address previousOwner = _update(to, tokenId, address(0)) */\n      swap1\n      pop\n        /* \"main/node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":10209:10210  0 */\n      0x00\n        /* \"main/node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":10184:10211  previousOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"main/node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":10184:10197  previousOwner */\n      dup2\n        /* \"main/node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":10184:10211  previousOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"main/node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":10180:10276  if (previousOwner != address(0)) {... */\n      tag_203\n      jumpi\n        /* \"main/node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":10262:10263  0 */\n      0x00\n        /* \"main/node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":10234:10265  ERC721InvalidSender(address(0)) */\n      mload(0x40)\n      0x73c6ac6e00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_204\n      swap2\n      swap1\n      tag_45\n      jump\t// in\n    tag_204:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"main/node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":10180:10276  if (previousOwner != address(0)) {... */\n    tag_203:\n        /* \"main/node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":10008:10282  {... */\n      pop\n        /* \"main/node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":9955:10282  function _mint(address to, uint256 tokenId) internal {... */\n      pop\n      pop\n      jump\t// out\n        /* \"main/node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":8838:9633  function _update(address to, uint256 tokenId, address auth) internal virtual returns (address) {... */\n    tag_151:\n        /* \"main/node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":8924:8931  address */\n      0x00\n        /* \"main/node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":8943:8955  address from */\n      dup1\n        /* \"main/node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":8958:8975  _ownerOf(tokenId) */\n      tag_206\n        /* \"main/node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":8967:8974  tokenId */\n      dup5\n        /* \"main/node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":8958:8966  _ownerOf */\n      tag_167\n        /* \"main/node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":8958:8975  _ownerOf(tokenId) */\n      jump\t// in\n    tag_206:\n        /* \"main/node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":8943:8975  address from = _ownerOf(tokenId) */\n      swap1\n      pop\n        /* \"main/node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":9051:9052  0 */\n      0x00\n        /* \"main/node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":9035:9053  auth != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"main/node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":9035:9039  auth */\n      dup4\n        /* \"main/node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":9035:9053  auth != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"main/node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":9031:9117  if (auth != address(0)) {... */\n      tag_207\n      jumpi\n        /* \"main/node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":9069:9106  _checkAuthorized(from, auth, tokenId) */\n      tag_208\n        /* \"main/node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":9086:9090  from */\n      dup2\n        /* \"main/node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":9092:9096  auth */\n      dup5\n        /* \"main/node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":9098:9105  tokenId */\n      dup7\n        /* \"main/node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":9069:9085  _checkAuthorized */\n      tag_209\n        /* \"main/node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":9069:9106  _checkAuthorized(from, auth, tokenId) */\n      jump\t// in\n    tag_208:\n        /* \"main/node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":9031:9117  if (auth != address(0)) {... */\n    tag_207:\n        /* \"main/node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":9177:9178  0 */\n      0x00\n        /* \"main/node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":9161:9179  from != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"main/node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":9161:9165  from */\n      dup2\n        /* \"main/node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":9161:9179  from != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"main/node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":9157:9413  if (from != address(0)) {... */\n      tag_210\n      jumpi\n        /* \"main/node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":9277:9325  _approve(address(0), tokenId, address(0), false) */\n      tag_211\n        /* \"main/node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":9294:9295  0 */\n      0x00\n        /* \"main/node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":9298:9305  tokenId */\n      dup6\n        /* \"main/node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":9315:9316  0 */\n      0x00\n        /* \"main/node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":9319:9324  false */\n      dup1\n        /* \"main/node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":9277:9285  _approve */\n      tag_198\n        /* \"main/node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":9277:9325  _approve(address(0), tokenId, address(0), false) */\n      jump\t// in\n    tag_211:\n        /* \"main/node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":9387:9388  1 */\n      0x01\n        /* \"main/node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":9368:9377  _balances */\n      0x03\n        /* \"main/node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":9368:9383  _balances[from] */\n      0x00\n        /* \"main/node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":9378:9382  from */\n      dup4\n        /* \"main/node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":9368:9383  _balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"main/node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":9368:9388  _balances[from] -= 1 */\n      dup3\n      dup3\n      sload\n      sub\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"main/node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":9157:9413  if (from != address(0)) {... */\n    tag_210:\n        /* \"main/node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":9441:9442  0 */\n      0x00\n        /* \"main/node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":9427:9443  to != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"main/node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":9427:9429  to */\n      dup6\n        /* \"main/node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":9427:9443  to != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"main/node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":9423:9530  if (to != address(0)) {... */\n      tag_212\n      jumpi\n        /* \"main/node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":9504:9505  1 */\n      0x01\n        /* \"main/node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":9487:9496  _balances */\n      0x03\n        /* \"main/node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":9487:9500  _balances[to] */\n      0x00\n        /* \"main/node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":9497:9499  to */\n      dup8\n        /* \"main/node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":9487:9500  _balances[to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"main/node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":9487:9505  _balances[to] += 1 */\n      dup3\n      dup3\n      sload\n      add\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"main/node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":9423:9530  if (to != address(0)) {... */\n    tag_212:\n        /* \"main/node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":9559:9561  to */\n      dup5\n        /* \"main/node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":9540:9547  _owners */\n      0x02\n        /* \"main/node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":9540:9556  _owners[tokenId] */\n      0x00\n        /* \"main/node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":9548:9555  tokenId */\n      dup7\n        /* \"main/node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":9540:9556  _owners[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"main/node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":9540:9561  _owners[tokenId] = to */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"main/node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":9596:9603  tokenId */\n      dup4\n        /* \"main/node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":9592:9594  to */\n      dup6\n        /* \"main/node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":9577:9604  Transfer(from, to, tokenId) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"main/node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":9586:9590  from */\n      dup3\n        /* \"main/node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":9577:9604  Transfer(from, to, tokenId) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"main/node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":9622:9626  from */\n      dup1\n        /* \"main/node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":9615:9626  return from */\n      swap2\n      pop\n      pop\n        /* \"main/node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":8838:9633  function _update(address to, uint256 tokenId, address auth) internal virtual returns (address) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"main/node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":15591:15903  function _setApprovalForAll(address owner, address operator, bool approved) internal virtual {... */\n    tag_157:\n        /* \"main/node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":15718:15719  0 */\n      0x00\n        /* \"main/node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":15698:15720  operator == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"main/node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":15698:15706  operator */\n      dup3\n        /* \"main/node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":15698:15720  operator == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"main/node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":15694:15785  if (operator == address(0)) {... */\n      tag_214\n      jumpi\n        /* \"main/node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":15765:15773  operator */\n      dup2\n        /* \"main/node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":15743:15774  ERC721InvalidOperator(operator) */\n      mload(0x40)\n      0x5b08ba1800000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_215\n      swap2\n      swap1\n      tag_45\n      jump\t// in\n    tag_215:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"main/node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":15694:15785  if (operator == address(0)) {... */\n    tag_214:\n        /* \"main/node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":15832:15840  approved */\n      dup1\n        /* \"main/node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":15794:15812  _operatorApprovals */\n      0x05\n        /* \"main/node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":15794:15819  _operatorApprovals[owner] */\n      0x00\n        /* \"main/node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":15813:15818  owner */\n      dup6\n        /* \"main/node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":15794:15819  _operatorApprovals[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"main/node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":15794:15829  _operatorApprovals[owner][operator] */\n      0x00\n        /* \"main/node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":15820:15828  operator */\n      dup5\n        /* \"main/node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":15794:15829  _operatorApprovals[owner][operator] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"main/node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":15794:15840  _operatorApprovals[owner][operator] = approved */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"main/node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":15877:15885  operator */\n      dup2\n        /* \"main/node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":15855:15896  ApprovalForAll(owner, operator, approved) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"main/node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":15870:15875  owner */\n      dup4\n        /* \"main/node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":15855:15896  ApprovalForAll(owner, operator, approved) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31\n        /* \"main/node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":15887:15895  approved */\n      dup4\n        /* \"main/node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":15855:15896  ApprovalForAll(owner, operator, approved) */\n      mload(0x40)\n      tag_216\n      swap2\n      swap1\n      tag_33\n      jump\t// in\n    tag_216:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"main/node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":15591:15903  function _setApprovalForAll(address owner, address operator, bool approved) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"main/node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":5707:5822  function _ownerOf(uint256 tokenId) internal view virtual returns (address) {... */\n    tag_167:\n        /* \"main/node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":5773:5780  address */\n      0x00\n        /* \"main/node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":5799:5806  _owners */\n      0x02\n        /* \"main/node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":5799:5815  _owners[tokenId] */\n      0x00\n        /* \"main/node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":5807:5814  tokenId */\n      dup4\n        /* \"main/node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":5799:5815  _owners[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"main/node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":5792:5815  return _owners[tokenId] */\n      swap1\n      pop\n        /* \"main/node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":5707:5822  function _ownerOf(uint256 tokenId) internal view virtual returns (address) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"main/node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":16918:17700  function _checkOnERC721Received(address from, address to, uint256 tokenId, bytes memory data) private {... */\n    tag_180:\n        /* \"main/node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":17051:17052  0 */\n      0x00\n        /* \"main/node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":17034:17036  to */\n      dup4\n        /* \"main/node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":17034:17048  to.code.length */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      extcodesize\n        /* \"main/node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":17034:17052  to.code.length > 0 */\n      gt\n        /* \"main/node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":17030:17694  if (to.code.length > 0) {... */\n      iszero\n      tag_219\n      jumpi\n        /* \"main/node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":17088:17090  to */\n      dup3\n        /* \"main/node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":17072:17108  IERC721Receiver(to).onERC721Received */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x150b7a02\n        /* \"main/node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":17109:17121  _msgSender() */\n      tag_220\n        /* \"main/node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":17109:17119  _msgSender */\n      tag_137\n        /* \"main/node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":17109:17121  _msgSender() */\n      jump\t// in\n    tag_220:\n        /* \"main/node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":17123:17127  from */\n      dup7\n        /* \"main/node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":17129:17136  tokenId */\n      dup6\n        /* \"main/node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":17138:17142  data */\n      dup6\n        /* \"main/node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":17072:17143  IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data) */\n      mload(0x40)\n      dup6\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_221\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_222\n      jump\t// in\n    tag_221:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      dup1\n      iszero\n      tag_223\n      jumpi\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_224\n      swap2\n      swap1\n      tag_225\n      jump\t// in\n    tag_224:\n      0x01\n    tag_223:\n        /* \"main/node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":17068:17684  try IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data) returns (bytes4 retval) {... */\n      tag_226\n      jumpi\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_231\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_230)\n    tag_231:\n      0x60\n      swap2\n      pop\n    tag_230:\n      pop\n        /* \"main/node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":17398:17399  0 */\n      0x00\n        /* \"main/node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":17381:17387  reason */\n      dup2\n        /* \"main/node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":17381:17394  reason.length */\n      mload\n        /* \"main/node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":17381:17399  reason.length == 0 */\n      sub\n        /* \"main/node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":17377:17670  if (reason.length == 0) {... */\n      tag_232\n      jumpi\n        /* \"main/node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":17452:17454  to */\n      dup4\n        /* \"main/node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":17430:17455  ERC721InvalidReceiver(to) */\n      mload(0x40)\n      0x64a0ae9200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_233\n      swap2\n      swap1\n      tag_45\n      jump\t// in\n    tag_233:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"main/node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":17377:17670  if (reason.length == 0) {... */\n    tag_232:\n        /* \"main/node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":17622:17628  reason */\n      dup1\n        /* \"main/node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":17616:17629  mload(reason) */\n      mload\n        /* \"main/node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":17607:17613  reason */\n      dup2\n        /* \"main/node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":17603:17605  32 */\n      0x20\n        /* \"main/node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":17599:17614  add(32, reason) */\n      add\n        /* \"main/node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":17592:17630  revert(add(32, reason), mload(reason)) */\n      revert\n        /* \"main/node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":17068:17684  try IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data) returns (bytes4 retval) {... */\n    tag_226:\n        /* \"main/node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":17200:17241  IERC721Receiver.onERC721Received.selector */\n      shl(0xe0, 0x150b7a02)\n        /* \"main/node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":17190:17241  retval != IERC721Receiver.onERC721Received.selector */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"main/node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":17190:17196  retval */\n      dup2\n        /* \"main/node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":17190:17241  retval != IERC721Receiver.onERC721Received.selector */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"main/node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":17186:17316  if (retval != IERC721Receiver.onERC721Received.selector) {... */\n      tag_236\n      jumpi\n        /* \"main/node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":17294:17296  to */\n      dup4\n        /* \"main/node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":17272:17297  ERC721InvalidReceiver(to) */\n      mload(0x40)\n      0x64a0ae9200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_237\n      swap2\n      swap1\n      tag_45\n      jump\t// in\n    tag_237:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"main/node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":17186:17316  if (retval != IERC721Receiver.onERC721Received.selector) {... */\n    tag_236:\n        /* \"main/node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":17144:17330  returns (bytes4 retval) {... */\n      pop\n        /* \"main/node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":17030:17694  if (to.code.length > 0) {... */\n    tag_219:\n        /* \"main/node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":16918:17700  function _checkOnERC721Received(address from, address to, uint256 tokenId, bytes memory data) private {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"main/node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":14720:15382  function _approve(address to, uint256 tokenId, address auth, bool emitEvent) internal virtual {... */\n    tag_198:\n        /* \"main/node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":14880:14889  emitEvent */\n      dup1\n        /* \"main/node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":14880:14911  emitEvent || auth != address(0) */\n      dup1\n      tag_239\n      jumpi\n      pop\n        /* \"main/node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":14909:14910  0 */\n      0x00\n        /* \"main/node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":14893:14911  auth != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"main/node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":14893:14897  auth */\n      dup3\n        /* \"main/node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":14893:14911  auth != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"main/node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":14880:14911  emitEvent || auth != address(0) */\n    tag_239:\n        /* \"main/node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":14876:15336  if (emitEvent || auth != address(0)) {... */\n      iszero\n      tag_240\n      jumpi\n        /* \"main/node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":14927:14940  address owner */\n      0x00\n        /* \"main/node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":14943:14965  _requireOwned(tokenId) */\n      tag_241\n        /* \"main/node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":14957:14964  tokenId */\n      dup5\n        /* \"main/node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":14943:14956  _requireOwned */\n      tag_131\n        /* \"main/node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":14943:14965  _requireOwned(tokenId) */\n      jump\t// in\n    tag_241:\n        /* \"main/node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":14927:14965  address owner = _requireOwned(tokenId) */\n      swap1\n      pop\n        /* \"main/node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":15109:15110  0 */\n      0x00\n        /* \"main/node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":15093:15111  auth != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"main/node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":15093:15097  auth */\n      dup4\n        /* \"main/node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":15093:15111  auth != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"main/node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":15093:15128  auth != address(0) && owner != auth */\n      dup1\n      iszero\n      tag_242\n      jumpi\n      pop\n        /* \"main/node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":15124:15128  auth */\n      dup3\n        /* \"main/node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":15115:15128  owner != auth */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"main/node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":15115:15120  owner */\n      dup2\n        /* \"main/node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":15115:15128  owner != auth */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"main/node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":15093:15128  auth != address(0) && owner != auth */\n    tag_242:\n        /* \"main/node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":15093:15162  auth != address(0) && owner != auth && !isApprovedForAll(owner, auth) */\n      dup1\n      iszero\n      tag_243\n      jumpi\n      pop\n        /* \"main/node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":15133:15162  isApprovedForAll(owner, auth) */\n      tag_244\n        /* \"main/node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":15150:15155  owner */\n      dup2\n        /* \"main/node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":15157:15161  auth */\n      dup5\n        /* \"main/node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":15133:15149  isApprovedForAll */\n      tag_113\n        /* \"main/node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":15133:15162  isApprovedForAll(owner, auth) */\n      jump\t// in\n    tag_244:\n        /* \"main/node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":15132:15162  !isApprovedForAll(owner, auth) */\n      iszero\n        /* \"main/node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":15093:15162  auth != address(0) && owner != auth && !isApprovedForAll(owner, auth) */\n    tag_243:\n        /* \"main/node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":15089:15231  if (auth != address(0) && owner != auth && !isApprovedForAll(owner, auth)) {... */\n      iszero\n      tag_245\n      jumpi\n        /* \"main/node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":15211:15215  auth */\n      dup3\n        /* \"main/node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":15189:15216  ERC721InvalidApprover(auth) */\n      mload(0x40)\n      0xa9fbf51f00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_246\n      swap2\n      swap1\n      tag_45\n      jump\t// in\n    tag_246:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"main/node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":15089:15231  if (auth != address(0) && owner != auth && !isApprovedForAll(owner, auth)) {... */\n    tag_245:\n        /* \"main/node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":15249:15258  emitEvent */\n      dup2\n        /* \"main/node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":15245:15326  if (emitEvent) {... */\n      iszero\n      tag_247\n      jumpi\n        /* \"main/node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":15303:15310  tokenId */\n      dup4\n        /* \"main/node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":15299:15301  to */\n      dup6\n        /* \"main/node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":15283:15311  Approval(owner, to, tokenId) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"main/node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":15292:15297  owner */\n      dup3\n        /* \"main/node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":15283:15311  Approval(owner, to, tokenId) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"main/node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":15245:15326  if (emitEvent) {... */\n    tag_247:\n        /* \"main/node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":14913:15336  {... */\n      pop\n        /* \"main/node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":14876:15336  if (emitEvent || auth != address(0)) {... */\n    tag_240:\n        /* \"main/node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":15373:15375  to */\n      dup4\n        /* \"main/node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":15346:15361  _tokenApprovals */\n      0x04\n        /* \"main/node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":15346:15370  _tokenApprovals[tokenId] */\n      0x00\n        /* \"main/node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":15362:15369  tokenId */\n      dup6\n        /* \"main/node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":15346:15370  _tokenApprovals[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"main/node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":15346:15375  _tokenApprovals[tokenId] = to */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"main/node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":14720:15382  function _approve(address to, uint256 tokenId, address auth, bool emitEvent) internal virtual {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"main/node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":7082:7450  function _checkAuthorized(address owner, address spender, uint256 tokenId) internal view virtual {... */\n    tag_209:\n        /* \"main/node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":7194:7232  _isAuthorized(owner, spender, tokenId) */\n      tag_249\n        /* \"main/node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":7208:7213  owner */\n      dup4\n        /* \"main/node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":7215:7222  spender */\n      dup4\n        /* \"main/node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":7224:7231  tokenId */\n      dup4\n        /* \"main/node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":7194:7207  _isAuthorized */\n      tag_250\n        /* \"main/node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":7194:7232  _isAuthorized(owner, spender, tokenId) */\n      jump\t// in\n    tag_249:\n        /* \"main/node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":7189:7444  if (!_isAuthorized(owner, spender, tokenId)) {... */\n      tag_251\n      jumpi\n        /* \"main/node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":7269:7270  0 */\n      0x00\n        /* \"main/node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":7252:7271  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"main/node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":7252:7257  owner */\n      dup4\n        /* \"main/node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":7252:7271  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"main/node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":7248:7434  if (owner == address(0)) {... */\n      tag_252\n      jumpi\n        /* \"main/node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":7321:7328  tokenId */\n      dup1\n        /* \"main/node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":7298:7329  ERC721NonexistentToken(tokenId) */\n      mload(0x40)\n      0x7e27328900000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_253\n      swap2\n      swap1\n      tag_80\n      jump\t// in\n    tag_253:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"main/node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":7248:7434  if (owner == address(0)) {... */\n    tag_252:\n        /* \"main/node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":7402:7409  spender */\n      dup2\n        /* \"main/node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":7411:7418  tokenId */\n      dup2\n        /* \"main/node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":7375:7419  ERC721InsufficientApproval(spender, tokenId) */\n      mload(0x40)\n      0x177e802f00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_255\n      swap3\n      swap2\n      swap1\n      tag_256\n      jump\t// in\n    tag_255:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"main/node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":7189:7444  if (!_isAuthorized(owner, spender, tokenId)) {... */\n    tag_251:\n        /* \"main/node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":7082:7450  function _checkAuthorized(address owner, address spender, uint256 tokenId) internal view virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"main/node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":6376:6648  function _isAuthorized(address owner, address spender, uint256 tokenId) internal view virtual returns (bool) {... */\n    tag_250:\n        /* \"main/node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":6479:6483  bool */\n      0x00\n        /* \"main/node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":6533:6534  0 */\n      dup1\n        /* \"main/node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":6514:6535  spender != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"main/node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":6514:6521  spender */\n      dup4\n        /* \"main/node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":6514:6535  spender != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"main/node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":6514:6641  spender != address(0) &&... */\n      dup1\n      iszero\n      tag_258\n      jumpi\n      pop\n        /* \"main/node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":6561:6568  spender */\n      dup3\n        /* \"main/node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":6552:6568  owner == spender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"main/node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":6552:6557  owner */\n      dup5\n        /* \"main/node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":6552:6568  owner == spender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"main/node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":6552:6604  owner == spender || isApprovedForAll(owner, spender) */\n      dup1\n      tag_259\n      jumpi\n      pop\n        /* \"main/node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":6572:6604  isApprovedForAll(owner, spender) */\n      tag_260\n        /* \"main/node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":6589:6594  owner */\n      dup5\n        /* \"main/node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":6596:6603  spender */\n      dup5\n        /* \"main/node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":6572:6588  isApprovedForAll */\n      tag_113\n        /* \"main/node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":6572:6604  isApprovedForAll(owner, spender) */\n      jump\t// in\n    tag_260:\n        /* \"main/node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":6552:6604  owner == spender || isApprovedForAll(owner, spender) */\n    tag_259:\n        /* \"main/node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":6552:6640  owner == spender || isApprovedForAll(owner, spender) || _getApproved(tokenId) == spender */\n      dup1\n      tag_261\n      jumpi\n      pop\n        /* \"main/node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":6633:6640  spender */\n      dup3\n        /* \"main/node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":6608:6640  _getApproved(tokenId) == spender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"main/node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":6608:6629  _getApproved(tokenId) */\n      tag_262\n        /* \"main/node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":6621:6628  tokenId */\n      dup4\n        /* \"main/node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":6608:6620  _getApproved */\n      tag_133\n        /* \"main/node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":6608:6629  _getApproved(tokenId) */\n      jump\t// in\n    tag_262:\n        /* \"main/node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":6608:6640  _getApproved(tokenId) == spender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"main/node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":6552:6640  owner == spender || isApprovedForAll(owner, spender) || _getApproved(tokenId) == spender */\n    tag_261:\n        /* \"main/node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":6514:6641  spender != address(0) &&... */\n    tag_258:\n        /* \"main/node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":6495:6641  return... */\n      swap1\n      pop\n        /* \"main/node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":6376:6648  function _isAuthorized(address owner, address spender, uint256 tokenId) internal view virtual returns (bool) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:82   */\n    tag_263:\n        /* \"#utility.yul\":40:46   */\n      0x00\n        /* \"#utility.yul\":73:75   */\n      0x40\n        /* \"#utility.yul\":67:76   */\n      mload\n        /* \"#utility.yul\":57:76   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:82   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_264:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      dup1\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":211:328   */\n    tag_265:\n        /* \"#utility.yul\":320:321   */\n      0x00\n        /* \"#utility.yul\":317:318   */\n      dup1\n        /* \"#utility.yul\":310:322   */\n      revert\n        /* \"#utility.yul\":334:460   */\n    tag_266:\n        /* \"#utility.yul\":371:378   */\n      0x00\n        /* \"#utility.yul\":411:453   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":404:409   */\n      dup3\n        /* \"#utility.yul\":400:454   */\n      and\n        /* \"#utility.yul\":389:454   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:460   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":466:562   */\n    tag_267:\n        /* \"#utility.yul\":503:510   */\n      0x00\n        /* \"#utility.yul\":532:556   */\n      tag_326\n        /* \"#utility.yul\":550:555   */\n      dup3\n        /* \"#utility.yul\":532:556   */\n      tag_266\n      jump\t// in\n    tag_326:\n        /* \"#utility.yul\":521:556   */\n      swap1\n      pop\n        /* \"#utility.yul\":466:562   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":568:690   */\n    tag_268:\n        /* \"#utility.yul\":641:665   */\n      tag_328\n        /* \"#utility.yul\":659:664   */\n      dup2\n        /* \"#utility.yul\":641:665   */\n      tag_267\n      jump\t// in\n    tag_328:\n        /* \"#utility.yul\":634:639   */\n      dup2\n        /* \"#utility.yul\":631:666   */\n      eq\n        /* \"#utility.yul\":621:684   */\n      tag_329\n      jumpi\n        /* \"#utility.yul\":680:681   */\n      0x00\n        /* \"#utility.yul\":677:678   */\n      dup1\n        /* \"#utility.yul\":670:682   */\n      revert\n        /* \"#utility.yul\":621:684   */\n    tag_329:\n        /* \"#utility.yul\":568:690   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":696:835   */\n    tag_269:\n        /* \"#utility.yul\":742:747   */\n      0x00\n        /* \"#utility.yul\":780:786   */\n      dup2\n        /* \"#utility.yul\":767:787   */\n      calldataload\n        /* \"#utility.yul\":758:787   */\n      swap1\n      pop\n        /* \"#utility.yul\":796:829   */\n      tag_331\n        /* \"#utility.yul\":823:828   */\n      dup2\n        /* \"#utility.yul\":796:829   */\n      tag_268\n      jump\t// in\n    tag_331:\n        /* \"#utility.yul\":696:835   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":841:918   */\n    tag_270:\n        /* \"#utility.yul\":878:885   */\n      0x00\n        /* \"#utility.yul\":907:912   */\n      dup2\n        /* \"#utility.yul\":896:912   */\n      swap1\n      pop\n        /* \"#utility.yul\":841:918   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":924:1046   */\n    tag_271:\n        /* \"#utility.yul\":997:1021   */\n      tag_334\n        /* \"#utility.yul\":1015:1020   */\n      dup2\n        /* \"#utility.yul\":997:1021   */\n      tag_270\n      jump\t// in\n    tag_334:\n        /* \"#utility.yul\":990:995   */\n      dup2\n        /* \"#utility.yul\":987:1022   */\n      eq\n        /* \"#utility.yul\":977:1040   */\n      tag_335\n      jumpi\n        /* \"#utility.yul\":1036:1037   */\n      0x00\n        /* \"#utility.yul\":1033:1034   */\n      dup1\n        /* \"#utility.yul\":1026:1038   */\n      revert\n        /* \"#utility.yul\":977:1040   */\n    tag_335:\n        /* \"#utility.yul\":924:1046   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1052:1191   */\n    tag_272:\n        /* \"#utility.yul\":1098:1103   */\n      0x00\n        /* \"#utility.yul\":1136:1142   */\n      dup2\n        /* \"#utility.yul\":1123:1143   */\n      calldataload\n        /* \"#utility.yul\":1114:1143   */\n      swap1\n      pop\n        /* \"#utility.yul\":1152:1185   */\n      tag_337\n        /* \"#utility.yul\":1179:1184   */\n      dup2\n        /* \"#utility.yul\":1152:1185   */\n      tag_271\n      jump\t// in\n    tag_337:\n        /* \"#utility.yul\":1052:1191   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1197:1671   */\n    tag_25:\n        /* \"#utility.yul\":1265:1271   */\n      0x00\n        /* \"#utility.yul\":1273:1279   */\n      dup1\n        /* \"#utility.yul\":1322:1324   */\n      0x40\n        /* \"#utility.yul\":1310:1319   */\n      dup4\n        /* \"#utility.yul\":1301:1308   */\n      dup6\n        /* \"#utility.yul\":1297:1320   */\n      sub\n        /* \"#utility.yul\":1293:1325   */\n      slt\n        /* \"#utility.yul\":1290:1409   */\n      iszero\n      tag_339\n      jumpi\n        /* \"#utility.yul\":1328:1407   */\n      tag_340\n      tag_264\n      jump\t// in\n    tag_340:\n        /* \"#utility.yul\":1290:1409   */\n    tag_339:\n        /* \"#utility.yul\":1448:1449   */\n      0x00\n        /* \"#utility.yul\":1473:1526   */\n      tag_341\n        /* \"#utility.yul\":1518:1525   */\n      dup6\n        /* \"#utility.yul\":1509:1515   */\n      dup3\n        /* \"#utility.yul\":1498:1507   */\n      dup7\n        /* \"#utility.yul\":1494:1516   */\n      add\n        /* \"#utility.yul\":1473:1526   */\n      tag_269\n      jump\t// in\n    tag_341:\n        /* \"#utility.yul\":1463:1526   */\n      swap3\n      pop\n        /* \"#utility.yul\":1419:1536   */\n      pop\n        /* \"#utility.yul\":1575:1577   */\n      0x20\n        /* \"#utility.yul\":1601:1654   */\n      tag_342\n        /* \"#utility.yul\":1646:1653   */\n      dup6\n        /* \"#utility.yul\":1637:1643   */\n      dup3\n        /* \"#utility.yul\":1626:1635   */\n      dup7\n        /* \"#utility.yul\":1622:1644   */\n      add\n        /* \"#utility.yul\":1601:1654   */\n      tag_272\n      jump\t// in\n    tag_342:\n        /* \"#utility.yul\":1591:1654   */\n      swap2\n      pop\n        /* \"#utility.yul\":1546:1664   */\n      pop\n        /* \"#utility.yul\":1197:1671   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1677:1826   */\n    tag_273:\n        /* \"#utility.yul\":1713:1720   */\n      0x00\n        /* \"#utility.yul\":1753:1819   */\n      0xffffffff00000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":1746:1751   */\n      dup3\n        /* \"#utility.yul\":1742:1820   */\n      and\n        /* \"#utility.yul\":1731:1820   */\n      swap1\n      pop\n        /* \"#utility.yul\":1677:1826   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1832:1952   */\n    tag_274:\n        /* \"#utility.yul\":1904:1927   */\n      tag_345\n        /* \"#utility.yul\":1921:1926   */\n      dup2\n        /* \"#utility.yul\":1904:1927   */\n      tag_273\n      jump\t// in\n    tag_345:\n        /* \"#utility.yul\":1897:1902   */\n      dup2\n        /* \"#utility.yul\":1894:1928   */\n      eq\n        /* \"#utility.yul\":1884:1946   */\n      tag_346\n      jumpi\n        /* \"#utility.yul\":1942:1943   */\n      0x00\n        /* \"#utility.yul\":1939:1940   */\n      dup1\n        /* \"#utility.yul\":1932:1944   */\n      revert\n        /* \"#utility.yul\":1884:1946   */\n    tag_346:\n        /* \"#utility.yul\":1832:1952   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1958:2095   */\n    tag_275:\n        /* \"#utility.yul\":2003:2008   */\n      0x00\n        /* \"#utility.yul\":2041:2047   */\n      dup2\n        /* \"#utility.yul\":2028:2048   */\n      calldataload\n        /* \"#utility.yul\":2019:2048   */\n      swap1\n      pop\n        /* \"#utility.yul\":2057:2089   */\n      tag_348\n        /* \"#utility.yul\":2083:2088   */\n      dup2\n        /* \"#utility.yul\":2057:2089   */\n      tag_274\n      jump\t// in\n    tag_348:\n        /* \"#utility.yul\":1958:2095   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2101:2428   */\n    tag_30:\n        /* \"#utility.yul\":2159:2165   */\n      0x00\n        /* \"#utility.yul\":2208:2210   */\n      0x20\n        /* \"#utility.yul\":2196:2205   */\n      dup3\n        /* \"#utility.yul\":2187:2194   */\n      dup5\n        /* \"#utility.yul\":2183:2206   */\n      sub\n        /* \"#utility.yul\":2179:2211   */\n      slt\n        /* \"#utility.yul\":2176:2295   */\n      iszero\n      tag_350\n      jumpi\n        /* \"#utility.yul\":2214:2293   */\n      tag_351\n      tag_264\n      jump\t// in\n    tag_351:\n        /* \"#utility.yul\":2176:2295   */\n    tag_350:\n        /* \"#utility.yul\":2334:2335   */\n      0x00\n        /* \"#utility.yul\":2359:2411   */\n      tag_352\n        /* \"#utility.yul\":2403:2410   */\n      dup5\n        /* \"#utility.yul\":2394:2400   */\n      dup3\n        /* \"#utility.yul\":2383:2392   */\n      dup6\n        /* \"#utility.yul\":2379:2401   */\n      add\n        /* \"#utility.yul\":2359:2411   */\n      tag_275\n      jump\t// in\n    tag_352:\n        /* \"#utility.yul\":2349:2411   */\n      swap2\n      pop\n        /* \"#utility.yul\":2305:2421   */\n      pop\n        /* \"#utility.yul\":2101:2428   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2434:2524   */\n    tag_276:\n        /* \"#utility.yul\":2468:2475   */\n      0x00\n        /* \"#utility.yul\":2511:2516   */\n      dup2\n        /* \"#utility.yul\":2504:2517   */\n      iszero\n        /* \"#utility.yul\":2497:2518   */\n      iszero\n        /* \"#utility.yul\":2486:2518   */\n      swap1\n      pop\n        /* \"#utility.yul\":2434:2524   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2530:2639   */\n    tag_277:\n        /* \"#utility.yul\":2611:2632   */\n      tag_355\n        /* \"#utility.yul\":2626:2631   */\n      dup2\n        /* \"#utility.yul\":2611:2632   */\n      tag_276\n      jump\t// in\n    tag_355:\n        /* \"#utility.yul\":2606:2609   */\n      dup3\n        /* \"#utility.yul\":2599:2633   */\n      mstore\n        /* \"#utility.yul\":2530:2639   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2645:2855   */\n    tag_33:\n        /* \"#utility.yul\":2732:2736   */\n      0x00\n        /* \"#utility.yul\":2770:2772   */\n      0x20\n        /* \"#utility.yul\":2759:2768   */\n      dup3\n        /* \"#utility.yul\":2755:2773   */\n      add\n        /* \"#utility.yul\":2747:2773   */\n      swap1\n      pop\n        /* \"#utility.yul\":2783:2848   */\n      tag_357\n        /* \"#utility.yul\":2845:2846   */\n      0x00\n        /* \"#utility.yul\":2834:2843   */\n      dup4\n        /* \"#utility.yul\":2830:2847   */\n      add\n        /* \"#utility.yul\":2821:2827   */\n      dup5\n        /* \"#utility.yul\":2783:2848   */\n      tag_277\n      jump\t// in\n    tag_357:\n        /* \"#utility.yul\":2645:2855   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2861:2960   */\n    tag_278:\n        /* \"#utility.yul\":2913:2919   */\n      0x00\n        /* \"#utility.yul\":2947:2952   */\n      dup2\n        /* \"#utility.yul\":2941:2953   */\n      mload\n        /* \"#utility.yul\":2931:2953   */\n      swap1\n      pop\n        /* \"#utility.yul\":2861:2960   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2966:3135   */\n    tag_279:\n        /* \"#utility.yul\":3050:3061   */\n      0x00\n        /* \"#utility.yul\":3084:3090   */\n      dup3\n        /* \"#utility.yul\":3079:3082   */\n      dup3\n        /* \"#utility.yul\":3072:3091   */\n      mstore\n        /* \"#utility.yul\":3124:3128   */\n      0x20\n        /* \"#utility.yul\":3119:3122   */\n      dup3\n        /* \"#utility.yul\":3115:3129   */\n      add\n        /* \"#utility.yul\":3100:3129   */\n      swap1\n      pop\n        /* \"#utility.yul\":2966:3135   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3141:3387   */\n    tag_280:\n        /* \"#utility.yul\":3222:3223   */\n      0x00\n        /* \"#utility.yul\":3232:3345   */\n    tag_361:\n        /* \"#utility.yul\":3246:3252   */\n      dup4\n        /* \"#utility.yul\":3243:3244   */\n      dup2\n        /* \"#utility.yul\":3240:3253   */\n      lt\n        /* \"#utility.yul\":3232:3345   */\n      iszero\n      tag_363\n      jumpi\n        /* \"#utility.yul\":3331:3332   */\n      dup1\n        /* \"#utility.yul\":3326:3329   */\n      dup3\n        /* \"#utility.yul\":3322:3333   */\n      add\n        /* \"#utility.yul\":3316:3334   */\n      mload\n        /* \"#utility.yul\":3312:3313   */\n      dup2\n        /* \"#utility.yul\":3307:3310   */\n      dup5\n        /* \"#utility.yul\":3303:3314   */\n      add\n        /* \"#utility.yul\":3296:3335   */\n      mstore\n        /* \"#utility.yul\":3268:3270   */\n      0x20\n        /* \"#utility.yul\":3265:3266   */\n      dup2\n        /* \"#utility.yul\":3261:3271   */\n      add\n        /* \"#utility.yul\":3256:3271   */\n      swap1\n      pop\n        /* \"#utility.yul\":3232:3345   */\n      jump(tag_361)\n    tag_363:\n        /* \"#utility.yul\":3379:3380   */\n      0x00\n        /* \"#utility.yul\":3370:3376   */\n      dup5\n        /* \"#utility.yul\":3365:3368   */\n      dup5\n        /* \"#utility.yul\":3361:3377   */\n      add\n        /* \"#utility.yul\":3354:3381   */\n      mstore\n        /* \"#utility.yul\":3203:3387   */\n      pop\n        /* \"#utility.yul\":3141:3387   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3393:3495   */\n    tag_281:\n        /* \"#utility.yul\":3434:3440   */\n      0x00\n        /* \"#utility.yul\":3485:3487   */\n      0x1f\n        /* \"#utility.yul\":3481:3488   */\n      not\n        /* \"#utility.yul\":3476:3478   */\n      0x1f\n        /* \"#utility.yul\":3469:3474   */\n      dup4\n        /* \"#utility.yul\":3465:3479   */\n      add\n        /* \"#utility.yul\":3461:3489   */\n      and\n        /* \"#utility.yul\":3451:3489   */\n      swap1\n      pop\n        /* \"#utility.yul\":3393:3495   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3501:3878   */\n    tag_282:\n        /* \"#utility.yul\":3589:3592   */\n      0x00\n        /* \"#utility.yul\":3617:3656   */\n      tag_366\n        /* \"#utility.yul\":3650:3655   */\n      dup3\n        /* \"#utility.yul\":3617:3656   */\n      tag_278\n      jump\t// in\n    tag_366:\n        /* \"#utility.yul\":3672:3743   */\n      tag_367\n        /* \"#utility.yul\":3736:3742   */\n      dup2\n        /* \"#utility.yul\":3731:3734   */\n      dup6\n        /* \"#utility.yul\":3672:3743   */\n      tag_279\n      jump\t// in\n    tag_367:\n        /* \"#utility.yul\":3665:3743   */\n      swap4\n      pop\n        /* \"#utility.yul\":3752:3817   */\n      tag_368\n        /* \"#utility.yul\":3810:3816   */\n      dup2\n        /* \"#utility.yul\":3805:3808   */\n      dup6\n        /* \"#utility.yul\":3798:3802   */\n      0x20\n        /* \"#utility.yul\":3791:3796   */\n      dup7\n        /* \"#utility.yul\":3787:3803   */\n      add\n        /* \"#utility.yul\":3752:3817   */\n      tag_280\n      jump\t// in\n    tag_368:\n        /* \"#utility.yul\":3842:3871   */\n      tag_369\n        /* \"#utility.yul\":3864:3870   */\n      dup2\n        /* \"#utility.yul\":3842:3871   */\n      tag_281\n      jump\t// in\n    tag_369:\n        /* \"#utility.yul\":3837:3840   */\n      dup5\n        /* \"#utility.yul\":3833:3872   */\n      add\n        /* \"#utility.yul\":3826:3872   */\n      swap2\n      pop\n        /* \"#utility.yul\":3593:3878   */\n      pop\n        /* \"#utility.yul\":3501:3878   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3884:4197   */\n    tag_38:\n        /* \"#utility.yul\":3997:4001   */\n      0x00\n        /* \"#utility.yul\":4035:4037   */\n      0x20\n        /* \"#utility.yul\":4024:4033   */\n      dup3\n        /* \"#utility.yul\":4020:4038   */\n      add\n        /* \"#utility.yul\":4012:4038   */\n      swap1\n      pop\n        /* \"#utility.yul\":4084:4093   */\n      dup2\n        /* \"#utility.yul\":4078:4082   */\n      dup2\n        /* \"#utility.yul\":4074:4094   */\n      sub\n        /* \"#utility.yul\":4070:4071   */\n      0x00\n        /* \"#utility.yul\":4059:4068   */\n      dup4\n        /* \"#utility.yul\":4055:4072   */\n      add\n        /* \"#utility.yul\":4048:4095   */\n      mstore\n        /* \"#utility.yul\":4112:4190   */\n      tag_371\n        /* \"#utility.yul\":4185:4189   */\n      dup2\n        /* \"#utility.yul\":4176:4182   */\n      dup5\n        /* \"#utility.yul\":4112:4190   */\n      tag_282\n      jump\t// in\n    tag_371:\n        /* \"#utility.yul\":4104:4190   */\n      swap1\n      pop\n        /* \"#utility.yul\":3884:4197   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4203:4532   */\n    tag_42:\n        /* \"#utility.yul\":4262:4268   */\n      0x00\n        /* \"#utility.yul\":4311:4313   */\n      0x20\n        /* \"#utility.yul\":4299:4308   */\n      dup3\n        /* \"#utility.yul\":4290:4297   */\n      dup5\n        /* \"#utility.yul\":4286:4309   */\n      sub\n        /* \"#utility.yul\":4282:4314   */\n      slt\n        /* \"#utility.yul\":4279:4398   */\n      iszero\n      tag_373\n      jumpi\n        /* \"#utility.yul\":4317:4396   */\n      tag_374\n      tag_264\n      jump\t// in\n    tag_374:\n        /* \"#utility.yul\":4279:4398   */\n    tag_373:\n        /* \"#utility.yul\":4437:4438   */\n      0x00\n        /* \"#utility.yul\":4462:4515   */\n      tag_375\n        /* \"#utility.yul\":4507:4514   */\n      dup5\n        /* \"#utility.yul\":4498:4504   */\n      dup3\n        /* \"#utility.yul\":4487:4496   */\n      dup6\n        /* \"#utility.yul\":4483:4505   */\n      add\n        /* \"#utility.yul\":4462:4515   */\n      tag_272\n      jump\t// in\n    tag_375:\n        /* \"#utility.yul\":4452:4515   */\n      swap2\n      pop\n        /* \"#utility.yul\":4408:4525   */\n      pop\n        /* \"#utility.yul\":4203:4532   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4538:4656   */\n    tag_283:\n        /* \"#utility.yul\":4625:4649   */\n      tag_377\n        /* \"#utility.yul\":4643:4648   */\n      dup2\n        /* \"#utility.yul\":4625:4649   */\n      tag_267\n      jump\t// in\n    tag_377:\n        /* \"#utility.yul\":4620:4623   */\n      dup3\n        /* \"#utility.yul\":4613:4650   */\n      mstore\n        /* \"#utility.yul\":4538:4656   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4662:4884   */\n    tag_45:\n        /* \"#utility.yul\":4755:4759   */\n      0x00\n        /* \"#utility.yul\":4793:4795   */\n      0x20\n        /* \"#utility.yul\":4782:4791   */\n      dup3\n        /* \"#utility.yul\":4778:4796   */\n      add\n        /* \"#utility.yul\":4770:4796   */\n      swap1\n      pop\n        /* \"#utility.yul\":4806:4877   */\n      tag_379\n        /* \"#utility.yul\":4874:4875   */\n      0x00\n        /* \"#utility.yul\":4863:4872   */\n      dup4\n        /* \"#utility.yul\":4859:4876   */\n      add\n        /* \"#utility.yul\":4850:4856   */\n      dup5\n        /* \"#utility.yul\":4806:4877   */\n      tag_283\n      jump\t// in\n    tag_379:\n        /* \"#utility.yul\":4662:4884   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4890:5007   */\n    tag_284:\n        /* \"#utility.yul\":4999:5000   */\n      0x00\n        /* \"#utility.yul\":4996:4997   */\n      dup1\n        /* \"#utility.yul\":4989:5001   */\n      revert\n        /* \"#utility.yul\":5013:5130   */\n    tag_285:\n        /* \"#utility.yul\":5122:5123   */\n      0x00\n        /* \"#utility.yul\":5119:5120   */\n      dup1\n        /* \"#utility.yul\":5112:5124   */\n      revert\n        /* \"#utility.yul\":5136:5316   */\n    tag_286:\n        /* \"#utility.yul\":5184:5261   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":5181:5182   */\n      0x00\n        /* \"#utility.yul\":5174:5262   */\n      mstore\n        /* \"#utility.yul\":5281:5285   */\n      0x41\n        /* \"#utility.yul\":5278:5279   */\n      0x04\n        /* \"#utility.yul\":5271:5286   */\n      mstore\n        /* \"#utility.yul\":5305:5309   */\n      0x24\n        /* \"#utility.yul\":5302:5303   */\n      0x00\n        /* \"#utility.yul\":5295:5310   */\n      revert\n        /* \"#utility.yul\":5322:5603   */\n    tag_287:\n        /* \"#utility.yul\":5405:5432   */\n      tag_384\n        /* \"#utility.yul\":5427:5431   */\n      dup3\n        /* \"#utility.yul\":5405:5432   */\n      tag_281\n      jump\t// in\n    tag_384:\n        /* \"#utility.yul\":5397:5403   */\n      dup2\n        /* \"#utility.yul\":5393:5433   */\n      add\n        /* \"#utility.yul\":5535:5541   */\n      dup2\n        /* \"#utility.yul\":5523:5533   */\n      dup2\n        /* \"#utility.yul\":5520:5542   */\n      lt\n        /* \"#utility.yul\":5499:5517   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":5487:5497   */\n      dup3\n        /* \"#utility.yul\":5484:5518   */\n      gt\n        /* \"#utility.yul\":5481:5543   */\n      or\n        /* \"#utility.yul\":5478:5566   */\n      iszero\n      tag_385\n      jumpi\n        /* \"#utility.yul\":5546:5564   */\n      tag_386\n      tag_286\n      jump\t// in\n    tag_386:\n        /* \"#utility.yul\":5478:5566   */\n    tag_385:\n        /* \"#utility.yul\":5586:5596   */\n      dup1\n        /* \"#utility.yul\":5582:5584   */\n      0x40\n        /* \"#utility.yul\":5575:5597   */\n      mstore\n        /* \"#utility.yul\":5365:5603   */\n      pop\n        /* \"#utility.yul\":5322:5603   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5609:5738   */\n    tag_288:\n        /* \"#utility.yul\":5643:5649   */\n      0x00\n        /* \"#utility.yul\":5670:5690   */\n      tag_388\n      tag_263\n      jump\t// in\n    tag_388:\n        /* \"#utility.yul\":5660:5690   */\n      swap1\n      pop\n        /* \"#utility.yul\":5699:5732   */\n      tag_389\n        /* \"#utility.yul\":5727:5731   */\n      dup3\n        /* \"#utility.yul\":5719:5725   */\n      dup3\n        /* \"#utility.yul\":5699:5732   */\n      tag_287\n      jump\t// in\n    tag_389:\n        /* \"#utility.yul\":5609:5738   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5744:6052   */\n    tag_289:\n        /* \"#utility.yul\":5806:5810   */\n      0x00\n        /* \"#utility.yul\":5896:5914   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":5888:5894   */\n      dup3\n        /* \"#utility.yul\":5885:5915   */\n      gt\n        /* \"#utility.yul\":5882:5938   */\n      iszero\n      tag_391\n      jumpi\n        /* \"#utility.yul\":5918:5936   */\n      tag_392\n      tag_286\n      jump\t// in\n    tag_392:\n        /* \"#utility.yul\":5882:5938   */\n    tag_391:\n        /* \"#utility.yul\":5956:5985   */\n      tag_393\n        /* \"#utility.yul\":5978:5984   */\n      dup3\n        /* \"#utility.yul\":5956:5985   */\n      tag_281\n      jump\t// in\n    tag_393:\n        /* \"#utility.yul\":5948:5985   */\n      swap1\n      pop\n        /* \"#utility.yul\":6040:6044   */\n      0x20\n        /* \"#utility.yul\":6034:6038   */\n      dup2\n        /* \"#utility.yul\":6030:6045   */\n      add\n        /* \"#utility.yul\":6022:6045   */\n      swap1\n      pop\n        /* \"#utility.yul\":5744:6052   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6058:6204   */\n    tag_290:\n        /* \"#utility.yul\":6155:6161   */\n      dup3\n        /* \"#utility.yul\":6150:6153   */\n      dup2\n        /* \"#utility.yul\":6145:6148   */\n      dup4\n        /* \"#utility.yul\":6132:6162   */\n      calldatacopy\n        /* \"#utility.yul\":6196:6197   */\n      0x00\n        /* \"#utility.yul\":6187:6193   */\n      dup4\n        /* \"#utility.yul\":6182:6185   */\n      dup4\n        /* \"#utility.yul\":6178:6194   */\n      add\n        /* \"#utility.yul\":6171:6198   */\n      mstore\n        /* \"#utility.yul\":6058:6204   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6210:6635   */\n    tag_291:\n        /* \"#utility.yul\":6288:6293   */\n      0x00\n        /* \"#utility.yul\":6313:6379   */\n      tag_396\n        /* \"#utility.yul\":6329:6378   */\n      tag_397\n        /* \"#utility.yul\":6371:6377   */\n      dup5\n        /* \"#utility.yul\":6329:6378   */\n      tag_289\n      jump\t// in\n    tag_397:\n        /* \"#utility.yul\":6313:6379   */\n      tag_288\n      jump\t// in\n    tag_396:\n        /* \"#utility.yul\":6304:6379   */\n      swap1\n      pop\n        /* \"#utility.yul\":6402:6408   */\n      dup3\n        /* \"#utility.yul\":6395:6400   */\n      dup2\n        /* \"#utility.yul\":6388:6409   */\n      mstore\n        /* \"#utility.yul\":6440:6444   */\n      0x20\n        /* \"#utility.yul\":6433:6438   */\n      dup2\n        /* \"#utility.yul\":6429:6445   */\n      add\n        /* \"#utility.yul\":6478:6481   */\n      dup5\n        /* \"#utility.yul\":6469:6475   */\n      dup5\n        /* \"#utility.yul\":6464:6467   */\n      dup5\n        /* \"#utility.yul\":6460:6476   */\n      add\n        /* \"#utility.yul\":6457:6482   */\n      gt\n        /* \"#utility.yul\":6454:6566   */\n      iszero\n      tag_398\n      jumpi\n        /* \"#utility.yul\":6485:6564   */\n      tag_399\n      tag_285\n      jump\t// in\n    tag_399:\n        /* \"#utility.yul\":6454:6566   */\n    tag_398:\n        /* \"#utility.yul\":6575:6629   */\n      tag_400\n        /* \"#utility.yul\":6622:6628   */\n      dup5\n        /* \"#utility.yul\":6617:6620   */\n      dup3\n        /* \"#utility.yul\":6612:6615   */\n      dup6\n        /* \"#utility.yul\":6575:6629   */\n      tag_290\n      jump\t// in\n    tag_400:\n        /* \"#utility.yul\":6294:6635   */\n      pop\n        /* \"#utility.yul\":6210:6635   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6655:6995   */\n    tag_292:\n        /* \"#utility.yul\":6711:6716   */\n      0x00\n        /* \"#utility.yul\":6760:6763   */\n      dup3\n        /* \"#utility.yul\":6753:6757   */\n      0x1f\n        /* \"#utility.yul\":6745:6751   */\n      dup4\n        /* \"#utility.yul\":6741:6758   */\n      add\n        /* \"#utility.yul\":6737:6764   */\n      slt\n        /* \"#utility.yul\":6727:6849   */\n      tag_402\n      jumpi\n        /* \"#utility.yul\":6768:6847   */\n      tag_403\n      tag_284\n      jump\t// in\n    tag_403:\n        /* \"#utility.yul\":6727:6849   */\n    tag_402:\n        /* \"#utility.yul\":6885:6891   */\n      dup2\n        /* \"#utility.yul\":6872:6892   */\n      calldataload\n        /* \"#utility.yul\":6910:6989   */\n      tag_404\n        /* \"#utility.yul\":6985:6988   */\n      dup5\n        /* \"#utility.yul\":6977:6983   */\n      dup3\n        /* \"#utility.yul\":6970:6974   */\n      0x20\n        /* \"#utility.yul\":6962:6968   */\n      dup7\n        /* \"#utility.yul\":6958:6975   */\n      add\n        /* \"#utility.yul\":6910:6989   */\n      tag_291\n      jump\t// in\n    tag_404:\n        /* \"#utility.yul\":6901:6989   */\n      swap2\n      pop\n        /* \"#utility.yul\":6717:6995   */\n      pop\n        /* \"#utility.yul\":6655:6995   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7001:7510   */\n    tag_53:\n        /* \"#utility.yul\":7070:7076   */\n      0x00\n        /* \"#utility.yul\":7119:7121   */\n      0x20\n        /* \"#utility.yul\":7107:7116   */\n      dup3\n        /* \"#utility.yul\":7098:7105   */\n      dup5\n        /* \"#utility.yul\":7094:7117   */\n      sub\n        /* \"#utility.yul\":7090:7122   */\n      slt\n        /* \"#utility.yul\":7087:7206   */\n      iszero\n      tag_406\n      jumpi\n        /* \"#utility.yul\":7125:7204   */\n      tag_407\n      tag_264\n      jump\t// in\n    tag_407:\n        /* \"#utility.yul\":7087:7206   */\n    tag_406:\n        /* \"#utility.yul\":7273:7274   */\n      0x00\n        /* \"#utility.yul\":7262:7271   */\n      dup3\n        /* \"#utility.yul\":7258:7275   */\n      add\n        /* \"#utility.yul\":7245:7276   */\n      calldataload\n        /* \"#utility.yul\":7303:7321   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":7295:7301   */\n      dup2\n        /* \"#utility.yul\":7292:7322   */\n      gt\n        /* \"#utility.yul\":7289:7406   */\n      iszero\n      tag_408\n      jumpi\n        /* \"#utility.yul\":7325:7404   */\n      tag_409\n      tag_265\n      jump\t// in\n    tag_409:\n        /* \"#utility.yul\":7289:7406   */\n    tag_408:\n        /* \"#utility.yul\":7430:7493   */\n      tag_410\n        /* \"#utility.yul\":7485:7492   */\n      dup5\n        /* \"#utility.yul\":7476:7482   */\n      dup3\n        /* \"#utility.yul\":7465:7474   */\n      dup6\n        /* \"#utility.yul\":7461:7483   */\n      add\n        /* \"#utility.yul\":7430:7493   */\n      tag_292\n      jump\t// in\n    tag_410:\n        /* \"#utility.yul\":7420:7493   */\n      swap2\n      pop\n        /* \"#utility.yul\":7216:7503   */\n      pop\n        /* \"#utility.yul\":7001:7510   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7516:8135   */\n    tag_58:\n        /* \"#utility.yul\":7593:7599   */\n      0x00\n        /* \"#utility.yul\":7601:7607   */\n      dup1\n        /* \"#utility.yul\":7609:7615   */\n      0x00\n        /* \"#utility.yul\":7658:7660   */\n      0x60\n        /* \"#utility.yul\":7646:7655   */\n      dup5\n        /* \"#utility.yul\":7637:7644   */\n      dup7\n        /* \"#utility.yul\":7633:7656   */\n      sub\n        /* \"#utility.yul\":7629:7661   */\n      slt\n        /* \"#utility.yul\":7626:7745   */\n      iszero\n      tag_412\n      jumpi\n        /* \"#utility.yul\":7664:7743   */\n      tag_413\n      tag_264\n      jump\t// in\n    tag_413:\n        /* \"#utility.yul\":7626:7745   */\n    tag_412:\n        /* \"#utility.yul\":7784:7785   */\n      0x00\n        /* \"#utility.yul\":7809:7862   */\n      tag_414\n        /* \"#utility.yul\":7854:7861   */\n      dup7\n        /* \"#utility.yul\":7845:7851   */\n      dup3\n        /* \"#utility.yul\":7834:7843   */\n      dup8\n        /* \"#utility.yul\":7830:7852   */\n      add\n        /* \"#utility.yul\":7809:7862   */\n      tag_269\n      jump\t// in\n    tag_414:\n        /* \"#utility.yul\":7799:7862   */\n      swap4\n      pop\n        /* \"#utility.yul\":7755:7872   */\n      pop\n        /* \"#utility.yul\":7911:7913   */\n      0x20\n        /* \"#utility.yul\":7937:7990   */\n      tag_415\n        /* \"#utility.yul\":7982:7989   */\n      dup7\n        /* \"#utility.yul\":7973:7979   */\n      dup3\n        /* \"#utility.yul\":7962:7971   */\n      dup8\n        /* \"#utility.yul\":7958:7980   */\n      add\n        /* \"#utility.yul\":7937:7990   */\n      tag_269\n      jump\t// in\n    tag_415:\n        /* \"#utility.yul\":7927:7990   */\n      swap3\n      pop\n        /* \"#utility.yul\":7882:8000   */\n      pop\n        /* \"#utility.yul\":8039:8041   */\n      0x40\n        /* \"#utility.yul\":8065:8118   */\n      tag_416\n        /* \"#utility.yul\":8110:8117   */\n      dup7\n        /* \"#utility.yul\":8101:8107   */\n      dup3\n        /* \"#utility.yul\":8090:8099   */\n      dup8\n        /* \"#utility.yul\":8086:8108   */\n      add\n        /* \"#utility.yul\":8065:8118   */\n      tag_272\n      jump\t// in\n    tag_416:\n        /* \"#utility.yul\":8055:8118   */\n      swap2\n      pop\n        /* \"#utility.yul\":8010:8128   */\n      pop\n        /* \"#utility.yul\":7516:8135   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":8141:8257   */\n    tag_293:\n        /* \"#utility.yul\":8211:8232   */\n      tag_418\n        /* \"#utility.yul\":8226:8231   */\n      dup2\n        /* \"#utility.yul\":8211:8232   */\n      tag_276\n      jump\t// in\n    tag_418:\n        /* \"#utility.yul\":8204:8209   */\n      dup2\n        /* \"#utility.yul\":8201:8233   */\n      eq\n        /* \"#utility.yul\":8191:8251   */\n      tag_419\n      jumpi\n        /* \"#utility.yul\":8247:8248   */\n      0x00\n        /* \"#utility.yul\":8244:8245   */\n      dup1\n        /* \"#utility.yul\":8237:8249   */\n      revert\n        /* \"#utility.yul\":8191:8251   */\n    tag_419:\n        /* \"#utility.yul\":8141:8257   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8263:8396   */\n    tag_294:\n        /* \"#utility.yul\":8306:8311   */\n      0x00\n        /* \"#utility.yul\":8344:8350   */\n      dup2\n        /* \"#utility.yul\":8331:8351   */\n      calldataload\n        /* \"#utility.yul\":8322:8351   */\n      swap1\n      pop\n        /* \"#utility.yul\":8360:8390   */\n      tag_421\n        /* \"#utility.yul\":8384:8389   */\n      dup2\n        /* \"#utility.yul\":8360:8390   */\n      tag_293\n      jump\t// in\n    tag_421:\n        /* \"#utility.yul\":8263:8396   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8402:9015   */\n    tag_63:\n        /* \"#utility.yul\":8476:8482   */\n      0x00\n        /* \"#utility.yul\":8484:8490   */\n      dup1\n        /* \"#utility.yul\":8492:8498   */\n      0x00\n        /* \"#utility.yul\":8541:8543   */\n      0x60\n        /* \"#utility.yul\":8529:8538   */\n      dup5\n        /* \"#utility.yul\":8520:8527   */\n      dup7\n        /* \"#utility.yul\":8516:8539   */\n      sub\n        /* \"#utility.yul\":8512:8544   */\n      slt\n        /* \"#utility.yul\":8509:8628   */\n      iszero\n      tag_423\n      jumpi\n        /* \"#utility.yul\":8547:8626   */\n      tag_424\n      tag_264\n      jump\t// in\n    tag_424:\n        /* \"#utility.yul\":8509:8628   */\n    tag_423:\n        /* \"#utility.yul\":8667:8668   */\n      0x00\n        /* \"#utility.yul\":8692:8745   */\n      tag_425\n        /* \"#utility.yul\":8737:8744   */\n      dup7\n        /* \"#utility.yul\":8728:8734   */\n      dup3\n        /* \"#utility.yul\":8717:8726   */\n      dup8\n        /* \"#utility.yul\":8713:8735   */\n      add\n        /* \"#utility.yul\":8692:8745   */\n      tag_269\n      jump\t// in\n    tag_425:\n        /* \"#utility.yul\":8682:8745   */\n      swap4\n      pop\n        /* \"#utility.yul\":8638:8755   */\n      pop\n        /* \"#utility.yul\":8794:8796   */\n      0x20\n        /* \"#utility.yul\":8820:8873   */\n      tag_426\n        /* \"#utility.yul\":8865:8872   */\n      dup7\n        /* \"#utility.yul\":8856:8862   */\n      dup3\n        /* \"#utility.yul\":8845:8854   */\n      dup8\n        /* \"#utility.yul\":8841:8863   */\n      add\n        /* \"#utility.yul\":8820:8873   */\n      tag_269\n      jump\t// in\n    tag_426:\n        /* \"#utility.yul\":8810:8873   */\n      swap3\n      pop\n        /* \"#utility.yul\":8765:8883   */\n      pop\n        /* \"#utility.yul\":8922:8924   */\n      0x40\n        /* \"#utility.yul\":8948:8998   */\n      tag_427\n        /* \"#utility.yul\":8990:8997   */\n      dup7\n        /* \"#utility.yul\":8981:8987   */\n      dup3\n        /* \"#utility.yul\":8970:8979   */\n      dup8\n        /* \"#utility.yul\":8966:8988   */\n      add\n        /* \"#utility.yul\":8948:8998   */\n      tag_294\n      jump\t// in\n    tag_427:\n        /* \"#utility.yul\":8938:8998   */\n      swap2\n      pop\n        /* \"#utility.yul\":8893:9008   */\n      pop\n        /* \"#utility.yul\":8402:9015   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":9021:9350   */\n    tag_77:\n        /* \"#utility.yul\":9080:9086   */\n      0x00\n        /* \"#utility.yul\":9129:9131   */\n      0x20\n        /* \"#utility.yul\":9117:9126   */\n      dup3\n        /* \"#utility.yul\":9108:9115   */\n      dup5\n        /* \"#utility.yul\":9104:9127   */\n      sub\n        /* \"#utility.yul\":9100:9132   */\n      slt\n        /* \"#utility.yul\":9097:9216   */\n      iszero\n      tag_429\n      jumpi\n        /* \"#utility.yul\":9135:9214   */\n      tag_430\n      tag_264\n      jump\t// in\n    tag_430:\n        /* \"#utility.yul\":9097:9216   */\n    tag_429:\n        /* \"#utility.yul\":9255:9256   */\n      0x00\n        /* \"#utility.yul\":9280:9333   */\n      tag_431\n        /* \"#utility.yul\":9325:9332   */\n      dup5\n        /* \"#utility.yul\":9316:9322   */\n      dup3\n        /* \"#utility.yul\":9305:9314   */\n      dup6\n        /* \"#utility.yul\":9301:9323   */\n      add\n        /* \"#utility.yul\":9280:9333   */\n      tag_269\n      jump\t// in\n    tag_431:\n        /* \"#utility.yul\":9270:9333   */\n      swap2\n      pop\n        /* \"#utility.yul\":9226:9343   */\n      pop\n        /* \"#utility.yul\":9021:9350   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9356:9474   */\n    tag_295:\n        /* \"#utility.yul\":9443:9467   */\n      tag_433\n        /* \"#utility.yul\":9461:9466   */\n      dup2\n        /* \"#utility.yul\":9443:9467   */\n      tag_270\n      jump\t// in\n    tag_433:\n        /* \"#utility.yul\":9438:9441   */\n      dup3\n        /* \"#utility.yul\":9431:9468   */\n      mstore\n        /* \"#utility.yul\":9356:9474   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9480:9702   */\n    tag_80:\n        /* \"#utility.yul\":9573:9577   */\n      0x00\n        /* \"#utility.yul\":9611:9613   */\n      0x20\n        /* \"#utility.yul\":9600:9609   */\n      dup3\n        /* \"#utility.yul\":9596:9614   */\n      add\n        /* \"#utility.yul\":9588:9614   */\n      swap1\n      pop\n        /* \"#utility.yul\":9624:9695   */\n      tag_435\n        /* \"#utility.yul\":9692:9693   */\n      0x00\n        /* \"#utility.yul\":9681:9690   */\n      dup4\n        /* \"#utility.yul\":9677:9694   */\n      add\n        /* \"#utility.yul\":9668:9674   */\n      dup5\n        /* \"#utility.yul\":9624:9695   */\n      tag_295\n      jump\t// in\n    tag_435:\n        /* \"#utility.yul\":9480:9702   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9708:10176   */\n    tag_93:\n        /* \"#utility.yul\":9773:9779   */\n      0x00\n        /* \"#utility.yul\":9781:9787   */\n      dup1\n        /* \"#utility.yul\":9830:9832   */\n      0x40\n        /* \"#utility.yul\":9818:9827   */\n      dup4\n        /* \"#utility.yul\":9809:9816   */\n      dup6\n        /* \"#utility.yul\":9805:9828   */\n      sub\n        /* \"#utility.yul\":9801:9833   */\n      slt\n        /* \"#utility.yul\":9798:9917   */\n      iszero\n      tag_437\n      jumpi\n        /* \"#utility.yul\":9836:9915   */\n      tag_438\n      tag_264\n      jump\t// in\n    tag_438:\n        /* \"#utility.yul\":9798:9917   */\n    tag_437:\n        /* \"#utility.yul\":9956:9957   */\n      0x00\n        /* \"#utility.yul\":9981:10034   */\n      tag_439\n        /* \"#utility.yul\":10026:10033   */\n      dup6\n        /* \"#utility.yul\":10017:10023   */\n      dup3\n        /* \"#utility.yul\":10006:10015   */\n      dup7\n        /* \"#utility.yul\":10002:10024   */\n      add\n        /* \"#utility.yul\":9981:10034   */\n      tag_269\n      jump\t// in\n    tag_439:\n        /* \"#utility.yul\":9971:10034   */\n      swap3\n      pop\n        /* \"#utility.yul\":9927:10044   */\n      pop\n        /* \"#utility.yul\":10083:10085   */\n      0x20\n        /* \"#utility.yul\":10109:10159   */\n      tag_440\n        /* \"#utility.yul\":10151:10158   */\n      dup6\n        /* \"#utility.yul\":10142:10148   */\n      dup3\n        /* \"#utility.yul\":10131:10140   */\n      dup7\n        /* \"#utility.yul\":10127:10149   */\n      add\n        /* \"#utility.yul\":10109:10159   */\n      tag_294\n      jump\t// in\n    tag_440:\n        /* \"#utility.yul\":10099:10159   */\n      swap2\n      pop\n        /* \"#utility.yul\":10054:10169   */\n      pop\n        /* \"#utility.yul\":9708:10176   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10182:10489   */\n    tag_296:\n        /* \"#utility.yul\":10243:10247   */\n      0x00\n        /* \"#utility.yul\":10333:10351   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":10325:10331   */\n      dup3\n        /* \"#utility.yul\":10322:10352   */\n      gt\n        /* \"#utility.yul\":10319:10375   */\n      iszero\n      tag_442\n      jumpi\n        /* \"#utility.yul\":10355:10373   */\n      tag_443\n      tag_286\n      jump\t// in\n    tag_443:\n        /* \"#utility.yul\":10319:10375   */\n    tag_442:\n        /* \"#utility.yul\":10393:10422   */\n      tag_444\n        /* \"#utility.yul\":10415:10421   */\n      dup3\n        /* \"#utility.yul\":10393:10422   */\n      tag_281\n      jump\t// in\n    tag_444:\n        /* \"#utility.yul\":10385:10422   */\n      swap1\n      pop\n        /* \"#utility.yul\":10477:10481   */\n      0x20\n        /* \"#utility.yul\":10471:10475   */\n      dup2\n        /* \"#utility.yul\":10467:10482   */\n      add\n        /* \"#utility.yul\":10459:10482   */\n      swap1\n      pop\n        /* \"#utility.yul\":10182:10489   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10495:10918   */\n    tag_297:\n        /* \"#utility.yul\":10572:10577   */\n      0x00\n        /* \"#utility.yul\":10597:10662   */\n      tag_446\n        /* \"#utility.yul\":10613:10661   */\n      tag_447\n        /* \"#utility.yul\":10654:10660   */\n      dup5\n        /* \"#utility.yul\":10613:10661   */\n      tag_296\n      jump\t// in\n    tag_447:\n        /* \"#utility.yul\":10597:10662   */\n      tag_288\n      jump\t// in\n    tag_446:\n        /* \"#utility.yul\":10588:10662   */\n      swap1\n      pop\n        /* \"#utility.yul\":10685:10691   */\n      dup3\n        /* \"#utility.yul\":10678:10683   */\n      dup2\n        /* \"#utility.yul\":10671:10692   */\n      mstore\n        /* \"#utility.yul\":10723:10727   */\n      0x20\n        /* \"#utility.yul\":10716:10721   */\n      dup2\n        /* \"#utility.yul\":10712:10728   */\n      add\n        /* \"#utility.yul\":10761:10764   */\n      dup5\n        /* \"#utility.yul\":10752:10758   */\n      dup5\n        /* \"#utility.yul\":10747:10750   */\n      dup5\n        /* \"#utility.yul\":10743:10759   */\n      add\n        /* \"#utility.yul\":10740:10765   */\n      gt\n        /* \"#utility.yul\":10737:10849   */\n      iszero\n      tag_448\n      jumpi\n        /* \"#utility.yul\":10768:10847   */\n      tag_449\n      tag_285\n      jump\t// in\n    tag_449:\n        /* \"#utility.yul\":10737:10849   */\n    tag_448:\n        /* \"#utility.yul\":10858:10912   */\n      tag_450\n        /* \"#utility.yul\":10905:10911   */\n      dup5\n        /* \"#utility.yul\":10900:10903   */\n      dup3\n        /* \"#utility.yul\":10895:10898   */\n      dup6\n        /* \"#utility.yul\":10858:10912   */\n      tag_290\n      jump\t// in\n    tag_450:\n        /* \"#utility.yul\":10578:10918   */\n      pop\n        /* \"#utility.yul\":10495:10918   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10937:11275   */\n    tag_298:\n        /* \"#utility.yul\":10992:10997   */\n      0x00\n        /* \"#utility.yul\":11041:11044   */\n      dup3\n        /* \"#utility.yul\":11034:11038   */\n      0x1f\n        /* \"#utility.yul\":11026:11032   */\n      dup4\n        /* \"#utility.yul\":11022:11039   */\n      add\n        /* \"#utility.yul\":11018:11045   */\n      slt\n        /* \"#utility.yul\":11008:11130   */\n      tag_452\n      jumpi\n        /* \"#utility.yul\":11049:11128   */\n      tag_453\n      tag_284\n      jump\t// in\n    tag_453:\n        /* \"#utility.yul\":11008:11130   */\n    tag_452:\n        /* \"#utility.yul\":11166:11172   */\n      dup2\n        /* \"#utility.yul\":11153:11173   */\n      calldataload\n        /* \"#utility.yul\":11191:11269   */\n      tag_454\n        /* \"#utility.yul\":11265:11268   */\n      dup5\n        /* \"#utility.yul\":11257:11263   */\n      dup3\n        /* \"#utility.yul\":11250:11254   */\n      0x20\n        /* \"#utility.yul\":11242:11248   */\n      dup7\n        /* \"#utility.yul\":11238:11255   */\n      add\n        /* \"#utility.yul\":11191:11269   */\n      tag_297\n      jump\t// in\n    tag_454:\n        /* \"#utility.yul\":11182:11269   */\n      swap2\n      pop\n        /* \"#utility.yul\":10998:11275   */\n      pop\n        /* \"#utility.yul\":10937:11275   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11281:12224   */\n    tag_98:\n        /* \"#utility.yul\":11376:11382   */\n      0x00\n        /* \"#utility.yul\":11384:11390   */\n      dup1\n        /* \"#utility.yul\":11392:11398   */\n      0x00\n        /* \"#utility.yul\":11400:11406   */\n      dup1\n        /* \"#utility.yul\":11449:11452   */\n      0x80\n        /* \"#utility.yul\":11437:11446   */\n      dup6\n        /* \"#utility.yul\":11428:11435   */\n      dup8\n        /* \"#utility.yul\":11424:11447   */\n      sub\n        /* \"#utility.yul\":11420:11453   */\n      slt\n        /* \"#utility.yul\":11417:11537   */\n      iszero\n      tag_456\n      jumpi\n        /* \"#utility.yul\":11456:11535   */\n      tag_457\n      tag_264\n      jump\t// in\n    tag_457:\n        /* \"#utility.yul\":11417:11537   */\n    tag_456:\n        /* \"#utility.yul\":11576:11577   */\n      0x00\n        /* \"#utility.yul\":11601:11654   */\n      tag_458\n        /* \"#utility.yul\":11646:11653   */\n      dup8\n        /* \"#utility.yul\":11637:11643   */\n      dup3\n        /* \"#utility.yul\":11626:11635   */\n      dup9\n        /* \"#utility.yul\":11622:11644   */\n      add\n        /* \"#utility.yul\":11601:11654   */\n      tag_269\n      jump\t// in\n    tag_458:\n        /* \"#utility.yul\":11591:11654   */\n      swap5\n      pop\n        /* \"#utility.yul\":11547:11664   */\n      pop\n        /* \"#utility.yul\":11703:11705   */\n      0x20\n        /* \"#utility.yul\":11729:11782   */\n      tag_459\n        /* \"#utility.yul\":11774:11781   */\n      dup8\n        /* \"#utility.yul\":11765:11771   */\n      dup3\n        /* \"#utility.yul\":11754:11763   */\n      dup9\n        /* \"#utility.yul\":11750:11772   */\n      add\n        /* \"#utility.yul\":11729:11782   */\n      tag_269\n      jump\t// in\n    tag_459:\n        /* \"#utility.yul\":11719:11782   */\n      swap4\n      pop\n        /* \"#utility.yul\":11674:11792   */\n      pop\n        /* \"#utility.yul\":11831:11833   */\n      0x40\n        /* \"#utility.yul\":11857:11910   */\n      tag_460\n        /* \"#utility.yul\":11902:11909   */\n      dup8\n        /* \"#utility.yul\":11893:11899   */\n      dup3\n        /* \"#utility.yul\":11882:11891   */\n      dup9\n        /* \"#utility.yul\":11878:11900   */\n      add\n        /* \"#utility.yul\":11857:11910   */\n      tag_272\n      jump\t// in\n    tag_460:\n        /* \"#utility.yul\":11847:11910   */\n      swap3\n      pop\n        /* \"#utility.yul\":11802:11920   */\n      pop\n        /* \"#utility.yul\":11987:11989   */\n      0x60\n        /* \"#utility.yul\":11976:11985   */\n      dup6\n        /* \"#utility.yul\":11972:11990   */\n      add\n        /* \"#utility.yul\":11959:11991   */\n      calldataload\n        /* \"#utility.yul\":12018:12036   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":12010:12016   */\n      dup2\n        /* \"#utility.yul\":12007:12037   */\n      gt\n        /* \"#utility.yul\":12004:12121   */\n      iszero\n      tag_461\n      jumpi\n        /* \"#utility.yul\":12040:12119   */\n      tag_462\n      tag_265\n      jump\t// in\n    tag_462:\n        /* \"#utility.yul\":12004:12121   */\n    tag_461:\n        /* \"#utility.yul\":12145:12207   */\n      tag_463\n        /* \"#utility.yul\":12199:12206   */\n      dup8\n        /* \"#utility.yul\":12190:12196   */\n      dup3\n        /* \"#utility.yul\":12179:12188   */\n      dup9\n        /* \"#utility.yul\":12175:12197   */\n      add\n        /* \"#utility.yul\":12145:12207   */\n      tag_298\n      jump\t// in\n    tag_463:\n        /* \"#utility.yul\":12135:12207   */\n      swap2\n      pop\n        /* \"#utility.yul\":11930:12217   */\n      pop\n        /* \"#utility.yul\":11281:12224   */\n      swap3\n      swap6\n      swap2\n      swap5\n      pop\n      swap3\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12230:12704   */\n    tag_112:\n        /* \"#utility.yul\":12298:12304   */\n      0x00\n        /* \"#utility.yul\":12306:12312   */\n      dup1\n        /* \"#utility.yul\":12355:12357   */\n      0x40\n        /* \"#utility.yul\":12343:12352   */\n      dup4\n        /* \"#utility.yul\":12334:12341   */\n      dup6\n        /* \"#utility.yul\":12330:12353   */\n      sub\n        /* \"#utility.yul\":12326:12358   */\n      slt\n        /* \"#utility.yul\":12323:12442   */\n      iszero\n      tag_465\n      jumpi\n        /* \"#utility.yul\":12361:12440   */\n      tag_466\n      tag_264\n      jump\t// in\n    tag_466:\n        /* \"#utility.yul\":12323:12442   */\n    tag_465:\n        /* \"#utility.yul\":12481:12482   */\n      0x00\n        /* \"#utility.yul\":12506:12559   */\n      tag_467\n        /* \"#utility.yul\":12551:12558   */\n      dup6\n        /* \"#utility.yul\":12542:12548   */\n      dup3\n        /* \"#utility.yul\":12531:12540   */\n      dup7\n        /* \"#utility.yul\":12527:12549   */\n      add\n        /* \"#utility.yul\":12506:12559   */\n      tag_269\n      jump\t// in\n    tag_467:\n        /* \"#utility.yul\":12496:12559   */\n      swap3\n      pop\n        /* \"#utility.yul\":12452:12569   */\n      pop\n        /* \"#utility.yul\":12608:12610   */\n      0x20\n        /* \"#utility.yul\":12634:12687   */\n      tag_468\n        /* \"#utility.yul\":12679:12686   */\n      dup6\n        /* \"#utility.yul\":12670:12676   */\n      dup3\n        /* \"#utility.yul\":12659:12668   */\n      dup7\n        /* \"#utility.yul\":12655:12677   */\n      add\n        /* \"#utility.yul\":12634:12687   */\n      tag_269\n      jump\t// in\n    tag_468:\n        /* \"#utility.yul\":12624:12687   */\n      swap2\n      pop\n        /* \"#utility.yul\":12579:12697   */\n      pop\n        /* \"#utility.yul\":12230:12704   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12710:12890   */\n    tag_299:\n        /* \"#utility.yul\":12758:12835   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":12755:12756   */\n      0x00\n        /* \"#utility.yul\":12748:12836   */\n      mstore\n        /* \"#utility.yul\":12855:12859   */\n      0x22\n        /* \"#utility.yul\":12852:12853   */\n      0x04\n        /* \"#utility.yul\":12845:12860   */\n      mstore\n        /* \"#utility.yul\":12879:12883   */\n      0x24\n        /* \"#utility.yul\":12876:12877   */\n      0x00\n        /* \"#utility.yul\":12869:12884   */\n      revert\n        /* \"#utility.yul\":12896:13216   */\n    tag_124:\n        /* \"#utility.yul\":12940:12946   */\n      0x00\n        /* \"#utility.yul\":12977:12978   */\n      0x02\n        /* \"#utility.yul\":12971:12975   */\n      dup3\n        /* \"#utility.yul\":12967:12979   */\n      div\n        /* \"#utility.yul\":12957:12979   */\n      swap1\n      pop\n        /* \"#utility.yul\":13024:13025   */\n      0x01\n        /* \"#utility.yul\":13018:13022   */\n      dup3\n        /* \"#utility.yul\":13014:13026   */\n      and\n        /* \"#utility.yul\":13045:13063   */\n      dup1\n        /* \"#utility.yul\":13035:13116   */\n      tag_471\n      jumpi\n        /* \"#utility.yul\":13101:13105   */\n      0x7f\n        /* \"#utility.yul\":13093:13099   */\n      dup3\n        /* \"#utility.yul\":13089:13106   */\n      and\n        /* \"#utility.yul\":13079:13106   */\n      swap2\n      pop\n        /* \"#utility.yul\":13035:13116   */\n    tag_471:\n        /* \"#utility.yul\":13163:13165   */\n      0x20\n        /* \"#utility.yul\":13155:13161   */\n      dup3\n        /* \"#utility.yul\":13152:13166   */\n      lt\n        /* \"#utility.yul\":13132:13150   */\n      dup2\n        /* \"#utility.yul\":13129:13167   */\n      sub\n        /* \"#utility.yul\":13126:13210   */\n      tag_472\n      jumpi\n        /* \"#utility.yul\":13182:13200   */\n      tag_473\n      tag_299\n      jump\t// in\n    tag_473:\n        /* \"#utility.yul\":13126:13210   */\n    tag_472:\n        /* \"#utility.yul\":12947:13216   */\n      pop\n        /* \"#utility.yul\":12896:13216   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13222:13363   */\n    tag_300:\n        /* \"#utility.yul\":13271:13275   */\n      0x00\n        /* \"#utility.yul\":13294:13297   */\n      dup2\n        /* \"#utility.yul\":13286:13297   */\n      swap1\n      pop\n        /* \"#utility.yul\":13317:13320   */\n      dup2\n        /* \"#utility.yul\":13314:13315   */\n      0x00\n        /* \"#utility.yul\":13307:13321   */\n      mstore\n        /* \"#utility.yul\":13351:13355   */\n      0x20\n        /* \"#utility.yul\":13348:13349   */\n      0x00\n        /* \"#utility.yul\":13338:13356   */\n      keccak256\n        /* \"#utility.yul\":13330:13356   */\n      swap1\n      pop\n        /* \"#utility.yul\":13222:13363   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13369:13462   */\n    tag_301:\n        /* \"#utility.yul\":13406:13412   */\n      0x00\n        /* \"#utility.yul\":13453:13455   */\n      0x20\n        /* \"#utility.yul\":13448:13450   */\n      0x1f\n        /* \"#utility.yul\":13441:13446   */\n      dup4\n        /* \"#utility.yul\":13437:13451   */\n      add\n        /* \"#utility.yul\":13433:13456   */\n      div\n        /* \"#utility.yul\":13423:13456   */\n      swap1\n      pop\n        /* \"#utility.yul\":13369:13462   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13468:13575   */\n    tag_302:\n        /* \"#utility.yul\":13512:13520   */\n      0x00\n        /* \"#utility.yul\":13562:13567   */\n      dup3\n        /* \"#utility.yul\":13556:13560   */\n      dup3\n        /* \"#utility.yul\":13552:13568   */\n      shl\n        /* \"#utility.yul\":13531:13568   */\n      swap1\n      pop\n        /* \"#utility.yul\":13468:13575   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13581:13974   */\n    tag_303:\n        /* \"#utility.yul\":13650:13656   */\n      0x00\n        /* \"#utility.yul\":13700:13701   */\n      0x08\n        /* \"#utility.yul\":13688:13698   */\n      dup4\n        /* \"#utility.yul\":13684:13702   */\n      mul\n        /* \"#utility.yul\":13723:13820   */\n      tag_478\n        /* \"#utility.yul\":13753:13819   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":13742:13751   */\n      dup3\n        /* \"#utility.yul\":13723:13820   */\n      tag_302\n      jump\t// in\n    tag_478:\n        /* \"#utility.yul\":13841:13880   */\n      tag_479\n        /* \"#utility.yul\":13871:13879   */\n      dup7\n        /* \"#utility.yul\":13860:13869   */\n      dup4\n        /* \"#utility.yul\":13841:13880   */\n      tag_302\n      jump\t// in\n    tag_479:\n        /* \"#utility.yul\":13829:13880   */\n      swap6\n      pop\n        /* \"#utility.yul\":13913:13917   */\n      dup1\n        /* \"#utility.yul\":13909:13918   */\n      not\n        /* \"#utility.yul\":13902:13907   */\n      dup5\n        /* \"#utility.yul\":13898:13919   */\n      and\n        /* \"#utility.yul\":13889:13919   */\n      swap4\n      pop\n        /* \"#utility.yul\":13962:13966   */\n      dup1\n        /* \"#utility.yul\":13952:13960   */\n      dup7\n        /* \"#utility.yul\":13948:13967   */\n      and\n        /* \"#utility.yul\":13941:13946   */\n      dup5\n        /* \"#utility.yul\":13938:13968   */\n      or\n        /* \"#utility.yul\":13928:13968   */\n      swap3\n      pop\n        /* \"#utility.yul\":13657:13974   */\n      pop\n      pop\n        /* \"#utility.yul\":13581:13974   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13980:14040   */\n    tag_304:\n        /* \"#utility.yul\":14008:14011   */\n      0x00\n        /* \"#utility.yul\":14029:14034   */\n      dup2\n        /* \"#utility.yul\":14022:14034   */\n      swap1\n      pop\n        /* \"#utility.yul\":13980:14040   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14046:14188   */\n    tag_305:\n        /* \"#utility.yul\":14096:14105   */\n      0x00\n        /* \"#utility.yul\":14129:14182   */\n      tag_482\n        /* \"#utility.yul\":14147:14181   */\n      tag_483\n        /* \"#utility.yul\":14156:14180   */\n      tag_484\n        /* \"#utility.yul\":14174:14179   */\n      dup5\n        /* \"#utility.yul\":14156:14180   */\n      tag_270\n      jump\t// in\n    tag_484:\n        /* \"#utility.yul\":14147:14181   */\n      tag_304\n      jump\t// in\n    tag_483:\n        /* \"#utility.yul\":14129:14182   */\n      tag_270\n      jump\t// in\n    tag_482:\n        /* \"#utility.yul\":14116:14182   */\n      swap1\n      pop\n        /* \"#utility.yul\":14046:14188   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14194:14269   */\n    tag_306:\n        /* \"#utility.yul\":14237:14240   */\n      0x00\n        /* \"#utility.yul\":14258:14263   */\n      dup2\n        /* \"#utility.yul\":14251:14263   */\n      swap1\n      pop\n        /* \"#utility.yul\":14194:14269   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14275:14544   */\n    tag_307:\n        /* \"#utility.yul\":14385:14424   */\n      tag_487\n        /* \"#utility.yul\":14416:14423   */\n      dup4\n        /* \"#utility.yul\":14385:14424   */\n      tag_305\n      jump\t// in\n    tag_487:\n        /* \"#utility.yul\":14446:14537   */\n      tag_488\n        /* \"#utility.yul\":14495:14536   */\n      tag_489\n        /* \"#utility.yul\":14519:14535   */\n      dup3\n        /* \"#utility.yul\":14495:14536   */\n      tag_306\n      jump\t// in\n    tag_489:\n        /* \"#utility.yul\":14487:14493   */\n      dup5\n        /* \"#utility.yul\":14480:14484   */\n      dup5\n        /* \"#utility.yul\":14474:14485   */\n      sload\n        /* \"#utility.yul\":14446:14537   */\n      tag_303\n      jump\t// in\n    tag_488:\n        /* \"#utility.yul\":14440:14444   */\n      dup3\n        /* \"#utility.yul\":14433:14538   */\n      sstore\n        /* \"#utility.yul\":14351:14544   */\n      pop\n        /* \"#utility.yul\":14275:14544   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14550:14623   */\n    tag_308:\n        /* \"#utility.yul\":14595:14598   */\n      0x00\n        /* \"#utility.yul\":14550:14623   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":14629:14818   */\n    tag_309:\n        /* \"#utility.yul\":14706:14738   */\n      tag_492\n      tag_308\n      jump\t// in\n    tag_492:\n        /* \"#utility.yul\":14747:14812   */\n      tag_493\n        /* \"#utility.yul\":14805:14811   */\n      dup2\n        /* \"#utility.yul\":14797:14803   */\n      dup5\n        /* \"#utility.yul\":14791:14795   */\n      dup5\n        /* \"#utility.yul\":14747:14812   */\n      tag_307\n      jump\t// in\n    tag_493:\n        /* \"#utility.yul\":14682:14818   */\n      pop\n        /* \"#utility.yul\":14629:14818   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14824:15010   */\n    tag_310:\n        /* \"#utility.yul\":14884:15004   */\n    tag_495:\n        /* \"#utility.yul\":14901:14904   */\n      dup2\n        /* \"#utility.yul\":14894:14899   */\n      dup2\n        /* \"#utility.yul\":14891:14905   */\n      lt\n        /* \"#utility.yul\":14884:15004   */\n      iszero\n      tag_497\n      jumpi\n        /* \"#utility.yul\":14955:14994   */\n      tag_498\n        /* \"#utility.yul\":14992:14993   */\n      0x00\n        /* \"#utility.yul\":14985:14990   */\n      dup3\n        /* \"#utility.yul\":14955:14994   */\n      tag_309\n      jump\t// in\n    tag_498:\n        /* \"#utility.yul\":14928:14929   */\n      0x01\n        /* \"#utility.yul\":14921:14926   */\n      dup2\n        /* \"#utility.yul\":14917:14930   */\n      add\n        /* \"#utility.yul\":14908:14930   */\n      swap1\n      pop\n        /* \"#utility.yul\":14884:15004   */\n      jump(tag_495)\n    tag_497:\n        /* \"#utility.yul\":14824:15010   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15016:15559   */\n    tag_311:\n        /* \"#utility.yul\":15117:15119   */\n      0x1f\n        /* \"#utility.yul\":15112:15115   */\n      dup3\n        /* \"#utility.yul\":15109:15120   */\n      gt\n        /* \"#utility.yul\":15106:15552   */\n      iszero\n      tag_500\n      jumpi\n        /* \"#utility.yul\":15151:15189   */\n      tag_501\n        /* \"#utility.yul\":15183:15188   */\n      dup2\n        /* \"#utility.yul\":15151:15189   */\n      tag_300\n      jump\t// in\n    tag_501:\n        /* \"#utility.yul\":15235:15264   */\n      tag_502\n        /* \"#utility.yul\":15253:15263   */\n      dup5\n        /* \"#utility.yul\":15235:15264   */\n      tag_301\n      jump\t// in\n    tag_502:\n        /* \"#utility.yul\":15225:15233   */\n      dup2\n        /* \"#utility.yul\":15221:15265   */\n      add\n        /* \"#utility.yul\":15418:15420   */\n      0x20\n        /* \"#utility.yul\":15406:15416   */\n      dup6\n        /* \"#utility.yul\":15403:15421   */\n      lt\n        /* \"#utility.yul\":15400:15449   */\n      iszero\n      tag_503\n      jumpi\n        /* \"#utility.yul\":15439:15447   */\n      dup2\n        /* \"#utility.yul\":15424:15447   */\n      swap1\n      pop\n        /* \"#utility.yul\":15400:15449   */\n    tag_503:\n        /* \"#utility.yul\":15462:15542   */\n      tag_504\n        /* \"#utility.yul\":15518:15540   */\n      tag_505\n        /* \"#utility.yul\":15536:15539   */\n      dup6\n        /* \"#utility.yul\":15518:15540   */\n      tag_301\n      jump\t// in\n    tag_505:\n        /* \"#utility.yul\":15508:15516   */\n      dup4\n        /* \"#utility.yul\":15504:15541   */\n      add\n        /* \"#utility.yul\":15491:15502   */\n      dup3\n        /* \"#utility.yul\":15462:15542   */\n      tag_310\n      jump\t// in\n    tag_504:\n        /* \"#utility.yul\":15121:15552   */\n      pop\n      pop\n        /* \"#utility.yul\":15106:15552   */\n    tag_500:\n        /* \"#utility.yul\":15016:15559   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15565:15682   */\n    tag_312:\n        /* \"#utility.yul\":15619:15627   */\n      0x00\n        /* \"#utility.yul\":15669:15674   */\n      dup3\n        /* \"#utility.yul\":15663:15667   */\n      dup3\n        /* \"#utility.yul\":15659:15675   */\n      shr\n        /* \"#utility.yul\":15638:15675   */\n      swap1\n      pop\n        /* \"#utility.yul\":15565:15682   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15688:15857   */\n    tag_313:\n        /* \"#utility.yul\":15732:15738   */\n      0x00\n        /* \"#utility.yul\":15765:15816   */\n      tag_508\n        /* \"#utility.yul\":15813:15814   */\n      0x00\n        /* \"#utility.yul\":15809:15815   */\n      not\n        /* \"#utility.yul\":15801:15806   */\n      dup5\n        /* \"#utility.yul\":15798:15799   */\n      0x08\n        /* \"#utility.yul\":15794:15807   */\n      mul\n        /* \"#utility.yul\":15765:15816   */\n      tag_312\n      jump\t// in\n    tag_508:\n        /* \"#utility.yul\":15761:15817   */\n      not\n        /* \"#utility.yul\":15846:15850   */\n      dup1\n        /* \"#utility.yul\":15840:15844   */\n      dup4\n        /* \"#utility.yul\":15836:15851   */\n      and\n        /* \"#utility.yul\":15826:15851   */\n      swap2\n      pop\n        /* \"#utility.yul\":15739:15857   */\n      pop\n        /* \"#utility.yul\":15688:15857   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15862:16157   */\n    tag_314:\n        /* \"#utility.yul\":15938:15942   */\n      0x00\n        /* \"#utility.yul\":16084:16113   */\n      tag_510\n        /* \"#utility.yul\":16109:16112   */\n      dup4\n        /* \"#utility.yul\":16103:16107   */\n      dup4\n        /* \"#utility.yul\":16084:16113   */\n      tag_313\n      jump\t// in\n    tag_510:\n        /* \"#utility.yul\":16076:16113   */\n      swap2\n      pop\n        /* \"#utility.yul\":16146:16149   */\n      dup3\n        /* \"#utility.yul\":16143:16144   */\n      0x02\n        /* \"#utility.yul\":16139:16150   */\n      mul\n        /* \"#utility.yul\":16133:16137   */\n      dup3\n        /* \"#utility.yul\":16130:16151   */\n      or\n        /* \"#utility.yul\":16122:16151   */\n      swap1\n      pop\n        /* \"#utility.yul\":15862:16157   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16162:17557   */\n    tag_141:\n        /* \"#utility.yul\":16279:16316   */\n      tag_512\n        /* \"#utility.yul\":16312:16315   */\n      dup3\n        /* \"#utility.yul\":16279:16316   */\n      tag_278\n      jump\t// in\n    tag_512:\n        /* \"#utility.yul\":16381:16399   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":16373:16379   */\n      dup2\n        /* \"#utility.yul\":16370:16400   */\n      gt\n        /* \"#utility.yul\":16367:16423   */\n      iszero\n      tag_513\n      jumpi\n        /* \"#utility.yul\":16403:16421   */\n      tag_514\n      tag_286\n      jump\t// in\n    tag_514:\n        /* \"#utility.yul\":16367:16423   */\n    tag_513:\n        /* \"#utility.yul\":16447:16485   */\n      tag_515\n        /* \"#utility.yul\":16479:16483   */\n      dup3\n        /* \"#utility.yul\":16473:16484   */\n      sload\n        /* \"#utility.yul\":16447:16485   */\n      tag_124\n      jump\t// in\n    tag_515:\n        /* \"#utility.yul\":16532:16599   */\n      tag_516\n        /* \"#utility.yul\":16592:16598   */\n      dup3\n        /* \"#utility.yul\":16584:16590   */\n      dup3\n        /* \"#utility.yul\":16578:16582   */\n      dup6\n        /* \"#utility.yul\":16532:16599   */\n      tag_311\n      jump\t// in\n    tag_516:\n        /* \"#utility.yul\":16626:16627   */\n      0x00\n        /* \"#utility.yul\":16650:16654   */\n      0x20\n        /* \"#utility.yul\":16637:16654   */\n      swap1\n      pop\n        /* \"#utility.yul\":16682:16684   */\n      0x1f\n        /* \"#utility.yul\":16674:16680   */\n      dup4\n        /* \"#utility.yul\":16671:16685   */\n      gt\n        /* \"#utility.yul\":16699:16700   */\n      0x01\n        /* \"#utility.yul\":16694:17312   */\n      dup2\n      eq\n      tag_518\n      jumpi\n        /* \"#utility.yul\":17356:17357   */\n      0x00\n        /* \"#utility.yul\":17373:17379   */\n      dup5\n        /* \"#utility.yul\":17370:17447   */\n      iszero\n      tag_519\n      jumpi\n        /* \"#utility.yul\":17422:17431   */\n      dup3\n        /* \"#utility.yul\":17417:17420   */\n      dup8\n        /* \"#utility.yul\":17413:17432   */\n      add\n        /* \"#utility.yul\":17407:17433   */\n      mload\n        /* \"#utility.yul\":17398:17433   */\n      swap1\n      pop\n        /* \"#utility.yul\":17370:17447   */\n    tag_519:\n        /* \"#utility.yul\":17473:17540   */\n      tag_520\n        /* \"#utility.yul\":17533:17539   */\n      dup6\n        /* \"#utility.yul\":17526:17531   */\n      dup3\n        /* \"#utility.yul\":17473:17540   */\n      tag_314\n      jump\t// in\n    tag_520:\n        /* \"#utility.yul\":17467:17471   */\n      dup7\n        /* \"#utility.yul\":17460:17541   */\n      sstore\n        /* \"#utility.yul\":17329:17551   */\n      pop\n        /* \"#utility.yul\":16664:17551   */\n      jump(tag_517)\n        /* \"#utility.yul\":16694:17312   */\n    tag_518:\n        /* \"#utility.yul\":16746:16750   */\n      0x1f\n        /* \"#utility.yul\":16742:16751   */\n      not\n        /* \"#utility.yul\":16734:16740   */\n      dup5\n        /* \"#utility.yul\":16730:16752   */\n      and\n        /* \"#utility.yul\":16780:16817   */\n      tag_521\n        /* \"#utility.yul\":16812:16816   */\n      dup7\n        /* \"#utility.yul\":16780:16817   */\n      tag_300\n      jump\t// in\n    tag_521:\n        /* \"#utility.yul\":16839:16840   */\n      0x00\n        /* \"#utility.yul\":16853:17061   */\n    tag_522:\n        /* \"#utility.yul\":16867:16874   */\n      dup3\n        /* \"#utility.yul\":16864:16865   */\n      dup2\n        /* \"#utility.yul\":16861:16875   */\n      lt\n        /* \"#utility.yul\":16853:17061   */\n      iszero\n      tag_524\n      jumpi\n        /* \"#utility.yul\":16946:16955   */\n      dup5\n        /* \"#utility.yul\":16941:16944   */\n      dup10\n        /* \"#utility.yul\":16937:16956   */\n      add\n        /* \"#utility.yul\":16931:16957   */\n      mload\n        /* \"#utility.yul\":16923:16929   */\n      dup3\n        /* \"#utility.yul\":16916:16958   */\n      sstore\n        /* \"#utility.yul\":16997:16998   */\n      0x01\n        /* \"#utility.yul\":16989:16995   */\n      dup3\n        /* \"#utility.yul\":16985:16999   */\n      add\n        /* \"#utility.yul\":16975:16999   */\n      swap2\n      pop\n        /* \"#utility.yul\":17044:17046   */\n      0x20\n        /* \"#utility.yul\":17033:17042   */\n      dup6\n        /* \"#utility.yul\":17029:17047   */\n      add\n        /* \"#utility.yul\":17016:17047   */\n      swap5\n      pop\n        /* \"#utility.yul\":16890:16894   */\n      0x20\n        /* \"#utility.yul\":16887:16888   */\n      dup2\n        /* \"#utility.yul\":16883:16895   */\n      add\n        /* \"#utility.yul\":16878:16895   */\n      swap1\n      pop\n        /* \"#utility.yul\":16853:17061   */\n      jump(tag_522)\n    tag_524:\n        /* \"#utility.yul\":17089:17095   */\n      dup7\n        /* \"#utility.yul\":17080:17087   */\n      dup4\n        /* \"#utility.yul\":17077:17096   */\n      lt\n        /* \"#utility.yul\":17074:17253   */\n      iszero\n      tag_525\n      jumpi\n        /* \"#utility.yul\":17147:17156   */\n      dup5\n        /* \"#utility.yul\":17142:17145   */\n      dup10\n        /* \"#utility.yul\":17138:17157   */\n      add\n        /* \"#utility.yul\":17132:17158   */\n      mload\n        /* \"#utility.yul\":17190:17238   */\n      tag_526\n        /* \"#utility.yul\":17232:17236   */\n      0x1f\n        /* \"#utility.yul\":17224:17230   */\n      dup10\n        /* \"#utility.yul\":17220:17237   */\n      and\n        /* \"#utility.yul\":17209:17218   */\n      dup3\n        /* \"#utility.yul\":17190:17238   */\n      tag_313\n      jump\t// in\n    tag_526:\n        /* \"#utility.yul\":17182:17188   */\n      dup4\n        /* \"#utility.yul\":17175:17239   */\n      sstore\n        /* \"#utility.yul\":17097:17253   */\n      pop\n        /* \"#utility.yul\":17074:17253   */\n    tag_525:\n        /* \"#utility.yul\":17299:17300   */\n      0x01\n        /* \"#utility.yul\":17295:17296   */\n      0x02\n        /* \"#utility.yul\":17287:17293   */\n      dup9\n        /* \"#utility.yul\":17283:17297   */\n      mul\n        /* \"#utility.yul\":17279:17301   */\n      add\n        /* \"#utility.yul\":17273:17277   */\n      dup9\n        /* \"#utility.yul\":17266:17302   */\n      sstore\n        /* \"#utility.yul\":16701:17312   */\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":16664:17551   */\n    tag_517:\n      pop\n        /* \"#utility.yul\":16254:17557   */\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":16162:17557   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17563:17743   */\n    tag_315:\n        /* \"#utility.yul\":17611:17688   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":17608:17609   */\n      0x00\n        /* \"#utility.yul\":17601:17689   */\n      mstore\n        /* \"#utility.yul\":17708:17712   */\n      0x11\n        /* \"#utility.yul\":17705:17706   */\n      0x04\n        /* \"#utility.yul\":17698:17713   */\n      mstore\n        /* \"#utility.yul\":17732:17736   */\n      0x24\n        /* \"#utility.yul\":17729:17730   */\n      0x00\n        /* \"#utility.yul\":17722:17737   */\n      revert\n        /* \"#utility.yul\":17749:17940   */\n    tag_145:\n        /* \"#utility.yul\":17789:17792   */\n      0x00\n        /* \"#utility.yul\":17808:17828   */\n      tag_529\n        /* \"#utility.yul\":17826:17827   */\n      dup3\n        /* \"#utility.yul\":17808:17828   */\n      tag_270\n      jump\t// in\n    tag_529:\n        /* \"#utility.yul\":17803:17828   */\n      swap2\n      pop\n        /* \"#utility.yul\":17842:17862   */\n      tag_530\n        /* \"#utility.yul\":17860:17861   */\n      dup4\n        /* \"#utility.yul\":17842:17862   */\n      tag_270\n      jump\t// in\n    tag_530:\n        /* \"#utility.yul\":17837:17862   */\n      swap3\n      pop\n        /* \"#utility.yul\":17885:17886   */\n      dup3\n        /* \"#utility.yul\":17882:17883   */\n      dup3\n        /* \"#utility.yul\":17878:17887   */\n      add\n        /* \"#utility.yul\":17871:17887   */\n      swap1\n      pop\n        /* \"#utility.yul\":17906:17909   */\n      dup1\n        /* \"#utility.yul\":17903:17904   */\n      dup3\n        /* \"#utility.yul\":17900:17910   */\n      gt\n        /* \"#utility.yul\":17897:17933   */\n      iszero\n      tag_531\n      jumpi\n        /* \"#utility.yul\":17913:17931   */\n      tag_532\n      tag_315\n      jump\t// in\n    tag_532:\n        /* \"#utility.yul\":17897:17933   */\n    tag_531:\n        /* \"#utility.yul\":17749:17940   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17946:18388   */\n    tag_154:\n        /* \"#utility.yul\":18095:18099   */\n      0x00\n        /* \"#utility.yul\":18133:18135   */\n      0x60\n        /* \"#utility.yul\":18122:18131   */\n      dup3\n        /* \"#utility.yul\":18118:18136   */\n      add\n        /* \"#utility.yul\":18110:18136   */\n      swap1\n      pop\n        /* \"#utility.yul\":18146:18217   */\n      tag_534\n        /* \"#utility.yul\":18214:18215   */\n      0x00\n        /* \"#utility.yul\":18203:18212   */\n      dup4\n        /* \"#utility.yul\":18199:18216   */\n      add\n        /* \"#utility.yul\":18190:18196   */\n      dup7\n        /* \"#utility.yul\":18146:18217   */\n      tag_283\n      jump\t// in\n    tag_534:\n        /* \"#utility.yul\":18227:18299   */\n      tag_535\n        /* \"#utility.yul\":18295:18297   */\n      0x20\n        /* \"#utility.yul\":18284:18293   */\n      dup4\n        /* \"#utility.yul\":18280:18298   */\n      add\n        /* \"#utility.yul\":18271:18277   */\n      dup6\n        /* \"#utility.yul\":18227:18299   */\n      tag_295\n      jump\t// in\n    tag_535:\n        /* \"#utility.yul\":18309:18381   */\n      tag_536\n        /* \"#utility.yul\":18377:18379   */\n      0x40\n        /* \"#utility.yul\":18366:18375   */\n      dup4\n        /* \"#utility.yul\":18362:18380   */\n      add\n        /* \"#utility.yul\":18353:18359   */\n      dup5\n        /* \"#utility.yul\":18309:18381   */\n      tag_283\n      jump\t// in\n    tag_536:\n        /* \"#utility.yul\":17946:18388   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18394:18492   */\n    tag_316:\n        /* \"#utility.yul\":18445:18451   */\n      0x00\n        /* \"#utility.yul\":18479:18484   */\n      dup2\n        /* \"#utility.yul\":18473:18485   */\n      mload\n        /* \"#utility.yul\":18463:18485   */\n      swap1\n      pop\n        /* \"#utility.yul\":18394:18492   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18498:18666   */\n    tag_317:\n        /* \"#utility.yul\":18581:18592   */\n      0x00\n        /* \"#utility.yul\":18615:18621   */\n      dup3\n        /* \"#utility.yul\":18610:18613   */\n      dup3\n        /* \"#utility.yul\":18603:18622   */\n      mstore\n        /* \"#utility.yul\":18655:18659   */\n      0x20\n        /* \"#utility.yul\":18650:18653   */\n      dup3\n        /* \"#utility.yul\":18646:18660   */\n      add\n        /* \"#utility.yul\":18631:18660   */\n      swap1\n      pop\n        /* \"#utility.yul\":18498:18666   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18672:19045   */\n    tag_318:\n        /* \"#utility.yul\":18758:18761   */\n      0x00\n        /* \"#utility.yul\":18786:18824   */\n      tag_540\n        /* \"#utility.yul\":18818:18823   */\n      dup3\n        /* \"#utility.yul\":18786:18824   */\n      tag_316\n      jump\t// in\n    tag_540:\n        /* \"#utility.yul\":18840:18910   */\n      tag_541\n        /* \"#utility.yul\":18903:18909   */\n      dup2\n        /* \"#utility.yul\":18898:18901   */\n      dup6\n        /* \"#utility.yul\":18840:18910   */\n      tag_317\n      jump\t// in\n    tag_541:\n        /* \"#utility.yul\":18833:18910   */\n      swap4\n      pop\n        /* \"#utility.yul\":18919:18984   */\n      tag_542\n        /* \"#utility.yul\":18977:18983   */\n      dup2\n        /* \"#utility.yul\":18972:18975   */\n      dup6\n        /* \"#utility.yul\":18965:18969   */\n      0x20\n        /* \"#utility.yul\":18958:18963   */\n      dup7\n        /* \"#utility.yul\":18954:18970   */\n      add\n        /* \"#utility.yul\":18919:18984   */\n      tag_280\n      jump\t// in\n    tag_542:\n        /* \"#utility.yul\":19009:19038   */\n      tag_543\n        /* \"#utility.yul\":19031:19037   */\n      dup2\n        /* \"#utility.yul\":19009:19038   */\n      tag_281\n      jump\t// in\n    tag_543:\n        /* \"#utility.yul\":19004:19007   */\n      dup5\n        /* \"#utility.yul\":19000:19039   */\n      add\n        /* \"#utility.yul\":18993:19039   */\n      swap2\n      pop\n        /* \"#utility.yul\":18762:19045   */\n      pop\n        /* \"#utility.yul\":18672:19045   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19051:19691   */\n    tag_222:\n        /* \"#utility.yul\":19246:19250   */\n      0x00\n        /* \"#utility.yul\":19284:19287   */\n      0x80\n        /* \"#utility.yul\":19273:19282   */\n      dup3\n        /* \"#utility.yul\":19269:19288   */\n      add\n        /* \"#utility.yul\":19261:19288   */\n      swap1\n      pop\n        /* \"#utility.yul\":19298:19369   */\n      tag_545\n        /* \"#utility.yul\":19366:19367   */\n      0x00\n        /* \"#utility.yul\":19355:19364   */\n      dup4\n        /* \"#utility.yul\":19351:19368   */\n      add\n        /* \"#utility.yul\":19342:19348   */\n      dup8\n        /* \"#utility.yul\":19298:19369   */\n      tag_283\n      jump\t// in\n    tag_545:\n        /* \"#utility.yul\":19379:19451   */\n      tag_546\n        /* \"#utility.yul\":19447:19449   */\n      0x20\n        /* \"#utility.yul\":19436:19445   */\n      dup4\n        /* \"#utility.yul\":19432:19450   */\n      add\n        /* \"#utility.yul\":19423:19429   */\n      dup7\n        /* \"#utility.yul\":19379:19451   */\n      tag_283\n      jump\t// in\n    tag_546:\n        /* \"#utility.yul\":19461:19533   */\n      tag_547\n        /* \"#utility.yul\":19529:19531   */\n      0x40\n        /* \"#utility.yul\":19518:19527   */\n      dup4\n        /* \"#utility.yul\":19514:19532   */\n      add\n        /* \"#utility.yul\":19505:19511   */\n      dup6\n        /* \"#utility.yul\":19461:19533   */\n      tag_295\n      jump\t// in\n    tag_547:\n        /* \"#utility.yul\":19580:19589   */\n      dup2\n        /* \"#utility.yul\":19574:19578   */\n      dup2\n        /* \"#utility.yul\":19570:19590   */\n      sub\n        /* \"#utility.yul\":19565:19567   */\n      0x60\n        /* \"#utility.yul\":19554:19563   */\n      dup4\n        /* \"#utility.yul\":19550:19568   */\n      add\n        /* \"#utility.yul\":19543:19591   */\n      mstore\n        /* \"#utility.yul\":19608:19684   */\n      tag_548\n        /* \"#utility.yul\":19679:19683   */\n      dup2\n        /* \"#utility.yul\":19670:19676   */\n      dup5\n        /* \"#utility.yul\":19608:19684   */\n      tag_318\n      jump\t// in\n    tag_548:\n        /* \"#utility.yul\":19600:19684   */\n      swap1\n      pop\n        /* \"#utility.yul\":19051:19691   */\n      swap6\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19697:19838   */\n    tag_319:\n        /* \"#utility.yul\":19753:19758   */\n      0x00\n        /* \"#utility.yul\":19784:19790   */\n      dup2\n        /* \"#utility.yul\":19778:19791   */\n      mload\n        /* \"#utility.yul\":19769:19791   */\n      swap1\n      pop\n        /* \"#utility.yul\":19800:19832   */\n      tag_550\n        /* \"#utility.yul\":19826:19831   */\n      dup2\n        /* \"#utility.yul\":19800:19832   */\n      tag_274\n      jump\t// in\n    tag_550:\n        /* \"#utility.yul\":19697:19838   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19844:20193   */\n    tag_225:\n        /* \"#utility.yul\":19913:19919   */\n      0x00\n        /* \"#utility.yul\":19962:19964   */\n      0x20\n        /* \"#utility.yul\":19950:19959   */\n      dup3\n        /* \"#utility.yul\":19941:19948   */\n      dup5\n        /* \"#utility.yul\":19937:19960   */\n      sub\n        /* \"#utility.yul\":19933:19965   */\n      slt\n        /* \"#utility.yul\":19930:20049   */\n      iszero\n      tag_552\n      jumpi\n        /* \"#utility.yul\":19968:20047   */\n      tag_553\n      tag_264\n      jump\t// in\n    tag_553:\n        /* \"#utility.yul\":19930:20049   */\n    tag_552:\n        /* \"#utility.yul\":20088:20089   */\n      0x00\n        /* \"#utility.yul\":20113:20176   */\n      tag_554\n        /* \"#utility.yul\":20168:20175   */\n      dup5\n        /* \"#utility.yul\":20159:20165   */\n      dup3\n        /* \"#utility.yul\":20148:20157   */\n      dup6\n        /* \"#utility.yul\":20144:20166   */\n      add\n        /* \"#utility.yul\":20113:20176   */\n      tag_319\n      jump\t// in\n    tag_554:\n        /* \"#utility.yul\":20103:20176   */\n      swap2\n      pop\n        /* \"#utility.yul\":20059:20186   */\n      pop\n        /* \"#utility.yul\":19844:20193   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20199:20531   */\n    tag_256:\n        /* \"#utility.yul\":20320:20324   */\n      0x00\n        /* \"#utility.yul\":20358:20360   */\n      0x40\n        /* \"#utility.yul\":20347:20356   */\n      dup3\n        /* \"#utility.yul\":20343:20361   */\n      add\n        /* \"#utility.yul\":20335:20361   */\n      swap1\n      pop\n        /* \"#utility.yul\":20371:20442   */\n      tag_556\n        /* \"#utility.yul\":20439:20440   */\n      0x00\n        /* \"#utility.yul\":20428:20437   */\n      dup4\n        /* \"#utility.yul\":20424:20441   */\n      add\n        /* \"#utility.yul\":20415:20421   */\n      dup6\n        /* \"#utility.yul\":20371:20442   */\n      tag_283\n      jump\t// in\n    tag_556:\n        /* \"#utility.yul\":20452:20524   */\n      tag_557\n        /* \"#utility.yul\":20520:20522   */\n      0x20\n        /* \"#utility.yul\":20509:20518   */\n      dup4\n        /* \"#utility.yul\":20505:20523   */\n      add\n        /* \"#utility.yul\":20496:20502   */\n      dup5\n        /* \"#utility.yul\":20452:20524   */\n      tag_295\n      jump\t// in\n    tag_557:\n        /* \"#utility.yul\":20199:20531   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220040a895b576195cf9ef6881b00a9fa5b018493424ed5401b95e1b1addd87f8f464736f6c63430008150033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_16": {
									"entryPoint": null,
									"id": 16,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_389": {
									"entryPoint": null,
									"id": 389,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_decode_available_length_t_string_memory_ptr_fromMemory": {
									"entryPoint": 370,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_t_string_memory_ptr_fromMemory": {
									"entryPoint": 444,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory": {
									"entryPoint": 494,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"allocate_memory": {
									"entryPoint": 245,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": 105,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_allocation_size_t_string_memory_ptr": {
									"entryPoint": 275,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_dataslot_t_string_storage": {
									"entryPoint": 732,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 625,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_t_string_storage": {
									"entryPoint": 1041,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"cleanup_t_uint256": {
									"entryPoint": 862,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clear_storage_range_t_bytes1": {
									"entryPoint": 1003,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"convert_t_uint256_to_t_uint256": {
									"entryPoint": 880,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 1192,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 328,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"divide_by_32_ceil": {
									"entryPoint": 750,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 680,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": 1163,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"finalize_allocation": {
									"entryPoint": 191,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"identity": {
									"entryPoint": 871,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"mask_bytes_dynamic": {
									"entryPoint": 1133,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x22": {
									"entryPoint": 635,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 146,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"prepare_store_t_uint256": {
									"entryPoint": 919,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d": {
									"entryPoint": 122,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae": {
									"entryPoint": 126,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": 118,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 114,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 130,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"shift_left_dynamic": {
									"entryPoint": 765,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"shift_right_unsigned_dynamic": {
									"entryPoint": 1121,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"storage_set_to_zero_t_uint256": {
									"entryPoint": 975,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"update_byte_slice_dynamic32": {
									"entryPoint": 777,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"update_storage_value_t_uint256_to_t_uint256": {
									"entryPoint": 928,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"zero_value_for_split_t_uint256": {
									"entryPoint": 971,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:8574:13",
										"nodeType": "YulBlock",
										"src": "0:8574:13",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:13",
													"nodeType": "YulBlock",
													"src": "47:35:13",
													"statements": [
														{
															"nativeSrc": "57:19:13",
															"nodeType": "YulAssignment",
															"src": "57:19:13",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:13",
																		"nodeType": "YulLiteral",
																		"src": "73:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:13"
																},
																"nativeSrc": "67:9:13",
																"nodeType": "YulFunctionCall",
																"src": "67:9:13"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:13"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:13",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:13",
														"nodeType": "YulTypedName",
														"src": "40:6:13",
														"type": ""
													}
												],
												"src": "7:75:13"
											},
											{
												"body": {
													"nativeSrc": "177:28:13",
													"nodeType": "YulBlock",
													"src": "177:28:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:13",
																		"nodeType": "YulLiteral",
																		"src": "194:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:13",
																		"nodeType": "YulLiteral",
																		"src": "197:1:13",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:13"
																},
																"nativeSrc": "187:12:13",
																"nodeType": "YulFunctionCall",
																"src": "187:12:13"
															},
															"nativeSrc": "187:12:13",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:13"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:13",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:13"
											},
											{
												"body": {
													"nativeSrc": "300:28:13",
													"nodeType": "YulBlock",
													"src": "300:28:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:13",
																		"nodeType": "YulLiteral",
																		"src": "317:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:13",
																		"nodeType": "YulLiteral",
																		"src": "320:1:13",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:13"
																},
																"nativeSrc": "310:12:13",
																"nodeType": "YulFunctionCall",
																"src": "310:12:13"
															},
															"nativeSrc": "310:12:13",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:13"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:13",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:13"
											},
											{
												"body": {
													"nativeSrc": "423:28:13",
													"nodeType": "YulBlock",
													"src": "423:28:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "440:1:13",
																		"nodeType": "YulLiteral",
																		"src": "440:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "443:1:13",
																		"nodeType": "YulLiteral",
																		"src": "443:1:13",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "433:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "433:6:13"
																},
																"nativeSrc": "433:12:13",
																"nodeType": "YulFunctionCall",
																"src": "433:12:13"
															},
															"nativeSrc": "433:12:13",
															"nodeType": "YulExpressionStatement",
															"src": "433:12:13"
														}
													]
												},
												"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
												"nativeSrc": "334:117:13",
												"nodeType": "YulFunctionDefinition",
												"src": "334:117:13"
											},
											{
												"body": {
													"nativeSrc": "546:28:13",
													"nodeType": "YulBlock",
													"src": "546:28:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "563:1:13",
																		"nodeType": "YulLiteral",
																		"src": "563:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "566:1:13",
																		"nodeType": "YulLiteral",
																		"src": "566:1:13",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "556:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "556:6:13"
																},
																"nativeSrc": "556:12:13",
																"nodeType": "YulFunctionCall",
																"src": "556:12:13"
															},
															"nativeSrc": "556:12:13",
															"nodeType": "YulExpressionStatement",
															"src": "556:12:13"
														}
													]
												},
												"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
												"nativeSrc": "457:117:13",
												"nodeType": "YulFunctionDefinition",
												"src": "457:117:13"
											},
											{
												"body": {
													"nativeSrc": "628:54:13",
													"nodeType": "YulBlock",
													"src": "628:54:13",
													"statements": [
														{
															"nativeSrc": "638:38:13",
															"nodeType": "YulAssignment",
															"src": "638:38:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "656:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "656:5:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "663:2:13",
																				"nodeType": "YulLiteral",
																				"src": "663:2:13",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "652:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "652:3:13"
																		},
																		"nativeSrc": "652:14:13",
																		"nodeType": "YulFunctionCall",
																		"src": "652:14:13"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "672:2:13",
																				"nodeType": "YulLiteral",
																				"src": "672:2:13",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "668:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "668:3:13"
																		},
																		"nativeSrc": "668:7:13",
																		"nodeType": "YulFunctionCall",
																		"src": "668:7:13"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "648:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "648:3:13"
																},
																"nativeSrc": "648:28:13",
																"nodeType": "YulFunctionCall",
																"src": "648:28:13"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "638:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "638:6:13"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nativeSrc": "580:102:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "611:5:13",
														"nodeType": "YulTypedName",
														"src": "611:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "621:6:13",
														"nodeType": "YulTypedName",
														"src": "621:6:13",
														"type": ""
													}
												],
												"src": "580:102:13"
											},
											{
												"body": {
													"nativeSrc": "716:152:13",
													"nodeType": "YulBlock",
													"src": "716:152:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "733:1:13",
																		"nodeType": "YulLiteral",
																		"src": "733:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "736:77:13",
																		"nodeType": "YulLiteral",
																		"src": "736:77:13",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "726:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "726:6:13"
																},
																"nativeSrc": "726:88:13",
																"nodeType": "YulFunctionCall",
																"src": "726:88:13"
															},
															"nativeSrc": "726:88:13",
															"nodeType": "YulExpressionStatement",
															"src": "726:88:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "830:1:13",
																		"nodeType": "YulLiteral",
																		"src": "830:1:13",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "833:4:13",
																		"nodeType": "YulLiteral",
																		"src": "833:4:13",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "823:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "823:6:13"
																},
																"nativeSrc": "823:15:13",
																"nodeType": "YulFunctionCall",
																"src": "823:15:13"
															},
															"nativeSrc": "823:15:13",
															"nodeType": "YulExpressionStatement",
															"src": "823:15:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "854:1:13",
																		"nodeType": "YulLiteral",
																		"src": "854:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "857:4:13",
																		"nodeType": "YulLiteral",
																		"src": "857:4:13",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "847:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "847:6:13"
																},
																"nativeSrc": "847:15:13",
																"nodeType": "YulFunctionCall",
																"src": "847:15:13"
															},
															"nativeSrc": "847:15:13",
															"nodeType": "YulExpressionStatement",
															"src": "847:15:13"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "688:180:13",
												"nodeType": "YulFunctionDefinition",
												"src": "688:180:13"
											},
											{
												"body": {
													"nativeSrc": "917:238:13",
													"nodeType": "YulBlock",
													"src": "917:238:13",
													"statements": [
														{
															"nativeSrc": "927:58:13",
															"nodeType": "YulVariableDeclaration",
															"src": "927:58:13",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "949:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "949:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "size",
																				"nativeSrc": "979:4:13",
																				"nodeType": "YulIdentifier",
																				"src": "979:4:13"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "957:21:13",
																			"nodeType": "YulIdentifier",
																			"src": "957:21:13"
																		},
																		"nativeSrc": "957:27:13",
																		"nodeType": "YulFunctionCall",
																		"src": "957:27:13"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "945:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "945:3:13"
																},
																"nativeSrc": "945:40:13",
																"nodeType": "YulFunctionCall",
																"src": "945:40:13"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nativeSrc": "931:10:13",
																	"nodeType": "YulTypedName",
																	"src": "931:10:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1096:22:13",
																"nodeType": "YulBlock",
																"src": "1096:22:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "1098:16:13",
																				"nodeType": "YulIdentifier",
																				"src": "1098:16:13"
																			},
																			"nativeSrc": "1098:18:13",
																			"nodeType": "YulFunctionCall",
																			"src": "1098:18:13"
																		},
																		"nativeSrc": "1098:18:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "1098:18:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "1039:10:13",
																				"nodeType": "YulIdentifier",
																				"src": "1039:10:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1051:18:13",
																				"nodeType": "YulLiteral",
																				"src": "1051:18:13",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "1036:2:13",
																			"nodeType": "YulIdentifier",
																			"src": "1036:2:13"
																		},
																		"nativeSrc": "1036:34:13",
																		"nodeType": "YulFunctionCall",
																		"src": "1036:34:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "1075:10:13",
																				"nodeType": "YulIdentifier",
																				"src": "1075:10:13"
																			},
																			{
																				"name": "memPtr",
																				"nativeSrc": "1087:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "1087:6:13"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "1072:2:13",
																			"nodeType": "YulIdentifier",
																			"src": "1072:2:13"
																		},
																		"nativeSrc": "1072:22:13",
																		"nodeType": "YulFunctionCall",
																		"src": "1072:22:13"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "1033:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "1033:2:13"
																},
																"nativeSrc": "1033:62:13",
																"nodeType": "YulFunctionCall",
																"src": "1033:62:13"
															},
															"nativeSrc": "1030:88:13",
															"nodeType": "YulIf",
															"src": "1030:88:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1134:2:13",
																		"nodeType": "YulLiteral",
																		"src": "1134:2:13",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nativeSrc": "1138:10:13",
																		"nodeType": "YulIdentifier",
																		"src": "1138:10:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1127:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "1127:6:13"
																},
																"nativeSrc": "1127:22:13",
																"nodeType": "YulFunctionCall",
																"src": "1127:22:13"
															},
															"nativeSrc": "1127:22:13",
															"nodeType": "YulExpressionStatement",
															"src": "1127:22:13"
														}
													]
												},
												"name": "finalize_allocation",
												"nativeSrc": "874:281:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "903:6:13",
														"nodeType": "YulTypedName",
														"src": "903:6:13",
														"type": ""
													},
													{
														"name": "size",
														"nativeSrc": "911:4:13",
														"nodeType": "YulTypedName",
														"src": "911:4:13",
														"type": ""
													}
												],
												"src": "874:281:13"
											},
											{
												"body": {
													"nativeSrc": "1202:88:13",
													"nodeType": "YulBlock",
													"src": "1202:88:13",
													"statements": [
														{
															"nativeSrc": "1212:30:13",
															"nodeType": "YulAssignment",
															"src": "1212:30:13",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "allocate_unbounded",
																	"nativeSrc": "1222:18:13",
																	"nodeType": "YulIdentifier",
																	"src": "1222:18:13"
																},
																"nativeSrc": "1222:20:13",
																"nodeType": "YulFunctionCall",
																"src": "1222:20:13"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "1212:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "1212:6:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "1271:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "1271:6:13"
																	},
																	{
																		"name": "size",
																		"nativeSrc": "1279:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "1279:4:13"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nativeSrc": "1251:19:13",
																	"nodeType": "YulIdentifier",
																	"src": "1251:19:13"
																},
																"nativeSrc": "1251:33:13",
																"nodeType": "YulFunctionCall",
																"src": "1251:33:13"
															},
															"nativeSrc": "1251:33:13",
															"nodeType": "YulExpressionStatement",
															"src": "1251:33:13"
														}
													]
												},
												"name": "allocate_memory",
												"nativeSrc": "1161:129:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "size",
														"nativeSrc": "1186:4:13",
														"nodeType": "YulTypedName",
														"src": "1186:4:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "1195:6:13",
														"nodeType": "YulTypedName",
														"src": "1195:6:13",
														"type": ""
													}
												],
												"src": "1161:129:13"
											},
											{
												"body": {
													"nativeSrc": "1363:241:13",
													"nodeType": "YulBlock",
													"src": "1363:241:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "1468:22:13",
																"nodeType": "YulBlock",
																"src": "1468:22:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "1470:16:13",
																				"nodeType": "YulIdentifier",
																				"src": "1470:16:13"
																			},
																			"nativeSrc": "1470:18:13",
																			"nodeType": "YulFunctionCall",
																			"src": "1470:18:13"
																		},
																		"nativeSrc": "1470:18:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "1470:18:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "1440:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "1440:6:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1448:18:13",
																		"nodeType": "YulLiteral",
																		"src": "1448:18:13",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "1437:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "1437:2:13"
																},
																"nativeSrc": "1437:30:13",
																"nodeType": "YulFunctionCall",
																"src": "1437:30:13"
															},
															"nativeSrc": "1434:56:13",
															"nodeType": "YulIf",
															"src": "1434:56:13"
														},
														{
															"nativeSrc": "1500:37:13",
															"nodeType": "YulAssignment",
															"src": "1500:37:13",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "1530:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "1530:6:13"
																	}
																],
																"functionName": {
																	"name": "round_up_to_mul_of_32",
																	"nativeSrc": "1508:21:13",
																	"nodeType": "YulIdentifier",
																	"src": "1508:21:13"
																},
																"nativeSrc": "1508:29:13",
																"nodeType": "YulFunctionCall",
																"src": "1508:29:13"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "1500:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "1500:4:13"
																}
															]
														},
														{
															"nativeSrc": "1574:23:13",
															"nodeType": "YulAssignment",
															"src": "1574:23:13",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nativeSrc": "1586:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "1586:4:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1592:4:13",
																		"nodeType": "YulLiteral",
																		"src": "1592:4:13",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1582:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "1582:3:13"
																},
																"nativeSrc": "1582:15:13",
																"nodeType": "YulFunctionCall",
																"src": "1582:15:13"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "1574:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "1574:4:13"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_string_memory_ptr",
												"nativeSrc": "1296:308:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nativeSrc": "1347:6:13",
														"nodeType": "YulTypedName",
														"src": "1347:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nativeSrc": "1358:4:13",
														"nodeType": "YulTypedName",
														"src": "1358:4:13",
														"type": ""
													}
												],
												"src": "1296:308:13"
											},
											{
												"body": {
													"nativeSrc": "1672:184:13",
													"nodeType": "YulBlock",
													"src": "1672:184:13",
													"statements": [
														{
															"nativeSrc": "1682:10:13",
															"nodeType": "YulVariableDeclaration",
															"src": "1682:10:13",
															"value": {
																"kind": "number",
																"nativeSrc": "1691:1:13",
																"nodeType": "YulLiteral",
																"src": "1691:1:13",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nativeSrc": "1686:1:13",
																	"nodeType": "YulTypedName",
																	"src": "1686:1:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1751:63:13",
																"nodeType": "YulBlock",
																"src": "1751:63:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nativeSrc": "1776:3:13",
																							"nodeType": "YulIdentifier",
																							"src": "1776:3:13"
																						},
																						{
																							"name": "i",
																							"nativeSrc": "1781:1:13",
																							"nodeType": "YulIdentifier",
																							"src": "1781:1:13"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "1772:3:13",
																						"nodeType": "YulIdentifier",
																						"src": "1772:3:13"
																					},
																					"nativeSrc": "1772:11:13",
																					"nodeType": "YulFunctionCall",
																					"src": "1772:11:13"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nativeSrc": "1795:3:13",
																									"nodeType": "YulIdentifier",
																									"src": "1795:3:13"
																								},
																								{
																									"name": "i",
																									"nativeSrc": "1800:1:13",
																									"nodeType": "YulIdentifier",
																									"src": "1800:1:13"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "1791:3:13",
																								"nodeType": "YulIdentifier",
																								"src": "1791:3:13"
																							},
																							"nativeSrc": "1791:11:13",
																							"nodeType": "YulFunctionCall",
																							"src": "1791:11:13"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nativeSrc": "1785:5:13",
																						"nodeType": "YulIdentifier",
																						"src": "1785:5:13"
																					},
																					"nativeSrc": "1785:18:13",
																					"nodeType": "YulFunctionCall",
																					"src": "1785:18:13"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "1765:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "1765:6:13"
																			},
																			"nativeSrc": "1765:39:13",
																			"nodeType": "YulFunctionCall",
																			"src": "1765:39:13"
																		},
																		"nativeSrc": "1765:39:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "1765:39:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nativeSrc": "1712:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "1712:1:13"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "1715:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "1715:6:13"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "1709:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "1709:2:13"
																},
																"nativeSrc": "1709:13:13",
																"nodeType": "YulFunctionCall",
																"src": "1709:13:13"
															},
															"nativeSrc": "1701:113:13",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "1723:19:13",
																"nodeType": "YulBlock",
																"src": "1723:19:13",
																"statements": [
																	{
																		"nativeSrc": "1725:15:13",
																		"nodeType": "YulAssignment",
																		"src": "1725:15:13",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nativeSrc": "1734:1:13",
																					"nodeType": "YulIdentifier",
																					"src": "1734:1:13"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1737:2:13",
																					"nodeType": "YulLiteral",
																					"src": "1737:2:13",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "1730:3:13",
																				"nodeType": "YulIdentifier",
																				"src": "1730:3:13"
																			},
																			"nativeSrc": "1730:10:13",
																			"nodeType": "YulFunctionCall",
																			"src": "1730:10:13"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nativeSrc": "1725:1:13",
																				"nodeType": "YulIdentifier",
																				"src": "1725:1:13"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "1705:3:13",
																"nodeType": "YulBlock",
																"src": "1705:3:13",
																"statements": []
															},
															"src": "1701:113:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "1834:3:13",
																				"nodeType": "YulIdentifier",
																				"src": "1834:3:13"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "1839:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "1839:6:13"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1830:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "1830:3:13"
																		},
																		"nativeSrc": "1830:16:13",
																		"nodeType": "YulFunctionCall",
																		"src": "1830:16:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1848:1:13",
																		"nodeType": "YulLiteral",
																		"src": "1848:1:13",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1823:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "1823:6:13"
																},
																"nativeSrc": "1823:27:13",
																"nodeType": "YulFunctionCall",
																"src": "1823:27:13"
															},
															"nativeSrc": "1823:27:13",
															"nodeType": "YulExpressionStatement",
															"src": "1823:27:13"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nativeSrc": "1610:246:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "1654:3:13",
														"nodeType": "YulTypedName",
														"src": "1654:3:13",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "1659:3:13",
														"nodeType": "YulTypedName",
														"src": "1659:3:13",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "1664:6:13",
														"nodeType": "YulTypedName",
														"src": "1664:6:13",
														"type": ""
													}
												],
												"src": "1610:246:13"
											},
											{
												"body": {
													"nativeSrc": "1957:339:13",
													"nodeType": "YulBlock",
													"src": "1957:339:13",
													"statements": [
														{
															"nativeSrc": "1967:75:13",
															"nodeType": "YulAssignment",
															"src": "1967:75:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "2034:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "2034:6:13"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_string_memory_ptr",
																			"nativeSrc": "1992:41:13",
																			"nodeType": "YulIdentifier",
																			"src": "1992:41:13"
																		},
																		"nativeSrc": "1992:49:13",
																		"nodeType": "YulFunctionCall",
																		"src": "1992:49:13"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nativeSrc": "1976:15:13",
																	"nodeType": "YulIdentifier",
																	"src": "1976:15:13"
																},
																"nativeSrc": "1976:66:13",
																"nodeType": "YulFunctionCall",
																"src": "1976:66:13"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "1967:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "1967:5:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "2058:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "2058:5:13"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2065:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "2065:6:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2051:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "2051:6:13"
																},
																"nativeSrc": "2051:21:13",
																"nodeType": "YulFunctionCall",
																"src": "2051:21:13"
															},
															"nativeSrc": "2051:21:13",
															"nodeType": "YulExpressionStatement",
															"src": "2051:21:13"
														},
														{
															"nativeSrc": "2081:27:13",
															"nodeType": "YulVariableDeclaration",
															"src": "2081:27:13",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "2096:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "2096:5:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2103:4:13",
																		"nodeType": "YulLiteral",
																		"src": "2103:4:13",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2092:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "2092:3:13"
																},
																"nativeSrc": "2092:16:13",
																"nodeType": "YulFunctionCall",
																"src": "2092:16:13"
															},
															"variables": [
																{
																	"name": "dst",
																	"nativeSrc": "2085:3:13",
																	"nodeType": "YulTypedName",
																	"src": "2085:3:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "2146:83:13",
																"nodeType": "YulBlock",
																"src": "2146:83:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
																				"nativeSrc": "2148:77:13",
																				"nodeType": "YulIdentifier",
																				"src": "2148:77:13"
																			},
																			"nativeSrc": "2148:79:13",
																			"nodeType": "YulFunctionCall",
																			"src": "2148:79:13"
																		},
																		"nativeSrc": "2148:79:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "2148:79:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nativeSrc": "2127:3:13",
																				"nodeType": "YulIdentifier",
																				"src": "2127:3:13"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "2132:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "2132:6:13"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2123:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "2123:3:13"
																		},
																		"nativeSrc": "2123:16:13",
																		"nodeType": "YulFunctionCall",
																		"src": "2123:16:13"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "2141:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "2141:3:13"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "2120:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "2120:2:13"
																},
																"nativeSrc": "2120:25:13",
																"nodeType": "YulFunctionCall",
																"src": "2120:25:13"
															},
															"nativeSrc": "2117:112:13",
															"nodeType": "YulIf",
															"src": "2117:112:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "2273:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "2273:3:13"
																	},
																	{
																		"name": "dst",
																		"nativeSrc": "2278:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "2278:3:13"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2283:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "2283:6:13"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "2238:34:13",
																	"nodeType": "YulIdentifier",
																	"src": "2238:34:13"
																},
																"nativeSrc": "2238:52:13",
																"nodeType": "YulFunctionCall",
																"src": "2238:52:13"
															},
															"nativeSrc": "2238:52:13",
															"nodeType": "YulExpressionStatement",
															"src": "2238:52:13"
														}
													]
												},
												"name": "abi_decode_available_length_t_string_memory_ptr_fromMemory",
												"nativeSrc": "1862:434:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "1930:3:13",
														"nodeType": "YulTypedName",
														"src": "1930:3:13",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "1935:6:13",
														"nodeType": "YulTypedName",
														"src": "1935:6:13",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "1943:3:13",
														"nodeType": "YulTypedName",
														"src": "1943:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "1951:5:13",
														"nodeType": "YulTypedName",
														"src": "1951:5:13",
														"type": ""
													}
												],
												"src": "1862:434:13"
											},
											{
												"body": {
													"nativeSrc": "2389:282:13",
													"nodeType": "YulBlock",
													"src": "2389:282:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "2438:83:13",
																"nodeType": "YulBlock",
																"src": "2438:83:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nativeSrc": "2440:77:13",
																				"nodeType": "YulIdentifier",
																				"src": "2440:77:13"
																			},
																			"nativeSrc": "2440:79:13",
																			"nodeType": "YulFunctionCall",
																			"src": "2440:79:13"
																		},
																		"nativeSrc": "2440:79:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "2440:79:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "2417:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "2417:6:13"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "2425:4:13",
																						"nodeType": "YulLiteral",
																						"src": "2425:4:13",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2413:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "2413:3:13"
																				},
																				"nativeSrc": "2413:17:13",
																				"nodeType": "YulFunctionCall",
																				"src": "2413:17:13"
																			},
																			{
																				"name": "end",
																				"nativeSrc": "2432:3:13",
																				"nodeType": "YulIdentifier",
																				"src": "2432:3:13"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "2409:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "2409:3:13"
																		},
																		"nativeSrc": "2409:27:13",
																		"nodeType": "YulFunctionCall",
																		"src": "2409:27:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2402:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "2402:6:13"
																},
																"nativeSrc": "2402:35:13",
																"nodeType": "YulFunctionCall",
																"src": "2402:35:13"
															},
															"nativeSrc": "2399:122:13",
															"nodeType": "YulIf",
															"src": "2399:122:13"
														},
														{
															"nativeSrc": "2530:27:13",
															"nodeType": "YulVariableDeclaration",
															"src": "2530:27:13",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2550:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "2550:6:13"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "2544:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "2544:5:13"
																},
																"nativeSrc": "2544:13:13",
																"nodeType": "YulFunctionCall",
																"src": "2544:13:13"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "2534:6:13",
																	"nodeType": "YulTypedName",
																	"src": "2534:6:13",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2566:99:13",
															"nodeType": "YulAssignment",
															"src": "2566:99:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "2638:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "2638:6:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2646:4:13",
																				"nodeType": "YulLiteral",
																				"src": "2646:4:13",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2634:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "2634:3:13"
																		},
																		"nativeSrc": "2634:17:13",
																		"nodeType": "YulFunctionCall",
																		"src": "2634:17:13"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2653:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "2653:6:13"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "2661:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "2661:3:13"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_string_memory_ptr_fromMemory",
																	"nativeSrc": "2575:58:13",
																	"nodeType": "YulIdentifier",
																	"src": "2575:58:13"
																},
																"nativeSrc": "2575:90:13",
																"nodeType": "YulFunctionCall",
																"src": "2575:90:13"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "2566:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "2566:5:13"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_string_memory_ptr_fromMemory",
												"nativeSrc": "2316:355:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2367:6:13",
														"nodeType": "YulTypedName",
														"src": "2367:6:13",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2375:3:13",
														"nodeType": "YulTypedName",
														"src": "2375:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "2383:5:13",
														"nodeType": "YulTypedName",
														"src": "2383:5:13",
														"type": ""
													}
												],
												"src": "2316:355:13"
											},
											{
												"body": {
													"nativeSrc": "2791:739:13",
													"nodeType": "YulBlock",
													"src": "2791:739:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "2837:83:13",
																"nodeType": "YulBlock",
																"src": "2837:83:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "2839:77:13",
																				"nodeType": "YulIdentifier",
																				"src": "2839:77:13"
																			},
																			"nativeSrc": "2839:79:13",
																			"nodeType": "YulFunctionCall",
																			"src": "2839:79:13"
																		},
																		"nativeSrc": "2839:79:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "2839:79:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2812:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "2812:7:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2821:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "2821:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2808:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "2808:3:13"
																		},
																		"nativeSrc": "2808:23:13",
																		"nodeType": "YulFunctionCall",
																		"src": "2808:23:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2833:2:13",
																		"nodeType": "YulLiteral",
																		"src": "2833:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2804:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "2804:3:13"
																},
																"nativeSrc": "2804:32:13",
																"nodeType": "YulFunctionCall",
																"src": "2804:32:13"
															},
															"nativeSrc": "2801:119:13",
															"nodeType": "YulIf",
															"src": "2801:119:13"
														},
														{
															"nativeSrc": "2930:291:13",
															"nodeType": "YulBlock",
															"src": "2930:291:13",
															"statements": [
																{
																	"nativeSrc": "2945:38:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2945:38:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2969:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "2969:9:13"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "2980:1:13",
																						"nodeType": "YulLiteral",
																						"src": "2980:1:13",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2965:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "2965:3:13"
																				},
																				"nativeSrc": "2965:17:13",
																				"nodeType": "YulFunctionCall",
																				"src": "2965:17:13"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "2959:5:13",
																			"nodeType": "YulIdentifier",
																			"src": "2959:5:13"
																		},
																		"nativeSrc": "2959:24:13",
																		"nodeType": "YulFunctionCall",
																		"src": "2959:24:13"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2949:6:13",
																			"nodeType": "YulTypedName",
																			"src": "2949:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "3030:83:13",
																		"nodeType": "YulBlock",
																		"src": "3030:83:13",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "3032:77:13",
																						"nodeType": "YulIdentifier",
																						"src": "3032:77:13"
																					},
																					"nativeSrc": "3032:79:13",
																					"nodeType": "YulFunctionCall",
																					"src": "3032:79:13"
																				},
																				"nativeSrc": "3032:79:13",
																				"nodeType": "YulExpressionStatement",
																				"src": "3032:79:13"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "3002:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "3002:6:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3010:18:13",
																				"nodeType": "YulLiteral",
																				"src": "3010:18:13",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "2999:2:13",
																			"nodeType": "YulIdentifier",
																			"src": "2999:2:13"
																		},
																		"nativeSrc": "2999:30:13",
																		"nodeType": "YulFunctionCall",
																		"src": "2999:30:13"
																	},
																	"nativeSrc": "2996:117:13",
																	"nodeType": "YulIf",
																	"src": "2996:117:13"
																},
																{
																	"nativeSrc": "3127:84:13",
																	"nodeType": "YulAssignment",
																	"src": "3127:84:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3183:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "3183:9:13"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3194:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "3194:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3179:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "3179:3:13"
																				},
																				"nativeSrc": "3179:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "3179:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3203:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "3203:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_string_memory_ptr_fromMemory",
																			"nativeSrc": "3137:41:13",
																			"nodeType": "YulIdentifier",
																			"src": "3137:41:13"
																		},
																		"nativeSrc": "3137:74:13",
																		"nodeType": "YulFunctionCall",
																		"src": "3137:74:13"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "3127:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "3127:6:13"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "3231:292:13",
															"nodeType": "YulBlock",
															"src": "3231:292:13",
															"statements": [
																{
																	"nativeSrc": "3246:39:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3246:39:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3270:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "3270:9:13"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "3281:2:13",
																						"nodeType": "YulLiteral",
																						"src": "3281:2:13",
																						"type": "",
																						"value": "32"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3266:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "3266:3:13"
																				},
																				"nativeSrc": "3266:18:13",
																				"nodeType": "YulFunctionCall",
																				"src": "3266:18:13"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "3260:5:13",
																			"nodeType": "YulIdentifier",
																			"src": "3260:5:13"
																		},
																		"nativeSrc": "3260:25:13",
																		"nodeType": "YulFunctionCall",
																		"src": "3260:25:13"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3250:6:13",
																			"nodeType": "YulTypedName",
																			"src": "3250:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "3332:83:13",
																		"nodeType": "YulBlock",
																		"src": "3332:83:13",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "3334:77:13",
																						"nodeType": "YulIdentifier",
																						"src": "3334:77:13"
																					},
																					"nativeSrc": "3334:79:13",
																					"nodeType": "YulFunctionCall",
																					"src": "3334:79:13"
																				},
																				"nativeSrc": "3334:79:13",
																				"nodeType": "YulExpressionStatement",
																				"src": "3334:79:13"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "3304:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "3304:6:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3312:18:13",
																				"nodeType": "YulLiteral",
																				"src": "3312:18:13",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "3301:2:13",
																			"nodeType": "YulIdentifier",
																			"src": "3301:2:13"
																		},
																		"nativeSrc": "3301:30:13",
																		"nodeType": "YulFunctionCall",
																		"src": "3301:30:13"
																	},
																	"nativeSrc": "3298:117:13",
																	"nodeType": "YulIf",
																	"src": "3298:117:13"
																},
																{
																	"nativeSrc": "3429:84:13",
																	"nodeType": "YulAssignment",
																	"src": "3429:84:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3485:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "3485:9:13"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3496:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "3496:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3481:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "3481:3:13"
																				},
																				"nativeSrc": "3481:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "3481:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3505:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "3505:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_string_memory_ptr_fromMemory",
																			"nativeSrc": "3439:41:13",
																			"nodeType": "YulIdentifier",
																			"src": "3439:41:13"
																		},
																		"nativeSrc": "3439:74:13",
																		"nodeType": "YulFunctionCall",
																		"src": "3439:74:13"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "3429:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "3429:6:13"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory",
												"nativeSrc": "2677:853:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2753:9:13",
														"nodeType": "YulTypedName",
														"src": "2753:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2764:7:13",
														"nodeType": "YulTypedName",
														"src": "2764:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2776:6:13",
														"nodeType": "YulTypedName",
														"src": "2776:6:13",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2784:6:13",
														"nodeType": "YulTypedName",
														"src": "2784:6:13",
														"type": ""
													}
												],
												"src": "2677:853:13"
											},
											{
												"body": {
													"nativeSrc": "3595:40:13",
													"nodeType": "YulBlock",
													"src": "3595:40:13",
													"statements": [
														{
															"nativeSrc": "3606:22:13",
															"nodeType": "YulAssignment",
															"src": "3606:22:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3622:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "3622:5:13"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "3616:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "3616:5:13"
																},
																"nativeSrc": "3616:12:13",
																"nodeType": "YulFunctionCall",
																"src": "3616:12:13"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "3606:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "3606:6:13"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "3536:99:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3578:5:13",
														"nodeType": "YulTypedName",
														"src": "3578:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "3588:6:13",
														"nodeType": "YulTypedName",
														"src": "3588:6:13",
														"type": ""
													}
												],
												"src": "3536:99:13"
											},
											{
												"body": {
													"nativeSrc": "3669:152:13",
													"nodeType": "YulBlock",
													"src": "3669:152:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3686:1:13",
																		"nodeType": "YulLiteral",
																		"src": "3686:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3689:77:13",
																		"nodeType": "YulLiteral",
																		"src": "3689:77:13",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3679:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "3679:6:13"
																},
																"nativeSrc": "3679:88:13",
																"nodeType": "YulFunctionCall",
																"src": "3679:88:13"
															},
															"nativeSrc": "3679:88:13",
															"nodeType": "YulExpressionStatement",
															"src": "3679:88:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3783:1:13",
																		"nodeType": "YulLiteral",
																		"src": "3783:1:13",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3786:4:13",
																		"nodeType": "YulLiteral",
																		"src": "3786:4:13",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3776:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "3776:6:13"
																},
																"nativeSrc": "3776:15:13",
																"nodeType": "YulFunctionCall",
																"src": "3776:15:13"
															},
															"nativeSrc": "3776:15:13",
															"nodeType": "YulExpressionStatement",
															"src": "3776:15:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3807:1:13",
																		"nodeType": "YulLiteral",
																		"src": "3807:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3810:4:13",
																		"nodeType": "YulLiteral",
																		"src": "3810:4:13",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "3800:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "3800:6:13"
																},
																"nativeSrc": "3800:15:13",
																"nodeType": "YulFunctionCall",
																"src": "3800:15:13"
															},
															"nativeSrc": "3800:15:13",
															"nodeType": "YulExpressionStatement",
															"src": "3800:15:13"
														}
													]
												},
												"name": "panic_error_0x22",
												"nativeSrc": "3641:180:13",
												"nodeType": "YulFunctionDefinition",
												"src": "3641:180:13"
											},
											{
												"body": {
													"nativeSrc": "3878:269:13",
													"nodeType": "YulBlock",
													"src": "3878:269:13",
													"statements": [
														{
															"nativeSrc": "3888:22:13",
															"nodeType": "YulAssignment",
															"src": "3888:22:13",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "3902:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "3902:4:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3908:1:13",
																		"nodeType": "YulLiteral",
																		"src": "3908:1:13",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "3898:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "3898:3:13"
																},
																"nativeSrc": "3898:12:13",
																"nodeType": "YulFunctionCall",
																"src": "3898:12:13"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "3888:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "3888:6:13"
																}
															]
														},
														{
															"nativeSrc": "3919:38:13",
															"nodeType": "YulVariableDeclaration",
															"src": "3919:38:13",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "3949:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "3949:4:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3955:1:13",
																		"nodeType": "YulLiteral",
																		"src": "3955:1:13",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "3945:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "3945:3:13"
																},
																"nativeSrc": "3945:12:13",
																"nodeType": "YulFunctionCall",
																"src": "3945:12:13"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "3923:18:13",
																	"nodeType": "YulTypedName",
																	"src": "3923:18:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "3996:51:13",
																"nodeType": "YulBlock",
																"src": "3996:51:13",
																"statements": [
																	{
																		"nativeSrc": "4010:27:13",
																		"nodeType": "YulAssignment",
																		"src": "4010:27:13",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "4024:6:13",
																					"nodeType": "YulIdentifier",
																					"src": "4024:6:13"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4032:4:13",
																					"nodeType": "YulLiteral",
																					"src": "4032:4:13",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "4020:3:13",
																				"nodeType": "YulIdentifier",
																				"src": "4020:3:13"
																			},
																			"nativeSrc": "4020:17:13",
																			"nodeType": "YulFunctionCall",
																			"src": "4020:17:13"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "4010:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "4010:6:13"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "3976:18:13",
																		"nodeType": "YulIdentifier",
																		"src": "3976:18:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "3969:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "3969:6:13"
																},
																"nativeSrc": "3969:26:13",
																"nodeType": "YulFunctionCall",
																"src": "3969:26:13"
															},
															"nativeSrc": "3966:81:13",
															"nodeType": "YulIf",
															"src": "3966:81:13"
														},
														{
															"body": {
																"nativeSrc": "4099:42:13",
																"nodeType": "YulBlock",
																"src": "4099:42:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nativeSrc": "4113:16:13",
																				"nodeType": "YulIdentifier",
																				"src": "4113:16:13"
																			},
																			"nativeSrc": "4113:18:13",
																			"nodeType": "YulFunctionCall",
																			"src": "4113:18:13"
																		},
																		"nativeSrc": "4113:18:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "4113:18:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "4063:18:13",
																		"nodeType": "YulIdentifier",
																		"src": "4063:18:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "4086:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "4086:6:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4094:2:13",
																				"nodeType": "YulLiteral",
																				"src": "4094:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "4083:2:13",
																			"nodeType": "YulIdentifier",
																			"src": "4083:2:13"
																		},
																		"nativeSrc": "4083:14:13",
																		"nodeType": "YulFunctionCall",
																		"src": "4083:14:13"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "4060:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "4060:2:13"
																},
																"nativeSrc": "4060:38:13",
																"nodeType": "YulFunctionCall",
																"src": "4060:38:13"
															},
															"nativeSrc": "4057:84:13",
															"nodeType": "YulIf",
															"src": "4057:84:13"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "3827:320:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "3862:4:13",
														"nodeType": "YulTypedName",
														"src": "3862:4:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "3871:6:13",
														"nodeType": "YulTypedName",
														"src": "3871:6:13",
														"type": ""
													}
												],
												"src": "3827:320:13"
											},
											{
												"body": {
													"nativeSrc": "4207:87:13",
													"nodeType": "YulBlock",
													"src": "4207:87:13",
													"statements": [
														{
															"nativeSrc": "4217:11:13",
															"nodeType": "YulAssignment",
															"src": "4217:11:13",
															"value": {
																"name": "ptr",
																"nativeSrc": "4225:3:13",
																"nodeType": "YulIdentifier",
																"src": "4225:3:13"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "4217:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "4217:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4245:1:13",
																		"nodeType": "YulLiteral",
																		"src": "4245:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nativeSrc": "4248:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "4248:3:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4238:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "4238:6:13"
																},
																"nativeSrc": "4238:14:13",
																"nodeType": "YulFunctionCall",
																"src": "4238:14:13"
															},
															"nativeSrc": "4238:14:13",
															"nodeType": "YulExpressionStatement",
															"src": "4238:14:13"
														},
														{
															"nativeSrc": "4261:26:13",
															"nodeType": "YulAssignment",
															"src": "4261:26:13",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4279:1:13",
																		"nodeType": "YulLiteral",
																		"src": "4279:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4282:4:13",
																		"nodeType": "YulLiteral",
																		"src": "4282:4:13",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "4269:9:13",
																	"nodeType": "YulIdentifier",
																	"src": "4269:9:13"
																},
																"nativeSrc": "4269:18:13",
																"nodeType": "YulFunctionCall",
																"src": "4269:18:13"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "4261:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "4261:4:13"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_string_storage",
												"nativeSrc": "4153:141:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "4194:3:13",
														"nodeType": "YulTypedName",
														"src": "4194:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "4202:4:13",
														"nodeType": "YulTypedName",
														"src": "4202:4:13",
														"type": ""
													}
												],
												"src": "4153:141:13"
											},
											{
												"body": {
													"nativeSrc": "4344:49:13",
													"nodeType": "YulBlock",
													"src": "4344:49:13",
													"statements": [
														{
															"nativeSrc": "4354:33:13",
															"nodeType": "YulAssignment",
															"src": "4354:33:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4372:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "4372:5:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4379:2:13",
																				"nodeType": "YulLiteral",
																				"src": "4379:2:13",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4368:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "4368:3:13"
																		},
																		"nativeSrc": "4368:14:13",
																		"nodeType": "YulFunctionCall",
																		"src": "4368:14:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4384:2:13",
																		"nodeType": "YulLiteral",
																		"src": "4384:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "4364:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "4364:3:13"
																},
																"nativeSrc": "4364:23:13",
																"nodeType": "YulFunctionCall",
																"src": "4364:23:13"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "4354:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "4354:6:13"
																}
															]
														}
													]
												},
												"name": "divide_by_32_ceil",
												"nativeSrc": "4300:93:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4327:5:13",
														"nodeType": "YulTypedName",
														"src": "4327:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "4337:6:13",
														"nodeType": "YulTypedName",
														"src": "4337:6:13",
														"type": ""
													}
												],
												"src": "4300:93:13"
											},
											{
												"body": {
													"nativeSrc": "4452:54:13",
													"nodeType": "YulBlock",
													"src": "4452:54:13",
													"statements": [
														{
															"nativeSrc": "4462:37:13",
															"nodeType": "YulAssignment",
															"src": "4462:37:13",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "4487:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "4487:4:13"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "4493:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "4493:5:13"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nativeSrc": "4483:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "4483:3:13"
																},
																"nativeSrc": "4483:16:13",
																"nodeType": "YulFunctionCall",
																"src": "4483:16:13"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "4462:8:13",
																	"nodeType": "YulIdentifier",
																	"src": "4462:8:13"
																}
															]
														}
													]
												},
												"name": "shift_left_dynamic",
												"nativeSrc": "4399:107:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "4427:4:13",
														"nodeType": "YulTypedName",
														"src": "4427:4:13",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "4433:5:13",
														"nodeType": "YulTypedName",
														"src": "4433:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "4443:8:13",
														"nodeType": "YulTypedName",
														"src": "4443:8:13",
														"type": ""
													}
												],
												"src": "4399:107:13"
											},
											{
												"body": {
													"nativeSrc": "4588:317:13",
													"nodeType": "YulBlock",
													"src": "4588:317:13",
													"statements": [
														{
															"nativeSrc": "4598:35:13",
															"nodeType": "YulVariableDeclaration",
															"src": "4598:35:13",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBytes",
																		"nativeSrc": "4619:10:13",
																		"nodeType": "YulIdentifier",
																		"src": "4619:10:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4631:1:13",
																		"nodeType": "YulLiteral",
																		"src": "4631:1:13",
																		"type": "",
																		"value": "8"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "4615:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "4615:3:13"
																},
																"nativeSrc": "4615:18:13",
																"nodeType": "YulFunctionCall",
																"src": "4615:18:13"
															},
															"variables": [
																{
																	"name": "shiftBits",
																	"nativeSrc": "4602:9:13",
																	"nodeType": "YulTypedName",
																	"src": "4602:9:13",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "4642:109:13",
															"nodeType": "YulVariableDeclaration",
															"src": "4642:109:13",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "4673:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "4673:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4684:66:13",
																		"nodeType": "YulLiteral",
																		"src": "4684:66:13",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "4654:18:13",
																	"nodeType": "YulIdentifier",
																	"src": "4654:18:13"
																},
																"nativeSrc": "4654:97:13",
																"nodeType": "YulFunctionCall",
																"src": "4654:97:13"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "4646:4:13",
																	"nodeType": "YulTypedName",
																	"src": "4646:4:13",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "4760:51:13",
															"nodeType": "YulAssignment",
															"src": "4760:51:13",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "4791:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "4791:9:13"
																	},
																	{
																		"name": "toInsert",
																		"nativeSrc": "4802:8:13",
																		"nodeType": "YulIdentifier",
																		"src": "4802:8:13"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "4772:18:13",
																	"nodeType": "YulIdentifier",
																	"src": "4772:18:13"
																},
																"nativeSrc": "4772:39:13",
																"nodeType": "YulFunctionCall",
																"src": "4772:39:13"
															},
															"variableNames": [
																{
																	"name": "toInsert",
																	"nativeSrc": "4760:8:13",
																	"nodeType": "YulIdentifier",
																	"src": "4760:8:13"
																}
															]
														},
														{
															"nativeSrc": "4820:30:13",
															"nodeType": "YulAssignment",
															"src": "4820:30:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "4833:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "4833:5:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "mask",
																				"nativeSrc": "4844:4:13",
																				"nodeType": "YulIdentifier",
																				"src": "4844:4:13"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "4840:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "4840:3:13"
																		},
																		"nativeSrc": "4840:9:13",
																		"nodeType": "YulFunctionCall",
																		"src": "4840:9:13"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "4829:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "4829:3:13"
																},
																"nativeSrc": "4829:21:13",
																"nodeType": "YulFunctionCall",
																"src": "4829:21:13"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "4820:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "4820:5:13"
																}
															]
														},
														{
															"nativeSrc": "4859:40:13",
															"nodeType": "YulAssignment",
															"src": "4859:40:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "4872:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "4872:5:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "toInsert",
																				"nativeSrc": "4883:8:13",
																				"nodeType": "YulIdentifier",
																				"src": "4883:8:13"
																			},
																			{
																				"name": "mask",
																				"nativeSrc": "4893:4:13",
																				"nodeType": "YulIdentifier",
																				"src": "4893:4:13"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "4879:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "4879:3:13"
																		},
																		"nativeSrc": "4879:19:13",
																		"nodeType": "YulFunctionCall",
																		"src": "4879:19:13"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "4869:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "4869:2:13"
																},
																"nativeSrc": "4869:30:13",
																"nodeType": "YulFunctionCall",
																"src": "4869:30:13"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "4859:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "4859:6:13"
																}
															]
														}
													]
												},
												"name": "update_byte_slice_dynamic32",
												"nativeSrc": "4512:393:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4549:5:13",
														"nodeType": "YulTypedName",
														"src": "4549:5:13",
														"type": ""
													},
													{
														"name": "shiftBytes",
														"nativeSrc": "4556:10:13",
														"nodeType": "YulTypedName",
														"src": "4556:10:13",
														"type": ""
													},
													{
														"name": "toInsert",
														"nativeSrc": "4568:8:13",
														"nodeType": "YulTypedName",
														"src": "4568:8:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "4581:6:13",
														"nodeType": "YulTypedName",
														"src": "4581:6:13",
														"type": ""
													}
												],
												"src": "4512:393:13"
											},
											{
												"body": {
													"nativeSrc": "4956:32:13",
													"nodeType": "YulBlock",
													"src": "4956:32:13",
													"statements": [
														{
															"nativeSrc": "4966:16:13",
															"nodeType": "YulAssignment",
															"src": "4966:16:13",
															"value": {
																"name": "value",
																"nativeSrc": "4977:5:13",
																"nodeType": "YulIdentifier",
																"src": "4977:5:13"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "4966:7:13",
																	"nodeType": "YulIdentifier",
																	"src": "4966:7:13"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "4911:77:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4938:5:13",
														"nodeType": "YulTypedName",
														"src": "4938:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "4948:7:13",
														"nodeType": "YulTypedName",
														"src": "4948:7:13",
														"type": ""
													}
												],
												"src": "4911:77:13"
											},
											{
												"body": {
													"nativeSrc": "5026:28:13",
													"nodeType": "YulBlock",
													"src": "5026:28:13",
													"statements": [
														{
															"nativeSrc": "5036:12:13",
															"nodeType": "YulAssignment",
															"src": "5036:12:13",
															"value": {
																"name": "value",
																"nativeSrc": "5043:5:13",
																"nodeType": "YulIdentifier",
																"src": "5043:5:13"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "5036:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "5036:3:13"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "4994:60:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5012:5:13",
														"nodeType": "YulTypedName",
														"src": "5012:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "5022:3:13",
														"nodeType": "YulTypedName",
														"src": "5022:3:13",
														"type": ""
													}
												],
												"src": "4994:60:13"
											},
											{
												"body": {
													"nativeSrc": "5120:82:13",
													"nodeType": "YulBlock",
													"src": "5120:82:13",
													"statements": [
														{
															"nativeSrc": "5130:66:13",
															"nodeType": "YulAssignment",
															"src": "5130:66:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "5188:5:13",
																						"nodeType": "YulIdentifier",
																						"src": "5188:5:13"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "5170:17:13",
																					"nodeType": "YulIdentifier",
																					"src": "5170:17:13"
																				},
																				"nativeSrc": "5170:24:13",
																				"nodeType": "YulFunctionCall",
																				"src": "5170:24:13"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "5161:8:13",
																			"nodeType": "YulIdentifier",
																			"src": "5161:8:13"
																		},
																		"nativeSrc": "5161:34:13",
																		"nodeType": "YulFunctionCall",
																		"src": "5161:34:13"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "5143:17:13",
																	"nodeType": "YulIdentifier",
																	"src": "5143:17:13"
																},
																"nativeSrc": "5143:53:13",
																"nodeType": "YulFunctionCall",
																"src": "5143:53:13"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "5130:9:13",
																	"nodeType": "YulIdentifier",
																	"src": "5130:9:13"
																}
															]
														}
													]
												},
												"name": "convert_t_uint256_to_t_uint256",
												"nativeSrc": "5060:142:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5100:5:13",
														"nodeType": "YulTypedName",
														"src": "5100:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "5110:9:13",
														"nodeType": "YulTypedName",
														"src": "5110:9:13",
														"type": ""
													}
												],
												"src": "5060:142:13"
											},
											{
												"body": {
													"nativeSrc": "5255:28:13",
													"nodeType": "YulBlock",
													"src": "5255:28:13",
													"statements": [
														{
															"nativeSrc": "5265:12:13",
															"nodeType": "YulAssignment",
															"src": "5265:12:13",
															"value": {
																"name": "value",
																"nativeSrc": "5272:5:13",
																"nodeType": "YulIdentifier",
																"src": "5272:5:13"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "5265:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "5265:3:13"
																}
															]
														}
													]
												},
												"name": "prepare_store_t_uint256",
												"nativeSrc": "5208:75:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5241:5:13",
														"nodeType": "YulTypedName",
														"src": "5241:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "5251:3:13",
														"nodeType": "YulTypedName",
														"src": "5251:3:13",
														"type": ""
													}
												],
												"src": "5208:75:13"
											},
											{
												"body": {
													"nativeSrc": "5365:193:13",
													"nodeType": "YulBlock",
													"src": "5365:193:13",
													"statements": [
														{
															"nativeSrc": "5375:63:13",
															"nodeType": "YulVariableDeclaration",
															"src": "5375:63:13",
															"value": {
																"arguments": [
																	{
																		"name": "value_0",
																		"nativeSrc": "5430:7:13",
																		"nodeType": "YulIdentifier",
																		"src": "5430:7:13"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint256_to_t_uint256",
																	"nativeSrc": "5399:30:13",
																	"nodeType": "YulIdentifier",
																	"src": "5399:30:13"
																},
																"nativeSrc": "5399:39:13",
																"nodeType": "YulFunctionCall",
																"src": "5399:39:13"
															},
															"variables": [
																{
																	"name": "convertedValue_0",
																	"nativeSrc": "5379:16:13",
																	"nodeType": "YulTypedName",
																	"src": "5379:16:13",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "5454:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "5454:4:13"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nativeSrc": "5494:4:13",
																						"nodeType": "YulIdentifier",
																						"src": "5494:4:13"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nativeSrc": "5488:5:13",
																					"nodeType": "YulIdentifier",
																					"src": "5488:5:13"
																				},
																				"nativeSrc": "5488:11:13",
																				"nodeType": "YulFunctionCall",
																				"src": "5488:11:13"
																			},
																			{
																				"name": "offset",
																				"nativeSrc": "5501:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "5501:6:13"
																			},
																			{
																				"arguments": [
																					{
																						"name": "convertedValue_0",
																						"nativeSrc": "5533:16:13",
																						"nodeType": "YulIdentifier",
																						"src": "5533:16:13"
																					}
																				],
																				"functionName": {
																					"name": "prepare_store_t_uint256",
																					"nativeSrc": "5509:23:13",
																					"nodeType": "YulIdentifier",
																					"src": "5509:23:13"
																				},
																				"nativeSrc": "5509:41:13",
																				"nodeType": "YulFunctionCall",
																				"src": "5509:41:13"
																			}
																		],
																		"functionName": {
																			"name": "update_byte_slice_dynamic32",
																			"nativeSrc": "5460:27:13",
																			"nodeType": "YulIdentifier",
																			"src": "5460:27:13"
																		},
																		"nativeSrc": "5460:91:13",
																		"nodeType": "YulFunctionCall",
																		"src": "5460:91:13"
																	}
																],
																"functionName": {
																	"name": "sstore",
																	"nativeSrc": "5447:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "5447:6:13"
																},
																"nativeSrc": "5447:105:13",
																"nodeType": "YulFunctionCall",
																"src": "5447:105:13"
															},
															"nativeSrc": "5447:105:13",
															"nodeType": "YulExpressionStatement",
															"src": "5447:105:13"
														}
													]
												},
												"name": "update_storage_value_t_uint256_to_t_uint256",
												"nativeSrc": "5289:269:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "5342:4:13",
														"nodeType": "YulTypedName",
														"src": "5342:4:13",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "5348:6:13",
														"nodeType": "YulTypedName",
														"src": "5348:6:13",
														"type": ""
													},
													{
														"name": "value_0",
														"nativeSrc": "5356:7:13",
														"nodeType": "YulTypedName",
														"src": "5356:7:13",
														"type": ""
													}
												],
												"src": "5289:269:13"
											},
											{
												"body": {
													"nativeSrc": "5613:24:13",
													"nodeType": "YulBlock",
													"src": "5613:24:13",
													"statements": [
														{
															"nativeSrc": "5623:8:13",
															"nodeType": "YulAssignment",
															"src": "5623:8:13",
															"value": {
																"kind": "number",
																"nativeSrc": "5630:1:13",
																"nodeType": "YulLiteral",
																"src": "5630:1:13",
																"type": "",
																"value": "0"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "5623:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "5623:3:13"
																}
															]
														}
													]
												},
												"name": "zero_value_for_split_t_uint256",
												"nativeSrc": "5564:73:13",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "5609:3:13",
														"nodeType": "YulTypedName",
														"src": "5609:3:13",
														"type": ""
													}
												],
												"src": "5564:73:13"
											},
											{
												"body": {
													"nativeSrc": "5696:136:13",
													"nodeType": "YulBlock",
													"src": "5696:136:13",
													"statements": [
														{
															"nativeSrc": "5706:46:13",
															"nodeType": "YulVariableDeclaration",
															"src": "5706:46:13",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "zero_value_for_split_t_uint256",
																	"nativeSrc": "5720:30:13",
																	"nodeType": "YulIdentifier",
																	"src": "5720:30:13"
																},
																"nativeSrc": "5720:32:13",
																"nodeType": "YulFunctionCall",
																"src": "5720:32:13"
															},
															"variables": [
																{
																	"name": "zero_0",
																	"nativeSrc": "5710:6:13",
																	"nodeType": "YulTypedName",
																	"src": "5710:6:13",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "5805:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "5805:4:13"
																	},
																	{
																		"name": "offset",
																		"nativeSrc": "5811:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "5811:6:13"
																	},
																	{
																		"name": "zero_0",
																		"nativeSrc": "5819:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "5819:6:13"
																	}
																],
																"functionName": {
																	"name": "update_storage_value_t_uint256_to_t_uint256",
																	"nativeSrc": "5761:43:13",
																	"nodeType": "YulIdentifier",
																	"src": "5761:43:13"
																},
																"nativeSrc": "5761:65:13",
																"nodeType": "YulFunctionCall",
																"src": "5761:65:13"
															},
															"nativeSrc": "5761:65:13",
															"nodeType": "YulExpressionStatement",
															"src": "5761:65:13"
														}
													]
												},
												"name": "storage_set_to_zero_t_uint256",
												"nativeSrc": "5643:189:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "5682:4:13",
														"nodeType": "YulTypedName",
														"src": "5682:4:13",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "5688:6:13",
														"nodeType": "YulTypedName",
														"src": "5688:6:13",
														"type": ""
													}
												],
												"src": "5643:189:13"
											},
											{
												"body": {
													"nativeSrc": "5888:136:13",
													"nodeType": "YulBlock",
													"src": "5888:136:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "5955:63:13",
																"nodeType": "YulBlock",
																"src": "5955:63:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "5999:5:13",
																					"nodeType": "YulIdentifier",
																					"src": "5999:5:13"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "6006:1:13",
																					"nodeType": "YulLiteral",
																					"src": "6006:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "storage_set_to_zero_t_uint256",
																				"nativeSrc": "5969:29:13",
																				"nodeType": "YulIdentifier",
																				"src": "5969:29:13"
																			},
																			"nativeSrc": "5969:39:13",
																			"nodeType": "YulFunctionCall",
																			"src": "5969:39:13"
																		},
																		"nativeSrc": "5969:39:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "5969:39:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "start",
																		"nativeSrc": "5908:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "5908:5:13"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "5915:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "5915:3:13"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "5905:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "5905:2:13"
																},
																"nativeSrc": "5905:14:13",
																"nodeType": "YulFunctionCall",
																"src": "5905:14:13"
															},
															"nativeSrc": "5898:120:13",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "5920:26:13",
																"nodeType": "YulBlock",
																"src": "5920:26:13",
																"statements": [
																	{
																		"nativeSrc": "5922:22:13",
																		"nodeType": "YulAssignment",
																		"src": "5922:22:13",
																		"value": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "5935:5:13",
																					"nodeType": "YulIdentifier",
																					"src": "5935:5:13"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "5942:1:13",
																					"nodeType": "YulLiteral",
																					"src": "5942:1:13",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "5931:3:13",
																				"nodeType": "YulIdentifier",
																				"src": "5931:3:13"
																			},
																			"nativeSrc": "5931:13:13",
																			"nodeType": "YulFunctionCall",
																			"src": "5931:13:13"
																		},
																		"variableNames": [
																			{
																				"name": "start",
																				"nativeSrc": "5922:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "5922:5:13"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "5902:2:13",
																"nodeType": "YulBlock",
																"src": "5902:2:13",
																"statements": []
															},
															"src": "5898:120:13"
														}
													]
												},
												"name": "clear_storage_range_t_bytes1",
												"nativeSrc": "5838:186:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "start",
														"nativeSrc": "5876:5:13",
														"nodeType": "YulTypedName",
														"src": "5876:5:13",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "5883:3:13",
														"nodeType": "YulTypedName",
														"src": "5883:3:13",
														"type": ""
													}
												],
												"src": "5838:186:13"
											},
											{
												"body": {
													"nativeSrc": "6109:464:13",
													"nodeType": "YulBlock",
													"src": "6109:464:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "6135:431:13",
																"nodeType": "YulBlock",
																"src": "6135:431:13",
																"statements": [
																	{
																		"nativeSrc": "6149:54:13",
																		"nodeType": "YulVariableDeclaration",
																		"src": "6149:54:13",
																		"value": {
																			"arguments": [
																				{
																					"name": "array",
																					"nativeSrc": "6197:5:13",
																					"nodeType": "YulIdentifier",
																					"src": "6197:5:13"
																				}
																			],
																			"functionName": {
																				"name": "array_dataslot_t_string_storage",
																				"nativeSrc": "6165:31:13",
																				"nodeType": "YulIdentifier",
																				"src": "6165:31:13"
																			},
																			"nativeSrc": "6165:38:13",
																			"nodeType": "YulFunctionCall",
																			"src": "6165:38:13"
																		},
																		"variables": [
																			{
																				"name": "dataArea",
																				"nativeSrc": "6153:8:13",
																				"nodeType": "YulTypedName",
																				"src": "6153:8:13",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "6216:63:13",
																		"nodeType": "YulVariableDeclaration",
																		"src": "6216:63:13",
																		"value": {
																			"arguments": [
																				{
																					"name": "dataArea",
																					"nativeSrc": "6239:8:13",
																					"nodeType": "YulIdentifier",
																					"src": "6239:8:13"
																				},
																				{
																					"arguments": [
																						{
																							"name": "startIndex",
																							"nativeSrc": "6267:10:13",
																							"nodeType": "YulIdentifier",
																							"src": "6267:10:13"
																						}
																					],
																					"functionName": {
																						"name": "divide_by_32_ceil",
																						"nativeSrc": "6249:17:13",
																						"nodeType": "YulIdentifier",
																						"src": "6249:17:13"
																					},
																					"nativeSrc": "6249:29:13",
																					"nodeType": "YulFunctionCall",
																					"src": "6249:29:13"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "6235:3:13",
																				"nodeType": "YulIdentifier",
																				"src": "6235:3:13"
																			},
																			"nativeSrc": "6235:44:13",
																			"nodeType": "YulFunctionCall",
																			"src": "6235:44:13"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nativeSrc": "6220:11:13",
																				"nodeType": "YulTypedName",
																				"src": "6220:11:13",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "6436:27:13",
																			"nodeType": "YulBlock",
																			"src": "6436:27:13",
																			"statements": [
																				{
																					"nativeSrc": "6438:23:13",
																					"nodeType": "YulAssignment",
																					"src": "6438:23:13",
																					"value": {
																						"name": "dataArea",
																						"nativeSrc": "6453:8:13",
																						"nodeType": "YulIdentifier",
																						"src": "6453:8:13"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nativeSrc": "6438:11:13",
																							"nodeType": "YulIdentifier",
																							"src": "6438:11:13"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nativeSrc": "6420:10:13",
																					"nodeType": "YulIdentifier",
																					"src": "6420:10:13"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "6432:2:13",
																					"nodeType": "YulLiteral",
																					"src": "6432:2:13",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "6417:2:13",
																				"nodeType": "YulIdentifier",
																				"src": "6417:2:13"
																			},
																			"nativeSrc": "6417:18:13",
																			"nodeType": "YulFunctionCall",
																			"src": "6417:18:13"
																		},
																		"nativeSrc": "6414:49:13",
																		"nodeType": "YulIf",
																		"src": "6414:49:13"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "deleteStart",
																					"nativeSrc": "6505:11:13",
																					"nodeType": "YulIdentifier",
																					"src": "6505:11:13"
																				},
																				{
																					"arguments": [
																						{
																							"name": "dataArea",
																							"nativeSrc": "6522:8:13",
																							"nodeType": "YulIdentifier",
																							"src": "6522:8:13"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nativeSrc": "6550:3:13",
																									"nodeType": "YulIdentifier",
																									"src": "6550:3:13"
																								}
																							],
																							"functionName": {
																								"name": "divide_by_32_ceil",
																								"nativeSrc": "6532:17:13",
																								"nodeType": "YulIdentifier",
																								"src": "6532:17:13"
																							},
																							"nativeSrc": "6532:22:13",
																							"nodeType": "YulFunctionCall",
																							"src": "6532:22:13"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "6518:3:13",
																						"nodeType": "YulIdentifier",
																						"src": "6518:3:13"
																					},
																					"nativeSrc": "6518:37:13",
																					"nodeType": "YulFunctionCall",
																					"src": "6518:37:13"
																				}
																			],
																			"functionName": {
																				"name": "clear_storage_range_t_bytes1",
																				"nativeSrc": "6476:28:13",
																				"nodeType": "YulIdentifier",
																				"src": "6476:28:13"
																			},
																			"nativeSrc": "6476:80:13",
																			"nodeType": "YulFunctionCall",
																			"src": "6476:80:13"
																		},
																		"nativeSrc": "6476:80:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "6476:80:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nativeSrc": "6126:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "6126:3:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6131:2:13",
																		"nodeType": "YulLiteral",
																		"src": "6131:2:13",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "6123:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "6123:2:13"
																},
																"nativeSrc": "6123:11:13",
																"nodeType": "YulFunctionCall",
																"src": "6123:11:13"
															},
															"nativeSrc": "6120:446:13",
															"nodeType": "YulIf",
															"src": "6120:446:13"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_t_string_storage",
												"nativeSrc": "6030:543:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nativeSrc": "6085:5:13",
														"nodeType": "YulTypedName",
														"src": "6085:5:13",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "6092:3:13",
														"nodeType": "YulTypedName",
														"src": "6092:3:13",
														"type": ""
													},
													{
														"name": "startIndex",
														"nativeSrc": "6097:10:13",
														"nodeType": "YulTypedName",
														"src": "6097:10:13",
														"type": ""
													}
												],
												"src": "6030:543:13"
											},
											{
												"body": {
													"nativeSrc": "6642:54:13",
													"nodeType": "YulBlock",
													"src": "6642:54:13",
													"statements": [
														{
															"nativeSrc": "6652:37:13",
															"nodeType": "YulAssignment",
															"src": "6652:37:13",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "6677:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "6677:4:13"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "6683:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "6683:5:13"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "6673:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "6673:3:13"
																},
																"nativeSrc": "6673:16:13",
																"nodeType": "YulFunctionCall",
																"src": "6673:16:13"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "6652:8:13",
																	"nodeType": "YulIdentifier",
																	"src": "6652:8:13"
																}
															]
														}
													]
												},
												"name": "shift_right_unsigned_dynamic",
												"nativeSrc": "6579:117:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "6617:4:13",
														"nodeType": "YulTypedName",
														"src": "6617:4:13",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "6623:5:13",
														"nodeType": "YulTypedName",
														"src": "6623:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "6633:8:13",
														"nodeType": "YulTypedName",
														"src": "6633:8:13",
														"type": ""
													}
												],
												"src": "6579:117:13"
											},
											{
												"body": {
													"nativeSrc": "6753:118:13",
													"nodeType": "YulBlock",
													"src": "6753:118:13",
													"statements": [
														{
															"nativeSrc": "6763:68:13",
															"nodeType": "YulVariableDeclaration",
															"src": "6763:68:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "6812:1:13",
																						"nodeType": "YulLiteral",
																						"src": "6812:1:13",
																						"type": "",
																						"value": "8"
																					},
																					{
																						"name": "bytes",
																						"nativeSrc": "6815:5:13",
																						"nodeType": "YulIdentifier",
																						"src": "6815:5:13"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nativeSrc": "6808:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "6808:3:13"
																				},
																				"nativeSrc": "6808:13:13",
																				"nodeType": "YulFunctionCall",
																				"src": "6808:13:13"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "6827:1:13",
																						"nodeType": "YulLiteral",
																						"src": "6827:1:13",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "6823:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "6823:3:13"
																				},
																				"nativeSrc": "6823:6:13",
																				"nodeType": "YulFunctionCall",
																				"src": "6823:6:13"
																			}
																		],
																		"functionName": {
																			"name": "shift_right_unsigned_dynamic",
																			"nativeSrc": "6779:28:13",
																			"nodeType": "YulIdentifier",
																			"src": "6779:28:13"
																		},
																		"nativeSrc": "6779:51:13",
																		"nodeType": "YulFunctionCall",
																		"src": "6779:51:13"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nativeSrc": "6775:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "6775:3:13"
																},
																"nativeSrc": "6775:56:13",
																"nodeType": "YulFunctionCall",
																"src": "6775:56:13"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "6767:4:13",
																	"nodeType": "YulTypedName",
																	"src": "6767:4:13",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "6840:25:13",
															"nodeType": "YulAssignment",
															"src": "6840:25:13",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "6854:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "6854:4:13"
																	},
																	{
																		"name": "mask",
																		"nativeSrc": "6860:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "6860:4:13"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "6850:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "6850:3:13"
																},
																"nativeSrc": "6850:15:13",
																"nodeType": "YulFunctionCall",
																"src": "6850:15:13"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "6840:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "6840:6:13"
																}
															]
														}
													]
												},
												"name": "mask_bytes_dynamic",
												"nativeSrc": "6702:169:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "6730:4:13",
														"nodeType": "YulTypedName",
														"src": "6730:4:13",
														"type": ""
													},
													{
														"name": "bytes",
														"nativeSrc": "6736:5:13",
														"nodeType": "YulTypedName",
														"src": "6736:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "6746:6:13",
														"nodeType": "YulTypedName",
														"src": "6746:6:13",
														"type": ""
													}
												],
												"src": "6702:169:13"
											},
											{
												"body": {
													"nativeSrc": "6957:214:13",
													"nodeType": "YulBlock",
													"src": "6957:214:13",
													"statements": [
														{
															"nativeSrc": "7090:37:13",
															"nodeType": "YulAssignment",
															"src": "7090:37:13",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "7117:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "7117:4:13"
																	},
																	{
																		"name": "len",
																		"nativeSrc": "7123:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "7123:3:13"
																	}
																],
																"functionName": {
																	"name": "mask_bytes_dynamic",
																	"nativeSrc": "7098:18:13",
																	"nodeType": "YulIdentifier",
																	"src": "7098:18:13"
																},
																"nativeSrc": "7098:29:13",
																"nodeType": "YulFunctionCall",
																"src": "7098:29:13"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "7090:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "7090:4:13"
																}
															]
														},
														{
															"nativeSrc": "7136:29:13",
															"nodeType": "YulAssignment",
															"src": "7136:29:13",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "7147:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "7147:4:13"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "7157:1:13",
																				"nodeType": "YulLiteral",
																				"src": "7157:1:13",
																				"type": "",
																				"value": "2"
																			},
																			{
																				"name": "len",
																				"nativeSrc": "7160:3:13",
																				"nodeType": "YulIdentifier",
																				"src": "7160:3:13"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nativeSrc": "7153:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "7153:3:13"
																		},
																		"nativeSrc": "7153:11:13",
																		"nodeType": "YulFunctionCall",
																		"src": "7153:11:13"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "7144:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "7144:2:13"
																},
																"nativeSrc": "7144:21:13",
																"nodeType": "YulFunctionCall",
																"src": "7144:21:13"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nativeSrc": "7136:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "7136:4:13"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nativeSrc": "6876:295:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "6938:4:13",
														"nodeType": "YulTypedName",
														"src": "6938:4:13",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "6944:3:13",
														"nodeType": "YulTypedName",
														"src": "6944:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nativeSrc": "6952:4:13",
														"nodeType": "YulTypedName",
														"src": "6952:4:13",
														"type": ""
													}
												],
												"src": "6876:295:13"
											},
											{
												"body": {
													"nativeSrc": "7268:1303:13",
													"nodeType": "YulBlock",
													"src": "7268:1303:13",
													"statements": [
														{
															"nativeSrc": "7279:51:13",
															"nodeType": "YulVariableDeclaration",
															"src": "7279:51:13",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "7326:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "7326:3:13"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "7293:32:13",
																	"nodeType": "YulIdentifier",
																	"src": "7293:32:13"
																},
																"nativeSrc": "7293:37:13",
																"nodeType": "YulFunctionCall",
																"src": "7293:37:13"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nativeSrc": "7283:6:13",
																	"nodeType": "YulTypedName",
																	"src": "7283:6:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "7415:22:13",
																"nodeType": "YulBlock",
																"src": "7415:22:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "7417:16:13",
																				"nodeType": "YulIdentifier",
																				"src": "7417:16:13"
																			},
																			"nativeSrc": "7417:18:13",
																			"nodeType": "YulFunctionCall",
																			"src": "7417:18:13"
																		},
																		"nativeSrc": "7417:18:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "7417:18:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "7387:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "7387:6:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7395:18:13",
																		"nodeType": "YulLiteral",
																		"src": "7395:18:13",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "7384:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "7384:2:13"
																},
																"nativeSrc": "7384:30:13",
																"nodeType": "YulFunctionCall",
																"src": "7384:30:13"
															},
															"nativeSrc": "7381:56:13",
															"nodeType": "YulIf",
															"src": "7381:56:13"
														},
														{
															"nativeSrc": "7447:52:13",
															"nodeType": "YulVariableDeclaration",
															"src": "7447:52:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "slot",
																				"nativeSrc": "7493:4:13",
																				"nodeType": "YulIdentifier",
																				"src": "7493:4:13"
																			}
																		],
																		"functionName": {
																			"name": "sload",
																			"nativeSrc": "7487:5:13",
																			"nodeType": "YulIdentifier",
																			"src": "7487:5:13"
																		},
																		"nativeSrc": "7487:11:13",
																		"nodeType": "YulFunctionCall",
																		"src": "7487:11:13"
																	}
																],
																"functionName": {
																	"name": "extract_byte_array_length",
																	"nativeSrc": "7461:25:13",
																	"nodeType": "YulIdentifier",
																	"src": "7461:25:13"
																},
																"nativeSrc": "7461:38:13",
																"nodeType": "YulFunctionCall",
																"src": "7461:38:13"
															},
															"variables": [
																{
																	"name": "oldLen",
																	"nativeSrc": "7451:6:13",
																	"nodeType": "YulTypedName",
																	"src": "7451:6:13",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "7592:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "7592:4:13"
																	},
																	{
																		"name": "oldLen",
																		"nativeSrc": "7598:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "7598:6:13"
																	},
																	{
																		"name": "newLen",
																		"nativeSrc": "7606:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "7606:6:13"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_t_string_storage",
																	"nativeSrc": "7546:45:13",
																	"nodeType": "YulIdentifier",
																	"src": "7546:45:13"
																},
																"nativeSrc": "7546:67:13",
																"nodeType": "YulFunctionCall",
																"src": "7546:67:13"
															},
															"nativeSrc": "7546:67:13",
															"nodeType": "YulExpressionStatement",
															"src": "7546:67:13"
														},
														{
															"nativeSrc": "7623:18:13",
															"nodeType": "YulVariableDeclaration",
															"src": "7623:18:13",
															"value": {
																"kind": "number",
																"nativeSrc": "7640:1:13",
																"nodeType": "YulLiteral",
																"src": "7640:1:13",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "7627:9:13",
																	"nodeType": "YulTypedName",
																	"src": "7627:9:13",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "7651:17:13",
															"nodeType": "YulAssignment",
															"src": "7651:17:13",
															"value": {
																"kind": "number",
																"nativeSrc": "7664:4:13",
																"nodeType": "YulLiteral",
																"src": "7664:4:13",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "7651:9:13",
																	"nodeType": "YulIdentifier",
																	"src": "7651:9:13"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "7715:611:13",
																		"nodeType": "YulBlock",
																		"src": "7715:611:13",
																		"statements": [
																			{
																				"nativeSrc": "7729:37:13",
																				"nodeType": "YulVariableDeclaration",
																				"src": "7729:37:13",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nativeSrc": "7748:6:13",
																							"nodeType": "YulIdentifier",
																							"src": "7748:6:13"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "7760:4:13",
																									"nodeType": "YulLiteral",
																									"src": "7760:4:13",
																									"type": "",
																									"value": "0x1f"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nativeSrc": "7756:3:13",
																								"nodeType": "YulIdentifier",
																								"src": "7756:3:13"
																							},
																							"nativeSrc": "7756:9:13",
																							"nodeType": "YulFunctionCall",
																							"src": "7756:9:13"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nativeSrc": "7744:3:13",
																						"nodeType": "YulIdentifier",
																						"src": "7744:3:13"
																					},
																					"nativeSrc": "7744:22:13",
																					"nodeType": "YulFunctionCall",
																					"src": "7744:22:13"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nativeSrc": "7733:7:13",
																						"nodeType": "YulTypedName",
																						"src": "7733:7:13",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "7780:51:13",
																				"nodeType": "YulVariableDeclaration",
																				"src": "7780:51:13",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "7826:4:13",
																							"nodeType": "YulIdentifier",
																							"src": "7826:4:13"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_t_string_storage",
																						"nativeSrc": "7794:31:13",
																						"nodeType": "YulIdentifier",
																						"src": "7794:31:13"
																					},
																					"nativeSrc": "7794:37:13",
																					"nodeType": "YulFunctionCall",
																					"src": "7794:37:13"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nativeSrc": "7784:6:13",
																						"nodeType": "YulTypedName",
																						"src": "7784:6:13",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "7844:10:13",
																				"nodeType": "YulVariableDeclaration",
																				"src": "7844:10:13",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "7853:1:13",
																					"nodeType": "YulLiteral",
																					"src": "7853:1:13",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nativeSrc": "7848:1:13",
																						"nodeType": "YulTypedName",
																						"src": "7848:1:13",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "7912:163:13",
																					"nodeType": "YulBlock",
																					"src": "7912:163:13",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "7937:6:13",
																										"nodeType": "YulIdentifier",
																										"src": "7937:6:13"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nativeSrc": "7955:3:13",
																														"nodeType": "YulIdentifier",
																														"src": "7955:3:13"
																													},
																													{
																														"name": "srcOffset",
																														"nativeSrc": "7960:9:13",
																														"nodeType": "YulIdentifier",
																														"src": "7960:9:13"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nativeSrc": "7951:3:13",
																													"nodeType": "YulIdentifier",
																													"src": "7951:3:13"
																												},
																												"nativeSrc": "7951:19:13",
																												"nodeType": "YulFunctionCall",
																												"src": "7951:19:13"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nativeSrc": "7945:5:13",
																											"nodeType": "YulIdentifier",
																											"src": "7945:5:13"
																										},
																										"nativeSrc": "7945:26:13",
																										"nodeType": "YulFunctionCall",
																										"src": "7945:26:13"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "7930:6:13",
																									"nodeType": "YulIdentifier",
																									"src": "7930:6:13"
																								},
																								"nativeSrc": "7930:42:13",
																								"nodeType": "YulFunctionCall",
																								"src": "7930:42:13"
																							},
																							"nativeSrc": "7930:42:13",
																							"nodeType": "YulExpressionStatement",
																							"src": "7930:42:13"
																						},
																						{
																							"nativeSrc": "7989:24:13",
																							"nodeType": "YulAssignment",
																							"src": "7989:24:13",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "8003:6:13",
																										"nodeType": "YulIdentifier",
																										"src": "8003:6:13"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "8011:1:13",
																										"nodeType": "YulLiteral",
																										"src": "8011:1:13",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "7999:3:13",
																									"nodeType": "YulIdentifier",
																									"src": "7999:3:13"
																								},
																								"nativeSrc": "7999:14:13",
																								"nodeType": "YulFunctionCall",
																								"src": "7999:14:13"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nativeSrc": "7989:6:13",
																									"nodeType": "YulIdentifier",
																									"src": "7989:6:13"
																								}
																							]
																						},
																						{
																							"nativeSrc": "8030:31:13",
																							"nodeType": "YulAssignment",
																							"src": "8030:31:13",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nativeSrc": "8047:9:13",
																										"nodeType": "YulIdentifier",
																										"src": "8047:9:13"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "8058:2:13",
																										"nodeType": "YulLiteral",
																										"src": "8058:2:13",
																										"type": "",
																										"value": "32"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "8043:3:13",
																									"nodeType": "YulIdentifier",
																									"src": "8043:3:13"
																								},
																								"nativeSrc": "8043:18:13",
																								"nodeType": "YulFunctionCall",
																								"src": "8043:18:13"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nativeSrc": "8030:9:13",
																									"nodeType": "YulIdentifier",
																									"src": "8030:9:13"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nativeSrc": "7878:1:13",
																							"nodeType": "YulIdentifier",
																							"src": "7878:1:13"
																						},
																						{
																							"name": "loopEnd",
																							"nativeSrc": "7881:7:13",
																							"nodeType": "YulIdentifier",
																							"src": "7881:7:13"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "7875:2:13",
																						"nodeType": "YulIdentifier",
																						"src": "7875:2:13"
																					},
																					"nativeSrc": "7875:14:13",
																					"nodeType": "YulFunctionCall",
																					"src": "7875:14:13"
																				},
																				"nativeSrc": "7867:208:13",
																				"nodeType": "YulForLoop",
																				"post": {
																					"nativeSrc": "7890:21:13",
																					"nodeType": "YulBlock",
																					"src": "7890:21:13",
																					"statements": [
																						{
																							"nativeSrc": "7892:17:13",
																							"nodeType": "YulAssignment",
																							"src": "7892:17:13",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nativeSrc": "7901:1:13",
																										"nodeType": "YulIdentifier",
																										"src": "7901:1:13"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "7904:4:13",
																										"nodeType": "YulLiteral",
																										"src": "7904:4:13",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "7897:3:13",
																									"nodeType": "YulIdentifier",
																									"src": "7897:3:13"
																								},
																								"nativeSrc": "7897:12:13",
																								"nodeType": "YulFunctionCall",
																								"src": "7897:12:13"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nativeSrc": "7892:1:13",
																									"nodeType": "YulIdentifier",
																									"src": "7892:1:13"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nativeSrc": "7871:3:13",
																					"nodeType": "YulBlock",
																					"src": "7871:3:13",
																					"statements": []
																				},
																				"src": "7867:208:13"
																			},
																			{
																				"body": {
																					"nativeSrc": "8111:156:13",
																					"nodeType": "YulBlock",
																					"src": "8111:156:13",
																					"statements": [
																						{
																							"nativeSrc": "8129:43:13",
																							"nodeType": "YulVariableDeclaration",
																							"src": "8129:43:13",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "8156:3:13",
																												"nodeType": "YulIdentifier",
																												"src": "8156:3:13"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "8161:9:13",
																												"nodeType": "YulIdentifier",
																												"src": "8161:9:13"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "8152:3:13",
																											"nodeType": "YulIdentifier",
																											"src": "8152:3:13"
																										},
																										"nativeSrc": "8152:19:13",
																										"nodeType": "YulFunctionCall",
																										"src": "8152:19:13"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "8146:5:13",
																									"nodeType": "YulIdentifier",
																									"src": "8146:5:13"
																								},
																								"nativeSrc": "8146:26:13",
																								"nodeType": "YulFunctionCall",
																								"src": "8146:26:13"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nativeSrc": "8133:9:13",
																									"nodeType": "YulTypedName",
																									"src": "8133:9:13",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "8196:6:13",
																										"nodeType": "YulIdentifier",
																										"src": "8196:6:13"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nativeSrc": "8223:9:13",
																												"nodeType": "YulIdentifier",
																												"src": "8223:9:13"
																											},
																											{
																												"arguments": [
																													{
																														"name": "newLen",
																														"nativeSrc": "8238:6:13",
																														"nodeType": "YulIdentifier",
																														"src": "8238:6:13"
																													},
																													{
																														"kind": "number",
																														"nativeSrc": "8246:4:13",
																														"nodeType": "YulLiteral",
																														"src": "8246:4:13",
																														"type": "",
																														"value": "0x1f"
																													}
																												],
																												"functionName": {
																													"name": "and",
																													"nativeSrc": "8234:3:13",
																													"nodeType": "YulIdentifier",
																													"src": "8234:3:13"
																												},
																												"nativeSrc": "8234:17:13",
																												"nodeType": "YulFunctionCall",
																												"src": "8234:17:13"
																											}
																										],
																										"functionName": {
																											"name": "mask_bytes_dynamic",
																											"nativeSrc": "8204:18:13",
																											"nodeType": "YulIdentifier",
																											"src": "8204:18:13"
																										},
																										"nativeSrc": "8204:48:13",
																										"nodeType": "YulFunctionCall",
																										"src": "8204:48:13"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "8189:6:13",
																									"nodeType": "YulIdentifier",
																									"src": "8189:6:13"
																								},
																								"nativeSrc": "8189:64:13",
																								"nodeType": "YulFunctionCall",
																								"src": "8189:64:13"
																							},
																							"nativeSrc": "8189:64:13",
																							"nodeType": "YulExpressionStatement",
																							"src": "8189:64:13"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nativeSrc": "8094:7:13",
																							"nodeType": "YulIdentifier",
																							"src": "8094:7:13"
																						},
																						{
																							"name": "newLen",
																							"nativeSrc": "8103:6:13",
																							"nodeType": "YulIdentifier",
																							"src": "8103:6:13"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "8091:2:13",
																						"nodeType": "YulIdentifier",
																						"src": "8091:2:13"
																					},
																					"nativeSrc": "8091:19:13",
																					"nodeType": "YulFunctionCall",
																					"src": "8091:19:13"
																				},
																				"nativeSrc": "8088:179:13",
																				"nodeType": "YulIf",
																				"src": "8088:179:13"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "8287:4:13",
																							"nodeType": "YulIdentifier",
																							"src": "8287:4:13"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "newLen",
																											"nativeSrc": "8301:6:13",
																											"nodeType": "YulIdentifier",
																											"src": "8301:6:13"
																										},
																										{
																											"kind": "number",
																											"nativeSrc": "8309:1:13",
																											"nodeType": "YulLiteral",
																											"src": "8309:1:13",
																											"type": "",
																											"value": "2"
																										}
																									],
																									"functionName": {
																										"name": "mul",
																										"nativeSrc": "8297:3:13",
																										"nodeType": "YulIdentifier",
																										"src": "8297:3:13"
																									},
																									"nativeSrc": "8297:14:13",
																									"nodeType": "YulFunctionCall",
																									"src": "8297:14:13"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "8313:1:13",
																									"nodeType": "YulLiteral",
																									"src": "8313:1:13",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "8293:3:13",
																								"nodeType": "YulIdentifier",
																								"src": "8293:3:13"
																							},
																							"nativeSrc": "8293:22:13",
																							"nodeType": "YulFunctionCall",
																							"src": "8293:22:13"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "8280:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "8280:6:13"
																					},
																					"nativeSrc": "8280:36:13",
																					"nodeType": "YulFunctionCall",
																					"src": "8280:36:13"
																				},
																				"nativeSrc": "8280:36:13",
																				"nodeType": "YulExpressionStatement",
																				"src": "8280:36:13"
																			}
																		]
																	},
																	"nativeSrc": "7708:618:13",
																	"nodeType": "YulCase",
																	"src": "7708:618:13",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "7713:1:13",
																		"nodeType": "YulLiteral",
																		"src": "7713:1:13",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "8343:222:13",
																		"nodeType": "YulBlock",
																		"src": "8343:222:13",
																		"statements": [
																			{
																				"nativeSrc": "8357:14:13",
																				"nodeType": "YulVariableDeclaration",
																				"src": "8357:14:13",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "8370:1:13",
																					"nodeType": "YulLiteral",
																					"src": "8370:1:13",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nativeSrc": "8361:5:13",
																						"nodeType": "YulTypedName",
																						"src": "8361:5:13",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "8394:67:13",
																					"nodeType": "YulBlock",
																					"src": "8394:67:13",
																					"statements": [
																						{
																							"nativeSrc": "8412:35:13",
																							"nodeType": "YulAssignment",
																							"src": "8412:35:13",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "8431:3:13",
																												"nodeType": "YulIdentifier",
																												"src": "8431:3:13"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "8436:9:13",
																												"nodeType": "YulIdentifier",
																												"src": "8436:9:13"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "8427:3:13",
																											"nodeType": "YulIdentifier",
																											"src": "8427:3:13"
																										},
																										"nativeSrc": "8427:19:13",
																										"nodeType": "YulFunctionCall",
																										"src": "8427:19:13"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "8421:5:13",
																									"nodeType": "YulIdentifier",
																									"src": "8421:5:13"
																								},
																								"nativeSrc": "8421:26:13",
																								"nodeType": "YulFunctionCall",
																								"src": "8421:26:13"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nativeSrc": "8412:5:13",
																									"nodeType": "YulIdentifier",
																									"src": "8412:5:13"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nativeSrc": "8387:6:13",
																					"nodeType": "YulIdentifier",
																					"src": "8387:6:13"
																				},
																				"nativeSrc": "8384:77:13",
																				"nodeType": "YulIf",
																				"src": "8384:77:13"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "8481:4:13",
																							"nodeType": "YulIdentifier",
																							"src": "8481:4:13"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nativeSrc": "8540:5:13",
																									"nodeType": "YulIdentifier",
																									"src": "8540:5:13"
																								},
																								{
																									"name": "newLen",
																									"nativeSrc": "8547:6:13",
																									"nodeType": "YulIdentifier",
																									"src": "8547:6:13"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nativeSrc": "8487:52:13",
																								"nodeType": "YulIdentifier",
																								"src": "8487:52:13"
																							},
																							"nativeSrc": "8487:67:13",
																							"nodeType": "YulFunctionCall",
																							"src": "8487:67:13"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "8474:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "8474:6:13"
																					},
																					"nativeSrc": "8474:81:13",
																					"nodeType": "YulFunctionCall",
																					"src": "8474:81:13"
																				},
																				"nativeSrc": "8474:81:13",
																				"nodeType": "YulExpressionStatement",
																				"src": "8474:81:13"
																			}
																		]
																	},
																	"nativeSrc": "8335:230:13",
																	"nodeType": "YulCase",
																	"src": "8335:230:13",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "7688:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "7688:6:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7696:2:13",
																		"nodeType": "YulLiteral",
																		"src": "7696:2:13",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "7685:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "7685:2:13"
																},
																"nativeSrc": "7685:14:13",
																"nodeType": "YulFunctionCall",
																"src": "7685:14:13"
															},
															"nativeSrc": "7678:887:13",
															"nodeType": "YulSwitch",
															"src": "7678:887:13"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nativeSrc": "7176:1395:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "7257:4:13",
														"nodeType": "YulTypedName",
														"src": "7257:4:13",
														"type": ""
													},
													{
														"name": "src",
														"nativeSrc": "7263:3:13",
														"nodeType": "YulTypedName",
														"src": "7263:3:13",
														"type": ""
													}
												],
												"src": "7176:1395:13"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_string_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function abi_decode_available_length_t_string_memory_ptr_fromMemory(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_string_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_memory_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // string\n    function abi_decode_t_string_memory_ptr_fromMemory(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := mload(offset)\n        array := abi_decode_available_length_t_string_memory_ptr_fromMemory(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := mload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_string_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := mload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1 := abi_decode_t_string_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n}\n",
									"id": 13,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60806040525f60075534801562000014575f80fd5b50604051620026173803806200261783398181016040528101906200003a9190620001ee565b8181815f90816200004c9190620004a8565b5080600190816200005e9190620004a8565b50505050506200058c565b5f604051905090565b5f80fd5b5f80fd5b5f80fd5b5f80fd5b5f601f19601f8301169050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b620000ca8262000082565b810181811067ffffffffffffffff82111715620000ec57620000eb62000092565b5b80604052505050565b5f6200010062000069565b90506200010e8282620000bf565b919050565b5f67ffffffffffffffff82111562000130576200012f62000092565b5b6200013b8262000082565b9050602081019050919050565b5f5b83811015620001675780820151818401526020810190506200014a565b5f8484015250505050565b5f62000188620001828462000113565b620000f5565b905082815260208101848484011115620001a757620001a66200007e565b5b620001b484828562000148565b509392505050565b5f82601f830112620001d357620001d26200007a565b5b8151620001e584826020860162000172565b91505092915050565b5f806040838503121562000207576200020662000072565b5b5f83015167ffffffffffffffff81111562000227576200022662000076565b5b6200023585828601620001bc565b925050602083015167ffffffffffffffff81111562000259576200025862000076565b5b6200026785828601620001bc565b9150509250929050565b5f81519050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f6002820490506001821680620002c057607f821691505b602082108103620002d657620002d56200027b565b5b50919050565b5f819050815f5260205f209050919050565b5f6020601f8301049050919050565b5f82821b905092915050565b5f600883026200033a7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82620002fd565b620003468683620002fd565b95508019841693508086168417925050509392505050565b5f819050919050565b5f819050919050565b5f620003906200038a62000384846200035e565b62000367565b6200035e565b9050919050565b5f819050919050565b620003ab8362000370565b620003c3620003ba8262000397565b84845462000309565b825550505050565b5f90565b620003d9620003cb565b620003e6818484620003a0565b505050565b5b818110156200040d57620004015f82620003cf565b600181019050620003ec565b5050565b601f8211156200045c576200042681620002dc565b6200043184620002ee565b8101602085101562000441578190505b620004596200045085620002ee565b830182620003eb565b50505b505050565b5f82821c905092915050565b5f6200047e5f198460080262000461565b1980831691505092915050565b5f6200049883836200046d565b9150826002028217905092915050565b620004b38262000271565b67ffffffffffffffff811115620004cf57620004ce62000092565b5b620004db8254620002a8565b620004e882828562000411565b5f60209050601f8311600181146200051e575f841562000509578287015190505b6200051585826200048b565b86555062000584565b601f1984166200052e86620002dc565b5f5b82811015620005575784890151825560018201915060208501945060208101905062000530565b8683101562000577578489015162000573601f8916826200046d565b8355505b6001600288020188555050505b505050505050565b61207d806200059a5f395ff3fe608060405260043610610108575f3560e01c80636352211e11610094578063a22cb46511610063578063a22cb46514610370578063b88d4fde14610398578063c4e41b22146103c0578063c87b56dd146103ea578063e985e9c51461042657610108565b80636352211e1461029257806370a08231146102ce578063836387101461030a57806395d89b411461034657610108565b8063095ea7b3116100db578063095ea7b3146101ca5780630bdc9008146101f257806323b872dd1461021a57806329d6724e1461024257806342842e0e1461026a57610108565b806301c6adc31461010c57806301ffc9a71461012857806306fdde0314610164578063081812fc1461018e575b5f80fd5b610126600480360381019061012191906115cf565b610462565b005b348015610133575f80fd5b5061014e60048036038101906101499190611662565b610471565b60405161015b91906116a7565b60405180910390f35b34801561016f575f80fd5b50610178610552565b604051610185919061174a565b60405180910390f35b348015610199575f80fd5b506101b460048036038101906101af919061176a565b6105e1565b6040516101c191906117a4565b60405180910390f35b3480156101d5575f80fd5b506101f060048036038101906101eb91906115cf565b6105fc565b005b3480156101fd575f80fd5b50610218600480360381019061021391906118e9565b610612565b005b348015610225575f80fd5b50610240600480360381019061023b9190611930565b61065b565b005b34801561024d575f80fd5b50610268600480360381019061026391906119aa565b61075a565b005b348015610275575f80fd5b50610290600480360381019061028b9190611930565b61076a565b005b34801561029d575f80fd5b506102b860048036038101906102b3919061176a565b610789565b6040516102c591906117a4565b60405180910390f35b3480156102d9575f80fd5b506102f460048036038101906102ef91906119fa565b61079a565b6040516103019190611a34565b60405180910390f35b348015610315575f80fd5b50610330600480360381019061032b919061176a565b610850565b60405161033d91906117a4565b60405180910390f35b348015610351575f80fd5b5061035a610861565b604051610367919061174a565b60405180910390f35b34801561037b575f80fd5b5061039660048036038101906103919190611a4d565b6108f1565b005b3480156103a3575f80fd5b506103be60048036038101906103b99190611b29565b610907565b005b3480156103cb575f80fd5b506103d4610924565b6040516103e19190611a34565b60405180910390f35b3480156103f5575f80fd5b50610410600480360381019061040b919061176a565b61092d565b60405161041d919061174a565b60405180910390f35b348015610431575f80fd5b5061044c60048036038101906104479190611ba9565b6109ce565b60405161045991906116a7565b60405180910390f35b61046d33838361065b565b5050565b5f7f80ac58cd000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916148061053b57507f5b5e139f000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b8061054b575061054a82610a5c565b5b9050919050565b60605f805461056090611c14565b80601f016020809104026020016040519081016040528092919081815260200182805461058c90611c14565b80156105d75780601f106105ae576101008083540402835291602001916105d7565b820191905f5260205f20905b8154815290600101906020018083116105ba57829003601f168201915b5050505050905090565b5f6105eb82610ac5565b506105f582610b4b565b9050919050565b61060e8282610609610b84565b610b8b565b5050565b8060065f60075481526020019081526020015f2090816106329190611de1565b5061063f33600754610b9d565b600160075f8282546106519190611edd565b9250508190555050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036106cb575f6040517f64a0ae920000000000000000000000000000000000000000000000000000000081526004016106c291906117a4565b60405180910390fd5b5f6106de83836106d9610b84565b610c90565b90508373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610754578382826040517f64283d7b00000000000000000000000000000000000000000000000000000000815260040161074b93929190611f10565b60405180910390fd5b50505050565b610765838383610e9b565b505050565b61078483838360405180602001604052805f815250610907565b505050565b5f61079382610ac5565b9050919050565b5f8073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361080b575f6040517f89c62b6400000000000000000000000000000000000000000000000000000000815260040161080291906117a4565b60405180910390fd5b60035f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b5f61085a82611004565b9050919050565b60606001805461087090611c14565b80601f016020809104026020016040519081016040528092919081815260200182805461089c90611c14565b80156108e75780601f106108be576101008083540402835291602001916108e7565b820191905f5260205f20905b8154815290600101906020018083116108ca57829003601f168201915b5050505050905090565b6109036108fc610b84565b8383610e9b565b5050565b61091284848461065b565b61091e8484848461103d565b50505050565b5f600754905090565b606060065f8381526020019081526020015f20805461094b90611c14565b80601f016020809104026020016040519081016040528092919081815260200182805461097790611c14565b80156109c25780601f10610999576101008083540402835291602001916109c2565b820191905f5260205f20905b8154815290600101906020018083116109a557829003601f168201915b50505050509050919050565b5f60055f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff16905092915050565b5f7f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b5f80610ad083611004565b90505f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610b4257826040517f7e273289000000000000000000000000000000000000000000000000000000008152600401610b399190611a34565b60405180910390fd5b80915050919050565b5f60045f8381526020019081526020015f205f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b5f33905090565b610b9883838360016111ef565b505050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610c0d575f6040517f64a0ae92000000000000000000000000000000000000000000000000000000008152600401610c0491906117a4565b60405180910390fd5b5f610c1983835f610c90565b90505f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610c8b575f6040517f73c6ac6e000000000000000000000000000000000000000000000000000000008152600401610c8291906117a4565b60405180910390fd5b505050565b5f80610c9b84611004565b90505f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614610cdc57610cdb8184866113ae565b5b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610d6757610d1b5f855f806111ef565b600160035f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825403925050819055505b5f73ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff1614610de657600160035f8773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8460025f8681526020019081526020015f205f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550838573ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4809150509392505050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610f0b57816040517f5b08ba18000000000000000000000000000000000000000000000000000000008152600401610f0291906117a4565b60405180910390fd5b8060055f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3183604051610ff791906116a7565b60405180910390a3505050565b5f60025f8381526020019081526020015f205f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b5f8373ffffffffffffffffffffffffffffffffffffffff163b11156111e9578273ffffffffffffffffffffffffffffffffffffffff1663150b7a02611080610b84565b8685856040518563ffffffff1660e01b81526004016110a29493929190611f97565b6020604051808303815f875af19250505080156110dd57506040513d601f19601f820116820180604052508101906110da9190611ff5565b60015b61115e573d805f811461110b576040519150601f19603f3d011682016040523d82523d5f602084013e611110565b606091505b505f81510361115657836040517f64a0ae9200000000000000000000000000000000000000000000000000000000815260040161114d91906117a4565b60405180910390fd5b805181602001fd5b63150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916146111e757836040517f64a0ae920000000000000000000000000000000000000000000000000000000081526004016111de91906117a4565b60405180910390fd5b505b50505050565b808061122757505f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614155b15611359575f61123684610ac5565b90505f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16141580156112a057508273ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614155b80156112b357506112b181846109ce565b155b156112f557826040517fa9fbf51f0000000000000000000000000000000000000000000000000000000081526004016112ec91906117a4565b60405180910390fd5b811561135757838573ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45b505b8360045f8581526020019081526020015f205f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050505050565b6113b9838383611471565b61146c575f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361142d57806040517f7e2732890000000000000000000000000000000000000000000000000000000081526004016114249190611a34565b60405180910390fd5b81816040517f177e802f000000000000000000000000000000000000000000000000000000008152600401611463929190612020565b60405180910390fd5b505050565b5f8073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415801561152857508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1614806114e957506114e884846109ce565b5b8061152757508273ffffffffffffffffffffffffffffffffffffffff1661150f83610b4b565b73ffffffffffffffffffffffffffffffffffffffff16145b5b90509392505050565b5f604051905090565b5f80fd5b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f61156b82611542565b9050919050565b61157b81611561565b8114611585575f80fd5b50565b5f8135905061159681611572565b92915050565b5f819050919050565b6115ae8161159c565b81146115b8575f80fd5b50565b5f813590506115c9816115a5565b92915050565b5f80604083850312156115e5576115e461153a565b5b5f6115f285828601611588565b9250506020611603858286016115bb565b9150509250929050565b5f7fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b6116418161160d565b811461164b575f80fd5b50565b5f8135905061165c81611638565b92915050565b5f602082840312156116775761167661153a565b5b5f6116848482850161164e565b91505092915050565b5f8115159050919050565b6116a18161168d565b82525050565b5f6020820190506116ba5f830184611698565b92915050565b5f81519050919050565b5f82825260208201905092915050565b5f5b838110156116f75780820151818401526020810190506116dc565b5f8484015250505050565b5f601f19601f8301169050919050565b5f61171c826116c0565b61172681856116ca565b93506117368185602086016116da565b61173f81611702565b840191505092915050565b5f6020820190508181035f8301526117628184611712565b905092915050565b5f6020828403121561177f5761177e61153a565b5b5f61178c848285016115bb565b91505092915050565b61179e81611561565b82525050565b5f6020820190506117b75f830184611795565b92915050565b5f80fd5b5f80fd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b6117fb82611702565b810181811067ffffffffffffffff8211171561181a576118196117c5565b5b80604052505050565b5f61182c611531565b905061183882826117f2565b919050565b5f67ffffffffffffffff821115611857576118566117c5565b5b61186082611702565b9050602081019050919050565b828183375f83830152505050565b5f61188d6118888461183d565b611823565b9050828152602081018484840111156118a9576118a86117c1565b5b6118b484828561186d565b509392505050565b5f82601f8301126118d0576118cf6117bd565b5b81356118e084826020860161187b565b91505092915050565b5f602082840312156118fe576118fd61153a565b5b5f82013567ffffffffffffffff81111561191b5761191a61153e565b5b611927848285016118bc565b91505092915050565b5f805f606084860312156119475761194661153a565b5b5f61195486828701611588565b935050602061196586828701611588565b9250506040611976868287016115bb565b9150509250925092565b6119898161168d565b8114611993575f80fd5b50565b5f813590506119a481611980565b92915050565b5f805f606084860312156119c1576119c061153a565b5b5f6119ce86828701611588565b93505060206119df86828701611588565b92505060406119f086828701611996565b9150509250925092565b5f60208284031215611a0f57611a0e61153a565b5b5f611a1c84828501611588565b91505092915050565b611a2e8161159c565b82525050565b5f602082019050611a475f830184611a25565b92915050565b5f8060408385031215611a6357611a6261153a565b5b5f611a7085828601611588565b9250506020611a8185828601611996565b9150509250929050565b5f67ffffffffffffffff821115611aa557611aa46117c5565b5b611aae82611702565b9050602081019050919050565b5f611acd611ac884611a8b565b611823565b905082815260208101848484011115611ae957611ae86117c1565b5b611af484828561186d565b509392505050565b5f82601f830112611b1057611b0f6117bd565b5b8135611b20848260208601611abb565b91505092915050565b5f805f8060808587031215611b4157611b4061153a565b5b5f611b4e87828801611588565b9450506020611b5f87828801611588565b9350506040611b70878288016115bb565b925050606085013567ffffffffffffffff811115611b9157611b9061153e565b5b611b9d87828801611afc565b91505092959194509250565b5f8060408385031215611bbf57611bbe61153a565b5b5f611bcc85828601611588565b9250506020611bdd85828601611588565b9150509250929050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f6002820490506001821680611c2b57607f821691505b602082108103611c3e57611c3d611be7565b5b50919050565b5f819050815f5260205f209050919050565b5f6020601f8301049050919050565b5f82821b905092915050565b5f60088302611ca07fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82611c65565b611caa8683611c65565b95508019841693508086168417925050509392505050565b5f819050919050565b5f611ce5611ce0611cdb8461159c565b611cc2565b61159c565b9050919050565b5f819050919050565b611cfe83611ccb565b611d12611d0a82611cec565b848454611c71565b825550505050565b5f90565b611d26611d1a565b611d31818484611cf5565b505050565b5b81811015611d5457611d495f82611d1e565b600181019050611d37565b5050565b601f821115611d9957611d6a81611c44565b611d7384611c56565b81016020851015611d82578190505b611d96611d8e85611c56565b830182611d36565b50505b505050565b5f82821c905092915050565b5f611db95f1984600802611d9e565b1980831691505092915050565b5f611dd18383611daa565b9150826002028217905092915050565b611dea826116c0565b67ffffffffffffffff811115611e0357611e026117c5565b5b611e0d8254611c14565b611e18828285611d58565b5f60209050601f831160018114611e49575f8415611e37578287015190505b611e418582611dc6565b865550611ea8565b601f198416611e5786611c44565b5f5b82811015611e7e57848901518255600182019150602085019450602081019050611e59565b86831015611e9b5784890151611e97601f891682611daa565b8355505b6001600288020188555050505b505050505050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f611ee78261159c565b9150611ef28361159c565b9250828201905080821115611f0a57611f09611eb0565b5b92915050565b5f606082019050611f235f830186611795565b611f306020830185611a25565b611f3d6040830184611795565b949350505050565b5f81519050919050565b5f82825260208201905092915050565b5f611f6982611f45565b611f738185611f4f565b9350611f838185602086016116da565b611f8c81611702565b840191505092915050565b5f608082019050611faa5f830187611795565b611fb76020830186611795565b611fc46040830185611a25565b8181036060830152611fd68184611f5f565b905095945050505050565b5f81519050611fef81611638565b92915050565b5f6020828403121561200a5761200961153a565b5b5f61201784828501611fe1565b91505092915050565b5f6040820190506120335f830185611795565b6120406020830184611a25565b939250505056fea2646970667358221220040a895b576195cf9ef6881b00a9fa5b018493424ed5401b95e1b1addd87f8f464736f6c63430008150033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH1 0x7 SSTORE CALLVALUE DUP1 ISZERO PUSH3 0x14 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x2617 CODESIZE SUB DUP1 PUSH3 0x2617 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x3A SWAP2 SWAP1 PUSH3 0x1EE JUMP JUMPDEST DUP2 DUP2 DUP2 PUSH0 SWAP1 DUP2 PUSH3 0x4C SWAP2 SWAP1 PUSH3 0x4A8 JUMP JUMPDEST POP DUP1 PUSH1 0x1 SWAP1 DUP2 PUSH3 0x5E SWAP2 SWAP1 PUSH3 0x4A8 JUMP JUMPDEST POP POP POP POP POP PUSH3 0x58C JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH3 0xCA DUP3 PUSH3 0x82 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH3 0xEC JUMPI PUSH3 0xEB PUSH3 0x92 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH3 0x100 PUSH3 0x69 JUMP JUMPDEST SWAP1 POP PUSH3 0x10E DUP3 DUP3 PUSH3 0xBF JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH3 0x130 JUMPI PUSH3 0x12F PUSH3 0x92 JUMP JUMPDEST JUMPDEST PUSH3 0x13B DUP3 PUSH3 0x82 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH3 0x167 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x14A JUMP JUMPDEST PUSH0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH0 PUSH3 0x188 PUSH3 0x182 DUP5 PUSH3 0x113 JUMP JUMPDEST PUSH3 0xF5 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH3 0x1A7 JUMPI PUSH3 0x1A6 PUSH3 0x7E JUMP JUMPDEST JUMPDEST PUSH3 0x1B4 DUP5 DUP3 DUP6 PUSH3 0x148 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH3 0x1D3 JUMPI PUSH3 0x1D2 PUSH3 0x7A JUMP JUMPDEST JUMPDEST DUP2 MLOAD PUSH3 0x1E5 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH3 0x172 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH3 0x207 JUMPI PUSH3 0x206 PUSH3 0x72 JUMP JUMPDEST JUMPDEST PUSH0 DUP4 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x227 JUMPI PUSH3 0x226 PUSH3 0x76 JUMP JUMPDEST JUMPDEST PUSH3 0x235 DUP6 DUP3 DUP7 ADD PUSH3 0x1BC JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x259 JUMPI PUSH3 0x258 PUSH3 0x76 JUMP JUMPDEST JUMPDEST PUSH3 0x267 DUP6 DUP3 DUP7 ADD PUSH3 0x1BC JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH3 0x2C0 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH3 0x2D6 JUMPI PUSH3 0x2D5 PUSH3 0x27B JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP DUP2 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x8 DUP4 MUL PUSH3 0x33A PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH3 0x2FD JUMP JUMPDEST PUSH3 0x346 DUP7 DUP4 PUSH3 0x2FD JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH3 0x390 PUSH3 0x38A PUSH3 0x384 DUP5 PUSH3 0x35E JUMP JUMPDEST PUSH3 0x367 JUMP JUMPDEST PUSH3 0x35E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x3AB DUP4 PUSH3 0x370 JUMP JUMPDEST PUSH3 0x3C3 PUSH3 0x3BA DUP3 PUSH3 0x397 JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH3 0x309 JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH0 SWAP1 JUMP JUMPDEST PUSH3 0x3D9 PUSH3 0x3CB JUMP JUMPDEST PUSH3 0x3E6 DUP2 DUP5 DUP5 PUSH3 0x3A0 JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0x40D JUMPI PUSH3 0x401 PUSH0 DUP3 PUSH3 0x3CF JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH3 0x3EC JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH3 0x45C JUMPI PUSH3 0x426 DUP2 PUSH3 0x2DC JUMP JUMPDEST PUSH3 0x431 DUP5 PUSH3 0x2EE JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH3 0x441 JUMPI DUP2 SWAP1 POP JUMPDEST PUSH3 0x459 PUSH3 0x450 DUP6 PUSH3 0x2EE JUMP JUMPDEST DUP4 ADD DUP3 PUSH3 0x3EB JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH3 0x47E PUSH0 NOT DUP5 PUSH1 0x8 MUL PUSH3 0x461 JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH3 0x498 DUP4 DUP4 PUSH3 0x46D JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH3 0x4B3 DUP3 PUSH3 0x271 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x4CF JUMPI PUSH3 0x4CE PUSH3 0x92 JUMP JUMPDEST JUMPDEST PUSH3 0x4DB DUP3 SLOAD PUSH3 0x2A8 JUMP JUMPDEST PUSH3 0x4E8 DUP3 DUP3 DUP6 PUSH3 0x411 JUMP JUMPDEST PUSH0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH3 0x51E JUMPI PUSH0 DUP5 ISZERO PUSH3 0x509 JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH3 0x515 DUP6 DUP3 PUSH3 0x48B JUMP JUMPDEST DUP7 SSTORE POP PUSH3 0x584 JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH3 0x52E DUP7 PUSH3 0x2DC JUMP JUMPDEST PUSH0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH3 0x557 JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x530 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH3 0x577 JUMPI DUP5 DUP10 ADD MLOAD PUSH3 0x573 PUSH1 0x1F DUP10 AND DUP3 PUSH3 0x46D JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x207D DUP1 PUSH3 0x59A PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x108 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6352211E GT PUSH2 0x94 JUMPI DUP1 PUSH4 0xA22CB465 GT PUSH2 0x63 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x370 JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x398 JUMPI DUP1 PUSH4 0xC4E41B22 EQ PUSH2 0x3C0 JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x3EA JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x426 JUMPI PUSH2 0x108 JUMP JUMPDEST DUP1 PUSH4 0x6352211E EQ PUSH2 0x292 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x2CE JUMPI DUP1 PUSH4 0x83638710 EQ PUSH2 0x30A JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x346 JUMPI PUSH2 0x108 JUMP JUMPDEST DUP1 PUSH4 0x95EA7B3 GT PUSH2 0xDB JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x1CA JUMPI DUP1 PUSH4 0xBDC9008 EQ PUSH2 0x1F2 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x21A JUMPI DUP1 PUSH4 0x29D6724E EQ PUSH2 0x242 JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x26A JUMPI PUSH2 0x108 JUMP JUMPDEST DUP1 PUSH4 0x1C6ADC3 EQ PUSH2 0x10C JUMPI DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x128 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x164 JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x18E JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x126 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x121 SWAP2 SWAP1 PUSH2 0x15CF JUMP JUMPDEST PUSH2 0x462 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x133 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x14E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x149 SWAP2 SWAP1 PUSH2 0x1662 JUMP JUMPDEST PUSH2 0x471 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x15B SWAP2 SWAP1 PUSH2 0x16A7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x16F JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x178 PUSH2 0x552 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x185 SWAP2 SWAP1 PUSH2 0x174A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x199 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1B4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1AF SWAP2 SWAP1 PUSH2 0x176A JUMP JUMPDEST PUSH2 0x5E1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1C1 SWAP2 SWAP1 PUSH2 0x17A4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1D5 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1F0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1EB SWAP2 SWAP1 PUSH2 0x15CF JUMP JUMPDEST PUSH2 0x5FC JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1FD JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x218 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x213 SWAP2 SWAP1 PUSH2 0x18E9 JUMP JUMPDEST PUSH2 0x612 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x225 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x240 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x23B SWAP2 SWAP1 PUSH2 0x1930 JUMP JUMPDEST PUSH2 0x65B JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x24D JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x268 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x263 SWAP2 SWAP1 PUSH2 0x19AA JUMP JUMPDEST PUSH2 0x75A JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x275 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x290 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x28B SWAP2 SWAP1 PUSH2 0x1930 JUMP JUMPDEST PUSH2 0x76A JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x29D JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2B8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2B3 SWAP2 SWAP1 PUSH2 0x176A JUMP JUMPDEST PUSH2 0x789 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2C5 SWAP2 SWAP1 PUSH2 0x17A4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2D9 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2F4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2EF SWAP2 SWAP1 PUSH2 0x19FA JUMP JUMPDEST PUSH2 0x79A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x301 SWAP2 SWAP1 PUSH2 0x1A34 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x315 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x330 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x32B SWAP2 SWAP1 PUSH2 0x176A JUMP JUMPDEST PUSH2 0x850 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x33D SWAP2 SWAP1 PUSH2 0x17A4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x351 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x35A PUSH2 0x861 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x367 SWAP2 SWAP1 PUSH2 0x174A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x37B JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x396 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x391 SWAP2 SWAP1 PUSH2 0x1A4D JUMP JUMPDEST PUSH2 0x8F1 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3A3 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x3BE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3B9 SWAP2 SWAP1 PUSH2 0x1B29 JUMP JUMPDEST PUSH2 0x907 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3CB JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x3D4 PUSH2 0x924 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3E1 SWAP2 SWAP1 PUSH2 0x1A34 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3F5 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x410 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x40B SWAP2 SWAP1 PUSH2 0x176A JUMP JUMPDEST PUSH2 0x92D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x41D SWAP2 SWAP1 PUSH2 0x174A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x431 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x44C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x447 SWAP2 SWAP1 PUSH2 0x1BA9 JUMP JUMPDEST PUSH2 0x9CE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x459 SWAP2 SWAP1 PUSH2 0x16A7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x46D CALLER DUP4 DUP4 PUSH2 0x65B JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH32 0x80AC58CD00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x53B JUMPI POP PUSH32 0x5B5E139F00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ JUMPDEST DUP1 PUSH2 0x54B JUMPI POP PUSH2 0x54A DUP3 PUSH2 0xA5C JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH0 DUP1 SLOAD PUSH2 0x560 SWAP1 PUSH2 0x1C14 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x58C SWAP1 PUSH2 0x1C14 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x5D7 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x5AE JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x5D7 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x5BA JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH2 0x5EB DUP3 PUSH2 0xAC5 JUMP JUMPDEST POP PUSH2 0x5F5 DUP3 PUSH2 0xB4B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x60E DUP3 DUP3 PUSH2 0x609 PUSH2 0xB84 JUMP JUMPDEST PUSH2 0xB8B JUMP JUMPDEST POP POP JUMP JUMPDEST DUP1 PUSH1 0x6 PUSH0 PUSH1 0x7 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SWAP1 DUP2 PUSH2 0x632 SWAP2 SWAP1 PUSH2 0x1DE1 JUMP JUMPDEST POP PUSH2 0x63F CALLER PUSH1 0x7 SLOAD PUSH2 0xB9D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x7 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x651 SWAP2 SWAP1 PUSH2 0x1EDD JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x6CB JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6C2 SWAP2 SWAP1 PUSH2 0x17A4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0x6DE DUP4 DUP4 PUSH2 0x6D9 PUSH2 0xB84 JUMP JUMPDEST PUSH2 0xC90 JUMP JUMPDEST SWAP1 POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x754 JUMPI DUP4 DUP3 DUP3 PUSH1 0x40 MLOAD PUSH32 0x64283D7B00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x74B SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1F10 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x765 DUP4 DUP4 DUP4 PUSH2 0xE9B JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x784 DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 DUP2 MSTORE POP PUSH2 0x907 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x793 DUP3 PUSH2 0xAC5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x80B JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x89C62B6400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x802 SWAP2 SWAP1 PUSH2 0x17A4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x85A DUP3 PUSH2 0x1004 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 DUP1 SLOAD PUSH2 0x870 SWAP1 PUSH2 0x1C14 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x89C SWAP1 PUSH2 0x1C14 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x8E7 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x8BE JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x8E7 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x8CA JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x903 PUSH2 0x8FC PUSH2 0xB84 JUMP JUMPDEST DUP4 DUP4 PUSH2 0xE9B JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x912 DUP5 DUP5 DUP5 PUSH2 0x65B JUMP JUMPDEST PUSH2 0x91E DUP5 DUP5 DUP5 DUP5 PUSH2 0x103D JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x7 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x6 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP1 SLOAD PUSH2 0x94B SWAP1 PUSH2 0x1C14 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x977 SWAP1 PUSH2 0x1C14 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x9C2 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x999 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x9C2 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x9A5 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH2 0xAD0 DUP4 PUSH2 0x1004 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xB42 JUMPI DUP3 PUSH1 0x40 MLOAD PUSH32 0x7E27328900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB39 SWAP2 SWAP1 PUSH2 0x1A34 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x4 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xB98 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x11EF JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xC0D JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC04 SWAP2 SWAP1 PUSH2 0x17A4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0xC19 DUP4 DUP4 PUSH0 PUSH2 0xC90 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xC8B JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x73C6AC6E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC82 SWAP2 SWAP1 PUSH2 0x17A4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH2 0xC9B DUP5 PUSH2 0x1004 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xCDC JUMPI PUSH2 0xCDB DUP2 DUP5 DUP7 PUSH2 0x13AE JUMP JUMPDEST JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xD67 JUMPI PUSH2 0xD1B PUSH0 DUP6 PUSH0 DUP1 PUSH2 0x11EF JUMP JUMPDEST PUSH1 0x1 PUSH1 0x3 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xDE6 JUMPI PUSH1 0x1 PUSH1 0x3 PUSH0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP5 PUSH1 0x2 PUSH0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP4 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 DUP1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xF0B JUMPI DUP2 PUSH1 0x40 MLOAD PUSH32 0x5B08BA1800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF02 SWAP2 SWAP1 PUSH2 0x17A4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x5 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 DUP4 PUSH1 0x40 MLOAD PUSH2 0xFF7 SWAP2 SWAP1 PUSH2 0x16A7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x2 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT ISZERO PUSH2 0x11E9 JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x150B7A02 PUSH2 0x1080 PUSH2 0xB84 JUMP JUMPDEST DUP7 DUP6 DUP6 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x10A2 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1F97 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x10DD JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x10DA SWAP2 SWAP1 PUSH2 0x1FF5 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x115E JUMPI RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x110B JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1110 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP PUSH0 DUP2 MLOAD SUB PUSH2 0x1156 JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x114D SWAP2 SWAP1 PUSH2 0x17A4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH4 0x150B7A02 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ PUSH2 0x11E7 JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x11DE SWAP2 SWAP1 PUSH2 0x17A4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMPDEST POP POP POP POP JUMP JUMPDEST DUP1 DUP1 PUSH2 0x1227 JUMPI POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST ISZERO PUSH2 0x1359 JUMPI PUSH0 PUSH2 0x1236 DUP5 PUSH2 0xAC5 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0x12A0 JUMPI POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST DUP1 ISZERO PUSH2 0x12B3 JUMPI POP PUSH2 0x12B1 DUP2 DUP5 PUSH2 0x9CE JUMP JUMPDEST ISZERO JUMPDEST ISZERO PUSH2 0x12F5 JUMPI DUP3 PUSH1 0x40 MLOAD PUSH32 0xA9FBF51F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x12EC SWAP2 SWAP1 PUSH2 0x17A4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 ISZERO PUSH2 0x1357 JUMPI DUP4 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 JUMPDEST POP JUMPDEST DUP4 PUSH1 0x4 PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP POP POP JUMP JUMPDEST PUSH2 0x13B9 DUP4 DUP4 DUP4 PUSH2 0x1471 JUMP JUMPDEST PUSH2 0x146C JUMPI PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x142D JUMPI DUP1 PUSH1 0x40 MLOAD PUSH32 0x7E27328900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1424 SWAP2 SWAP1 PUSH2 0x1A34 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 PUSH1 0x40 MLOAD PUSH32 0x177E802F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1463 SWAP3 SWAP2 SWAP1 PUSH2 0x2020 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0x1528 JUMPI POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x14E9 JUMPI POP PUSH2 0x14E8 DUP5 DUP5 PUSH2 0x9CE JUMP JUMPDEST JUMPDEST DUP1 PUSH2 0x1527 JUMPI POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x150F DUP4 PUSH2 0xB4B JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x156B DUP3 PUSH2 0x1542 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x157B DUP2 PUSH2 0x1561 JUMP JUMPDEST DUP2 EQ PUSH2 0x1585 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1596 DUP2 PUSH2 0x1572 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x15AE DUP2 PUSH2 0x159C JUMP JUMPDEST DUP2 EQ PUSH2 0x15B8 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x15C9 DUP2 PUSH2 0x15A5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x15E5 JUMPI PUSH2 0x15E4 PUSH2 0x153A JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x15F2 DUP6 DUP3 DUP7 ADD PUSH2 0x1588 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1603 DUP6 DUP3 DUP7 ADD PUSH2 0x15BB JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1641 DUP2 PUSH2 0x160D JUMP JUMPDEST DUP2 EQ PUSH2 0x164B JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x165C DUP2 PUSH2 0x1638 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1677 JUMPI PUSH2 0x1676 PUSH2 0x153A JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1684 DUP5 DUP3 DUP6 ADD PUSH2 0x164E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x16A1 DUP2 PUSH2 0x168D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x16BA PUSH0 DUP4 ADD DUP5 PUSH2 0x1698 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x16F7 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x16DC JUMP JUMPDEST PUSH0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x171C DUP3 PUSH2 0x16C0 JUMP JUMPDEST PUSH2 0x1726 DUP2 DUP6 PUSH2 0x16CA JUMP JUMPDEST SWAP4 POP PUSH2 0x1736 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x16DA JUMP JUMPDEST PUSH2 0x173F DUP2 PUSH2 0x1702 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1762 DUP2 DUP5 PUSH2 0x1712 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x177F JUMPI PUSH2 0x177E PUSH2 0x153A JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x178C DUP5 DUP3 DUP6 ADD PUSH2 0x15BB JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x179E DUP2 PUSH2 0x1561 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x17B7 PUSH0 DUP4 ADD DUP5 PUSH2 0x1795 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH2 0x17FB DUP3 PUSH2 0x1702 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x181A JUMPI PUSH2 0x1819 PUSH2 0x17C5 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x182C PUSH2 0x1531 JUMP JUMPDEST SWAP1 POP PUSH2 0x1838 DUP3 DUP3 PUSH2 0x17F2 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1857 JUMPI PUSH2 0x1856 PUSH2 0x17C5 JUMP JUMPDEST JUMPDEST PUSH2 0x1860 DUP3 PUSH2 0x1702 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x188D PUSH2 0x1888 DUP5 PUSH2 0x183D JUMP JUMPDEST PUSH2 0x1823 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x18A9 JUMPI PUSH2 0x18A8 PUSH2 0x17C1 JUMP JUMPDEST JUMPDEST PUSH2 0x18B4 DUP5 DUP3 DUP6 PUSH2 0x186D JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x18D0 JUMPI PUSH2 0x18CF PUSH2 0x17BD JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x18E0 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x187B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x18FE JUMPI PUSH2 0x18FD PUSH2 0x153A JUMP JUMPDEST JUMPDEST PUSH0 DUP3 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x191B JUMPI PUSH2 0x191A PUSH2 0x153E JUMP JUMPDEST JUMPDEST PUSH2 0x1927 DUP5 DUP3 DUP6 ADD PUSH2 0x18BC JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1947 JUMPI PUSH2 0x1946 PUSH2 0x153A JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1954 DUP7 DUP3 DUP8 ADD PUSH2 0x1588 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1965 DUP7 DUP3 DUP8 ADD PUSH2 0x1588 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1976 DUP7 DUP3 DUP8 ADD PUSH2 0x15BB JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH2 0x1989 DUP2 PUSH2 0x168D JUMP JUMPDEST DUP2 EQ PUSH2 0x1993 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x19A4 DUP2 PUSH2 0x1980 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x19C1 JUMPI PUSH2 0x19C0 PUSH2 0x153A JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x19CE DUP7 DUP3 DUP8 ADD PUSH2 0x1588 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x19DF DUP7 DUP3 DUP8 ADD PUSH2 0x1588 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x19F0 DUP7 DUP3 DUP8 ADD PUSH2 0x1996 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1A0F JUMPI PUSH2 0x1A0E PUSH2 0x153A JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1A1C DUP5 DUP3 DUP6 ADD PUSH2 0x1588 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1A2E DUP2 PUSH2 0x159C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1A47 PUSH0 DUP4 ADD DUP5 PUSH2 0x1A25 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1A63 JUMPI PUSH2 0x1A62 PUSH2 0x153A JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1A70 DUP6 DUP3 DUP7 ADD PUSH2 0x1588 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1A81 DUP6 DUP3 DUP7 ADD PUSH2 0x1996 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1AA5 JUMPI PUSH2 0x1AA4 PUSH2 0x17C5 JUMP JUMPDEST JUMPDEST PUSH2 0x1AAE DUP3 PUSH2 0x1702 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1ACD PUSH2 0x1AC8 DUP5 PUSH2 0x1A8B JUMP JUMPDEST PUSH2 0x1823 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x1AE9 JUMPI PUSH2 0x1AE8 PUSH2 0x17C1 JUMP JUMPDEST JUMPDEST PUSH2 0x1AF4 DUP5 DUP3 DUP6 PUSH2 0x186D JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1B10 JUMPI PUSH2 0x1B0F PUSH2 0x17BD JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1B20 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x1ABB JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x1B41 JUMPI PUSH2 0x1B40 PUSH2 0x153A JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1B4E DUP8 DUP3 DUP9 ADD PUSH2 0x1588 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x1B5F DUP8 DUP3 DUP9 ADD PUSH2 0x1588 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x1B70 DUP8 DUP3 DUP9 ADD PUSH2 0x15BB JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1B91 JUMPI PUSH2 0x1B90 PUSH2 0x153E JUMP JUMPDEST JUMPDEST PUSH2 0x1B9D DUP8 DUP3 DUP9 ADD PUSH2 0x1AFC JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1BBF JUMPI PUSH2 0x1BBE PUSH2 0x153A JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1BCC DUP6 DUP3 DUP7 ADD PUSH2 0x1588 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1BDD DUP6 DUP3 DUP7 ADD PUSH2 0x1588 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x1C2B JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x1C3E JUMPI PUSH2 0x1C3D PUSH2 0x1BE7 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP DUP2 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x8 DUP4 MUL PUSH2 0x1CA0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0x1C65 JUMP JUMPDEST PUSH2 0x1CAA DUP7 DUP4 PUSH2 0x1C65 JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1CE5 PUSH2 0x1CE0 PUSH2 0x1CDB DUP5 PUSH2 0x159C JUMP JUMPDEST PUSH2 0x1CC2 JUMP JUMPDEST PUSH2 0x159C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1CFE DUP4 PUSH2 0x1CCB JUMP JUMPDEST PUSH2 0x1D12 PUSH2 0x1D0A DUP3 PUSH2 0x1CEC JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0x1C71 JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH0 SWAP1 JUMP JUMPDEST PUSH2 0x1D26 PUSH2 0x1D1A JUMP JUMPDEST PUSH2 0x1D31 DUP2 DUP5 DUP5 PUSH2 0x1CF5 JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1D54 JUMPI PUSH2 0x1D49 PUSH0 DUP3 PUSH2 0x1D1E JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x1D37 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x1D99 JUMPI PUSH2 0x1D6A DUP2 PUSH2 0x1C44 JUMP JUMPDEST PUSH2 0x1D73 DUP5 PUSH2 0x1C56 JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x1D82 JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0x1D96 PUSH2 0x1D8E DUP6 PUSH2 0x1C56 JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0x1D36 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1DB9 PUSH0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0x1D9E JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1DD1 DUP4 DUP4 PUSH2 0x1DAA JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1DEA DUP3 PUSH2 0x16C0 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1E03 JUMPI PUSH2 0x1E02 PUSH2 0x17C5 JUMP JUMPDEST JUMPDEST PUSH2 0x1E0D DUP3 SLOAD PUSH2 0x1C14 JUMP JUMPDEST PUSH2 0x1E18 DUP3 DUP3 DUP6 PUSH2 0x1D58 JUMP JUMPDEST PUSH0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x1E49 JUMPI PUSH0 DUP5 ISZERO PUSH2 0x1E37 JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0x1E41 DUP6 DUP3 PUSH2 0x1DC6 JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0x1EA8 JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0x1E57 DUP7 PUSH2 0x1C44 JUMP JUMPDEST PUSH0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x1E7E JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1E59 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0x1E9B JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0x1E97 PUSH1 0x1F DUP10 AND DUP3 PUSH2 0x1DAA JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x1EE7 DUP3 PUSH2 0x159C JUMP JUMPDEST SWAP2 POP PUSH2 0x1EF2 DUP4 PUSH2 0x159C JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x1F0A JUMPI PUSH2 0x1F09 PUSH2 0x1EB0 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1F23 PUSH0 DUP4 ADD DUP7 PUSH2 0x1795 JUMP JUMPDEST PUSH2 0x1F30 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1A25 JUMP JUMPDEST PUSH2 0x1F3D PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1795 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1F69 DUP3 PUSH2 0x1F45 JUMP JUMPDEST PUSH2 0x1F73 DUP2 DUP6 PUSH2 0x1F4F JUMP JUMPDEST SWAP4 POP PUSH2 0x1F83 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x16DA JUMP JUMPDEST PUSH2 0x1F8C DUP2 PUSH2 0x1702 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x1FAA PUSH0 DUP4 ADD DUP8 PUSH2 0x1795 JUMP JUMPDEST PUSH2 0x1FB7 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x1795 JUMP JUMPDEST PUSH2 0x1FC4 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x1A25 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x1FD6 DUP2 DUP5 PUSH2 0x1F5F JUMP JUMPDEST SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x1FEF DUP2 PUSH2 0x1638 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x200A JUMPI PUSH2 0x2009 PUSH2 0x153A JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2017 DUP5 DUP3 DUP6 ADD PUSH2 0x1FE1 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x2033 PUSH0 DUP4 ADD DUP6 PUSH2 0x1795 JUMP JUMPDEST PUSH2 0x2040 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1A25 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DIV EXP DUP10 JUMPDEST JUMPI PUSH2 0x95CF SWAP15 0xF6 DUP9 SHL STOP 0xA9 STATICCALL JUMPDEST ADD DUP5 SWAP4 TIMESTAMP 0x4E 0xD5 BLOCKHASH SHL SWAP6 0xE1 0xB1 0xAD 0xDD DUP8 0xF8 DELEGATECALL PUSH5 0x736F6C6343 STOP ADDMOD ISZERO STOP CALLER ",
							"sourceMap": "143:1645:0:-:0;;;369:1;350:20;;175:106;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;263:5;270:7;1455:5:3;1447;:13;;;;;;:::i;:::-;;1480:7;1470;:17;;;;;;:::i;:::-;;1381:113;;175:106:0;;143:1645;;7:75:13;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:117;443:1;440;433:12;457:117;566:1;563;556:12;580:102;621:6;672:2;668:7;663:2;656:5;652:14;648:28;638:38;;580:102;;;:::o;688:180::-;736:77;733:1;726:88;833:4;830:1;823:15;857:4;854:1;847:15;874:281;957:27;979:4;957:27;:::i;:::-;949:6;945:40;1087:6;1075:10;1072:22;1051:18;1039:10;1036:34;1033:62;1030:88;;;1098:18;;:::i;:::-;1030:88;1138:10;1134:2;1127:22;917:238;874:281;;:::o;1161:129::-;1195:6;1222:20;;:::i;:::-;1212:30;;1251:33;1279:4;1271:6;1251:33;:::i;:::-;1161:129;;;:::o;1296:308::-;1358:4;1448:18;1440:6;1437:30;1434:56;;;1470:18;;:::i;:::-;1434:56;1508:29;1530:6;1508:29;:::i;:::-;1500:37;;1592:4;1586;1582:15;1574:23;;1296:308;;;:::o;1610:246::-;1691:1;1701:113;1715:6;1712:1;1709:13;1701:113;;;1800:1;1795:3;1791:11;1785:18;1781:1;1776:3;1772:11;1765:39;1737:2;1734:1;1730:10;1725:15;;1701:113;;;1848:1;1839:6;1834:3;1830:16;1823:27;1672:184;1610:246;;;:::o;1862:434::-;1951:5;1976:66;1992:49;2034:6;1992:49;:::i;:::-;1976:66;:::i;:::-;1967:75;;2065:6;2058:5;2051:21;2103:4;2096:5;2092:16;2141:3;2132:6;2127:3;2123:16;2120:25;2117:112;;;2148:79;;:::i;:::-;2117:112;2238:52;2283:6;2278:3;2273;2238:52;:::i;:::-;1957:339;1862:434;;;;;:::o;2316:355::-;2383:5;2432:3;2425:4;2417:6;2413:17;2409:27;2399:122;;2440:79;;:::i;:::-;2399:122;2550:6;2544:13;2575:90;2661:3;2653:6;2646:4;2638:6;2634:17;2575:90;:::i;:::-;2566:99;;2389:282;2316:355;;;;:::o;2677:853::-;2776:6;2784;2833:2;2821:9;2812:7;2808:23;2804:32;2801:119;;;2839:79;;:::i;:::-;2801:119;2980:1;2969:9;2965:17;2959:24;3010:18;3002:6;2999:30;2996:117;;;3032:79;;:::i;:::-;2996:117;3137:74;3203:7;3194:6;3183:9;3179:22;3137:74;:::i;:::-;3127:84;;2930:291;3281:2;3270:9;3266:18;3260:25;3312:18;3304:6;3301:30;3298:117;;;3334:79;;:::i;:::-;3298:117;3439:74;3505:7;3496:6;3485:9;3481:22;3439:74;:::i;:::-;3429:84;;3231:292;2677:853;;;;;:::o;3536:99::-;3588:6;3622:5;3616:12;3606:22;;3536:99;;;:::o;3641:180::-;3689:77;3686:1;3679:88;3786:4;3783:1;3776:15;3810:4;3807:1;3800:15;3827:320;3871:6;3908:1;3902:4;3898:12;3888:22;;3955:1;3949:4;3945:12;3976:18;3966:81;;4032:4;4024:6;4020:17;4010:27;;3966:81;4094:2;4086:6;4083:14;4063:18;4060:38;4057:84;;4113:18;;:::i;:::-;4057:84;3878:269;3827:320;;;:::o;4153:141::-;4202:4;4225:3;4217:11;;4248:3;4245:1;4238:14;4282:4;4279:1;4269:18;4261:26;;4153:141;;;:::o;4300:93::-;4337:6;4384:2;4379;4372:5;4368:14;4364:23;4354:33;;4300:93;;;:::o;4399:107::-;4443:8;4493:5;4487:4;4483:16;4462:37;;4399:107;;;;:::o;4512:393::-;4581:6;4631:1;4619:10;4615:18;4654:97;4684:66;4673:9;4654:97;:::i;:::-;4772:39;4802:8;4791:9;4772:39;:::i;:::-;4760:51;;4844:4;4840:9;4833:5;4829:21;4820:30;;4893:4;4883:8;4879:19;4872:5;4869:30;4859:40;;4588:317;;4512:393;;;;;:::o;4911:77::-;4948:7;4977:5;4966:16;;4911:77;;;:::o;4994:60::-;5022:3;5043:5;5036:12;;4994:60;;;:::o;5060:142::-;5110:9;5143:53;5161:34;5170:24;5188:5;5170:24;:::i;:::-;5161:34;:::i;:::-;5143:53;:::i;:::-;5130:66;;5060:142;;;:::o;5208:75::-;5251:3;5272:5;5265:12;;5208:75;;;:::o;5289:269::-;5399:39;5430:7;5399:39;:::i;:::-;5460:91;5509:41;5533:16;5509:41;:::i;:::-;5501:6;5494:4;5488:11;5460:91;:::i;:::-;5454:4;5447:105;5365:193;5289:269;;;:::o;5564:73::-;5609:3;5564:73;:::o;5643:189::-;5720:32;;:::i;:::-;5761:65;5819:6;5811;5805:4;5761:65;:::i;:::-;5696:136;5643:189;;:::o;5838:186::-;5898:120;5915:3;5908:5;5905:14;5898:120;;;5969:39;6006:1;5999:5;5969:39;:::i;:::-;5942:1;5935:5;5931:13;5922:22;;5898:120;;;5838:186;;:::o;6030:543::-;6131:2;6126:3;6123:11;6120:446;;;6165:38;6197:5;6165:38;:::i;:::-;6249:29;6267:10;6249:29;:::i;:::-;6239:8;6235:44;6432:2;6420:10;6417:18;6414:49;;;6453:8;6438:23;;6414:49;6476:80;6532:22;6550:3;6532:22;:::i;:::-;6522:8;6518:37;6505:11;6476:80;:::i;:::-;6135:431;;6120:446;6030:543;;;:::o;6579:117::-;6633:8;6683:5;6677:4;6673:16;6652:37;;6579:117;;;;:::o;6702:169::-;6746:6;6779:51;6827:1;6823:6;6815:5;6812:1;6808:13;6779:51;:::i;:::-;6775:56;6860:4;6854;6850:15;6840:25;;6753:118;6702:169;;;;:::o;6876:295::-;6952:4;7098:29;7123:3;7117:4;7098:29;:::i;:::-;7090:37;;7160:3;7157:1;7153:11;7147:4;7144:21;7136:29;;6876:295;;;;:::o;7176:1395::-;7293:37;7326:3;7293:37;:::i;:::-;7395:18;7387:6;7384:30;7381:56;;;7417:18;;:::i;:::-;7381:56;7461:38;7493:4;7487:11;7461:38;:::i;:::-;7546:67;7606:6;7598;7592:4;7546:67;:::i;:::-;7640:1;7664:4;7651:17;;7696:2;7688:6;7685:14;7713:1;7708:618;;;;8370:1;8387:6;8384:77;;;8436:9;8431:3;8427:19;8421:26;8412:35;;8384:77;8487:67;8547:6;8540:5;8487:67;:::i;:::-;8481:4;8474:81;8343:222;7678:887;;7708:618;7760:4;7756:9;7748:6;7744:22;7794:37;7826:4;7794:37;:::i;:::-;7853:1;7867:208;7881:7;7878:1;7875:14;7867:208;;;7960:9;7955:3;7951:19;7945:26;7937:6;7930:42;8011:1;8003:6;7999:14;7989:24;;8058:2;8047:9;8043:18;8030:31;;7904:4;7901:1;7897:12;7892:17;;7867:208;;;8103:6;8094:7;8091:19;8088:179;;;8161:9;8156:3;8152:19;8146:26;8204:48;8246:4;8238:6;8234:17;8223:9;8204:48;:::i;:::-;8196:6;8189:64;8111:156;8088:179;8313:1;8309;8301:6;8297:14;8293:22;8287:4;8280:36;7715:611;;;7678:887;;7268:1303;;;7176:1395;;:::o;143:1645:0:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_approve_1131": {
									"entryPoint": 2955,
									"id": 1131,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_approve_1197": {
									"entryPoint": 4591,
									"id": 1197,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_checkAuthorized_779": {
									"entryPoint": 5038,
									"id": 779,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_checkOnERC721Received_1327": {
									"entryPoint": 4157,
									"id": 1327,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_getApproved_706": {
									"entryPoint": 2891,
									"id": 706,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_isAuthorized_742": {
									"entryPoint": 5233,
									"id": 742,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@_mint_935": {
									"entryPoint": 2973,
									"id": 935,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_msgSender_1503": {
									"entryPoint": 2948,
									"id": 1503,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_ownerOf_693": {
									"entryPoint": 4100,
									"id": 693,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_requireOwned_1263": {
									"entryPoint": 2757,
									"id": 1263,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_setApprovalForAll_1234": {
									"entryPoint": 3739,
									"id": 1234,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_update_885": {
									"entryPoint": 3216,
									"id": 885,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@approve_540": {
									"entryPoint": 1532,
									"id": 540,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@balanceOf_448": {
									"entryPoint": 1946,
									"id": 448,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@getApproved_557": {
									"entryPoint": 1505,
									"id": 557,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@getOwnerOf_95": {
									"entryPoint": 2128,
									"id": 95,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@getTotalSupply_103": {
									"entryPoint": 2340,
									"id": 103,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@isApprovedForAll_590": {
									"entryPoint": 2510,
									"id": 590,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@minting_45": {
									"entryPoint": 1554,
									"id": 45,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@name_470": {
									"entryPoint": 1362,
									"id": 470,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@ownerOf_461": {
									"entryPoint": 1929,
									"id": 461,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@safeTransferFrom_654": {
									"entryPoint": 1898,
									"id": 654,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@safeTransferFrom_680": {
									"entryPoint": 2311,
									"id": 680,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@setAppAll_83": {
									"entryPoint": 1882,
									"id": 83,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@setApprovalForAll_573": {
									"entryPoint": 2289,
									"id": 573,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@supportsInterface_1791": {
									"entryPoint": 2652,
									"id": 1791,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@supportsInterface_420": {
									"entryPoint": 1137,
									"id": 420,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@symbol_479": {
									"entryPoint": 2145,
									"id": 479,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@tokenURI_58": {
									"entryPoint": 2349,
									"id": 58,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@transferFrom_118": {
									"entryPoint": 1122,
									"id": 118,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@transferFrom_636": {
									"entryPoint": 1627,
									"id": 636,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"abi_decode_available_length_t_bytes_memory_ptr": {
									"entryPoint": 6843,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_available_length_t_string_memory_ptr": {
									"entryPoint": 6267,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_t_address": {
									"entryPoint": 5512,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bool": {
									"entryPoint": 6550,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes4": {
									"entryPoint": 5710,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes4_fromMemory": {
									"entryPoint": 8161,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes_memory_ptr": {
									"entryPoint": 6908,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_string_memory_ptr": {
									"entryPoint": 6332,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 5563,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 6650,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 7081,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_bool": {
									"entryPoint": 6570,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 6448,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr": {
									"entryPoint": 6953,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 4
								},
								"abi_decode_tuple_t_addresst_bool": {
									"entryPoint": 6733,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 5583,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bytes4": {
									"entryPoint": 5730,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes4_fromMemory": {
									"entryPoint": 8181,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_string_memory_ptr": {
									"entryPoint": 6377,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 5994,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 6037,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 5784,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack": {
									"entryPoint": 8031,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 5906,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 6693,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 6052,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed": {
									"entryPoint": 8087,
									"id": null,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 8224,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_address__to_t_address_t_uint256_t_address__fromStack_reversed": {
									"entryPoint": 7952,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 5799,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5962,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 6708,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_memory": {
									"entryPoint": 6179,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": 5425,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_allocation_size_t_bytes_memory_ptr": {
									"entryPoint": 6795,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_allocation_size_t_string_memory_ptr": {
									"entryPoint": 6205,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_dataslot_t_string_storage": {
									"entryPoint": 7236,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_bytes_memory_ptr": {
									"entryPoint": 8005,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 5824,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack": {
									"entryPoint": 8015,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 5834,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 7901,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_t_string_storage": {
									"entryPoint": 7512,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"cleanup_t_address": {
									"entryPoint": 5473,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 5773,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bytes4": {
									"entryPoint": 5645,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 5442,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 5532,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clear_storage_range_t_bytes1": {
									"entryPoint": 7478,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"convert_t_uint256_to_t_uint256": {
									"entryPoint": 7371,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 7649,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"copy_calldata_to_memory_with_cleanup": {
									"entryPoint": 6253,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 5850,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"divide_by_32_ceil": {
									"entryPoint": 7254,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 7188,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": 7622,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"finalize_allocation": {
									"entryPoint": 6130,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"identity": {
									"entryPoint": 7362,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"mask_bytes_dynamic": {
									"entryPoint": 7594,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 7856,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 7143,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 6085,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"prepare_store_t_uint256": {
									"entryPoint": 7404,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d": {
									"entryPoint": 6077,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae": {
									"entryPoint": 6081,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": 5438,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 5434,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 5890,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"shift_left_dynamic": {
									"entryPoint": 7269,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"shift_right_unsigned_dynamic": {
									"entryPoint": 7582,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"storage_set_to_zero_t_uint256": {
									"entryPoint": 7454,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"update_byte_slice_dynamic32": {
									"entryPoint": 7281,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"update_storage_value_t_uint256_to_t_uint256": {
									"entryPoint": 7413,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 5490,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 6528,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bytes4": {
									"entryPoint": 5688,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 5541,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"zero_value_for_split_t_uint256": {
									"entryPoint": 7450,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:20534:13",
										"nodeType": "YulBlock",
										"src": "0:20534:13",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:13",
													"nodeType": "YulBlock",
													"src": "47:35:13",
													"statements": [
														{
															"nativeSrc": "57:19:13",
															"nodeType": "YulAssignment",
															"src": "57:19:13",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:13",
																		"nodeType": "YulLiteral",
																		"src": "73:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:13"
																},
																"nativeSrc": "67:9:13",
																"nodeType": "YulFunctionCall",
																"src": "67:9:13"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:13"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:13",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:13",
														"nodeType": "YulTypedName",
														"src": "40:6:13",
														"type": ""
													}
												],
												"src": "7:75:13"
											},
											{
												"body": {
													"nativeSrc": "177:28:13",
													"nodeType": "YulBlock",
													"src": "177:28:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:13",
																		"nodeType": "YulLiteral",
																		"src": "194:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:13",
																		"nodeType": "YulLiteral",
																		"src": "197:1:13",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:13"
																},
																"nativeSrc": "187:12:13",
																"nodeType": "YulFunctionCall",
																"src": "187:12:13"
															},
															"nativeSrc": "187:12:13",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:13"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:13",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:13"
											},
											{
												"body": {
													"nativeSrc": "300:28:13",
													"nodeType": "YulBlock",
													"src": "300:28:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:13",
																		"nodeType": "YulLiteral",
																		"src": "317:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:13",
																		"nodeType": "YulLiteral",
																		"src": "320:1:13",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:13"
																},
																"nativeSrc": "310:12:13",
																"nodeType": "YulFunctionCall",
																"src": "310:12:13"
															},
															"nativeSrc": "310:12:13",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:13"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:13",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:13"
											},
											{
												"body": {
													"nativeSrc": "379:81:13",
													"nodeType": "YulBlock",
													"src": "379:81:13",
													"statements": [
														{
															"nativeSrc": "389:65:13",
															"nodeType": "YulAssignment",
															"src": "389:65:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "404:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "411:42:13",
																		"nodeType": "YulLiteral",
																		"src": "411:42:13",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "400:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:13"
																},
																"nativeSrc": "400:54:13",
																"nodeType": "YulFunctionCall",
																"src": "400:54:13"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "389:7:13",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:13"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "334:126:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "361:5:13",
														"nodeType": "YulTypedName",
														"src": "361:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "371:7:13",
														"nodeType": "YulTypedName",
														"src": "371:7:13",
														"type": ""
													}
												],
												"src": "334:126:13"
											},
											{
												"body": {
													"nativeSrc": "511:51:13",
													"nodeType": "YulBlock",
													"src": "511:51:13",
													"statements": [
														{
															"nativeSrc": "521:35:13",
															"nodeType": "YulAssignment",
															"src": "521:35:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "550:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:13"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "532:17:13",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:13"
																},
																"nativeSrc": "532:24:13",
																"nodeType": "YulFunctionCall",
																"src": "532:24:13"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "521:7:13",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:13"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "466:96:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "493:5:13",
														"nodeType": "YulTypedName",
														"src": "493:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "503:7:13",
														"nodeType": "YulTypedName",
														"src": "503:7:13",
														"type": ""
													}
												],
												"src": "466:96:13"
											},
											{
												"body": {
													"nativeSrc": "611:79:13",
													"nodeType": "YulBlock",
													"src": "611:79:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "668:16:13",
																"nodeType": "YulBlock",
																"src": "668:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "677:1:13",
																					"nodeType": "YulLiteral",
																					"src": "677:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "680:1:13",
																					"nodeType": "YulLiteral",
																					"src": "680:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "670:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "670:6:13"
																			},
																			"nativeSrc": "670:12:13",
																			"nodeType": "YulFunctionCall",
																			"src": "670:12:13"
																		},
																		"nativeSrc": "670:12:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "670:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "634:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "634:5:13"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "659:5:13",
																						"nodeType": "YulIdentifier",
																						"src": "659:5:13"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "641:17:13",
																					"nodeType": "YulIdentifier",
																					"src": "641:17:13"
																				},
																				"nativeSrc": "641:24:13",
																				"nodeType": "YulFunctionCall",
																				"src": "641:24:13"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "631:2:13",
																			"nodeType": "YulIdentifier",
																			"src": "631:2:13"
																		},
																		"nativeSrc": "631:35:13",
																		"nodeType": "YulFunctionCall",
																		"src": "631:35:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "624:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "624:6:13"
																},
																"nativeSrc": "624:43:13",
																"nodeType": "YulFunctionCall",
																"src": "624:43:13"
															},
															"nativeSrc": "621:63:13",
															"nodeType": "YulIf",
															"src": "621:63:13"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "568:122:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "604:5:13",
														"nodeType": "YulTypedName",
														"src": "604:5:13",
														"type": ""
													}
												],
												"src": "568:122:13"
											},
											{
												"body": {
													"nativeSrc": "748:87:13",
													"nodeType": "YulBlock",
													"src": "748:87:13",
													"statements": [
														{
															"nativeSrc": "758:29:13",
															"nodeType": "YulAssignment",
															"src": "758:29:13",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "780:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "780:6:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "767:12:13",
																	"nodeType": "YulIdentifier",
																	"src": "767:12:13"
																},
																"nativeSrc": "767:20:13",
																"nodeType": "YulFunctionCall",
																"src": "767:20:13"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "758:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "758:5:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "823:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "823:5:13"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "796:26:13",
																	"nodeType": "YulIdentifier",
																	"src": "796:26:13"
																},
																"nativeSrc": "796:33:13",
																"nodeType": "YulFunctionCall",
																"src": "796:33:13"
															},
															"nativeSrc": "796:33:13",
															"nodeType": "YulExpressionStatement",
															"src": "796:33:13"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "696:139:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "726:6:13",
														"nodeType": "YulTypedName",
														"src": "726:6:13",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "734:3:13",
														"nodeType": "YulTypedName",
														"src": "734:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "742:5:13",
														"nodeType": "YulTypedName",
														"src": "742:5:13",
														"type": ""
													}
												],
												"src": "696:139:13"
											},
											{
												"body": {
													"nativeSrc": "886:32:13",
													"nodeType": "YulBlock",
													"src": "886:32:13",
													"statements": [
														{
															"nativeSrc": "896:16:13",
															"nodeType": "YulAssignment",
															"src": "896:16:13",
															"value": {
																"name": "value",
																"nativeSrc": "907:5:13",
																"nodeType": "YulIdentifier",
																"src": "907:5:13"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "896:7:13",
																	"nodeType": "YulIdentifier",
																	"src": "896:7:13"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "841:77:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "868:5:13",
														"nodeType": "YulTypedName",
														"src": "868:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "878:7:13",
														"nodeType": "YulTypedName",
														"src": "878:7:13",
														"type": ""
													}
												],
												"src": "841:77:13"
											},
											{
												"body": {
													"nativeSrc": "967:79:13",
													"nodeType": "YulBlock",
													"src": "967:79:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "1024:16:13",
																"nodeType": "YulBlock",
																"src": "1024:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1033:1:13",
																					"nodeType": "YulLiteral",
																					"src": "1033:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1036:1:13",
																					"nodeType": "YulLiteral",
																					"src": "1036:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1026:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "1026:6:13"
																			},
																			"nativeSrc": "1026:12:13",
																			"nodeType": "YulFunctionCall",
																			"src": "1026:12:13"
																		},
																		"nativeSrc": "1026:12:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "1026:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "990:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "990:5:13"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1015:5:13",
																						"nodeType": "YulIdentifier",
																						"src": "1015:5:13"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "997:17:13",
																					"nodeType": "YulIdentifier",
																					"src": "997:17:13"
																				},
																				"nativeSrc": "997:24:13",
																				"nodeType": "YulFunctionCall",
																				"src": "997:24:13"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "987:2:13",
																			"nodeType": "YulIdentifier",
																			"src": "987:2:13"
																		},
																		"nativeSrc": "987:35:13",
																		"nodeType": "YulFunctionCall",
																		"src": "987:35:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "980:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "980:6:13"
																},
																"nativeSrc": "980:43:13",
																"nodeType": "YulFunctionCall",
																"src": "980:43:13"
															},
															"nativeSrc": "977:63:13",
															"nodeType": "YulIf",
															"src": "977:63:13"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "924:122:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "960:5:13",
														"nodeType": "YulTypedName",
														"src": "960:5:13",
														"type": ""
													}
												],
												"src": "924:122:13"
											},
											{
												"body": {
													"nativeSrc": "1104:87:13",
													"nodeType": "YulBlock",
													"src": "1104:87:13",
													"statements": [
														{
															"nativeSrc": "1114:29:13",
															"nodeType": "YulAssignment",
															"src": "1114:29:13",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "1136:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "1136:6:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1123:12:13",
																	"nodeType": "YulIdentifier",
																	"src": "1123:12:13"
																},
																"nativeSrc": "1123:20:13",
																"nodeType": "YulFunctionCall",
																"src": "1123:20:13"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1114:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "1114:5:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1179:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "1179:5:13"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "1152:26:13",
																	"nodeType": "YulIdentifier",
																	"src": "1152:26:13"
																},
																"nativeSrc": "1152:33:13",
																"nodeType": "YulFunctionCall",
																"src": "1152:33:13"
															},
															"nativeSrc": "1152:33:13",
															"nodeType": "YulExpressionStatement",
															"src": "1152:33:13"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nativeSrc": "1052:139:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "1082:6:13",
														"nodeType": "YulTypedName",
														"src": "1082:6:13",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "1090:3:13",
														"nodeType": "YulTypedName",
														"src": "1090:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "1098:5:13",
														"nodeType": "YulTypedName",
														"src": "1098:5:13",
														"type": ""
													}
												],
												"src": "1052:139:13"
											},
											{
												"body": {
													"nativeSrc": "1280:391:13",
													"nodeType": "YulBlock",
													"src": "1280:391:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "1326:83:13",
																"nodeType": "YulBlock",
																"src": "1326:83:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "1328:77:13",
																				"nodeType": "YulIdentifier",
																				"src": "1328:77:13"
																			},
																			"nativeSrc": "1328:79:13",
																			"nodeType": "YulFunctionCall",
																			"src": "1328:79:13"
																		},
																		"nativeSrc": "1328:79:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "1328:79:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1301:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "1301:7:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1310:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "1310:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1297:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "1297:3:13"
																		},
																		"nativeSrc": "1297:23:13",
																		"nodeType": "YulFunctionCall",
																		"src": "1297:23:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1322:2:13",
																		"nodeType": "YulLiteral",
																		"src": "1322:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1293:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "1293:3:13"
																},
																"nativeSrc": "1293:32:13",
																"nodeType": "YulFunctionCall",
																"src": "1293:32:13"
															},
															"nativeSrc": "1290:119:13",
															"nodeType": "YulIf",
															"src": "1290:119:13"
														},
														{
															"nativeSrc": "1419:117:13",
															"nodeType": "YulBlock",
															"src": "1419:117:13",
															"statements": [
																{
																	"nativeSrc": "1434:15:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1434:15:13",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1448:1:13",
																		"nodeType": "YulLiteral",
																		"src": "1448:1:13",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1438:6:13",
																			"nodeType": "YulTypedName",
																			"src": "1438:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1463:63:13",
																	"nodeType": "YulAssignment",
																	"src": "1463:63:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1498:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "1498:9:13"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1509:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "1509:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1494:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "1494:3:13"
																				},
																				"nativeSrc": "1494:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "1494:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1518:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "1518:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "1473:20:13",
																			"nodeType": "YulIdentifier",
																			"src": "1473:20:13"
																		},
																		"nativeSrc": "1473:53:13",
																		"nodeType": "YulFunctionCall",
																		"src": "1473:53:13"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1463:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "1463:6:13"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "1546:118:13",
															"nodeType": "YulBlock",
															"src": "1546:118:13",
															"statements": [
																{
																	"nativeSrc": "1561:16:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1561:16:13",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1575:2:13",
																		"nodeType": "YulLiteral",
																		"src": "1575:2:13",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1565:6:13",
																			"nodeType": "YulTypedName",
																			"src": "1565:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1591:63:13",
																	"nodeType": "YulAssignment",
																	"src": "1591:63:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1626:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "1626:9:13"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1637:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "1637:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1622:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "1622:3:13"
																				},
																				"nativeSrc": "1622:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "1622:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1646:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "1646:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "1601:20:13",
																			"nodeType": "YulIdentifier",
																			"src": "1601:20:13"
																		},
																		"nativeSrc": "1601:53:13",
																		"nodeType": "YulFunctionCall",
																		"src": "1601:53:13"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "1591:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "1591:6:13"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nativeSrc": "1197:474:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1242:9:13",
														"nodeType": "YulTypedName",
														"src": "1242:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1253:7:13",
														"nodeType": "YulTypedName",
														"src": "1253:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1265:6:13",
														"nodeType": "YulTypedName",
														"src": "1265:6:13",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "1273:6:13",
														"nodeType": "YulTypedName",
														"src": "1273:6:13",
														"type": ""
													}
												],
												"src": "1197:474:13"
											},
											{
												"body": {
													"nativeSrc": "1721:105:13",
													"nodeType": "YulBlock",
													"src": "1721:105:13",
													"statements": [
														{
															"nativeSrc": "1731:89:13",
															"nodeType": "YulAssignment",
															"src": "1731:89:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1746:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "1746:5:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1753:66:13",
																		"nodeType": "YulLiteral",
																		"src": "1753:66:13",
																		"type": "",
																		"value": "0xffffffff00000000000000000000000000000000000000000000000000000000"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "1742:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "1742:3:13"
																},
																"nativeSrc": "1742:78:13",
																"nodeType": "YulFunctionCall",
																"src": "1742:78:13"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1731:7:13",
																	"nodeType": "YulIdentifier",
																	"src": "1731:7:13"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bytes4",
												"nativeSrc": "1677:149:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1703:5:13",
														"nodeType": "YulTypedName",
														"src": "1703:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1713:7:13",
														"nodeType": "YulTypedName",
														"src": "1713:7:13",
														"type": ""
													}
												],
												"src": "1677:149:13"
											},
											{
												"body": {
													"nativeSrc": "1874:78:13",
													"nodeType": "YulBlock",
													"src": "1874:78:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "1930:16:13",
																"nodeType": "YulBlock",
																"src": "1930:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1939:1:13",
																					"nodeType": "YulLiteral",
																					"src": "1939:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1942:1:13",
																					"nodeType": "YulLiteral",
																					"src": "1942:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1932:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "1932:6:13"
																			},
																			"nativeSrc": "1932:12:13",
																			"nodeType": "YulFunctionCall",
																			"src": "1932:12:13"
																		},
																		"nativeSrc": "1932:12:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "1932:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1897:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "1897:5:13"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1921:5:13",
																						"nodeType": "YulIdentifier",
																						"src": "1921:5:13"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bytes4",
																					"nativeSrc": "1904:16:13",
																					"nodeType": "YulIdentifier",
																					"src": "1904:16:13"
																				},
																				"nativeSrc": "1904:23:13",
																				"nodeType": "YulFunctionCall",
																				"src": "1904:23:13"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "1894:2:13",
																			"nodeType": "YulIdentifier",
																			"src": "1894:2:13"
																		},
																		"nativeSrc": "1894:34:13",
																		"nodeType": "YulFunctionCall",
																		"src": "1894:34:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1887:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "1887:6:13"
																},
																"nativeSrc": "1887:42:13",
																"nodeType": "YulFunctionCall",
																"src": "1887:42:13"
															},
															"nativeSrc": "1884:62:13",
															"nodeType": "YulIf",
															"src": "1884:62:13"
														}
													]
												},
												"name": "validator_revert_t_bytes4",
												"nativeSrc": "1832:120:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1867:5:13",
														"nodeType": "YulTypedName",
														"src": "1867:5:13",
														"type": ""
													}
												],
												"src": "1832:120:13"
											},
											{
												"body": {
													"nativeSrc": "2009:86:13",
													"nodeType": "YulBlock",
													"src": "2009:86:13",
													"statements": [
														{
															"nativeSrc": "2019:29:13",
															"nodeType": "YulAssignment",
															"src": "2019:29:13",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2041:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "2041:6:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2028:12:13",
																	"nodeType": "YulIdentifier",
																	"src": "2028:12:13"
																},
																"nativeSrc": "2028:20:13",
																"nodeType": "YulFunctionCall",
																"src": "2028:20:13"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2019:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "2019:5:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2083:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "2083:5:13"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bytes4",
																	"nativeSrc": "2057:25:13",
																	"nodeType": "YulIdentifier",
																	"src": "2057:25:13"
																},
																"nativeSrc": "2057:32:13",
																"nodeType": "YulFunctionCall",
																"src": "2057:32:13"
															},
															"nativeSrc": "2057:32:13",
															"nodeType": "YulExpressionStatement",
															"src": "2057:32:13"
														}
													]
												},
												"name": "abi_decode_t_bytes4",
												"nativeSrc": "1958:137:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "1987:6:13",
														"nodeType": "YulTypedName",
														"src": "1987:6:13",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "1995:3:13",
														"nodeType": "YulTypedName",
														"src": "1995:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "2003:5:13",
														"nodeType": "YulTypedName",
														"src": "2003:5:13",
														"type": ""
													}
												],
												"src": "1958:137:13"
											},
											{
												"body": {
													"nativeSrc": "2166:262:13",
													"nodeType": "YulBlock",
													"src": "2166:262:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "2212:83:13",
																"nodeType": "YulBlock",
																"src": "2212:83:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "2214:77:13",
																				"nodeType": "YulIdentifier",
																				"src": "2214:77:13"
																			},
																			"nativeSrc": "2214:79:13",
																			"nodeType": "YulFunctionCall",
																			"src": "2214:79:13"
																		},
																		"nativeSrc": "2214:79:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "2214:79:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2187:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "2187:7:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2196:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "2196:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2183:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "2183:3:13"
																		},
																		"nativeSrc": "2183:23:13",
																		"nodeType": "YulFunctionCall",
																		"src": "2183:23:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2208:2:13",
																		"nodeType": "YulLiteral",
																		"src": "2208:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2179:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "2179:3:13"
																},
																"nativeSrc": "2179:32:13",
																"nodeType": "YulFunctionCall",
																"src": "2179:32:13"
															},
															"nativeSrc": "2176:119:13",
															"nodeType": "YulIf",
															"src": "2176:119:13"
														},
														{
															"nativeSrc": "2305:116:13",
															"nodeType": "YulBlock",
															"src": "2305:116:13",
															"statements": [
																{
																	"nativeSrc": "2320:15:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2320:15:13",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2334:1:13",
																		"nodeType": "YulLiteral",
																		"src": "2334:1:13",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2324:6:13",
																			"nodeType": "YulTypedName",
																			"src": "2324:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2349:62:13",
																	"nodeType": "YulAssignment",
																	"src": "2349:62:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2383:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "2383:9:13"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2394:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "2394:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2379:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "2379:3:13"
																				},
																				"nativeSrc": "2379:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "2379:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2403:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "2403:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes4",
																			"nativeSrc": "2359:19:13",
																			"nodeType": "YulIdentifier",
																			"src": "2359:19:13"
																		},
																		"nativeSrc": "2359:52:13",
																		"nodeType": "YulFunctionCall",
																		"src": "2359:52:13"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "2349:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "2349:6:13"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4",
												"nativeSrc": "2101:327:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2136:9:13",
														"nodeType": "YulTypedName",
														"src": "2136:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2147:7:13",
														"nodeType": "YulTypedName",
														"src": "2147:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2159:6:13",
														"nodeType": "YulTypedName",
														"src": "2159:6:13",
														"type": ""
													}
												],
												"src": "2101:327:13"
											},
											{
												"body": {
													"nativeSrc": "2476:48:13",
													"nodeType": "YulBlock",
													"src": "2476:48:13",
													"statements": [
														{
															"nativeSrc": "2486:32:13",
															"nodeType": "YulAssignment",
															"src": "2486:32:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2511:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "2511:5:13"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "2504:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "2504:6:13"
																		},
																		"nativeSrc": "2504:13:13",
																		"nodeType": "YulFunctionCall",
																		"src": "2504:13:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2497:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "2497:6:13"
																},
																"nativeSrc": "2497:21:13",
																"nodeType": "YulFunctionCall",
																"src": "2497:21:13"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2486:7:13",
																	"nodeType": "YulIdentifier",
																	"src": "2486:7:13"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nativeSrc": "2434:90:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2458:5:13",
														"nodeType": "YulTypedName",
														"src": "2458:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2468:7:13",
														"nodeType": "YulTypedName",
														"src": "2468:7:13",
														"type": ""
													}
												],
												"src": "2434:90:13"
											},
											{
												"body": {
													"nativeSrc": "2589:50:13",
													"nodeType": "YulBlock",
													"src": "2589:50:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2606:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "2606:3:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2626:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "2626:5:13"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nativeSrc": "2611:14:13",
																			"nodeType": "YulIdentifier",
																			"src": "2611:14:13"
																		},
																		"nativeSrc": "2611:21:13",
																		"nodeType": "YulFunctionCall",
																		"src": "2611:21:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2599:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "2599:6:13"
																},
																"nativeSrc": "2599:34:13",
																"nodeType": "YulFunctionCall",
																"src": "2599:34:13"
															},
															"nativeSrc": "2599:34:13",
															"nodeType": "YulExpressionStatement",
															"src": "2599:34:13"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nativeSrc": "2530:109:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2577:5:13",
														"nodeType": "YulTypedName",
														"src": "2577:5:13",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "2584:3:13",
														"nodeType": "YulTypedName",
														"src": "2584:3:13",
														"type": ""
													}
												],
												"src": "2530:109:13"
											},
											{
												"body": {
													"nativeSrc": "2737:118:13",
													"nodeType": "YulBlock",
													"src": "2737:118:13",
													"statements": [
														{
															"nativeSrc": "2747:26:13",
															"nodeType": "YulAssignment",
															"src": "2747:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2759:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "2759:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2770:2:13",
																		"nodeType": "YulLiteral",
																		"src": "2770:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2755:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "2755:3:13"
																},
																"nativeSrc": "2755:18:13",
																"nodeType": "YulFunctionCall",
																"src": "2755:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2747:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "2747:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "2821:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "2821:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2834:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "2834:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2845:1:13",
																				"nodeType": "YulLiteral",
																				"src": "2845:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2830:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "2830:3:13"
																		},
																		"nativeSrc": "2830:17:13",
																		"nodeType": "YulFunctionCall",
																		"src": "2830:17:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nativeSrc": "2783:37:13",
																	"nodeType": "YulIdentifier",
																	"src": "2783:37:13"
																},
																"nativeSrc": "2783:65:13",
																"nodeType": "YulFunctionCall",
																"src": "2783:65:13"
															},
															"nativeSrc": "2783:65:13",
															"nodeType": "YulExpressionStatement",
															"src": "2783:65:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "2645:210:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2709:9:13",
														"nodeType": "YulTypedName",
														"src": "2709:9:13",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2721:6:13",
														"nodeType": "YulTypedName",
														"src": "2721:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2732:4:13",
														"nodeType": "YulTypedName",
														"src": "2732:4:13",
														"type": ""
													}
												],
												"src": "2645:210:13"
											},
											{
												"body": {
													"nativeSrc": "2920:40:13",
													"nodeType": "YulBlock",
													"src": "2920:40:13",
													"statements": [
														{
															"nativeSrc": "2931:22:13",
															"nodeType": "YulAssignment",
															"src": "2931:22:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2947:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "2947:5:13"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "2941:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "2941:5:13"
																},
																"nativeSrc": "2941:12:13",
																"nodeType": "YulFunctionCall",
																"src": "2941:12:13"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "2931:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "2931:6:13"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "2861:99:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2903:5:13",
														"nodeType": "YulTypedName",
														"src": "2903:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "2913:6:13",
														"nodeType": "YulTypedName",
														"src": "2913:6:13",
														"type": ""
													}
												],
												"src": "2861:99:13"
											},
											{
												"body": {
													"nativeSrc": "3062:73:13",
													"nodeType": "YulBlock",
													"src": "3062:73:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3079:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "3079:3:13"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "3084:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "3084:6:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3072:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "3072:6:13"
																},
																"nativeSrc": "3072:19:13",
																"nodeType": "YulFunctionCall",
																"src": "3072:19:13"
															},
															"nativeSrc": "3072:19:13",
															"nodeType": "YulExpressionStatement",
															"src": "3072:19:13"
														},
														{
															"nativeSrc": "3100:29:13",
															"nodeType": "YulAssignment",
															"src": "3100:29:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3119:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "3119:3:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3124:4:13",
																		"nodeType": "YulLiteral",
																		"src": "3124:4:13",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3115:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "3115:3:13"
																},
																"nativeSrc": "3115:14:13",
																"nodeType": "YulFunctionCall",
																"src": "3115:14:13"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "3100:11:13",
																	"nodeType": "YulIdentifier",
																	"src": "3100:11:13"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "2966:169:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "3034:3:13",
														"nodeType": "YulTypedName",
														"src": "3034:3:13",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "3039:6:13",
														"nodeType": "YulTypedName",
														"src": "3039:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "3050:11:13",
														"nodeType": "YulTypedName",
														"src": "3050:11:13",
														"type": ""
													}
												],
												"src": "2966:169:13"
											},
											{
												"body": {
													"nativeSrc": "3203:184:13",
													"nodeType": "YulBlock",
													"src": "3203:184:13",
													"statements": [
														{
															"nativeSrc": "3213:10:13",
															"nodeType": "YulVariableDeclaration",
															"src": "3213:10:13",
															"value": {
																"kind": "number",
																"nativeSrc": "3222:1:13",
																"nodeType": "YulLiteral",
																"src": "3222:1:13",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nativeSrc": "3217:1:13",
																	"nodeType": "YulTypedName",
																	"src": "3217:1:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "3282:63:13",
																"nodeType": "YulBlock",
																"src": "3282:63:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nativeSrc": "3307:3:13",
																							"nodeType": "YulIdentifier",
																							"src": "3307:3:13"
																						},
																						{
																							"name": "i",
																							"nativeSrc": "3312:1:13",
																							"nodeType": "YulIdentifier",
																							"src": "3312:1:13"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "3303:3:13",
																						"nodeType": "YulIdentifier",
																						"src": "3303:3:13"
																					},
																					"nativeSrc": "3303:11:13",
																					"nodeType": "YulFunctionCall",
																					"src": "3303:11:13"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nativeSrc": "3326:3:13",
																									"nodeType": "YulIdentifier",
																									"src": "3326:3:13"
																								},
																								{
																									"name": "i",
																									"nativeSrc": "3331:1:13",
																									"nodeType": "YulIdentifier",
																									"src": "3331:1:13"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "3322:3:13",
																								"nodeType": "YulIdentifier",
																								"src": "3322:3:13"
																							},
																							"nativeSrc": "3322:11:13",
																							"nodeType": "YulFunctionCall",
																							"src": "3322:11:13"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nativeSrc": "3316:5:13",
																						"nodeType": "YulIdentifier",
																						"src": "3316:5:13"
																					},
																					"nativeSrc": "3316:18:13",
																					"nodeType": "YulFunctionCall",
																					"src": "3316:18:13"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "3296:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "3296:6:13"
																			},
																			"nativeSrc": "3296:39:13",
																			"nodeType": "YulFunctionCall",
																			"src": "3296:39:13"
																		},
																		"nativeSrc": "3296:39:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "3296:39:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nativeSrc": "3243:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "3243:1:13"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "3246:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "3246:6:13"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "3240:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "3240:2:13"
																},
																"nativeSrc": "3240:13:13",
																"nodeType": "YulFunctionCall",
																"src": "3240:13:13"
															},
															"nativeSrc": "3232:113:13",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "3254:19:13",
																"nodeType": "YulBlock",
																"src": "3254:19:13",
																"statements": [
																	{
																		"nativeSrc": "3256:15:13",
																		"nodeType": "YulAssignment",
																		"src": "3256:15:13",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nativeSrc": "3265:1:13",
																					"nodeType": "YulIdentifier",
																					"src": "3265:1:13"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3268:2:13",
																					"nodeType": "YulLiteral",
																					"src": "3268:2:13",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "3261:3:13",
																				"nodeType": "YulIdentifier",
																				"src": "3261:3:13"
																			},
																			"nativeSrc": "3261:10:13",
																			"nodeType": "YulFunctionCall",
																			"src": "3261:10:13"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nativeSrc": "3256:1:13",
																				"nodeType": "YulIdentifier",
																				"src": "3256:1:13"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "3236:3:13",
																"nodeType": "YulBlock",
																"src": "3236:3:13",
																"statements": []
															},
															"src": "3232:113:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "3365:3:13",
																				"nodeType": "YulIdentifier",
																				"src": "3365:3:13"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "3370:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "3370:6:13"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3361:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "3361:3:13"
																		},
																		"nativeSrc": "3361:16:13",
																		"nodeType": "YulFunctionCall",
																		"src": "3361:16:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3379:1:13",
																		"nodeType": "YulLiteral",
																		"src": "3379:1:13",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3354:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "3354:6:13"
																},
																"nativeSrc": "3354:27:13",
																"nodeType": "YulFunctionCall",
																"src": "3354:27:13"
															},
															"nativeSrc": "3354:27:13",
															"nodeType": "YulExpressionStatement",
															"src": "3354:27:13"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nativeSrc": "3141:246:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "3185:3:13",
														"nodeType": "YulTypedName",
														"src": "3185:3:13",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "3190:3:13",
														"nodeType": "YulTypedName",
														"src": "3190:3:13",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "3195:6:13",
														"nodeType": "YulTypedName",
														"src": "3195:6:13",
														"type": ""
													}
												],
												"src": "3141:246:13"
											},
											{
												"body": {
													"nativeSrc": "3441:54:13",
													"nodeType": "YulBlock",
													"src": "3441:54:13",
													"statements": [
														{
															"nativeSrc": "3451:38:13",
															"nodeType": "YulAssignment",
															"src": "3451:38:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3469:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "3469:5:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3476:2:13",
																				"nodeType": "YulLiteral",
																				"src": "3476:2:13",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3465:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "3465:3:13"
																		},
																		"nativeSrc": "3465:14:13",
																		"nodeType": "YulFunctionCall",
																		"src": "3465:14:13"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "3485:2:13",
																				"nodeType": "YulLiteral",
																				"src": "3485:2:13",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "3481:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "3481:3:13"
																		},
																		"nativeSrc": "3481:7:13",
																		"nodeType": "YulFunctionCall",
																		"src": "3481:7:13"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "3461:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "3461:3:13"
																},
																"nativeSrc": "3461:28:13",
																"nodeType": "YulFunctionCall",
																"src": "3461:28:13"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "3451:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "3451:6:13"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nativeSrc": "3393:102:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3424:5:13",
														"nodeType": "YulTypedName",
														"src": "3424:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "3434:6:13",
														"nodeType": "YulTypedName",
														"src": "3434:6:13",
														"type": ""
													}
												],
												"src": "3393:102:13"
											},
											{
												"body": {
													"nativeSrc": "3593:285:13",
													"nodeType": "YulBlock",
													"src": "3593:285:13",
													"statements": [
														{
															"nativeSrc": "3603:53:13",
															"nodeType": "YulVariableDeclaration",
															"src": "3603:53:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3650:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "3650:5:13"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "3617:32:13",
																	"nodeType": "YulIdentifier",
																	"src": "3617:32:13"
																},
																"nativeSrc": "3617:39:13",
																"nodeType": "YulFunctionCall",
																"src": "3617:39:13"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "3607:6:13",
																	"nodeType": "YulTypedName",
																	"src": "3607:6:13",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "3665:78:13",
															"nodeType": "YulAssignment",
															"src": "3665:78:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3731:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "3731:3:13"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "3736:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "3736:6:13"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "3672:58:13",
																	"nodeType": "YulIdentifier",
																	"src": "3672:58:13"
																},
																"nativeSrc": "3672:71:13",
																"nodeType": "YulFunctionCall",
																"src": "3672:71:13"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "3665:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "3665:3:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3791:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "3791:5:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3798:4:13",
																				"nodeType": "YulLiteral",
																				"src": "3798:4:13",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3787:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "3787:3:13"
																		},
																		"nativeSrc": "3787:16:13",
																		"nodeType": "YulFunctionCall",
																		"src": "3787:16:13"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "3805:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "3805:3:13"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "3810:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "3810:6:13"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "3752:34:13",
																	"nodeType": "YulIdentifier",
																	"src": "3752:34:13"
																},
																"nativeSrc": "3752:65:13",
																"nodeType": "YulFunctionCall",
																"src": "3752:65:13"
															},
															"nativeSrc": "3752:65:13",
															"nodeType": "YulExpressionStatement",
															"src": "3752:65:13"
														},
														{
															"nativeSrc": "3826:46:13",
															"nodeType": "YulAssignment",
															"src": "3826:46:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3837:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "3837:3:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "3864:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "3864:6:13"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "3842:21:13",
																			"nodeType": "YulIdentifier",
																			"src": "3842:21:13"
																		},
																		"nativeSrc": "3842:29:13",
																		"nodeType": "YulFunctionCall",
																		"src": "3842:29:13"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3833:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "3833:3:13"
																},
																"nativeSrc": "3833:39:13",
																"nodeType": "YulFunctionCall",
																"src": "3833:39:13"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "3826:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "3826:3:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "3501:377:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3574:5:13",
														"nodeType": "YulTypedName",
														"src": "3574:5:13",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3581:3:13",
														"nodeType": "YulTypedName",
														"src": "3581:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "3589:3:13",
														"nodeType": "YulTypedName",
														"src": "3589:3:13",
														"type": ""
													}
												],
												"src": "3501:377:13"
											},
											{
												"body": {
													"nativeSrc": "4002:195:13",
													"nodeType": "YulBlock",
													"src": "4002:195:13",
													"statements": [
														{
															"nativeSrc": "4012:26:13",
															"nodeType": "YulAssignment",
															"src": "4012:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4024:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "4024:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4035:2:13",
																		"nodeType": "YulLiteral",
																		"src": "4035:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4020:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "4020:3:13"
																},
																"nativeSrc": "4020:18:13",
																"nodeType": "YulFunctionCall",
																"src": "4020:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4012:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "4012:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4059:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "4059:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4070:1:13",
																				"nodeType": "YulLiteral",
																				"src": "4070:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4055:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "4055:3:13"
																		},
																		"nativeSrc": "4055:17:13",
																		"nodeType": "YulFunctionCall",
																		"src": "4055:17:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "4078:4:13",
																				"nodeType": "YulIdentifier",
																				"src": "4078:4:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4084:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "4084:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4074:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "4074:3:13"
																		},
																		"nativeSrc": "4074:20:13",
																		"nodeType": "YulFunctionCall",
																		"src": "4074:20:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4048:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "4048:6:13"
																},
																"nativeSrc": "4048:47:13",
																"nodeType": "YulFunctionCall",
																"src": "4048:47:13"
															},
															"nativeSrc": "4048:47:13",
															"nodeType": "YulExpressionStatement",
															"src": "4048:47:13"
														},
														{
															"nativeSrc": "4104:86:13",
															"nodeType": "YulAssignment",
															"src": "4104:86:13",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "4176:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "4176:6:13"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "4185:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "4185:4:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "4112:63:13",
																	"nodeType": "YulIdentifier",
																	"src": "4112:63:13"
																},
																"nativeSrc": "4112:78:13",
																"nodeType": "YulFunctionCall",
																"src": "4112:78:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4104:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "4104:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "3884:313:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3974:9:13",
														"nodeType": "YulTypedName",
														"src": "3974:9:13",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3986:6:13",
														"nodeType": "YulTypedName",
														"src": "3986:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3997:4:13",
														"nodeType": "YulTypedName",
														"src": "3997:4:13",
														"type": ""
													}
												],
												"src": "3884:313:13"
											},
											{
												"body": {
													"nativeSrc": "4269:263:13",
													"nodeType": "YulBlock",
													"src": "4269:263:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "4315:83:13",
																"nodeType": "YulBlock",
																"src": "4315:83:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "4317:77:13",
																				"nodeType": "YulIdentifier",
																				"src": "4317:77:13"
																			},
																			"nativeSrc": "4317:79:13",
																			"nodeType": "YulFunctionCall",
																			"src": "4317:79:13"
																		},
																		"nativeSrc": "4317:79:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "4317:79:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4290:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "4290:7:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4299:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "4299:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4286:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "4286:3:13"
																		},
																		"nativeSrc": "4286:23:13",
																		"nodeType": "YulFunctionCall",
																		"src": "4286:23:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4311:2:13",
																		"nodeType": "YulLiteral",
																		"src": "4311:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "4282:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "4282:3:13"
																},
																"nativeSrc": "4282:32:13",
																"nodeType": "YulFunctionCall",
																"src": "4282:32:13"
															},
															"nativeSrc": "4279:119:13",
															"nodeType": "YulIf",
															"src": "4279:119:13"
														},
														{
															"nativeSrc": "4408:117:13",
															"nodeType": "YulBlock",
															"src": "4408:117:13",
															"statements": [
																{
																	"nativeSrc": "4423:15:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4423:15:13",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4437:1:13",
																		"nodeType": "YulLiteral",
																		"src": "4437:1:13",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4427:6:13",
																			"nodeType": "YulTypedName",
																			"src": "4427:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4452:63:13",
																	"nodeType": "YulAssignment",
																	"src": "4452:63:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4487:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "4487:9:13"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4498:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "4498:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4483:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "4483:3:13"
																				},
																				"nativeSrc": "4483:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "4483:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4507:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "4507:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "4462:20:13",
																			"nodeType": "YulIdentifier",
																			"src": "4462:20:13"
																		},
																		"nativeSrc": "4462:53:13",
																		"nodeType": "YulFunctionCall",
																		"src": "4462:53:13"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "4452:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "4452:6:13"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nativeSrc": "4203:329:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4239:9:13",
														"nodeType": "YulTypedName",
														"src": "4239:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "4250:7:13",
														"nodeType": "YulTypedName",
														"src": "4250:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "4262:6:13",
														"nodeType": "YulTypedName",
														"src": "4262:6:13",
														"type": ""
													}
												],
												"src": "4203:329:13"
											},
											{
												"body": {
													"nativeSrc": "4603:53:13",
													"nodeType": "YulBlock",
													"src": "4603:53:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4620:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "4620:3:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4643:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "4643:5:13"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "4625:17:13",
																			"nodeType": "YulIdentifier",
																			"src": "4625:17:13"
																		},
																		"nativeSrc": "4625:24:13",
																		"nodeType": "YulFunctionCall",
																		"src": "4625:24:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4613:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "4613:6:13"
																},
																"nativeSrc": "4613:37:13",
																"nodeType": "YulFunctionCall",
																"src": "4613:37:13"
															},
															"nativeSrc": "4613:37:13",
															"nodeType": "YulExpressionStatement",
															"src": "4613:37:13"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "4538:118:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4591:5:13",
														"nodeType": "YulTypedName",
														"src": "4591:5:13",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "4598:3:13",
														"nodeType": "YulTypedName",
														"src": "4598:3:13",
														"type": ""
													}
												],
												"src": "4538:118:13"
											},
											{
												"body": {
													"nativeSrc": "4760:124:13",
													"nodeType": "YulBlock",
													"src": "4760:124:13",
													"statements": [
														{
															"nativeSrc": "4770:26:13",
															"nodeType": "YulAssignment",
															"src": "4770:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4782:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "4782:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4793:2:13",
																		"nodeType": "YulLiteral",
																		"src": "4793:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4778:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "4778:3:13"
																},
																"nativeSrc": "4778:18:13",
																"nodeType": "YulFunctionCall",
																"src": "4778:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4770:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "4770:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "4850:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "4850:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4863:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "4863:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4874:1:13",
																				"nodeType": "YulLiteral",
																				"src": "4874:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4859:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "4859:3:13"
																		},
																		"nativeSrc": "4859:17:13",
																		"nodeType": "YulFunctionCall",
																		"src": "4859:17:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "4806:43:13",
																	"nodeType": "YulIdentifier",
																	"src": "4806:43:13"
																},
																"nativeSrc": "4806:71:13",
																"nodeType": "YulFunctionCall",
																"src": "4806:71:13"
															},
															"nativeSrc": "4806:71:13",
															"nodeType": "YulExpressionStatement",
															"src": "4806:71:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "4662:222:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4732:9:13",
														"nodeType": "YulTypedName",
														"src": "4732:9:13",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "4744:6:13",
														"nodeType": "YulTypedName",
														"src": "4744:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4755:4:13",
														"nodeType": "YulTypedName",
														"src": "4755:4:13",
														"type": ""
													}
												],
												"src": "4662:222:13"
											},
											{
												"body": {
													"nativeSrc": "4979:28:13",
													"nodeType": "YulBlock",
													"src": "4979:28:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4996:1:13",
																		"nodeType": "YulLiteral",
																		"src": "4996:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4999:1:13",
																		"nodeType": "YulLiteral",
																		"src": "4999:1:13",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "4989:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "4989:6:13"
																},
																"nativeSrc": "4989:12:13",
																"nodeType": "YulFunctionCall",
																"src": "4989:12:13"
															},
															"nativeSrc": "4989:12:13",
															"nodeType": "YulExpressionStatement",
															"src": "4989:12:13"
														}
													]
												},
												"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
												"nativeSrc": "4890:117:13",
												"nodeType": "YulFunctionDefinition",
												"src": "4890:117:13"
											},
											{
												"body": {
													"nativeSrc": "5102:28:13",
													"nodeType": "YulBlock",
													"src": "5102:28:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5119:1:13",
																		"nodeType": "YulLiteral",
																		"src": "5119:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5122:1:13",
																		"nodeType": "YulLiteral",
																		"src": "5122:1:13",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "5112:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "5112:6:13"
																},
																"nativeSrc": "5112:12:13",
																"nodeType": "YulFunctionCall",
																"src": "5112:12:13"
															},
															"nativeSrc": "5112:12:13",
															"nodeType": "YulExpressionStatement",
															"src": "5112:12:13"
														}
													]
												},
												"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
												"nativeSrc": "5013:117:13",
												"nodeType": "YulFunctionDefinition",
												"src": "5013:117:13"
											},
											{
												"body": {
													"nativeSrc": "5164:152:13",
													"nodeType": "YulBlock",
													"src": "5164:152:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5181:1:13",
																		"nodeType": "YulLiteral",
																		"src": "5181:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5184:77:13",
																		"nodeType": "YulLiteral",
																		"src": "5184:77:13",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5174:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "5174:6:13"
																},
																"nativeSrc": "5174:88:13",
																"nodeType": "YulFunctionCall",
																"src": "5174:88:13"
															},
															"nativeSrc": "5174:88:13",
															"nodeType": "YulExpressionStatement",
															"src": "5174:88:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5278:1:13",
																		"nodeType": "YulLiteral",
																		"src": "5278:1:13",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5281:4:13",
																		"nodeType": "YulLiteral",
																		"src": "5281:4:13",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5271:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "5271:6:13"
																},
																"nativeSrc": "5271:15:13",
																"nodeType": "YulFunctionCall",
																"src": "5271:15:13"
															},
															"nativeSrc": "5271:15:13",
															"nodeType": "YulExpressionStatement",
															"src": "5271:15:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5302:1:13",
																		"nodeType": "YulLiteral",
																		"src": "5302:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5305:4:13",
																		"nodeType": "YulLiteral",
																		"src": "5305:4:13",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "5295:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "5295:6:13"
																},
																"nativeSrc": "5295:15:13",
																"nodeType": "YulFunctionCall",
																"src": "5295:15:13"
															},
															"nativeSrc": "5295:15:13",
															"nodeType": "YulExpressionStatement",
															"src": "5295:15:13"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "5136:180:13",
												"nodeType": "YulFunctionDefinition",
												"src": "5136:180:13"
											},
											{
												"body": {
													"nativeSrc": "5365:238:13",
													"nodeType": "YulBlock",
													"src": "5365:238:13",
													"statements": [
														{
															"nativeSrc": "5375:58:13",
															"nodeType": "YulVariableDeclaration",
															"src": "5375:58:13",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "5397:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "5397:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "size",
																				"nativeSrc": "5427:4:13",
																				"nodeType": "YulIdentifier",
																				"src": "5427:4:13"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "5405:21:13",
																			"nodeType": "YulIdentifier",
																			"src": "5405:21:13"
																		},
																		"nativeSrc": "5405:27:13",
																		"nodeType": "YulFunctionCall",
																		"src": "5405:27:13"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5393:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "5393:3:13"
																},
																"nativeSrc": "5393:40:13",
																"nodeType": "YulFunctionCall",
																"src": "5393:40:13"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nativeSrc": "5379:10:13",
																	"nodeType": "YulTypedName",
																	"src": "5379:10:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "5544:22:13",
																"nodeType": "YulBlock",
																"src": "5544:22:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "5546:16:13",
																				"nodeType": "YulIdentifier",
																				"src": "5546:16:13"
																			},
																			"nativeSrc": "5546:18:13",
																			"nodeType": "YulFunctionCall",
																			"src": "5546:18:13"
																		},
																		"nativeSrc": "5546:18:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "5546:18:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "5487:10:13",
																				"nodeType": "YulIdentifier",
																				"src": "5487:10:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5499:18:13",
																				"nodeType": "YulLiteral",
																				"src": "5499:18:13",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "5484:2:13",
																			"nodeType": "YulIdentifier",
																			"src": "5484:2:13"
																		},
																		"nativeSrc": "5484:34:13",
																		"nodeType": "YulFunctionCall",
																		"src": "5484:34:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "5523:10:13",
																				"nodeType": "YulIdentifier",
																				"src": "5523:10:13"
																			},
																			{
																				"name": "memPtr",
																				"nativeSrc": "5535:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "5535:6:13"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "5520:2:13",
																			"nodeType": "YulIdentifier",
																			"src": "5520:2:13"
																		},
																		"nativeSrc": "5520:22:13",
																		"nodeType": "YulFunctionCall",
																		"src": "5520:22:13"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "5481:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "5481:2:13"
																},
																"nativeSrc": "5481:62:13",
																"nodeType": "YulFunctionCall",
																"src": "5481:62:13"
															},
															"nativeSrc": "5478:88:13",
															"nodeType": "YulIf",
															"src": "5478:88:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5582:2:13",
																		"nodeType": "YulLiteral",
																		"src": "5582:2:13",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nativeSrc": "5586:10:13",
																		"nodeType": "YulIdentifier",
																		"src": "5586:10:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5575:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "5575:6:13"
																},
																"nativeSrc": "5575:22:13",
																"nodeType": "YulFunctionCall",
																"src": "5575:22:13"
															},
															"nativeSrc": "5575:22:13",
															"nodeType": "YulExpressionStatement",
															"src": "5575:22:13"
														}
													]
												},
												"name": "finalize_allocation",
												"nativeSrc": "5322:281:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "5351:6:13",
														"nodeType": "YulTypedName",
														"src": "5351:6:13",
														"type": ""
													},
													{
														"name": "size",
														"nativeSrc": "5359:4:13",
														"nodeType": "YulTypedName",
														"src": "5359:4:13",
														"type": ""
													}
												],
												"src": "5322:281:13"
											},
											{
												"body": {
													"nativeSrc": "5650:88:13",
													"nodeType": "YulBlock",
													"src": "5650:88:13",
													"statements": [
														{
															"nativeSrc": "5660:30:13",
															"nodeType": "YulAssignment",
															"src": "5660:30:13",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "allocate_unbounded",
																	"nativeSrc": "5670:18:13",
																	"nodeType": "YulIdentifier",
																	"src": "5670:18:13"
																},
																"nativeSrc": "5670:20:13",
																"nodeType": "YulFunctionCall",
																"src": "5670:20:13"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "5660:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "5660:6:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "5719:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "5719:6:13"
																	},
																	{
																		"name": "size",
																		"nativeSrc": "5727:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "5727:4:13"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nativeSrc": "5699:19:13",
																	"nodeType": "YulIdentifier",
																	"src": "5699:19:13"
																},
																"nativeSrc": "5699:33:13",
																"nodeType": "YulFunctionCall",
																"src": "5699:33:13"
															},
															"nativeSrc": "5699:33:13",
															"nodeType": "YulExpressionStatement",
															"src": "5699:33:13"
														}
													]
												},
												"name": "allocate_memory",
												"nativeSrc": "5609:129:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "size",
														"nativeSrc": "5634:4:13",
														"nodeType": "YulTypedName",
														"src": "5634:4:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "5643:6:13",
														"nodeType": "YulTypedName",
														"src": "5643:6:13",
														"type": ""
													}
												],
												"src": "5609:129:13"
											},
											{
												"body": {
													"nativeSrc": "5811:241:13",
													"nodeType": "YulBlock",
													"src": "5811:241:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "5916:22:13",
																"nodeType": "YulBlock",
																"src": "5916:22:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "5918:16:13",
																				"nodeType": "YulIdentifier",
																				"src": "5918:16:13"
																			},
																			"nativeSrc": "5918:18:13",
																			"nodeType": "YulFunctionCall",
																			"src": "5918:18:13"
																		},
																		"nativeSrc": "5918:18:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "5918:18:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "5888:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "5888:6:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5896:18:13",
																		"nodeType": "YulLiteral",
																		"src": "5896:18:13",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "5885:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "5885:2:13"
																},
																"nativeSrc": "5885:30:13",
																"nodeType": "YulFunctionCall",
																"src": "5885:30:13"
															},
															"nativeSrc": "5882:56:13",
															"nodeType": "YulIf",
															"src": "5882:56:13"
														},
														{
															"nativeSrc": "5948:37:13",
															"nodeType": "YulAssignment",
															"src": "5948:37:13",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "5978:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "5978:6:13"
																	}
																],
																"functionName": {
																	"name": "round_up_to_mul_of_32",
																	"nativeSrc": "5956:21:13",
																	"nodeType": "YulIdentifier",
																	"src": "5956:21:13"
																},
																"nativeSrc": "5956:29:13",
																"nodeType": "YulFunctionCall",
																"src": "5956:29:13"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "5948:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "5948:4:13"
																}
															]
														},
														{
															"nativeSrc": "6022:23:13",
															"nodeType": "YulAssignment",
															"src": "6022:23:13",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nativeSrc": "6034:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "6034:4:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6040:4:13",
																		"nodeType": "YulLiteral",
																		"src": "6040:4:13",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6030:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "6030:3:13"
																},
																"nativeSrc": "6030:15:13",
																"nodeType": "YulFunctionCall",
																"src": "6030:15:13"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "6022:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "6022:4:13"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_string_memory_ptr",
												"nativeSrc": "5744:308:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nativeSrc": "5795:6:13",
														"nodeType": "YulTypedName",
														"src": "5795:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nativeSrc": "5806:4:13",
														"nodeType": "YulTypedName",
														"src": "5806:4:13",
														"type": ""
													}
												],
												"src": "5744:308:13"
											},
											{
												"body": {
													"nativeSrc": "6122:82:13",
													"nodeType": "YulBlock",
													"src": "6122:82:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nativeSrc": "6145:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "6145:3:13"
																	},
																	{
																		"name": "src",
																		"nativeSrc": "6150:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "6150:3:13"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "6155:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "6155:6:13"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nativeSrc": "6132:12:13",
																	"nodeType": "YulIdentifier",
																	"src": "6132:12:13"
																},
																"nativeSrc": "6132:30:13",
																"nodeType": "YulFunctionCall",
																"src": "6132:30:13"
															},
															"nativeSrc": "6132:30:13",
															"nodeType": "YulExpressionStatement",
															"src": "6132:30:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "6182:3:13",
																				"nodeType": "YulIdentifier",
																				"src": "6182:3:13"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "6187:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "6187:6:13"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6178:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "6178:3:13"
																		},
																		"nativeSrc": "6178:16:13",
																		"nodeType": "YulFunctionCall",
																		"src": "6178:16:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6196:1:13",
																		"nodeType": "YulLiteral",
																		"src": "6196:1:13",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6171:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "6171:6:13"
																},
																"nativeSrc": "6171:27:13",
																"nodeType": "YulFunctionCall",
																"src": "6171:27:13"
															},
															"nativeSrc": "6171:27:13",
															"nodeType": "YulExpressionStatement",
															"src": "6171:27:13"
														}
													]
												},
												"name": "copy_calldata_to_memory_with_cleanup",
												"nativeSrc": "6058:146:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "6104:3:13",
														"nodeType": "YulTypedName",
														"src": "6104:3:13",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "6109:3:13",
														"nodeType": "YulTypedName",
														"src": "6109:3:13",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "6114:6:13",
														"nodeType": "YulTypedName",
														"src": "6114:6:13",
														"type": ""
													}
												],
												"src": "6058:146:13"
											},
											{
												"body": {
													"nativeSrc": "6294:341:13",
													"nodeType": "YulBlock",
													"src": "6294:341:13",
													"statements": [
														{
															"nativeSrc": "6304:75:13",
															"nodeType": "YulAssignment",
															"src": "6304:75:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "6371:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "6371:6:13"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_string_memory_ptr",
																			"nativeSrc": "6329:41:13",
																			"nodeType": "YulIdentifier",
																			"src": "6329:41:13"
																		},
																		"nativeSrc": "6329:49:13",
																		"nodeType": "YulFunctionCall",
																		"src": "6329:49:13"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nativeSrc": "6313:15:13",
																	"nodeType": "YulIdentifier",
																	"src": "6313:15:13"
																},
																"nativeSrc": "6313:66:13",
																"nodeType": "YulFunctionCall",
																"src": "6313:66:13"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "6304:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "6304:5:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "6395:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "6395:5:13"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "6402:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "6402:6:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6388:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "6388:6:13"
																},
																"nativeSrc": "6388:21:13",
																"nodeType": "YulFunctionCall",
																"src": "6388:21:13"
															},
															"nativeSrc": "6388:21:13",
															"nodeType": "YulExpressionStatement",
															"src": "6388:21:13"
														},
														{
															"nativeSrc": "6418:27:13",
															"nodeType": "YulVariableDeclaration",
															"src": "6418:27:13",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "6433:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "6433:5:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6440:4:13",
																		"nodeType": "YulLiteral",
																		"src": "6440:4:13",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6429:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "6429:3:13"
																},
																"nativeSrc": "6429:16:13",
																"nodeType": "YulFunctionCall",
																"src": "6429:16:13"
															},
															"variables": [
																{
																	"name": "dst",
																	"nativeSrc": "6422:3:13",
																	"nodeType": "YulTypedName",
																	"src": "6422:3:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "6483:83:13",
																"nodeType": "YulBlock",
																"src": "6483:83:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
																				"nativeSrc": "6485:77:13",
																				"nodeType": "YulIdentifier",
																				"src": "6485:77:13"
																			},
																			"nativeSrc": "6485:79:13",
																			"nodeType": "YulFunctionCall",
																			"src": "6485:79:13"
																		},
																		"nativeSrc": "6485:79:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "6485:79:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nativeSrc": "6464:3:13",
																				"nodeType": "YulIdentifier",
																				"src": "6464:3:13"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "6469:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "6469:6:13"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6460:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "6460:3:13"
																		},
																		"nativeSrc": "6460:16:13",
																		"nodeType": "YulFunctionCall",
																		"src": "6460:16:13"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "6478:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "6478:3:13"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "6457:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "6457:2:13"
																},
																"nativeSrc": "6457:25:13",
																"nodeType": "YulFunctionCall",
																"src": "6457:25:13"
															},
															"nativeSrc": "6454:112:13",
															"nodeType": "YulIf",
															"src": "6454:112:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "6612:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "6612:3:13"
																	},
																	{
																		"name": "dst",
																		"nativeSrc": "6617:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "6617:3:13"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "6622:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "6622:6:13"
																	}
																],
																"functionName": {
																	"name": "copy_calldata_to_memory_with_cleanup",
																	"nativeSrc": "6575:36:13",
																	"nodeType": "YulIdentifier",
																	"src": "6575:36:13"
																},
																"nativeSrc": "6575:54:13",
																"nodeType": "YulFunctionCall",
																"src": "6575:54:13"
															},
															"nativeSrc": "6575:54:13",
															"nodeType": "YulExpressionStatement",
															"src": "6575:54:13"
														}
													]
												},
												"name": "abi_decode_available_length_t_string_memory_ptr",
												"nativeSrc": "6210:425:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "6267:3:13",
														"nodeType": "YulTypedName",
														"src": "6267:3:13",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "6272:6:13",
														"nodeType": "YulTypedName",
														"src": "6272:6:13",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "6280:3:13",
														"nodeType": "YulTypedName",
														"src": "6280:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "6288:5:13",
														"nodeType": "YulTypedName",
														"src": "6288:5:13",
														"type": ""
													}
												],
												"src": "6210:425:13"
											},
											{
												"body": {
													"nativeSrc": "6717:278:13",
													"nodeType": "YulBlock",
													"src": "6717:278:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "6766:83:13",
																"nodeType": "YulBlock",
																"src": "6766:83:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nativeSrc": "6768:77:13",
																				"nodeType": "YulIdentifier",
																				"src": "6768:77:13"
																			},
																			"nativeSrc": "6768:79:13",
																			"nodeType": "YulFunctionCall",
																			"src": "6768:79:13"
																		},
																		"nativeSrc": "6768:79:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "6768:79:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "6745:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "6745:6:13"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "6753:4:13",
																						"nodeType": "YulLiteral",
																						"src": "6753:4:13",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6741:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "6741:3:13"
																				},
																				"nativeSrc": "6741:17:13",
																				"nodeType": "YulFunctionCall",
																				"src": "6741:17:13"
																			},
																			{
																				"name": "end",
																				"nativeSrc": "6760:3:13",
																				"nodeType": "YulIdentifier",
																				"src": "6760:3:13"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "6737:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "6737:3:13"
																		},
																		"nativeSrc": "6737:27:13",
																		"nodeType": "YulFunctionCall",
																		"src": "6737:27:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "6730:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "6730:6:13"
																},
																"nativeSrc": "6730:35:13",
																"nodeType": "YulFunctionCall",
																"src": "6730:35:13"
															},
															"nativeSrc": "6727:122:13",
															"nodeType": "YulIf",
															"src": "6727:122:13"
														},
														{
															"nativeSrc": "6858:34:13",
															"nodeType": "YulVariableDeclaration",
															"src": "6858:34:13",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "6885:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "6885:6:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "6872:12:13",
																	"nodeType": "YulIdentifier",
																	"src": "6872:12:13"
																},
																"nativeSrc": "6872:20:13",
																"nodeType": "YulFunctionCall",
																"src": "6872:20:13"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "6862:6:13",
																	"nodeType": "YulTypedName",
																	"src": "6862:6:13",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "6901:88:13",
															"nodeType": "YulAssignment",
															"src": "6901:88:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "6962:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "6962:6:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6970:4:13",
																				"nodeType": "YulLiteral",
																				"src": "6970:4:13",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6958:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "6958:3:13"
																		},
																		"nativeSrc": "6958:17:13",
																		"nodeType": "YulFunctionCall",
																		"src": "6958:17:13"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "6977:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "6977:6:13"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "6985:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "6985:3:13"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_string_memory_ptr",
																	"nativeSrc": "6910:47:13",
																	"nodeType": "YulIdentifier",
																	"src": "6910:47:13"
																},
																"nativeSrc": "6910:79:13",
																"nodeType": "YulFunctionCall",
																"src": "6910:79:13"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "6901:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "6901:5:13"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_string_memory_ptr",
												"nativeSrc": "6655:340:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "6695:6:13",
														"nodeType": "YulTypedName",
														"src": "6695:6:13",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "6703:3:13",
														"nodeType": "YulTypedName",
														"src": "6703:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "6711:5:13",
														"nodeType": "YulTypedName",
														"src": "6711:5:13",
														"type": ""
													}
												],
												"src": "6655:340:13"
											},
											{
												"body": {
													"nativeSrc": "7077:433:13",
													"nodeType": "YulBlock",
													"src": "7077:433:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "7123:83:13",
																"nodeType": "YulBlock",
																"src": "7123:83:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "7125:77:13",
																				"nodeType": "YulIdentifier",
																				"src": "7125:77:13"
																			},
																			"nativeSrc": "7125:79:13",
																			"nodeType": "YulFunctionCall",
																			"src": "7125:79:13"
																		},
																		"nativeSrc": "7125:79:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "7125:79:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7098:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "7098:7:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "7107:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "7107:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "7094:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "7094:3:13"
																		},
																		"nativeSrc": "7094:23:13",
																		"nodeType": "YulFunctionCall",
																		"src": "7094:23:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7119:2:13",
																		"nodeType": "YulLiteral",
																		"src": "7119:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "7090:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "7090:3:13"
																},
																"nativeSrc": "7090:32:13",
																"nodeType": "YulFunctionCall",
																"src": "7090:32:13"
															},
															"nativeSrc": "7087:119:13",
															"nodeType": "YulIf",
															"src": "7087:119:13"
														},
														{
															"nativeSrc": "7216:287:13",
															"nodeType": "YulBlock",
															"src": "7216:287:13",
															"statements": [
																{
																	"nativeSrc": "7231:45:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "7231:45:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "7262:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "7262:9:13"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "7273:1:13",
																						"nodeType": "YulLiteral",
																						"src": "7273:1:13",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7258:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "7258:3:13"
																				},
																				"nativeSrc": "7258:17:13",
																				"nodeType": "YulFunctionCall",
																				"src": "7258:17:13"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nativeSrc": "7245:12:13",
																			"nodeType": "YulIdentifier",
																			"src": "7245:12:13"
																		},
																		"nativeSrc": "7245:31:13",
																		"nodeType": "YulFunctionCall",
																		"src": "7245:31:13"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "7235:6:13",
																			"nodeType": "YulTypedName",
																			"src": "7235:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "7323:83:13",
																		"nodeType": "YulBlock",
																		"src": "7323:83:13",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "7325:77:13",
																						"nodeType": "YulIdentifier",
																						"src": "7325:77:13"
																					},
																					"nativeSrc": "7325:79:13",
																					"nodeType": "YulFunctionCall",
																					"src": "7325:79:13"
																				},
																				"nativeSrc": "7325:79:13",
																				"nodeType": "YulExpressionStatement",
																				"src": "7325:79:13"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "7295:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "7295:6:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7303:18:13",
																				"nodeType": "YulLiteral",
																				"src": "7303:18:13",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "7292:2:13",
																			"nodeType": "YulIdentifier",
																			"src": "7292:2:13"
																		},
																		"nativeSrc": "7292:30:13",
																		"nodeType": "YulFunctionCall",
																		"src": "7292:30:13"
																	},
																	"nativeSrc": "7289:117:13",
																	"nodeType": "YulIf",
																	"src": "7289:117:13"
																},
																{
																	"nativeSrc": "7420:73:13",
																	"nodeType": "YulAssignment",
																	"src": "7420:73:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "7465:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "7465:9:13"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "7476:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "7476:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7461:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "7461:3:13"
																				},
																				"nativeSrc": "7461:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "7461:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7485:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "7485:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_string_memory_ptr",
																			"nativeSrc": "7430:30:13",
																			"nodeType": "YulIdentifier",
																			"src": "7430:30:13"
																		},
																		"nativeSrc": "7430:63:13",
																		"nodeType": "YulFunctionCall",
																		"src": "7430:63:13"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "7420:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "7420:6:13"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_string_memory_ptr",
												"nativeSrc": "7001:509:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7047:9:13",
														"nodeType": "YulTypedName",
														"src": "7047:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "7058:7:13",
														"nodeType": "YulTypedName",
														"src": "7058:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "7070:6:13",
														"nodeType": "YulTypedName",
														"src": "7070:6:13",
														"type": ""
													}
												],
												"src": "7001:509:13"
											},
											{
												"body": {
													"nativeSrc": "7616:519:13",
													"nodeType": "YulBlock",
													"src": "7616:519:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "7662:83:13",
																"nodeType": "YulBlock",
																"src": "7662:83:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "7664:77:13",
																				"nodeType": "YulIdentifier",
																				"src": "7664:77:13"
																			},
																			"nativeSrc": "7664:79:13",
																			"nodeType": "YulFunctionCall",
																			"src": "7664:79:13"
																		},
																		"nativeSrc": "7664:79:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "7664:79:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7637:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "7637:7:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "7646:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "7646:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "7633:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "7633:3:13"
																		},
																		"nativeSrc": "7633:23:13",
																		"nodeType": "YulFunctionCall",
																		"src": "7633:23:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7658:2:13",
																		"nodeType": "YulLiteral",
																		"src": "7658:2:13",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "7629:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "7629:3:13"
																},
																"nativeSrc": "7629:32:13",
																"nodeType": "YulFunctionCall",
																"src": "7629:32:13"
															},
															"nativeSrc": "7626:119:13",
															"nodeType": "YulIf",
															"src": "7626:119:13"
														},
														{
															"nativeSrc": "7755:117:13",
															"nodeType": "YulBlock",
															"src": "7755:117:13",
															"statements": [
																{
																	"nativeSrc": "7770:15:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "7770:15:13",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "7784:1:13",
																		"nodeType": "YulLiteral",
																		"src": "7784:1:13",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "7774:6:13",
																			"nodeType": "YulTypedName",
																			"src": "7774:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "7799:63:13",
																	"nodeType": "YulAssignment",
																	"src": "7799:63:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "7834:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "7834:9:13"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "7845:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "7845:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7830:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "7830:3:13"
																				},
																				"nativeSrc": "7830:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "7830:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7854:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "7854:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "7809:20:13",
																			"nodeType": "YulIdentifier",
																			"src": "7809:20:13"
																		},
																		"nativeSrc": "7809:53:13",
																		"nodeType": "YulFunctionCall",
																		"src": "7809:53:13"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "7799:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "7799:6:13"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "7882:118:13",
															"nodeType": "YulBlock",
															"src": "7882:118:13",
															"statements": [
																{
																	"nativeSrc": "7897:16:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "7897:16:13",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "7911:2:13",
																		"nodeType": "YulLiteral",
																		"src": "7911:2:13",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "7901:6:13",
																			"nodeType": "YulTypedName",
																			"src": "7901:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "7927:63:13",
																	"nodeType": "YulAssignment",
																	"src": "7927:63:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "7962:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "7962:9:13"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "7973:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "7973:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7958:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "7958:3:13"
																				},
																				"nativeSrc": "7958:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "7958:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7982:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "7982:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "7937:20:13",
																			"nodeType": "YulIdentifier",
																			"src": "7937:20:13"
																		},
																		"nativeSrc": "7937:53:13",
																		"nodeType": "YulFunctionCall",
																		"src": "7937:53:13"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "7927:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "7927:6:13"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "8010:118:13",
															"nodeType": "YulBlock",
															"src": "8010:118:13",
															"statements": [
																{
																	"nativeSrc": "8025:16:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "8025:16:13",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "8039:2:13",
																		"nodeType": "YulLiteral",
																		"src": "8039:2:13",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "8029:6:13",
																			"nodeType": "YulTypedName",
																			"src": "8029:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "8055:63:13",
																	"nodeType": "YulAssignment",
																	"src": "8055:63:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "8090:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "8090:9:13"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "8101:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "8101:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "8086:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "8086:3:13"
																				},
																				"nativeSrc": "8086:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "8086:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "8110:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "8110:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "8065:20:13",
																			"nodeType": "YulIdentifier",
																			"src": "8065:20:13"
																		},
																		"nativeSrc": "8065:53:13",
																		"nodeType": "YulFunctionCall",
																		"src": "8065:53:13"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "8055:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "8055:6:13"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nativeSrc": "7516:619:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7570:9:13",
														"nodeType": "YulTypedName",
														"src": "7570:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "7581:7:13",
														"nodeType": "YulTypedName",
														"src": "7581:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "7593:6:13",
														"nodeType": "YulTypedName",
														"src": "7593:6:13",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "7601:6:13",
														"nodeType": "YulTypedName",
														"src": "7601:6:13",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "7609:6:13",
														"nodeType": "YulTypedName",
														"src": "7609:6:13",
														"type": ""
													}
												],
												"src": "7516:619:13"
											},
											{
												"body": {
													"nativeSrc": "8181:76:13",
													"nodeType": "YulBlock",
													"src": "8181:76:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "8235:16:13",
																"nodeType": "YulBlock",
																"src": "8235:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "8244:1:13",
																					"nodeType": "YulLiteral",
																					"src": "8244:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "8247:1:13",
																					"nodeType": "YulLiteral",
																					"src": "8247:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "8237:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "8237:6:13"
																			},
																			"nativeSrc": "8237:12:13",
																			"nodeType": "YulFunctionCall",
																			"src": "8237:12:13"
																		},
																		"nativeSrc": "8237:12:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "8237:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "8204:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "8204:5:13"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "8226:5:13",
																						"nodeType": "YulIdentifier",
																						"src": "8226:5:13"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nativeSrc": "8211:14:13",
																					"nodeType": "YulIdentifier",
																					"src": "8211:14:13"
																				},
																				"nativeSrc": "8211:21:13",
																				"nodeType": "YulFunctionCall",
																				"src": "8211:21:13"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "8201:2:13",
																			"nodeType": "YulIdentifier",
																			"src": "8201:2:13"
																		},
																		"nativeSrc": "8201:32:13",
																		"nodeType": "YulFunctionCall",
																		"src": "8201:32:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "8194:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "8194:6:13"
																},
																"nativeSrc": "8194:40:13",
																"nodeType": "YulFunctionCall",
																"src": "8194:40:13"
															},
															"nativeSrc": "8191:60:13",
															"nodeType": "YulIf",
															"src": "8191:60:13"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nativeSrc": "8141:116:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "8174:5:13",
														"nodeType": "YulTypedName",
														"src": "8174:5:13",
														"type": ""
													}
												],
												"src": "8141:116:13"
											},
											{
												"body": {
													"nativeSrc": "8312:84:13",
													"nodeType": "YulBlock",
													"src": "8312:84:13",
													"statements": [
														{
															"nativeSrc": "8322:29:13",
															"nodeType": "YulAssignment",
															"src": "8322:29:13",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "8344:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "8344:6:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "8331:12:13",
																	"nodeType": "YulIdentifier",
																	"src": "8331:12:13"
																},
																"nativeSrc": "8331:20:13",
																"nodeType": "YulFunctionCall",
																"src": "8331:20:13"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "8322:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "8322:5:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "8384:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "8384:5:13"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nativeSrc": "8360:23:13",
																	"nodeType": "YulIdentifier",
																	"src": "8360:23:13"
																},
																"nativeSrc": "8360:30:13",
																"nodeType": "YulFunctionCall",
																"src": "8360:30:13"
															},
															"nativeSrc": "8360:30:13",
															"nodeType": "YulExpressionStatement",
															"src": "8360:30:13"
														}
													]
												},
												"name": "abi_decode_t_bool",
												"nativeSrc": "8263:133:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "8290:6:13",
														"nodeType": "YulTypedName",
														"src": "8290:6:13",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "8298:3:13",
														"nodeType": "YulTypedName",
														"src": "8298:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "8306:5:13",
														"nodeType": "YulTypedName",
														"src": "8306:5:13",
														"type": ""
													}
												],
												"src": "8263:133:13"
											},
											{
												"body": {
													"nativeSrc": "8499:516:13",
													"nodeType": "YulBlock",
													"src": "8499:516:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "8545:83:13",
																"nodeType": "YulBlock",
																"src": "8545:83:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "8547:77:13",
																				"nodeType": "YulIdentifier",
																				"src": "8547:77:13"
																			},
																			"nativeSrc": "8547:79:13",
																			"nodeType": "YulFunctionCall",
																			"src": "8547:79:13"
																		},
																		"nativeSrc": "8547:79:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "8547:79:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "8520:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "8520:7:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "8529:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "8529:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "8516:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "8516:3:13"
																		},
																		"nativeSrc": "8516:23:13",
																		"nodeType": "YulFunctionCall",
																		"src": "8516:23:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8541:2:13",
																		"nodeType": "YulLiteral",
																		"src": "8541:2:13",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "8512:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "8512:3:13"
																},
																"nativeSrc": "8512:32:13",
																"nodeType": "YulFunctionCall",
																"src": "8512:32:13"
															},
															"nativeSrc": "8509:119:13",
															"nodeType": "YulIf",
															"src": "8509:119:13"
														},
														{
															"nativeSrc": "8638:117:13",
															"nodeType": "YulBlock",
															"src": "8638:117:13",
															"statements": [
																{
																	"nativeSrc": "8653:15:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "8653:15:13",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "8667:1:13",
																		"nodeType": "YulLiteral",
																		"src": "8667:1:13",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "8657:6:13",
																			"nodeType": "YulTypedName",
																			"src": "8657:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "8682:63:13",
																	"nodeType": "YulAssignment",
																	"src": "8682:63:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "8717:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "8717:9:13"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "8728:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "8728:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "8713:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "8713:3:13"
																				},
																				"nativeSrc": "8713:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "8713:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "8737:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "8737:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "8692:20:13",
																			"nodeType": "YulIdentifier",
																			"src": "8692:20:13"
																		},
																		"nativeSrc": "8692:53:13",
																		"nodeType": "YulFunctionCall",
																		"src": "8692:53:13"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "8682:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "8682:6:13"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "8765:118:13",
															"nodeType": "YulBlock",
															"src": "8765:118:13",
															"statements": [
																{
																	"nativeSrc": "8780:16:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "8780:16:13",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "8794:2:13",
																		"nodeType": "YulLiteral",
																		"src": "8794:2:13",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "8784:6:13",
																			"nodeType": "YulTypedName",
																			"src": "8784:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "8810:63:13",
																	"nodeType": "YulAssignment",
																	"src": "8810:63:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "8845:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "8845:9:13"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "8856:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "8856:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "8841:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "8841:3:13"
																				},
																				"nativeSrc": "8841:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "8841:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "8865:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "8865:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "8820:20:13",
																			"nodeType": "YulIdentifier",
																			"src": "8820:20:13"
																		},
																		"nativeSrc": "8820:53:13",
																		"nodeType": "YulFunctionCall",
																		"src": "8820:53:13"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "8810:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "8810:6:13"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "8893:115:13",
															"nodeType": "YulBlock",
															"src": "8893:115:13",
															"statements": [
																{
																	"nativeSrc": "8908:16:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "8908:16:13",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "8922:2:13",
																		"nodeType": "YulLiteral",
																		"src": "8922:2:13",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "8912:6:13",
																			"nodeType": "YulTypedName",
																			"src": "8912:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "8938:60:13",
																	"nodeType": "YulAssignment",
																	"src": "8938:60:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "8970:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "8970:9:13"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "8981:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "8981:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "8966:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "8966:3:13"
																				},
																				"nativeSrc": "8966:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "8966:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "8990:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "8990:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool",
																			"nativeSrc": "8948:17:13",
																			"nodeType": "YulIdentifier",
																			"src": "8948:17:13"
																		},
																		"nativeSrc": "8948:50:13",
																		"nodeType": "YulFunctionCall",
																		"src": "8948:50:13"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "8938:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "8938:6:13"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_bool",
												"nativeSrc": "8402:613:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8453:9:13",
														"nodeType": "YulTypedName",
														"src": "8453:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "8464:7:13",
														"nodeType": "YulTypedName",
														"src": "8464:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "8476:6:13",
														"nodeType": "YulTypedName",
														"src": "8476:6:13",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "8484:6:13",
														"nodeType": "YulTypedName",
														"src": "8484:6:13",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "8492:6:13",
														"nodeType": "YulTypedName",
														"src": "8492:6:13",
														"type": ""
													}
												],
												"src": "8402:613:13"
											},
											{
												"body": {
													"nativeSrc": "9087:263:13",
													"nodeType": "YulBlock",
													"src": "9087:263:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "9133:83:13",
																"nodeType": "YulBlock",
																"src": "9133:83:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "9135:77:13",
																				"nodeType": "YulIdentifier",
																				"src": "9135:77:13"
																			},
																			"nativeSrc": "9135:79:13",
																			"nodeType": "YulFunctionCall",
																			"src": "9135:79:13"
																		},
																		"nativeSrc": "9135:79:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "9135:79:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "9108:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "9108:7:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "9117:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "9117:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "9104:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "9104:3:13"
																		},
																		"nativeSrc": "9104:23:13",
																		"nodeType": "YulFunctionCall",
																		"src": "9104:23:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9129:2:13",
																		"nodeType": "YulLiteral",
																		"src": "9129:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "9100:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "9100:3:13"
																},
																"nativeSrc": "9100:32:13",
																"nodeType": "YulFunctionCall",
																"src": "9100:32:13"
															},
															"nativeSrc": "9097:119:13",
															"nodeType": "YulIf",
															"src": "9097:119:13"
														},
														{
															"nativeSrc": "9226:117:13",
															"nodeType": "YulBlock",
															"src": "9226:117:13",
															"statements": [
																{
																	"nativeSrc": "9241:15:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "9241:15:13",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "9255:1:13",
																		"nodeType": "YulLiteral",
																		"src": "9255:1:13",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "9245:6:13",
																			"nodeType": "YulTypedName",
																			"src": "9245:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "9270:63:13",
																	"nodeType": "YulAssignment",
																	"src": "9270:63:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "9305:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "9305:9:13"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "9316:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "9316:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "9301:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "9301:3:13"
																				},
																				"nativeSrc": "9301:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "9301:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "9325:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "9325:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "9280:20:13",
																			"nodeType": "YulIdentifier",
																			"src": "9280:20:13"
																		},
																		"nativeSrc": "9280:53:13",
																		"nodeType": "YulFunctionCall",
																		"src": "9280:53:13"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "9270:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "9270:6:13"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "9021:329:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9057:9:13",
														"nodeType": "YulTypedName",
														"src": "9057:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "9068:7:13",
														"nodeType": "YulTypedName",
														"src": "9068:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "9080:6:13",
														"nodeType": "YulTypedName",
														"src": "9080:6:13",
														"type": ""
													}
												],
												"src": "9021:329:13"
											},
											{
												"body": {
													"nativeSrc": "9421:53:13",
													"nodeType": "YulBlock",
													"src": "9421:53:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9438:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "9438:3:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "9461:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "9461:5:13"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "9443:17:13",
																			"nodeType": "YulIdentifier",
																			"src": "9443:17:13"
																		},
																		"nativeSrc": "9443:24:13",
																		"nodeType": "YulFunctionCall",
																		"src": "9443:24:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9431:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "9431:6:13"
																},
																"nativeSrc": "9431:37:13",
																"nodeType": "YulFunctionCall",
																"src": "9431:37:13"
															},
															"nativeSrc": "9431:37:13",
															"nodeType": "YulExpressionStatement",
															"src": "9431:37:13"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "9356:118:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "9409:5:13",
														"nodeType": "YulTypedName",
														"src": "9409:5:13",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "9416:3:13",
														"nodeType": "YulTypedName",
														"src": "9416:3:13",
														"type": ""
													}
												],
												"src": "9356:118:13"
											},
											{
												"body": {
													"nativeSrc": "9578:124:13",
													"nodeType": "YulBlock",
													"src": "9578:124:13",
													"statements": [
														{
															"nativeSrc": "9588:26:13",
															"nodeType": "YulAssignment",
															"src": "9588:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9600:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "9600:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9611:2:13",
																		"nodeType": "YulLiteral",
																		"src": "9611:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9596:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "9596:3:13"
																},
																"nativeSrc": "9596:18:13",
																"nodeType": "YulFunctionCall",
																"src": "9596:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9588:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "9588:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "9668:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "9668:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9681:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "9681:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9692:1:13",
																				"nodeType": "YulLiteral",
																				"src": "9692:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9677:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "9677:3:13"
																		},
																		"nativeSrc": "9677:17:13",
																		"nodeType": "YulFunctionCall",
																		"src": "9677:17:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "9624:43:13",
																	"nodeType": "YulIdentifier",
																	"src": "9624:43:13"
																},
																"nativeSrc": "9624:71:13",
																"nodeType": "YulFunctionCall",
																"src": "9624:71:13"
															},
															"nativeSrc": "9624:71:13",
															"nodeType": "YulExpressionStatement",
															"src": "9624:71:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "9480:222:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9550:9:13",
														"nodeType": "YulTypedName",
														"src": "9550:9:13",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "9562:6:13",
														"nodeType": "YulTypedName",
														"src": "9562:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "9573:4:13",
														"nodeType": "YulTypedName",
														"src": "9573:4:13",
														"type": ""
													}
												],
												"src": "9480:222:13"
											},
											{
												"body": {
													"nativeSrc": "9788:388:13",
													"nodeType": "YulBlock",
													"src": "9788:388:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "9834:83:13",
																"nodeType": "YulBlock",
																"src": "9834:83:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "9836:77:13",
																				"nodeType": "YulIdentifier",
																				"src": "9836:77:13"
																			},
																			"nativeSrc": "9836:79:13",
																			"nodeType": "YulFunctionCall",
																			"src": "9836:79:13"
																		},
																		"nativeSrc": "9836:79:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "9836:79:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "9809:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "9809:7:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "9818:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "9818:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "9805:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "9805:3:13"
																		},
																		"nativeSrc": "9805:23:13",
																		"nodeType": "YulFunctionCall",
																		"src": "9805:23:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9830:2:13",
																		"nodeType": "YulLiteral",
																		"src": "9830:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "9801:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "9801:3:13"
																},
																"nativeSrc": "9801:32:13",
																"nodeType": "YulFunctionCall",
																"src": "9801:32:13"
															},
															"nativeSrc": "9798:119:13",
															"nodeType": "YulIf",
															"src": "9798:119:13"
														},
														{
															"nativeSrc": "9927:117:13",
															"nodeType": "YulBlock",
															"src": "9927:117:13",
															"statements": [
																{
																	"nativeSrc": "9942:15:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "9942:15:13",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "9956:1:13",
																		"nodeType": "YulLiteral",
																		"src": "9956:1:13",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "9946:6:13",
																			"nodeType": "YulTypedName",
																			"src": "9946:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "9971:63:13",
																	"nodeType": "YulAssignment",
																	"src": "9971:63:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "10006:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "10006:9:13"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "10017:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "10017:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "10002:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "10002:3:13"
																				},
																				"nativeSrc": "10002:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "10002:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "10026:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "10026:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "9981:20:13",
																			"nodeType": "YulIdentifier",
																			"src": "9981:20:13"
																		},
																		"nativeSrc": "9981:53:13",
																		"nodeType": "YulFunctionCall",
																		"src": "9981:53:13"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "9971:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "9971:6:13"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "10054:115:13",
															"nodeType": "YulBlock",
															"src": "10054:115:13",
															"statements": [
																{
																	"nativeSrc": "10069:16:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "10069:16:13",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "10083:2:13",
																		"nodeType": "YulLiteral",
																		"src": "10083:2:13",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "10073:6:13",
																			"nodeType": "YulTypedName",
																			"src": "10073:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "10099:60:13",
																	"nodeType": "YulAssignment",
																	"src": "10099:60:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "10131:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "10131:9:13"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "10142:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "10142:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "10127:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "10127:3:13"
																				},
																				"nativeSrc": "10127:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "10127:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "10151:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "10151:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool",
																			"nativeSrc": "10109:17:13",
																			"nodeType": "YulIdentifier",
																			"src": "10109:17:13"
																		},
																		"nativeSrc": "10109:50:13",
																		"nodeType": "YulFunctionCall",
																		"src": "10109:50:13"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "10099:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "10099:6:13"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_bool",
												"nativeSrc": "9708:468:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9750:9:13",
														"nodeType": "YulTypedName",
														"src": "9750:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "9761:7:13",
														"nodeType": "YulTypedName",
														"src": "9761:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "9773:6:13",
														"nodeType": "YulTypedName",
														"src": "9773:6:13",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "9781:6:13",
														"nodeType": "YulTypedName",
														"src": "9781:6:13",
														"type": ""
													}
												],
												"src": "9708:468:13"
											},
											{
												"body": {
													"nativeSrc": "10248:241:13",
													"nodeType": "YulBlock",
													"src": "10248:241:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "10353:22:13",
																"nodeType": "YulBlock",
																"src": "10353:22:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "10355:16:13",
																				"nodeType": "YulIdentifier",
																				"src": "10355:16:13"
																			},
																			"nativeSrc": "10355:18:13",
																			"nodeType": "YulFunctionCall",
																			"src": "10355:18:13"
																		},
																		"nativeSrc": "10355:18:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "10355:18:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "10325:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "10325:6:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10333:18:13",
																		"nodeType": "YulLiteral",
																		"src": "10333:18:13",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "10322:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "10322:2:13"
																},
																"nativeSrc": "10322:30:13",
																"nodeType": "YulFunctionCall",
																"src": "10322:30:13"
															},
															"nativeSrc": "10319:56:13",
															"nodeType": "YulIf",
															"src": "10319:56:13"
														},
														{
															"nativeSrc": "10385:37:13",
															"nodeType": "YulAssignment",
															"src": "10385:37:13",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "10415:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "10415:6:13"
																	}
																],
																"functionName": {
																	"name": "round_up_to_mul_of_32",
																	"nativeSrc": "10393:21:13",
																	"nodeType": "YulIdentifier",
																	"src": "10393:21:13"
																},
																"nativeSrc": "10393:29:13",
																"nodeType": "YulFunctionCall",
																"src": "10393:29:13"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "10385:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "10385:4:13"
																}
															]
														},
														{
															"nativeSrc": "10459:23:13",
															"nodeType": "YulAssignment",
															"src": "10459:23:13",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nativeSrc": "10471:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "10471:4:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10477:4:13",
																		"nodeType": "YulLiteral",
																		"src": "10477:4:13",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10467:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "10467:3:13"
																},
																"nativeSrc": "10467:15:13",
																"nodeType": "YulFunctionCall",
																"src": "10467:15:13"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "10459:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "10459:4:13"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_bytes_memory_ptr",
												"nativeSrc": "10182:307:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nativeSrc": "10232:6:13",
														"nodeType": "YulTypedName",
														"src": "10232:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nativeSrc": "10243:4:13",
														"nodeType": "YulTypedName",
														"src": "10243:4:13",
														"type": ""
													}
												],
												"src": "10182:307:13"
											},
											{
												"body": {
													"nativeSrc": "10578:340:13",
													"nodeType": "YulBlock",
													"src": "10578:340:13",
													"statements": [
														{
															"nativeSrc": "10588:74:13",
															"nodeType": "YulAssignment",
															"src": "10588:74:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "10654:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "10654:6:13"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_bytes_memory_ptr",
																			"nativeSrc": "10613:40:13",
																			"nodeType": "YulIdentifier",
																			"src": "10613:40:13"
																		},
																		"nativeSrc": "10613:48:13",
																		"nodeType": "YulFunctionCall",
																		"src": "10613:48:13"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nativeSrc": "10597:15:13",
																	"nodeType": "YulIdentifier",
																	"src": "10597:15:13"
																},
																"nativeSrc": "10597:65:13",
																"nodeType": "YulFunctionCall",
																"src": "10597:65:13"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "10588:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "10588:5:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "10678:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "10678:5:13"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "10685:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "10685:6:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10671:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "10671:6:13"
																},
																"nativeSrc": "10671:21:13",
																"nodeType": "YulFunctionCall",
																"src": "10671:21:13"
															},
															"nativeSrc": "10671:21:13",
															"nodeType": "YulExpressionStatement",
															"src": "10671:21:13"
														},
														{
															"nativeSrc": "10701:27:13",
															"nodeType": "YulVariableDeclaration",
															"src": "10701:27:13",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "10716:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "10716:5:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10723:4:13",
																		"nodeType": "YulLiteral",
																		"src": "10723:4:13",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10712:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "10712:3:13"
																},
																"nativeSrc": "10712:16:13",
																"nodeType": "YulFunctionCall",
																"src": "10712:16:13"
															},
															"variables": [
																{
																	"name": "dst",
																	"nativeSrc": "10705:3:13",
																	"nodeType": "YulTypedName",
																	"src": "10705:3:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "10766:83:13",
																"nodeType": "YulBlock",
																"src": "10766:83:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
																				"nativeSrc": "10768:77:13",
																				"nodeType": "YulIdentifier",
																				"src": "10768:77:13"
																			},
																			"nativeSrc": "10768:79:13",
																			"nodeType": "YulFunctionCall",
																			"src": "10768:79:13"
																		},
																		"nativeSrc": "10768:79:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "10768:79:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nativeSrc": "10747:3:13",
																				"nodeType": "YulIdentifier",
																				"src": "10747:3:13"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "10752:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "10752:6:13"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10743:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "10743:3:13"
																		},
																		"nativeSrc": "10743:16:13",
																		"nodeType": "YulFunctionCall",
																		"src": "10743:16:13"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "10761:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "10761:3:13"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "10740:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "10740:2:13"
																},
																"nativeSrc": "10740:25:13",
																"nodeType": "YulFunctionCall",
																"src": "10740:25:13"
															},
															"nativeSrc": "10737:112:13",
															"nodeType": "YulIf",
															"src": "10737:112:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "10895:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "10895:3:13"
																	},
																	{
																		"name": "dst",
																		"nativeSrc": "10900:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "10900:3:13"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "10905:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "10905:6:13"
																	}
																],
																"functionName": {
																	"name": "copy_calldata_to_memory_with_cleanup",
																	"nativeSrc": "10858:36:13",
																	"nodeType": "YulIdentifier",
																	"src": "10858:36:13"
																},
																"nativeSrc": "10858:54:13",
																"nodeType": "YulFunctionCall",
																"src": "10858:54:13"
															},
															"nativeSrc": "10858:54:13",
															"nodeType": "YulExpressionStatement",
															"src": "10858:54:13"
														}
													]
												},
												"name": "abi_decode_available_length_t_bytes_memory_ptr",
												"nativeSrc": "10495:423:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "10551:3:13",
														"nodeType": "YulTypedName",
														"src": "10551:3:13",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "10556:6:13",
														"nodeType": "YulTypedName",
														"src": "10556:6:13",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "10564:3:13",
														"nodeType": "YulTypedName",
														"src": "10564:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "10572:5:13",
														"nodeType": "YulTypedName",
														"src": "10572:5:13",
														"type": ""
													}
												],
												"src": "10495:423:13"
											},
											{
												"body": {
													"nativeSrc": "10998:277:13",
													"nodeType": "YulBlock",
													"src": "10998:277:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "11047:83:13",
																"nodeType": "YulBlock",
																"src": "11047:83:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nativeSrc": "11049:77:13",
																				"nodeType": "YulIdentifier",
																				"src": "11049:77:13"
																			},
																			"nativeSrc": "11049:79:13",
																			"nodeType": "YulFunctionCall",
																			"src": "11049:79:13"
																		},
																		"nativeSrc": "11049:79:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "11049:79:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "11026:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "11026:6:13"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "11034:4:13",
																						"nodeType": "YulLiteral",
																						"src": "11034:4:13",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "11022:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "11022:3:13"
																				},
																				"nativeSrc": "11022:17:13",
																				"nodeType": "YulFunctionCall",
																				"src": "11022:17:13"
																			},
																			{
																				"name": "end",
																				"nativeSrc": "11041:3:13",
																				"nodeType": "YulIdentifier",
																				"src": "11041:3:13"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "11018:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "11018:3:13"
																		},
																		"nativeSrc": "11018:27:13",
																		"nodeType": "YulFunctionCall",
																		"src": "11018:27:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "11011:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "11011:6:13"
																},
																"nativeSrc": "11011:35:13",
																"nodeType": "YulFunctionCall",
																"src": "11011:35:13"
															},
															"nativeSrc": "11008:122:13",
															"nodeType": "YulIf",
															"src": "11008:122:13"
														},
														{
															"nativeSrc": "11139:34:13",
															"nodeType": "YulVariableDeclaration",
															"src": "11139:34:13",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "11166:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "11166:6:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "11153:12:13",
																	"nodeType": "YulIdentifier",
																	"src": "11153:12:13"
																},
																"nativeSrc": "11153:20:13",
																"nodeType": "YulFunctionCall",
																"src": "11153:20:13"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "11143:6:13",
																	"nodeType": "YulTypedName",
																	"src": "11143:6:13",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "11182:87:13",
															"nodeType": "YulAssignment",
															"src": "11182:87:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "11242:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "11242:6:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11250:4:13",
																				"nodeType": "YulLiteral",
																				"src": "11250:4:13",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11238:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "11238:3:13"
																		},
																		"nativeSrc": "11238:17:13",
																		"nodeType": "YulFunctionCall",
																		"src": "11238:17:13"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "11257:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "11257:6:13"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "11265:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "11265:3:13"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_bytes_memory_ptr",
																	"nativeSrc": "11191:46:13",
																	"nodeType": "YulIdentifier",
																	"src": "11191:46:13"
																},
																"nativeSrc": "11191:78:13",
																"nodeType": "YulFunctionCall",
																"src": "11191:78:13"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "11182:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "11182:5:13"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_bytes_memory_ptr",
												"nativeSrc": "10937:338:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "10976:6:13",
														"nodeType": "YulTypedName",
														"src": "10976:6:13",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "10984:3:13",
														"nodeType": "YulTypedName",
														"src": "10984:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "10992:5:13",
														"nodeType": "YulTypedName",
														"src": "10992:5:13",
														"type": ""
													}
												],
												"src": "10937:338:13"
											},
											{
												"body": {
													"nativeSrc": "11407:817:13",
													"nodeType": "YulBlock",
													"src": "11407:817:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "11454:83:13",
																"nodeType": "YulBlock",
																"src": "11454:83:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "11456:77:13",
																				"nodeType": "YulIdentifier",
																				"src": "11456:77:13"
																			},
																			"nativeSrc": "11456:79:13",
																			"nodeType": "YulFunctionCall",
																			"src": "11456:79:13"
																		},
																		"nativeSrc": "11456:79:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "11456:79:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "11428:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "11428:7:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "11437:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "11437:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "11424:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "11424:3:13"
																		},
																		"nativeSrc": "11424:23:13",
																		"nodeType": "YulFunctionCall",
																		"src": "11424:23:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11449:3:13",
																		"nodeType": "YulLiteral",
																		"src": "11449:3:13",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "11420:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "11420:3:13"
																},
																"nativeSrc": "11420:33:13",
																"nodeType": "YulFunctionCall",
																"src": "11420:33:13"
															},
															"nativeSrc": "11417:120:13",
															"nodeType": "YulIf",
															"src": "11417:120:13"
														},
														{
															"nativeSrc": "11547:117:13",
															"nodeType": "YulBlock",
															"src": "11547:117:13",
															"statements": [
																{
																	"nativeSrc": "11562:15:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "11562:15:13",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "11576:1:13",
																		"nodeType": "YulLiteral",
																		"src": "11576:1:13",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "11566:6:13",
																			"nodeType": "YulTypedName",
																			"src": "11566:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "11591:63:13",
																	"nodeType": "YulAssignment",
																	"src": "11591:63:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "11626:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "11626:9:13"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "11637:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "11637:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "11622:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "11622:3:13"
																				},
																				"nativeSrc": "11622:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "11622:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "11646:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "11646:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "11601:20:13",
																			"nodeType": "YulIdentifier",
																			"src": "11601:20:13"
																		},
																		"nativeSrc": "11601:53:13",
																		"nodeType": "YulFunctionCall",
																		"src": "11601:53:13"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "11591:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "11591:6:13"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "11674:118:13",
															"nodeType": "YulBlock",
															"src": "11674:118:13",
															"statements": [
																{
																	"nativeSrc": "11689:16:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "11689:16:13",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "11703:2:13",
																		"nodeType": "YulLiteral",
																		"src": "11703:2:13",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "11693:6:13",
																			"nodeType": "YulTypedName",
																			"src": "11693:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "11719:63:13",
																	"nodeType": "YulAssignment",
																	"src": "11719:63:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "11754:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "11754:9:13"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "11765:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "11765:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "11750:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "11750:3:13"
																				},
																				"nativeSrc": "11750:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "11750:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "11774:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "11774:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "11729:20:13",
																			"nodeType": "YulIdentifier",
																			"src": "11729:20:13"
																		},
																		"nativeSrc": "11729:53:13",
																		"nodeType": "YulFunctionCall",
																		"src": "11729:53:13"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "11719:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "11719:6:13"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "11802:118:13",
															"nodeType": "YulBlock",
															"src": "11802:118:13",
															"statements": [
																{
																	"nativeSrc": "11817:16:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "11817:16:13",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "11831:2:13",
																		"nodeType": "YulLiteral",
																		"src": "11831:2:13",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "11821:6:13",
																			"nodeType": "YulTypedName",
																			"src": "11821:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "11847:63:13",
																	"nodeType": "YulAssignment",
																	"src": "11847:63:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "11882:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "11882:9:13"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "11893:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "11893:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "11878:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "11878:3:13"
																				},
																				"nativeSrc": "11878:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "11878:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "11902:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "11902:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "11857:20:13",
																			"nodeType": "YulIdentifier",
																			"src": "11857:20:13"
																		},
																		"nativeSrc": "11857:53:13",
																		"nodeType": "YulFunctionCall",
																		"src": "11857:53:13"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "11847:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "11847:6:13"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "11930:287:13",
															"nodeType": "YulBlock",
															"src": "11930:287:13",
															"statements": [
																{
																	"nativeSrc": "11945:46:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "11945:46:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "11976:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "11976:9:13"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "11987:2:13",
																						"nodeType": "YulLiteral",
																						"src": "11987:2:13",
																						"type": "",
																						"value": "96"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "11972:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "11972:3:13"
																				},
																				"nativeSrc": "11972:18:13",
																				"nodeType": "YulFunctionCall",
																				"src": "11972:18:13"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nativeSrc": "11959:12:13",
																			"nodeType": "YulIdentifier",
																			"src": "11959:12:13"
																		},
																		"nativeSrc": "11959:32:13",
																		"nodeType": "YulFunctionCall",
																		"src": "11959:32:13"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "11949:6:13",
																			"nodeType": "YulTypedName",
																			"src": "11949:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "12038:83:13",
																		"nodeType": "YulBlock",
																		"src": "12038:83:13",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "12040:77:13",
																						"nodeType": "YulIdentifier",
																						"src": "12040:77:13"
																					},
																					"nativeSrc": "12040:79:13",
																					"nodeType": "YulFunctionCall",
																					"src": "12040:79:13"
																				},
																				"nativeSrc": "12040:79:13",
																				"nodeType": "YulExpressionStatement",
																				"src": "12040:79:13"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "12010:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "12010:6:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12018:18:13",
																				"nodeType": "YulLiteral",
																				"src": "12018:18:13",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "12007:2:13",
																			"nodeType": "YulIdentifier",
																			"src": "12007:2:13"
																		},
																		"nativeSrc": "12007:30:13",
																		"nodeType": "YulFunctionCall",
																		"src": "12007:30:13"
																	},
																	"nativeSrc": "12004:117:13",
																	"nodeType": "YulIf",
																	"src": "12004:117:13"
																},
																{
																	"nativeSrc": "12135:72:13",
																	"nodeType": "YulAssignment",
																	"src": "12135:72:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "12179:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "12179:9:13"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "12190:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "12190:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "12175:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "12175:3:13"
																				},
																				"nativeSrc": "12175:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "12175:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "12199:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "12199:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes_memory_ptr",
																			"nativeSrc": "12145:29:13",
																			"nodeType": "YulIdentifier",
																			"src": "12145:29:13"
																		},
																		"nativeSrc": "12145:62:13",
																		"nodeType": "YulFunctionCall",
																		"src": "12145:62:13"
																	},
																	"variableNames": [
																		{
																			"name": "value3",
																			"nativeSrc": "12135:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "12135:6:13"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr",
												"nativeSrc": "11281:943:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "11353:9:13",
														"nodeType": "YulTypedName",
														"src": "11353:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "11364:7:13",
														"nodeType": "YulTypedName",
														"src": "11364:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "11376:6:13",
														"nodeType": "YulTypedName",
														"src": "11376:6:13",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "11384:6:13",
														"nodeType": "YulTypedName",
														"src": "11384:6:13",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "11392:6:13",
														"nodeType": "YulTypedName",
														"src": "11392:6:13",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "11400:6:13",
														"nodeType": "YulTypedName",
														"src": "11400:6:13",
														"type": ""
													}
												],
												"src": "11281:943:13"
											},
											{
												"body": {
													"nativeSrc": "12313:391:13",
													"nodeType": "YulBlock",
													"src": "12313:391:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "12359:83:13",
																"nodeType": "YulBlock",
																"src": "12359:83:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "12361:77:13",
																				"nodeType": "YulIdentifier",
																				"src": "12361:77:13"
																			},
																			"nativeSrc": "12361:79:13",
																			"nodeType": "YulFunctionCall",
																			"src": "12361:79:13"
																		},
																		"nativeSrc": "12361:79:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "12361:79:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "12334:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "12334:7:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "12343:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "12343:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "12330:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "12330:3:13"
																		},
																		"nativeSrc": "12330:23:13",
																		"nodeType": "YulFunctionCall",
																		"src": "12330:23:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12355:2:13",
																		"nodeType": "YulLiteral",
																		"src": "12355:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "12326:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "12326:3:13"
																},
																"nativeSrc": "12326:32:13",
																"nodeType": "YulFunctionCall",
																"src": "12326:32:13"
															},
															"nativeSrc": "12323:119:13",
															"nodeType": "YulIf",
															"src": "12323:119:13"
														},
														{
															"nativeSrc": "12452:117:13",
															"nodeType": "YulBlock",
															"src": "12452:117:13",
															"statements": [
																{
																	"nativeSrc": "12467:15:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "12467:15:13",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "12481:1:13",
																		"nodeType": "YulLiteral",
																		"src": "12481:1:13",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "12471:6:13",
																			"nodeType": "YulTypedName",
																			"src": "12471:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "12496:63:13",
																	"nodeType": "YulAssignment",
																	"src": "12496:63:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "12531:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "12531:9:13"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "12542:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "12542:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "12527:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "12527:3:13"
																				},
																				"nativeSrc": "12527:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "12527:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "12551:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "12551:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "12506:20:13",
																			"nodeType": "YulIdentifier",
																			"src": "12506:20:13"
																		},
																		"nativeSrc": "12506:53:13",
																		"nodeType": "YulFunctionCall",
																		"src": "12506:53:13"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "12496:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "12496:6:13"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "12579:118:13",
															"nodeType": "YulBlock",
															"src": "12579:118:13",
															"statements": [
																{
																	"nativeSrc": "12594:16:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "12594:16:13",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "12608:2:13",
																		"nodeType": "YulLiteral",
																		"src": "12608:2:13",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "12598:6:13",
																			"nodeType": "YulTypedName",
																			"src": "12598:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "12624:63:13",
																	"nodeType": "YulAssignment",
																	"src": "12624:63:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "12659:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "12659:9:13"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "12670:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "12670:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "12655:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "12655:3:13"
																				},
																				"nativeSrc": "12655:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "12655:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "12679:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "12679:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "12634:20:13",
																			"nodeType": "YulIdentifier",
																			"src": "12634:20:13"
																		},
																		"nativeSrc": "12634:53:13",
																		"nodeType": "YulFunctionCall",
																		"src": "12634:53:13"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "12624:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "12624:6:13"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nativeSrc": "12230:474:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "12275:9:13",
														"nodeType": "YulTypedName",
														"src": "12275:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "12286:7:13",
														"nodeType": "YulTypedName",
														"src": "12286:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "12298:6:13",
														"nodeType": "YulTypedName",
														"src": "12298:6:13",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "12306:6:13",
														"nodeType": "YulTypedName",
														"src": "12306:6:13",
														"type": ""
													}
												],
												"src": "12230:474:13"
											},
											{
												"body": {
													"nativeSrc": "12738:152:13",
													"nodeType": "YulBlock",
													"src": "12738:152:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "12755:1:13",
																		"nodeType": "YulLiteral",
																		"src": "12755:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12758:77:13",
																		"nodeType": "YulLiteral",
																		"src": "12758:77:13",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12748:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "12748:6:13"
																},
																"nativeSrc": "12748:88:13",
																"nodeType": "YulFunctionCall",
																"src": "12748:88:13"
															},
															"nativeSrc": "12748:88:13",
															"nodeType": "YulExpressionStatement",
															"src": "12748:88:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "12852:1:13",
																		"nodeType": "YulLiteral",
																		"src": "12852:1:13",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12855:4:13",
																		"nodeType": "YulLiteral",
																		"src": "12855:4:13",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12845:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "12845:6:13"
																},
																"nativeSrc": "12845:15:13",
																"nodeType": "YulFunctionCall",
																"src": "12845:15:13"
															},
															"nativeSrc": "12845:15:13",
															"nodeType": "YulExpressionStatement",
															"src": "12845:15:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "12876:1:13",
																		"nodeType": "YulLiteral",
																		"src": "12876:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12879:4:13",
																		"nodeType": "YulLiteral",
																		"src": "12879:4:13",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "12869:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "12869:6:13"
																},
																"nativeSrc": "12869:15:13",
																"nodeType": "YulFunctionCall",
																"src": "12869:15:13"
															},
															"nativeSrc": "12869:15:13",
															"nodeType": "YulExpressionStatement",
															"src": "12869:15:13"
														}
													]
												},
												"name": "panic_error_0x22",
												"nativeSrc": "12710:180:13",
												"nodeType": "YulFunctionDefinition",
												"src": "12710:180:13"
											},
											{
												"body": {
													"nativeSrc": "12947:269:13",
													"nodeType": "YulBlock",
													"src": "12947:269:13",
													"statements": [
														{
															"nativeSrc": "12957:22:13",
															"nodeType": "YulAssignment",
															"src": "12957:22:13",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "12971:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "12971:4:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12977:1:13",
																		"nodeType": "YulLiteral",
																		"src": "12977:1:13",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "12967:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "12967:3:13"
																},
																"nativeSrc": "12967:12:13",
																"nodeType": "YulFunctionCall",
																"src": "12967:12:13"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "12957:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "12957:6:13"
																}
															]
														},
														{
															"nativeSrc": "12988:38:13",
															"nodeType": "YulVariableDeclaration",
															"src": "12988:38:13",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "13018:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "13018:4:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13024:1:13",
																		"nodeType": "YulLiteral",
																		"src": "13024:1:13",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "13014:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "13014:3:13"
																},
																"nativeSrc": "13014:12:13",
																"nodeType": "YulFunctionCall",
																"src": "13014:12:13"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "12992:18:13",
																	"nodeType": "YulTypedName",
																	"src": "12992:18:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "13065:51:13",
																"nodeType": "YulBlock",
																"src": "13065:51:13",
																"statements": [
																	{
																		"nativeSrc": "13079:27:13",
																		"nodeType": "YulAssignment",
																		"src": "13079:27:13",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "13093:6:13",
																					"nodeType": "YulIdentifier",
																					"src": "13093:6:13"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "13101:4:13",
																					"nodeType": "YulLiteral",
																					"src": "13101:4:13",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "13089:3:13",
																				"nodeType": "YulIdentifier",
																				"src": "13089:3:13"
																			},
																			"nativeSrc": "13089:17:13",
																			"nodeType": "YulFunctionCall",
																			"src": "13089:17:13"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "13079:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "13079:6:13"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "13045:18:13",
																		"nodeType": "YulIdentifier",
																		"src": "13045:18:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "13038:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "13038:6:13"
																},
																"nativeSrc": "13038:26:13",
																"nodeType": "YulFunctionCall",
																"src": "13038:26:13"
															},
															"nativeSrc": "13035:81:13",
															"nodeType": "YulIf",
															"src": "13035:81:13"
														},
														{
															"body": {
																"nativeSrc": "13168:42:13",
																"nodeType": "YulBlock",
																"src": "13168:42:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nativeSrc": "13182:16:13",
																				"nodeType": "YulIdentifier",
																				"src": "13182:16:13"
																			},
																			"nativeSrc": "13182:18:13",
																			"nodeType": "YulFunctionCall",
																			"src": "13182:18:13"
																		},
																		"nativeSrc": "13182:18:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "13182:18:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "13132:18:13",
																		"nodeType": "YulIdentifier",
																		"src": "13132:18:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "13155:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "13155:6:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13163:2:13",
																				"nodeType": "YulLiteral",
																				"src": "13163:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "13152:2:13",
																			"nodeType": "YulIdentifier",
																			"src": "13152:2:13"
																		},
																		"nativeSrc": "13152:14:13",
																		"nodeType": "YulFunctionCall",
																		"src": "13152:14:13"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "13129:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "13129:2:13"
																},
																"nativeSrc": "13129:38:13",
																"nodeType": "YulFunctionCall",
																"src": "13129:38:13"
															},
															"nativeSrc": "13126:84:13",
															"nodeType": "YulIf",
															"src": "13126:84:13"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "12896:320:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "12931:4:13",
														"nodeType": "YulTypedName",
														"src": "12931:4:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "12940:6:13",
														"nodeType": "YulTypedName",
														"src": "12940:6:13",
														"type": ""
													}
												],
												"src": "12896:320:13"
											},
											{
												"body": {
													"nativeSrc": "13276:87:13",
													"nodeType": "YulBlock",
													"src": "13276:87:13",
													"statements": [
														{
															"nativeSrc": "13286:11:13",
															"nodeType": "YulAssignment",
															"src": "13286:11:13",
															"value": {
																"name": "ptr",
																"nativeSrc": "13294:3:13",
																"nodeType": "YulIdentifier",
																"src": "13294:3:13"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "13286:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "13286:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "13314:1:13",
																		"nodeType": "YulLiteral",
																		"src": "13314:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nativeSrc": "13317:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "13317:3:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13307:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "13307:6:13"
																},
																"nativeSrc": "13307:14:13",
																"nodeType": "YulFunctionCall",
																"src": "13307:14:13"
															},
															"nativeSrc": "13307:14:13",
															"nodeType": "YulExpressionStatement",
															"src": "13307:14:13"
														},
														{
															"nativeSrc": "13330:26:13",
															"nodeType": "YulAssignment",
															"src": "13330:26:13",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "13348:1:13",
																		"nodeType": "YulLiteral",
																		"src": "13348:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13351:4:13",
																		"nodeType": "YulLiteral",
																		"src": "13351:4:13",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "13338:9:13",
																	"nodeType": "YulIdentifier",
																	"src": "13338:9:13"
																},
																"nativeSrc": "13338:18:13",
																"nodeType": "YulFunctionCall",
																"src": "13338:18:13"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "13330:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "13330:4:13"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_string_storage",
												"nativeSrc": "13222:141:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "13263:3:13",
														"nodeType": "YulTypedName",
														"src": "13263:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "13271:4:13",
														"nodeType": "YulTypedName",
														"src": "13271:4:13",
														"type": ""
													}
												],
												"src": "13222:141:13"
											},
											{
												"body": {
													"nativeSrc": "13413:49:13",
													"nodeType": "YulBlock",
													"src": "13413:49:13",
													"statements": [
														{
															"nativeSrc": "13423:33:13",
															"nodeType": "YulAssignment",
															"src": "13423:33:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "13441:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "13441:5:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13448:2:13",
																				"nodeType": "YulLiteral",
																				"src": "13448:2:13",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13437:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "13437:3:13"
																		},
																		"nativeSrc": "13437:14:13",
																		"nodeType": "YulFunctionCall",
																		"src": "13437:14:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13453:2:13",
																		"nodeType": "YulLiteral",
																		"src": "13453:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "13433:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "13433:3:13"
																},
																"nativeSrc": "13433:23:13",
																"nodeType": "YulFunctionCall",
																"src": "13433:23:13"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "13423:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "13423:6:13"
																}
															]
														}
													]
												},
												"name": "divide_by_32_ceil",
												"nativeSrc": "13369:93:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "13396:5:13",
														"nodeType": "YulTypedName",
														"src": "13396:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "13406:6:13",
														"nodeType": "YulTypedName",
														"src": "13406:6:13",
														"type": ""
													}
												],
												"src": "13369:93:13"
											},
											{
												"body": {
													"nativeSrc": "13521:54:13",
													"nodeType": "YulBlock",
													"src": "13521:54:13",
													"statements": [
														{
															"nativeSrc": "13531:37:13",
															"nodeType": "YulAssignment",
															"src": "13531:37:13",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "13556:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "13556:4:13"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "13562:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "13562:5:13"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nativeSrc": "13552:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "13552:3:13"
																},
																"nativeSrc": "13552:16:13",
																"nodeType": "YulFunctionCall",
																"src": "13552:16:13"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "13531:8:13",
																	"nodeType": "YulIdentifier",
																	"src": "13531:8:13"
																}
															]
														}
													]
												},
												"name": "shift_left_dynamic",
												"nativeSrc": "13468:107:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "13496:4:13",
														"nodeType": "YulTypedName",
														"src": "13496:4:13",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "13502:5:13",
														"nodeType": "YulTypedName",
														"src": "13502:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "13512:8:13",
														"nodeType": "YulTypedName",
														"src": "13512:8:13",
														"type": ""
													}
												],
												"src": "13468:107:13"
											},
											{
												"body": {
													"nativeSrc": "13657:317:13",
													"nodeType": "YulBlock",
													"src": "13657:317:13",
													"statements": [
														{
															"nativeSrc": "13667:35:13",
															"nodeType": "YulVariableDeclaration",
															"src": "13667:35:13",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBytes",
																		"nativeSrc": "13688:10:13",
																		"nodeType": "YulIdentifier",
																		"src": "13688:10:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13700:1:13",
																		"nodeType": "YulLiteral",
																		"src": "13700:1:13",
																		"type": "",
																		"value": "8"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "13684:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "13684:3:13"
																},
																"nativeSrc": "13684:18:13",
																"nodeType": "YulFunctionCall",
																"src": "13684:18:13"
															},
															"variables": [
																{
																	"name": "shiftBits",
																	"nativeSrc": "13671:9:13",
																	"nodeType": "YulTypedName",
																	"src": "13671:9:13",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "13711:109:13",
															"nodeType": "YulVariableDeclaration",
															"src": "13711:109:13",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "13742:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "13742:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13753:66:13",
																		"nodeType": "YulLiteral",
																		"src": "13753:66:13",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "13723:18:13",
																	"nodeType": "YulIdentifier",
																	"src": "13723:18:13"
																},
																"nativeSrc": "13723:97:13",
																"nodeType": "YulFunctionCall",
																"src": "13723:97:13"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "13715:4:13",
																	"nodeType": "YulTypedName",
																	"src": "13715:4:13",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "13829:51:13",
															"nodeType": "YulAssignment",
															"src": "13829:51:13",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "13860:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "13860:9:13"
																	},
																	{
																		"name": "toInsert",
																		"nativeSrc": "13871:8:13",
																		"nodeType": "YulIdentifier",
																		"src": "13871:8:13"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "13841:18:13",
																	"nodeType": "YulIdentifier",
																	"src": "13841:18:13"
																},
																"nativeSrc": "13841:39:13",
																"nodeType": "YulFunctionCall",
																"src": "13841:39:13"
															},
															"variableNames": [
																{
																	"name": "toInsert",
																	"nativeSrc": "13829:8:13",
																	"nodeType": "YulIdentifier",
																	"src": "13829:8:13"
																}
															]
														},
														{
															"nativeSrc": "13889:30:13",
															"nodeType": "YulAssignment",
															"src": "13889:30:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "13902:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "13902:5:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "mask",
																				"nativeSrc": "13913:4:13",
																				"nodeType": "YulIdentifier",
																				"src": "13913:4:13"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "13909:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "13909:3:13"
																		},
																		"nativeSrc": "13909:9:13",
																		"nodeType": "YulFunctionCall",
																		"src": "13909:9:13"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "13898:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "13898:3:13"
																},
																"nativeSrc": "13898:21:13",
																"nodeType": "YulFunctionCall",
																"src": "13898:21:13"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "13889:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "13889:5:13"
																}
															]
														},
														{
															"nativeSrc": "13928:40:13",
															"nodeType": "YulAssignment",
															"src": "13928:40:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "13941:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "13941:5:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "toInsert",
																				"nativeSrc": "13952:8:13",
																				"nodeType": "YulIdentifier",
																				"src": "13952:8:13"
																			},
																			{
																				"name": "mask",
																				"nativeSrc": "13962:4:13",
																				"nodeType": "YulIdentifier",
																				"src": "13962:4:13"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "13948:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "13948:3:13"
																		},
																		"nativeSrc": "13948:19:13",
																		"nodeType": "YulFunctionCall",
																		"src": "13948:19:13"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "13938:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "13938:2:13"
																},
																"nativeSrc": "13938:30:13",
																"nodeType": "YulFunctionCall",
																"src": "13938:30:13"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "13928:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "13928:6:13"
																}
															]
														}
													]
												},
												"name": "update_byte_slice_dynamic32",
												"nativeSrc": "13581:393:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "13618:5:13",
														"nodeType": "YulTypedName",
														"src": "13618:5:13",
														"type": ""
													},
													{
														"name": "shiftBytes",
														"nativeSrc": "13625:10:13",
														"nodeType": "YulTypedName",
														"src": "13625:10:13",
														"type": ""
													},
													{
														"name": "toInsert",
														"nativeSrc": "13637:8:13",
														"nodeType": "YulTypedName",
														"src": "13637:8:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "13650:6:13",
														"nodeType": "YulTypedName",
														"src": "13650:6:13",
														"type": ""
													}
												],
												"src": "13581:393:13"
											},
											{
												"body": {
													"nativeSrc": "14012:28:13",
													"nodeType": "YulBlock",
													"src": "14012:28:13",
													"statements": [
														{
															"nativeSrc": "14022:12:13",
															"nodeType": "YulAssignment",
															"src": "14022:12:13",
															"value": {
																"name": "value",
																"nativeSrc": "14029:5:13",
																"nodeType": "YulIdentifier",
																"src": "14029:5:13"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "14022:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "14022:3:13"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "13980:60:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "13998:5:13",
														"nodeType": "YulTypedName",
														"src": "13998:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "14008:3:13",
														"nodeType": "YulTypedName",
														"src": "14008:3:13",
														"type": ""
													}
												],
												"src": "13980:60:13"
											},
											{
												"body": {
													"nativeSrc": "14106:82:13",
													"nodeType": "YulBlock",
													"src": "14106:82:13",
													"statements": [
														{
															"nativeSrc": "14116:66:13",
															"nodeType": "YulAssignment",
															"src": "14116:66:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "14174:5:13",
																						"nodeType": "YulIdentifier",
																						"src": "14174:5:13"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "14156:17:13",
																					"nodeType": "YulIdentifier",
																					"src": "14156:17:13"
																				},
																				"nativeSrc": "14156:24:13",
																				"nodeType": "YulFunctionCall",
																				"src": "14156:24:13"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "14147:8:13",
																			"nodeType": "YulIdentifier",
																			"src": "14147:8:13"
																		},
																		"nativeSrc": "14147:34:13",
																		"nodeType": "YulFunctionCall",
																		"src": "14147:34:13"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "14129:17:13",
																	"nodeType": "YulIdentifier",
																	"src": "14129:17:13"
																},
																"nativeSrc": "14129:53:13",
																"nodeType": "YulFunctionCall",
																"src": "14129:53:13"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "14116:9:13",
																	"nodeType": "YulIdentifier",
																	"src": "14116:9:13"
																}
															]
														}
													]
												},
												"name": "convert_t_uint256_to_t_uint256",
												"nativeSrc": "14046:142:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "14086:5:13",
														"nodeType": "YulTypedName",
														"src": "14086:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "14096:9:13",
														"nodeType": "YulTypedName",
														"src": "14096:9:13",
														"type": ""
													}
												],
												"src": "14046:142:13"
											},
											{
												"body": {
													"nativeSrc": "14241:28:13",
													"nodeType": "YulBlock",
													"src": "14241:28:13",
													"statements": [
														{
															"nativeSrc": "14251:12:13",
															"nodeType": "YulAssignment",
															"src": "14251:12:13",
															"value": {
																"name": "value",
																"nativeSrc": "14258:5:13",
																"nodeType": "YulIdentifier",
																"src": "14258:5:13"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "14251:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "14251:3:13"
																}
															]
														}
													]
												},
												"name": "prepare_store_t_uint256",
												"nativeSrc": "14194:75:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "14227:5:13",
														"nodeType": "YulTypedName",
														"src": "14227:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "14237:3:13",
														"nodeType": "YulTypedName",
														"src": "14237:3:13",
														"type": ""
													}
												],
												"src": "14194:75:13"
											},
											{
												"body": {
													"nativeSrc": "14351:193:13",
													"nodeType": "YulBlock",
													"src": "14351:193:13",
													"statements": [
														{
															"nativeSrc": "14361:63:13",
															"nodeType": "YulVariableDeclaration",
															"src": "14361:63:13",
															"value": {
																"arguments": [
																	{
																		"name": "value_0",
																		"nativeSrc": "14416:7:13",
																		"nodeType": "YulIdentifier",
																		"src": "14416:7:13"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint256_to_t_uint256",
																	"nativeSrc": "14385:30:13",
																	"nodeType": "YulIdentifier",
																	"src": "14385:30:13"
																},
																"nativeSrc": "14385:39:13",
																"nodeType": "YulFunctionCall",
																"src": "14385:39:13"
															},
															"variables": [
																{
																	"name": "convertedValue_0",
																	"nativeSrc": "14365:16:13",
																	"nodeType": "YulTypedName",
																	"src": "14365:16:13",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "14440:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "14440:4:13"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nativeSrc": "14480:4:13",
																						"nodeType": "YulIdentifier",
																						"src": "14480:4:13"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nativeSrc": "14474:5:13",
																					"nodeType": "YulIdentifier",
																					"src": "14474:5:13"
																				},
																				"nativeSrc": "14474:11:13",
																				"nodeType": "YulFunctionCall",
																				"src": "14474:11:13"
																			},
																			{
																				"name": "offset",
																				"nativeSrc": "14487:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "14487:6:13"
																			},
																			{
																				"arguments": [
																					{
																						"name": "convertedValue_0",
																						"nativeSrc": "14519:16:13",
																						"nodeType": "YulIdentifier",
																						"src": "14519:16:13"
																					}
																				],
																				"functionName": {
																					"name": "prepare_store_t_uint256",
																					"nativeSrc": "14495:23:13",
																					"nodeType": "YulIdentifier",
																					"src": "14495:23:13"
																				},
																				"nativeSrc": "14495:41:13",
																				"nodeType": "YulFunctionCall",
																				"src": "14495:41:13"
																			}
																		],
																		"functionName": {
																			"name": "update_byte_slice_dynamic32",
																			"nativeSrc": "14446:27:13",
																			"nodeType": "YulIdentifier",
																			"src": "14446:27:13"
																		},
																		"nativeSrc": "14446:91:13",
																		"nodeType": "YulFunctionCall",
																		"src": "14446:91:13"
																	}
																],
																"functionName": {
																	"name": "sstore",
																	"nativeSrc": "14433:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "14433:6:13"
																},
																"nativeSrc": "14433:105:13",
																"nodeType": "YulFunctionCall",
																"src": "14433:105:13"
															},
															"nativeSrc": "14433:105:13",
															"nodeType": "YulExpressionStatement",
															"src": "14433:105:13"
														}
													]
												},
												"name": "update_storage_value_t_uint256_to_t_uint256",
												"nativeSrc": "14275:269:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "14328:4:13",
														"nodeType": "YulTypedName",
														"src": "14328:4:13",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "14334:6:13",
														"nodeType": "YulTypedName",
														"src": "14334:6:13",
														"type": ""
													},
													{
														"name": "value_0",
														"nativeSrc": "14342:7:13",
														"nodeType": "YulTypedName",
														"src": "14342:7:13",
														"type": ""
													}
												],
												"src": "14275:269:13"
											},
											{
												"body": {
													"nativeSrc": "14599:24:13",
													"nodeType": "YulBlock",
													"src": "14599:24:13",
													"statements": [
														{
															"nativeSrc": "14609:8:13",
															"nodeType": "YulAssignment",
															"src": "14609:8:13",
															"value": {
																"kind": "number",
																"nativeSrc": "14616:1:13",
																"nodeType": "YulLiteral",
																"src": "14616:1:13",
																"type": "",
																"value": "0"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "14609:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "14609:3:13"
																}
															]
														}
													]
												},
												"name": "zero_value_for_split_t_uint256",
												"nativeSrc": "14550:73:13",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "14595:3:13",
														"nodeType": "YulTypedName",
														"src": "14595:3:13",
														"type": ""
													}
												],
												"src": "14550:73:13"
											},
											{
												"body": {
													"nativeSrc": "14682:136:13",
													"nodeType": "YulBlock",
													"src": "14682:136:13",
													"statements": [
														{
															"nativeSrc": "14692:46:13",
															"nodeType": "YulVariableDeclaration",
															"src": "14692:46:13",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "zero_value_for_split_t_uint256",
																	"nativeSrc": "14706:30:13",
																	"nodeType": "YulIdentifier",
																	"src": "14706:30:13"
																},
																"nativeSrc": "14706:32:13",
																"nodeType": "YulFunctionCall",
																"src": "14706:32:13"
															},
															"variables": [
																{
																	"name": "zero_0",
																	"nativeSrc": "14696:6:13",
																	"nodeType": "YulTypedName",
																	"src": "14696:6:13",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "14791:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "14791:4:13"
																	},
																	{
																		"name": "offset",
																		"nativeSrc": "14797:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "14797:6:13"
																	},
																	{
																		"name": "zero_0",
																		"nativeSrc": "14805:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "14805:6:13"
																	}
																],
																"functionName": {
																	"name": "update_storage_value_t_uint256_to_t_uint256",
																	"nativeSrc": "14747:43:13",
																	"nodeType": "YulIdentifier",
																	"src": "14747:43:13"
																},
																"nativeSrc": "14747:65:13",
																"nodeType": "YulFunctionCall",
																"src": "14747:65:13"
															},
															"nativeSrc": "14747:65:13",
															"nodeType": "YulExpressionStatement",
															"src": "14747:65:13"
														}
													]
												},
												"name": "storage_set_to_zero_t_uint256",
												"nativeSrc": "14629:189:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "14668:4:13",
														"nodeType": "YulTypedName",
														"src": "14668:4:13",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "14674:6:13",
														"nodeType": "YulTypedName",
														"src": "14674:6:13",
														"type": ""
													}
												],
												"src": "14629:189:13"
											},
											{
												"body": {
													"nativeSrc": "14874:136:13",
													"nodeType": "YulBlock",
													"src": "14874:136:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "14941:63:13",
																"nodeType": "YulBlock",
																"src": "14941:63:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "14985:5:13",
																					"nodeType": "YulIdentifier",
																					"src": "14985:5:13"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "14992:1:13",
																					"nodeType": "YulLiteral",
																					"src": "14992:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "storage_set_to_zero_t_uint256",
																				"nativeSrc": "14955:29:13",
																				"nodeType": "YulIdentifier",
																				"src": "14955:29:13"
																			},
																			"nativeSrc": "14955:39:13",
																			"nodeType": "YulFunctionCall",
																			"src": "14955:39:13"
																		},
																		"nativeSrc": "14955:39:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "14955:39:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "start",
																		"nativeSrc": "14894:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "14894:5:13"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "14901:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "14901:3:13"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "14891:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "14891:2:13"
																},
																"nativeSrc": "14891:14:13",
																"nodeType": "YulFunctionCall",
																"src": "14891:14:13"
															},
															"nativeSrc": "14884:120:13",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "14906:26:13",
																"nodeType": "YulBlock",
																"src": "14906:26:13",
																"statements": [
																	{
																		"nativeSrc": "14908:22:13",
																		"nodeType": "YulAssignment",
																		"src": "14908:22:13",
																		"value": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "14921:5:13",
																					"nodeType": "YulIdentifier",
																					"src": "14921:5:13"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "14928:1:13",
																					"nodeType": "YulLiteral",
																					"src": "14928:1:13",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "14917:3:13",
																				"nodeType": "YulIdentifier",
																				"src": "14917:3:13"
																			},
																			"nativeSrc": "14917:13:13",
																			"nodeType": "YulFunctionCall",
																			"src": "14917:13:13"
																		},
																		"variableNames": [
																			{
																				"name": "start",
																				"nativeSrc": "14908:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "14908:5:13"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "14888:2:13",
																"nodeType": "YulBlock",
																"src": "14888:2:13",
																"statements": []
															},
															"src": "14884:120:13"
														}
													]
												},
												"name": "clear_storage_range_t_bytes1",
												"nativeSrc": "14824:186:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "start",
														"nativeSrc": "14862:5:13",
														"nodeType": "YulTypedName",
														"src": "14862:5:13",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "14869:3:13",
														"nodeType": "YulTypedName",
														"src": "14869:3:13",
														"type": ""
													}
												],
												"src": "14824:186:13"
											},
											{
												"body": {
													"nativeSrc": "15095:464:13",
													"nodeType": "YulBlock",
													"src": "15095:464:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "15121:431:13",
																"nodeType": "YulBlock",
																"src": "15121:431:13",
																"statements": [
																	{
																		"nativeSrc": "15135:54:13",
																		"nodeType": "YulVariableDeclaration",
																		"src": "15135:54:13",
																		"value": {
																			"arguments": [
																				{
																					"name": "array",
																					"nativeSrc": "15183:5:13",
																					"nodeType": "YulIdentifier",
																					"src": "15183:5:13"
																				}
																			],
																			"functionName": {
																				"name": "array_dataslot_t_string_storage",
																				"nativeSrc": "15151:31:13",
																				"nodeType": "YulIdentifier",
																				"src": "15151:31:13"
																			},
																			"nativeSrc": "15151:38:13",
																			"nodeType": "YulFunctionCall",
																			"src": "15151:38:13"
																		},
																		"variables": [
																			{
																				"name": "dataArea",
																				"nativeSrc": "15139:8:13",
																				"nodeType": "YulTypedName",
																				"src": "15139:8:13",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "15202:63:13",
																		"nodeType": "YulVariableDeclaration",
																		"src": "15202:63:13",
																		"value": {
																			"arguments": [
																				{
																					"name": "dataArea",
																					"nativeSrc": "15225:8:13",
																					"nodeType": "YulIdentifier",
																					"src": "15225:8:13"
																				},
																				{
																					"arguments": [
																						{
																							"name": "startIndex",
																							"nativeSrc": "15253:10:13",
																							"nodeType": "YulIdentifier",
																							"src": "15253:10:13"
																						}
																					],
																					"functionName": {
																						"name": "divide_by_32_ceil",
																						"nativeSrc": "15235:17:13",
																						"nodeType": "YulIdentifier",
																						"src": "15235:17:13"
																					},
																					"nativeSrc": "15235:29:13",
																					"nodeType": "YulFunctionCall",
																					"src": "15235:29:13"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "15221:3:13",
																				"nodeType": "YulIdentifier",
																				"src": "15221:3:13"
																			},
																			"nativeSrc": "15221:44:13",
																			"nodeType": "YulFunctionCall",
																			"src": "15221:44:13"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nativeSrc": "15206:11:13",
																				"nodeType": "YulTypedName",
																				"src": "15206:11:13",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "15422:27:13",
																			"nodeType": "YulBlock",
																			"src": "15422:27:13",
																			"statements": [
																				{
																					"nativeSrc": "15424:23:13",
																					"nodeType": "YulAssignment",
																					"src": "15424:23:13",
																					"value": {
																						"name": "dataArea",
																						"nativeSrc": "15439:8:13",
																						"nodeType": "YulIdentifier",
																						"src": "15439:8:13"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nativeSrc": "15424:11:13",
																							"nodeType": "YulIdentifier",
																							"src": "15424:11:13"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nativeSrc": "15406:10:13",
																					"nodeType": "YulIdentifier",
																					"src": "15406:10:13"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "15418:2:13",
																					"nodeType": "YulLiteral",
																					"src": "15418:2:13",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "15403:2:13",
																				"nodeType": "YulIdentifier",
																				"src": "15403:2:13"
																			},
																			"nativeSrc": "15403:18:13",
																			"nodeType": "YulFunctionCall",
																			"src": "15403:18:13"
																		},
																		"nativeSrc": "15400:49:13",
																		"nodeType": "YulIf",
																		"src": "15400:49:13"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "deleteStart",
																					"nativeSrc": "15491:11:13",
																					"nodeType": "YulIdentifier",
																					"src": "15491:11:13"
																				},
																				{
																					"arguments": [
																						{
																							"name": "dataArea",
																							"nativeSrc": "15508:8:13",
																							"nodeType": "YulIdentifier",
																							"src": "15508:8:13"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nativeSrc": "15536:3:13",
																									"nodeType": "YulIdentifier",
																									"src": "15536:3:13"
																								}
																							],
																							"functionName": {
																								"name": "divide_by_32_ceil",
																								"nativeSrc": "15518:17:13",
																								"nodeType": "YulIdentifier",
																								"src": "15518:17:13"
																							},
																							"nativeSrc": "15518:22:13",
																							"nodeType": "YulFunctionCall",
																							"src": "15518:22:13"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "15504:3:13",
																						"nodeType": "YulIdentifier",
																						"src": "15504:3:13"
																					},
																					"nativeSrc": "15504:37:13",
																					"nodeType": "YulFunctionCall",
																					"src": "15504:37:13"
																				}
																			],
																			"functionName": {
																				"name": "clear_storage_range_t_bytes1",
																				"nativeSrc": "15462:28:13",
																				"nodeType": "YulIdentifier",
																				"src": "15462:28:13"
																			},
																			"nativeSrc": "15462:80:13",
																			"nodeType": "YulFunctionCall",
																			"src": "15462:80:13"
																		},
																		"nativeSrc": "15462:80:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "15462:80:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nativeSrc": "15112:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "15112:3:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15117:2:13",
																		"nodeType": "YulLiteral",
																		"src": "15117:2:13",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "15109:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "15109:2:13"
																},
																"nativeSrc": "15109:11:13",
																"nodeType": "YulFunctionCall",
																"src": "15109:11:13"
															},
															"nativeSrc": "15106:446:13",
															"nodeType": "YulIf",
															"src": "15106:446:13"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_t_string_storage",
												"nativeSrc": "15016:543:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nativeSrc": "15071:5:13",
														"nodeType": "YulTypedName",
														"src": "15071:5:13",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "15078:3:13",
														"nodeType": "YulTypedName",
														"src": "15078:3:13",
														"type": ""
													},
													{
														"name": "startIndex",
														"nativeSrc": "15083:10:13",
														"nodeType": "YulTypedName",
														"src": "15083:10:13",
														"type": ""
													}
												],
												"src": "15016:543:13"
											},
											{
												"body": {
													"nativeSrc": "15628:54:13",
													"nodeType": "YulBlock",
													"src": "15628:54:13",
													"statements": [
														{
															"nativeSrc": "15638:37:13",
															"nodeType": "YulAssignment",
															"src": "15638:37:13",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "15663:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "15663:4:13"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "15669:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "15669:5:13"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "15659:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "15659:3:13"
																},
																"nativeSrc": "15659:16:13",
																"nodeType": "YulFunctionCall",
																"src": "15659:16:13"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "15638:8:13",
																	"nodeType": "YulIdentifier",
																	"src": "15638:8:13"
																}
															]
														}
													]
												},
												"name": "shift_right_unsigned_dynamic",
												"nativeSrc": "15565:117:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "15603:4:13",
														"nodeType": "YulTypedName",
														"src": "15603:4:13",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "15609:5:13",
														"nodeType": "YulTypedName",
														"src": "15609:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "15619:8:13",
														"nodeType": "YulTypedName",
														"src": "15619:8:13",
														"type": ""
													}
												],
												"src": "15565:117:13"
											},
											{
												"body": {
													"nativeSrc": "15739:118:13",
													"nodeType": "YulBlock",
													"src": "15739:118:13",
													"statements": [
														{
															"nativeSrc": "15749:68:13",
															"nodeType": "YulVariableDeclaration",
															"src": "15749:68:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "15798:1:13",
																						"nodeType": "YulLiteral",
																						"src": "15798:1:13",
																						"type": "",
																						"value": "8"
																					},
																					{
																						"name": "bytes",
																						"nativeSrc": "15801:5:13",
																						"nodeType": "YulIdentifier",
																						"src": "15801:5:13"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nativeSrc": "15794:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "15794:3:13"
																				},
																				"nativeSrc": "15794:13:13",
																				"nodeType": "YulFunctionCall",
																				"src": "15794:13:13"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "15813:1:13",
																						"nodeType": "YulLiteral",
																						"src": "15813:1:13",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "15809:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "15809:3:13"
																				},
																				"nativeSrc": "15809:6:13",
																				"nodeType": "YulFunctionCall",
																				"src": "15809:6:13"
																			}
																		],
																		"functionName": {
																			"name": "shift_right_unsigned_dynamic",
																			"nativeSrc": "15765:28:13",
																			"nodeType": "YulIdentifier",
																			"src": "15765:28:13"
																		},
																		"nativeSrc": "15765:51:13",
																		"nodeType": "YulFunctionCall",
																		"src": "15765:51:13"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nativeSrc": "15761:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "15761:3:13"
																},
																"nativeSrc": "15761:56:13",
																"nodeType": "YulFunctionCall",
																"src": "15761:56:13"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "15753:4:13",
																	"nodeType": "YulTypedName",
																	"src": "15753:4:13",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "15826:25:13",
															"nodeType": "YulAssignment",
															"src": "15826:25:13",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "15840:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "15840:4:13"
																	},
																	{
																		"name": "mask",
																		"nativeSrc": "15846:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "15846:4:13"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "15836:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "15836:3:13"
																},
																"nativeSrc": "15836:15:13",
																"nodeType": "YulFunctionCall",
																"src": "15836:15:13"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "15826:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "15826:6:13"
																}
															]
														}
													]
												},
												"name": "mask_bytes_dynamic",
												"nativeSrc": "15688:169:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "15716:4:13",
														"nodeType": "YulTypedName",
														"src": "15716:4:13",
														"type": ""
													},
													{
														"name": "bytes",
														"nativeSrc": "15722:5:13",
														"nodeType": "YulTypedName",
														"src": "15722:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "15732:6:13",
														"nodeType": "YulTypedName",
														"src": "15732:6:13",
														"type": ""
													}
												],
												"src": "15688:169:13"
											},
											{
												"body": {
													"nativeSrc": "15943:214:13",
													"nodeType": "YulBlock",
													"src": "15943:214:13",
													"statements": [
														{
															"nativeSrc": "16076:37:13",
															"nodeType": "YulAssignment",
															"src": "16076:37:13",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "16103:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "16103:4:13"
																	},
																	{
																		"name": "len",
																		"nativeSrc": "16109:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "16109:3:13"
																	}
																],
																"functionName": {
																	"name": "mask_bytes_dynamic",
																	"nativeSrc": "16084:18:13",
																	"nodeType": "YulIdentifier",
																	"src": "16084:18:13"
																},
																"nativeSrc": "16084:29:13",
																"nodeType": "YulFunctionCall",
																"src": "16084:29:13"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "16076:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "16076:4:13"
																}
															]
														},
														{
															"nativeSrc": "16122:29:13",
															"nodeType": "YulAssignment",
															"src": "16122:29:13",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "16133:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "16133:4:13"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "16143:1:13",
																				"nodeType": "YulLiteral",
																				"src": "16143:1:13",
																				"type": "",
																				"value": "2"
																			},
																			{
																				"name": "len",
																				"nativeSrc": "16146:3:13",
																				"nodeType": "YulIdentifier",
																				"src": "16146:3:13"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nativeSrc": "16139:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "16139:3:13"
																		},
																		"nativeSrc": "16139:11:13",
																		"nodeType": "YulFunctionCall",
																		"src": "16139:11:13"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "16130:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "16130:2:13"
																},
																"nativeSrc": "16130:21:13",
																"nodeType": "YulFunctionCall",
																"src": "16130:21:13"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nativeSrc": "16122:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "16122:4:13"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nativeSrc": "15862:295:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "15924:4:13",
														"nodeType": "YulTypedName",
														"src": "15924:4:13",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "15930:3:13",
														"nodeType": "YulTypedName",
														"src": "15930:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nativeSrc": "15938:4:13",
														"nodeType": "YulTypedName",
														"src": "15938:4:13",
														"type": ""
													}
												],
												"src": "15862:295:13"
											},
											{
												"body": {
													"nativeSrc": "16254:1303:13",
													"nodeType": "YulBlock",
													"src": "16254:1303:13",
													"statements": [
														{
															"nativeSrc": "16265:51:13",
															"nodeType": "YulVariableDeclaration",
															"src": "16265:51:13",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "16312:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "16312:3:13"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "16279:32:13",
																	"nodeType": "YulIdentifier",
																	"src": "16279:32:13"
																},
																"nativeSrc": "16279:37:13",
																"nodeType": "YulFunctionCall",
																"src": "16279:37:13"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nativeSrc": "16269:6:13",
																	"nodeType": "YulTypedName",
																	"src": "16269:6:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "16401:22:13",
																"nodeType": "YulBlock",
																"src": "16401:22:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "16403:16:13",
																				"nodeType": "YulIdentifier",
																				"src": "16403:16:13"
																			},
																			"nativeSrc": "16403:18:13",
																			"nodeType": "YulFunctionCall",
																			"src": "16403:18:13"
																		},
																		"nativeSrc": "16403:18:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "16403:18:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "16373:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "16373:6:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16381:18:13",
																		"nodeType": "YulLiteral",
																		"src": "16381:18:13",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "16370:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "16370:2:13"
																},
																"nativeSrc": "16370:30:13",
																"nodeType": "YulFunctionCall",
																"src": "16370:30:13"
															},
															"nativeSrc": "16367:56:13",
															"nodeType": "YulIf",
															"src": "16367:56:13"
														},
														{
															"nativeSrc": "16433:52:13",
															"nodeType": "YulVariableDeclaration",
															"src": "16433:52:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "slot",
																				"nativeSrc": "16479:4:13",
																				"nodeType": "YulIdentifier",
																				"src": "16479:4:13"
																			}
																		],
																		"functionName": {
																			"name": "sload",
																			"nativeSrc": "16473:5:13",
																			"nodeType": "YulIdentifier",
																			"src": "16473:5:13"
																		},
																		"nativeSrc": "16473:11:13",
																		"nodeType": "YulFunctionCall",
																		"src": "16473:11:13"
																	}
																],
																"functionName": {
																	"name": "extract_byte_array_length",
																	"nativeSrc": "16447:25:13",
																	"nodeType": "YulIdentifier",
																	"src": "16447:25:13"
																},
																"nativeSrc": "16447:38:13",
																"nodeType": "YulFunctionCall",
																"src": "16447:38:13"
															},
															"variables": [
																{
																	"name": "oldLen",
																	"nativeSrc": "16437:6:13",
																	"nodeType": "YulTypedName",
																	"src": "16437:6:13",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "16578:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "16578:4:13"
																	},
																	{
																		"name": "oldLen",
																		"nativeSrc": "16584:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "16584:6:13"
																	},
																	{
																		"name": "newLen",
																		"nativeSrc": "16592:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "16592:6:13"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_t_string_storage",
																	"nativeSrc": "16532:45:13",
																	"nodeType": "YulIdentifier",
																	"src": "16532:45:13"
																},
																"nativeSrc": "16532:67:13",
																"nodeType": "YulFunctionCall",
																"src": "16532:67:13"
															},
															"nativeSrc": "16532:67:13",
															"nodeType": "YulExpressionStatement",
															"src": "16532:67:13"
														},
														{
															"nativeSrc": "16609:18:13",
															"nodeType": "YulVariableDeclaration",
															"src": "16609:18:13",
															"value": {
																"kind": "number",
																"nativeSrc": "16626:1:13",
																"nodeType": "YulLiteral",
																"src": "16626:1:13",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "16613:9:13",
																	"nodeType": "YulTypedName",
																	"src": "16613:9:13",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "16637:17:13",
															"nodeType": "YulAssignment",
															"src": "16637:17:13",
															"value": {
																"kind": "number",
																"nativeSrc": "16650:4:13",
																"nodeType": "YulLiteral",
																"src": "16650:4:13",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "16637:9:13",
																	"nodeType": "YulIdentifier",
																	"src": "16637:9:13"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "16701:611:13",
																		"nodeType": "YulBlock",
																		"src": "16701:611:13",
																		"statements": [
																			{
																				"nativeSrc": "16715:37:13",
																				"nodeType": "YulVariableDeclaration",
																				"src": "16715:37:13",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nativeSrc": "16734:6:13",
																							"nodeType": "YulIdentifier",
																							"src": "16734:6:13"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "16746:4:13",
																									"nodeType": "YulLiteral",
																									"src": "16746:4:13",
																									"type": "",
																									"value": "0x1f"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nativeSrc": "16742:3:13",
																								"nodeType": "YulIdentifier",
																								"src": "16742:3:13"
																							},
																							"nativeSrc": "16742:9:13",
																							"nodeType": "YulFunctionCall",
																							"src": "16742:9:13"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nativeSrc": "16730:3:13",
																						"nodeType": "YulIdentifier",
																						"src": "16730:3:13"
																					},
																					"nativeSrc": "16730:22:13",
																					"nodeType": "YulFunctionCall",
																					"src": "16730:22:13"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nativeSrc": "16719:7:13",
																						"nodeType": "YulTypedName",
																						"src": "16719:7:13",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "16766:51:13",
																				"nodeType": "YulVariableDeclaration",
																				"src": "16766:51:13",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "16812:4:13",
																							"nodeType": "YulIdentifier",
																							"src": "16812:4:13"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_t_string_storage",
																						"nativeSrc": "16780:31:13",
																						"nodeType": "YulIdentifier",
																						"src": "16780:31:13"
																					},
																					"nativeSrc": "16780:37:13",
																					"nodeType": "YulFunctionCall",
																					"src": "16780:37:13"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nativeSrc": "16770:6:13",
																						"nodeType": "YulTypedName",
																						"src": "16770:6:13",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "16830:10:13",
																				"nodeType": "YulVariableDeclaration",
																				"src": "16830:10:13",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "16839:1:13",
																					"nodeType": "YulLiteral",
																					"src": "16839:1:13",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nativeSrc": "16834:1:13",
																						"nodeType": "YulTypedName",
																						"src": "16834:1:13",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "16898:163:13",
																					"nodeType": "YulBlock",
																					"src": "16898:163:13",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "16923:6:13",
																										"nodeType": "YulIdentifier",
																										"src": "16923:6:13"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nativeSrc": "16941:3:13",
																														"nodeType": "YulIdentifier",
																														"src": "16941:3:13"
																													},
																													{
																														"name": "srcOffset",
																														"nativeSrc": "16946:9:13",
																														"nodeType": "YulIdentifier",
																														"src": "16946:9:13"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nativeSrc": "16937:3:13",
																													"nodeType": "YulIdentifier",
																													"src": "16937:3:13"
																												},
																												"nativeSrc": "16937:19:13",
																												"nodeType": "YulFunctionCall",
																												"src": "16937:19:13"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nativeSrc": "16931:5:13",
																											"nodeType": "YulIdentifier",
																											"src": "16931:5:13"
																										},
																										"nativeSrc": "16931:26:13",
																										"nodeType": "YulFunctionCall",
																										"src": "16931:26:13"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "16916:6:13",
																									"nodeType": "YulIdentifier",
																									"src": "16916:6:13"
																								},
																								"nativeSrc": "16916:42:13",
																								"nodeType": "YulFunctionCall",
																								"src": "16916:42:13"
																							},
																							"nativeSrc": "16916:42:13",
																							"nodeType": "YulExpressionStatement",
																							"src": "16916:42:13"
																						},
																						{
																							"nativeSrc": "16975:24:13",
																							"nodeType": "YulAssignment",
																							"src": "16975:24:13",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "16989:6:13",
																										"nodeType": "YulIdentifier",
																										"src": "16989:6:13"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "16997:1:13",
																										"nodeType": "YulLiteral",
																										"src": "16997:1:13",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "16985:3:13",
																									"nodeType": "YulIdentifier",
																									"src": "16985:3:13"
																								},
																								"nativeSrc": "16985:14:13",
																								"nodeType": "YulFunctionCall",
																								"src": "16985:14:13"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nativeSrc": "16975:6:13",
																									"nodeType": "YulIdentifier",
																									"src": "16975:6:13"
																								}
																							]
																						},
																						{
																							"nativeSrc": "17016:31:13",
																							"nodeType": "YulAssignment",
																							"src": "17016:31:13",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nativeSrc": "17033:9:13",
																										"nodeType": "YulIdentifier",
																										"src": "17033:9:13"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "17044:2:13",
																										"nodeType": "YulLiteral",
																										"src": "17044:2:13",
																										"type": "",
																										"value": "32"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "17029:3:13",
																									"nodeType": "YulIdentifier",
																									"src": "17029:3:13"
																								},
																								"nativeSrc": "17029:18:13",
																								"nodeType": "YulFunctionCall",
																								"src": "17029:18:13"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nativeSrc": "17016:9:13",
																									"nodeType": "YulIdentifier",
																									"src": "17016:9:13"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nativeSrc": "16864:1:13",
																							"nodeType": "YulIdentifier",
																							"src": "16864:1:13"
																						},
																						{
																							"name": "loopEnd",
																							"nativeSrc": "16867:7:13",
																							"nodeType": "YulIdentifier",
																							"src": "16867:7:13"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "16861:2:13",
																						"nodeType": "YulIdentifier",
																						"src": "16861:2:13"
																					},
																					"nativeSrc": "16861:14:13",
																					"nodeType": "YulFunctionCall",
																					"src": "16861:14:13"
																				},
																				"nativeSrc": "16853:208:13",
																				"nodeType": "YulForLoop",
																				"post": {
																					"nativeSrc": "16876:21:13",
																					"nodeType": "YulBlock",
																					"src": "16876:21:13",
																					"statements": [
																						{
																							"nativeSrc": "16878:17:13",
																							"nodeType": "YulAssignment",
																							"src": "16878:17:13",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nativeSrc": "16887:1:13",
																										"nodeType": "YulIdentifier",
																										"src": "16887:1:13"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "16890:4:13",
																										"nodeType": "YulLiteral",
																										"src": "16890:4:13",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "16883:3:13",
																									"nodeType": "YulIdentifier",
																									"src": "16883:3:13"
																								},
																								"nativeSrc": "16883:12:13",
																								"nodeType": "YulFunctionCall",
																								"src": "16883:12:13"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nativeSrc": "16878:1:13",
																									"nodeType": "YulIdentifier",
																									"src": "16878:1:13"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nativeSrc": "16857:3:13",
																					"nodeType": "YulBlock",
																					"src": "16857:3:13",
																					"statements": []
																				},
																				"src": "16853:208:13"
																			},
																			{
																				"body": {
																					"nativeSrc": "17097:156:13",
																					"nodeType": "YulBlock",
																					"src": "17097:156:13",
																					"statements": [
																						{
																							"nativeSrc": "17115:43:13",
																							"nodeType": "YulVariableDeclaration",
																							"src": "17115:43:13",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "17142:3:13",
																												"nodeType": "YulIdentifier",
																												"src": "17142:3:13"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "17147:9:13",
																												"nodeType": "YulIdentifier",
																												"src": "17147:9:13"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "17138:3:13",
																											"nodeType": "YulIdentifier",
																											"src": "17138:3:13"
																										},
																										"nativeSrc": "17138:19:13",
																										"nodeType": "YulFunctionCall",
																										"src": "17138:19:13"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "17132:5:13",
																									"nodeType": "YulIdentifier",
																									"src": "17132:5:13"
																								},
																								"nativeSrc": "17132:26:13",
																								"nodeType": "YulFunctionCall",
																								"src": "17132:26:13"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nativeSrc": "17119:9:13",
																									"nodeType": "YulTypedName",
																									"src": "17119:9:13",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "17182:6:13",
																										"nodeType": "YulIdentifier",
																										"src": "17182:6:13"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nativeSrc": "17209:9:13",
																												"nodeType": "YulIdentifier",
																												"src": "17209:9:13"
																											},
																											{
																												"arguments": [
																													{
																														"name": "newLen",
																														"nativeSrc": "17224:6:13",
																														"nodeType": "YulIdentifier",
																														"src": "17224:6:13"
																													},
																													{
																														"kind": "number",
																														"nativeSrc": "17232:4:13",
																														"nodeType": "YulLiteral",
																														"src": "17232:4:13",
																														"type": "",
																														"value": "0x1f"
																													}
																												],
																												"functionName": {
																													"name": "and",
																													"nativeSrc": "17220:3:13",
																													"nodeType": "YulIdentifier",
																													"src": "17220:3:13"
																												},
																												"nativeSrc": "17220:17:13",
																												"nodeType": "YulFunctionCall",
																												"src": "17220:17:13"
																											}
																										],
																										"functionName": {
																											"name": "mask_bytes_dynamic",
																											"nativeSrc": "17190:18:13",
																											"nodeType": "YulIdentifier",
																											"src": "17190:18:13"
																										},
																										"nativeSrc": "17190:48:13",
																										"nodeType": "YulFunctionCall",
																										"src": "17190:48:13"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "17175:6:13",
																									"nodeType": "YulIdentifier",
																									"src": "17175:6:13"
																								},
																								"nativeSrc": "17175:64:13",
																								"nodeType": "YulFunctionCall",
																								"src": "17175:64:13"
																							},
																							"nativeSrc": "17175:64:13",
																							"nodeType": "YulExpressionStatement",
																							"src": "17175:64:13"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nativeSrc": "17080:7:13",
																							"nodeType": "YulIdentifier",
																							"src": "17080:7:13"
																						},
																						{
																							"name": "newLen",
																							"nativeSrc": "17089:6:13",
																							"nodeType": "YulIdentifier",
																							"src": "17089:6:13"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "17077:2:13",
																						"nodeType": "YulIdentifier",
																						"src": "17077:2:13"
																					},
																					"nativeSrc": "17077:19:13",
																					"nodeType": "YulFunctionCall",
																					"src": "17077:19:13"
																				},
																				"nativeSrc": "17074:179:13",
																				"nodeType": "YulIf",
																				"src": "17074:179:13"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "17273:4:13",
																							"nodeType": "YulIdentifier",
																							"src": "17273:4:13"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "newLen",
																											"nativeSrc": "17287:6:13",
																											"nodeType": "YulIdentifier",
																											"src": "17287:6:13"
																										},
																										{
																											"kind": "number",
																											"nativeSrc": "17295:1:13",
																											"nodeType": "YulLiteral",
																											"src": "17295:1:13",
																											"type": "",
																											"value": "2"
																										}
																									],
																									"functionName": {
																										"name": "mul",
																										"nativeSrc": "17283:3:13",
																										"nodeType": "YulIdentifier",
																										"src": "17283:3:13"
																									},
																									"nativeSrc": "17283:14:13",
																									"nodeType": "YulFunctionCall",
																									"src": "17283:14:13"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "17299:1:13",
																									"nodeType": "YulLiteral",
																									"src": "17299:1:13",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "17279:3:13",
																								"nodeType": "YulIdentifier",
																								"src": "17279:3:13"
																							},
																							"nativeSrc": "17279:22:13",
																							"nodeType": "YulFunctionCall",
																							"src": "17279:22:13"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "17266:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "17266:6:13"
																					},
																					"nativeSrc": "17266:36:13",
																					"nodeType": "YulFunctionCall",
																					"src": "17266:36:13"
																				},
																				"nativeSrc": "17266:36:13",
																				"nodeType": "YulExpressionStatement",
																				"src": "17266:36:13"
																			}
																		]
																	},
																	"nativeSrc": "16694:618:13",
																	"nodeType": "YulCase",
																	"src": "16694:618:13",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "16699:1:13",
																		"nodeType": "YulLiteral",
																		"src": "16699:1:13",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "17329:222:13",
																		"nodeType": "YulBlock",
																		"src": "17329:222:13",
																		"statements": [
																			{
																				"nativeSrc": "17343:14:13",
																				"nodeType": "YulVariableDeclaration",
																				"src": "17343:14:13",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "17356:1:13",
																					"nodeType": "YulLiteral",
																					"src": "17356:1:13",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nativeSrc": "17347:5:13",
																						"nodeType": "YulTypedName",
																						"src": "17347:5:13",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "17380:67:13",
																					"nodeType": "YulBlock",
																					"src": "17380:67:13",
																					"statements": [
																						{
																							"nativeSrc": "17398:35:13",
																							"nodeType": "YulAssignment",
																							"src": "17398:35:13",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "17417:3:13",
																												"nodeType": "YulIdentifier",
																												"src": "17417:3:13"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "17422:9:13",
																												"nodeType": "YulIdentifier",
																												"src": "17422:9:13"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "17413:3:13",
																											"nodeType": "YulIdentifier",
																											"src": "17413:3:13"
																										},
																										"nativeSrc": "17413:19:13",
																										"nodeType": "YulFunctionCall",
																										"src": "17413:19:13"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "17407:5:13",
																									"nodeType": "YulIdentifier",
																									"src": "17407:5:13"
																								},
																								"nativeSrc": "17407:26:13",
																								"nodeType": "YulFunctionCall",
																								"src": "17407:26:13"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nativeSrc": "17398:5:13",
																									"nodeType": "YulIdentifier",
																									"src": "17398:5:13"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nativeSrc": "17373:6:13",
																					"nodeType": "YulIdentifier",
																					"src": "17373:6:13"
																				},
																				"nativeSrc": "17370:77:13",
																				"nodeType": "YulIf",
																				"src": "17370:77:13"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "17467:4:13",
																							"nodeType": "YulIdentifier",
																							"src": "17467:4:13"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nativeSrc": "17526:5:13",
																									"nodeType": "YulIdentifier",
																									"src": "17526:5:13"
																								},
																								{
																									"name": "newLen",
																									"nativeSrc": "17533:6:13",
																									"nodeType": "YulIdentifier",
																									"src": "17533:6:13"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nativeSrc": "17473:52:13",
																								"nodeType": "YulIdentifier",
																								"src": "17473:52:13"
																							},
																							"nativeSrc": "17473:67:13",
																							"nodeType": "YulFunctionCall",
																							"src": "17473:67:13"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "17460:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "17460:6:13"
																					},
																					"nativeSrc": "17460:81:13",
																					"nodeType": "YulFunctionCall",
																					"src": "17460:81:13"
																				},
																				"nativeSrc": "17460:81:13",
																				"nodeType": "YulExpressionStatement",
																				"src": "17460:81:13"
																			}
																		]
																	},
																	"nativeSrc": "17321:230:13",
																	"nodeType": "YulCase",
																	"src": "17321:230:13",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "16674:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "16674:6:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16682:2:13",
																		"nodeType": "YulLiteral",
																		"src": "16682:2:13",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "16671:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "16671:2:13"
																},
																"nativeSrc": "16671:14:13",
																"nodeType": "YulFunctionCall",
																"src": "16671:14:13"
															},
															"nativeSrc": "16664:887:13",
															"nodeType": "YulSwitch",
															"src": "16664:887:13"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nativeSrc": "16162:1395:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "16243:4:13",
														"nodeType": "YulTypedName",
														"src": "16243:4:13",
														"type": ""
													},
													{
														"name": "src",
														"nativeSrc": "16249:3:13",
														"nodeType": "YulTypedName",
														"src": "16249:3:13",
														"type": ""
													}
												],
												"src": "16162:1395:13"
											},
											{
												"body": {
													"nativeSrc": "17591:152:13",
													"nodeType": "YulBlock",
													"src": "17591:152:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "17608:1:13",
																		"nodeType": "YulLiteral",
																		"src": "17608:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17611:77:13",
																		"nodeType": "YulLiteral",
																		"src": "17611:77:13",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "17601:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "17601:6:13"
																},
																"nativeSrc": "17601:88:13",
																"nodeType": "YulFunctionCall",
																"src": "17601:88:13"
															},
															"nativeSrc": "17601:88:13",
															"nodeType": "YulExpressionStatement",
															"src": "17601:88:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "17705:1:13",
																		"nodeType": "YulLiteral",
																		"src": "17705:1:13",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17708:4:13",
																		"nodeType": "YulLiteral",
																		"src": "17708:4:13",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "17698:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "17698:6:13"
																},
																"nativeSrc": "17698:15:13",
																"nodeType": "YulFunctionCall",
																"src": "17698:15:13"
															},
															"nativeSrc": "17698:15:13",
															"nodeType": "YulExpressionStatement",
															"src": "17698:15:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "17729:1:13",
																		"nodeType": "YulLiteral",
																		"src": "17729:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17732:4:13",
																		"nodeType": "YulLiteral",
																		"src": "17732:4:13",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "17722:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "17722:6:13"
																},
																"nativeSrc": "17722:15:13",
																"nodeType": "YulFunctionCall",
																"src": "17722:15:13"
															},
															"nativeSrc": "17722:15:13",
															"nodeType": "YulExpressionStatement",
															"src": "17722:15:13"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "17563:180:13",
												"nodeType": "YulFunctionDefinition",
												"src": "17563:180:13"
											},
											{
												"body": {
													"nativeSrc": "17793:147:13",
													"nodeType": "YulBlock",
													"src": "17793:147:13",
													"statements": [
														{
															"nativeSrc": "17803:25:13",
															"nodeType": "YulAssignment",
															"src": "17803:25:13",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "17826:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "17826:1:13"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "17808:17:13",
																	"nodeType": "YulIdentifier",
																	"src": "17808:17:13"
																},
																"nativeSrc": "17808:20:13",
																"nodeType": "YulFunctionCall",
																"src": "17808:20:13"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "17803:1:13",
																	"nodeType": "YulIdentifier",
																	"src": "17803:1:13"
																}
															]
														},
														{
															"nativeSrc": "17837:25:13",
															"nodeType": "YulAssignment",
															"src": "17837:25:13",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "17860:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "17860:1:13"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "17842:17:13",
																	"nodeType": "YulIdentifier",
																	"src": "17842:17:13"
																},
																"nativeSrc": "17842:20:13",
																"nodeType": "YulFunctionCall",
																"src": "17842:20:13"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "17837:1:13",
																	"nodeType": "YulIdentifier",
																	"src": "17837:1:13"
																}
															]
														},
														{
															"nativeSrc": "17871:16:13",
															"nodeType": "YulAssignment",
															"src": "17871:16:13",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "17882:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "17882:1:13"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "17885:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "17885:1:13"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "17878:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "17878:3:13"
																},
																"nativeSrc": "17878:9:13",
																"nodeType": "YulFunctionCall",
																"src": "17878:9:13"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "17871:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "17871:3:13"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "17911:22:13",
																"nodeType": "YulBlock",
																"src": "17911:22:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "17913:16:13",
																				"nodeType": "YulIdentifier",
																				"src": "17913:16:13"
																			},
																			"nativeSrc": "17913:18:13",
																			"nodeType": "YulFunctionCall",
																			"src": "17913:18:13"
																		},
																		"nativeSrc": "17913:18:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "17913:18:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "17903:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "17903:1:13"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "17906:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "17906:3:13"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "17900:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "17900:2:13"
																},
																"nativeSrc": "17900:10:13",
																"nodeType": "YulFunctionCall",
																"src": "17900:10:13"
															},
															"nativeSrc": "17897:36:13",
															"nodeType": "YulIf",
															"src": "17897:36:13"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "17749:191:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "17780:1:13",
														"nodeType": "YulTypedName",
														"src": "17780:1:13",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "17783:1:13",
														"nodeType": "YulTypedName",
														"src": "17783:1:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "17789:3:13",
														"nodeType": "YulTypedName",
														"src": "17789:3:13",
														"type": ""
													}
												],
												"src": "17749:191:13"
											},
											{
												"body": {
													"nativeSrc": "18100:288:13",
													"nodeType": "YulBlock",
													"src": "18100:288:13",
													"statements": [
														{
															"nativeSrc": "18110:26:13",
															"nodeType": "YulAssignment",
															"src": "18110:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "18122:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "18122:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18133:2:13",
																		"nodeType": "YulLiteral",
																		"src": "18133:2:13",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "18118:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "18118:3:13"
																},
																"nativeSrc": "18118:18:13",
																"nodeType": "YulFunctionCall",
																"src": "18118:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "18110:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "18110:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "18190:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "18190:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "18203:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "18203:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "18214:1:13",
																				"nodeType": "YulLiteral",
																				"src": "18214:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "18199:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "18199:3:13"
																		},
																		"nativeSrc": "18199:17:13",
																		"nodeType": "YulFunctionCall",
																		"src": "18199:17:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "18146:43:13",
																	"nodeType": "YulIdentifier",
																	"src": "18146:43:13"
																},
																"nativeSrc": "18146:71:13",
																"nodeType": "YulFunctionCall",
																"src": "18146:71:13"
															},
															"nativeSrc": "18146:71:13",
															"nodeType": "YulExpressionStatement",
															"src": "18146:71:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "18271:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "18271:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "18284:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "18284:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "18295:2:13",
																				"nodeType": "YulLiteral",
																				"src": "18295:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "18280:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "18280:3:13"
																		},
																		"nativeSrc": "18280:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "18280:18:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "18227:43:13",
																	"nodeType": "YulIdentifier",
																	"src": "18227:43:13"
																},
																"nativeSrc": "18227:72:13",
																"nodeType": "YulFunctionCall",
																"src": "18227:72:13"
															},
															"nativeSrc": "18227:72:13",
															"nodeType": "YulExpressionStatement",
															"src": "18227:72:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "18353:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "18353:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "18366:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "18366:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "18377:2:13",
																				"nodeType": "YulLiteral",
																				"src": "18377:2:13",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "18362:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "18362:3:13"
																		},
																		"nativeSrc": "18362:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "18362:18:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "18309:43:13",
																	"nodeType": "YulIdentifier",
																	"src": "18309:43:13"
																},
																"nativeSrc": "18309:72:13",
																"nodeType": "YulFunctionCall",
																"src": "18309:72:13"
															},
															"nativeSrc": "18309:72:13",
															"nodeType": "YulExpressionStatement",
															"src": "18309:72:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_address__to_t_address_t_uint256_t_address__fromStack_reversed",
												"nativeSrc": "17946:442:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "18056:9:13",
														"nodeType": "YulTypedName",
														"src": "18056:9:13",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "18068:6:13",
														"nodeType": "YulTypedName",
														"src": "18068:6:13",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "18076:6:13",
														"nodeType": "YulTypedName",
														"src": "18076:6:13",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "18084:6:13",
														"nodeType": "YulTypedName",
														"src": "18084:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "18095:4:13",
														"nodeType": "YulTypedName",
														"src": "18095:4:13",
														"type": ""
													}
												],
												"src": "17946:442:13"
											},
											{
												"body": {
													"nativeSrc": "18452:40:13",
													"nodeType": "YulBlock",
													"src": "18452:40:13",
													"statements": [
														{
															"nativeSrc": "18463:22:13",
															"nodeType": "YulAssignment",
															"src": "18463:22:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "18479:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "18479:5:13"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "18473:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "18473:5:13"
																},
																"nativeSrc": "18473:12:13",
																"nodeType": "YulFunctionCall",
																"src": "18473:12:13"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "18463:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "18463:6:13"
																}
															]
														}
													]
												},
												"name": "array_length_t_bytes_memory_ptr",
												"nativeSrc": "18394:98:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "18435:5:13",
														"nodeType": "YulTypedName",
														"src": "18435:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "18445:6:13",
														"nodeType": "YulTypedName",
														"src": "18445:6:13",
														"type": ""
													}
												],
												"src": "18394:98:13"
											},
											{
												"body": {
													"nativeSrc": "18593:73:13",
													"nodeType": "YulBlock",
													"src": "18593:73:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "18610:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "18610:3:13"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "18615:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "18615:6:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "18603:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "18603:6:13"
																},
																"nativeSrc": "18603:19:13",
																"nodeType": "YulFunctionCall",
																"src": "18603:19:13"
															},
															"nativeSrc": "18603:19:13",
															"nodeType": "YulExpressionStatement",
															"src": "18603:19:13"
														},
														{
															"nativeSrc": "18631:29:13",
															"nodeType": "YulAssignment",
															"src": "18631:29:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "18650:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "18650:3:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18655:4:13",
																		"nodeType": "YulLiteral",
																		"src": "18655:4:13",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "18646:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "18646:3:13"
																},
																"nativeSrc": "18646:14:13",
																"nodeType": "YulFunctionCall",
																"src": "18646:14:13"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "18631:11:13",
																	"nodeType": "YulIdentifier",
																	"src": "18631:11:13"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack",
												"nativeSrc": "18498:168:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "18565:3:13",
														"nodeType": "YulTypedName",
														"src": "18565:3:13",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "18570:6:13",
														"nodeType": "YulTypedName",
														"src": "18570:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "18581:11:13",
														"nodeType": "YulTypedName",
														"src": "18581:11:13",
														"type": ""
													}
												],
												"src": "18498:168:13"
											},
											{
												"body": {
													"nativeSrc": "18762:283:13",
													"nodeType": "YulBlock",
													"src": "18762:283:13",
													"statements": [
														{
															"nativeSrc": "18772:52:13",
															"nodeType": "YulVariableDeclaration",
															"src": "18772:52:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "18818:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "18818:5:13"
																	}
																],
																"functionName": {
																	"name": "array_length_t_bytes_memory_ptr",
																	"nativeSrc": "18786:31:13",
																	"nodeType": "YulIdentifier",
																	"src": "18786:31:13"
																},
																"nativeSrc": "18786:38:13",
																"nodeType": "YulFunctionCall",
																"src": "18786:38:13"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "18776:6:13",
																	"nodeType": "YulTypedName",
																	"src": "18776:6:13",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "18833:77:13",
															"nodeType": "YulAssignment",
															"src": "18833:77:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "18898:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "18898:3:13"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "18903:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "18903:6:13"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack",
																	"nativeSrc": "18840:57:13",
																	"nodeType": "YulIdentifier",
																	"src": "18840:57:13"
																},
																"nativeSrc": "18840:70:13",
																"nodeType": "YulFunctionCall",
																"src": "18840:70:13"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "18833:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "18833:3:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "18958:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "18958:5:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "18965:4:13",
																				"nodeType": "YulLiteral",
																				"src": "18965:4:13",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "18954:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "18954:3:13"
																		},
																		"nativeSrc": "18954:16:13",
																		"nodeType": "YulFunctionCall",
																		"src": "18954:16:13"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "18972:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "18972:3:13"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "18977:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "18977:6:13"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "18919:34:13",
																	"nodeType": "YulIdentifier",
																	"src": "18919:34:13"
																},
																"nativeSrc": "18919:65:13",
																"nodeType": "YulFunctionCall",
																"src": "18919:65:13"
															},
															"nativeSrc": "18919:65:13",
															"nodeType": "YulExpressionStatement",
															"src": "18919:65:13"
														},
														{
															"nativeSrc": "18993:46:13",
															"nodeType": "YulAssignment",
															"src": "18993:46:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "19004:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "19004:3:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "19031:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "19031:6:13"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "19009:21:13",
																			"nodeType": "YulIdentifier",
																			"src": "19009:21:13"
																		},
																		"nativeSrc": "19009:29:13",
																		"nodeType": "YulFunctionCall",
																		"src": "19009:29:13"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "19000:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "19000:3:13"
																},
																"nativeSrc": "19000:39:13",
																"nodeType": "YulFunctionCall",
																"src": "19000:39:13"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "18993:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "18993:3:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack",
												"nativeSrc": "18672:373:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "18743:5:13",
														"nodeType": "YulTypedName",
														"src": "18743:5:13",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "18750:3:13",
														"nodeType": "YulTypedName",
														"src": "18750:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "18758:3:13",
														"nodeType": "YulTypedName",
														"src": "18758:3:13",
														"type": ""
													}
												],
												"src": "18672:373:13"
											},
											{
												"body": {
													"nativeSrc": "19251:440:13",
													"nodeType": "YulBlock",
													"src": "19251:440:13",
													"statements": [
														{
															"nativeSrc": "19261:27:13",
															"nodeType": "YulAssignment",
															"src": "19261:27:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "19273:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "19273:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "19284:3:13",
																		"nodeType": "YulLiteral",
																		"src": "19284:3:13",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "19269:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "19269:3:13"
																},
																"nativeSrc": "19269:19:13",
																"nodeType": "YulFunctionCall",
																"src": "19269:19:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "19261:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "19261:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "19342:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "19342:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "19355:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "19355:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "19366:1:13",
																				"nodeType": "YulLiteral",
																				"src": "19366:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "19351:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "19351:3:13"
																		},
																		"nativeSrc": "19351:17:13",
																		"nodeType": "YulFunctionCall",
																		"src": "19351:17:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "19298:43:13",
																	"nodeType": "YulIdentifier",
																	"src": "19298:43:13"
																},
																"nativeSrc": "19298:71:13",
																"nodeType": "YulFunctionCall",
																"src": "19298:71:13"
															},
															"nativeSrc": "19298:71:13",
															"nodeType": "YulExpressionStatement",
															"src": "19298:71:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "19423:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "19423:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "19436:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "19436:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "19447:2:13",
																				"nodeType": "YulLiteral",
																				"src": "19447:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "19432:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "19432:3:13"
																		},
																		"nativeSrc": "19432:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "19432:18:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "19379:43:13",
																	"nodeType": "YulIdentifier",
																	"src": "19379:43:13"
																},
																"nativeSrc": "19379:72:13",
																"nodeType": "YulFunctionCall",
																"src": "19379:72:13"
															},
															"nativeSrc": "19379:72:13",
															"nodeType": "YulExpressionStatement",
															"src": "19379:72:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "19505:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "19505:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "19518:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "19518:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "19529:2:13",
																				"nodeType": "YulLiteral",
																				"src": "19529:2:13",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "19514:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "19514:3:13"
																		},
																		"nativeSrc": "19514:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "19514:18:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "19461:43:13",
																	"nodeType": "YulIdentifier",
																	"src": "19461:43:13"
																},
																"nativeSrc": "19461:72:13",
																"nodeType": "YulFunctionCall",
																"src": "19461:72:13"
															},
															"nativeSrc": "19461:72:13",
															"nodeType": "YulExpressionStatement",
															"src": "19461:72:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "19554:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "19554:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "19565:2:13",
																				"nodeType": "YulLiteral",
																				"src": "19565:2:13",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "19550:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "19550:3:13"
																		},
																		"nativeSrc": "19550:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "19550:18:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "19574:4:13",
																				"nodeType": "YulIdentifier",
																				"src": "19574:4:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "19580:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "19580:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "19570:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "19570:3:13"
																		},
																		"nativeSrc": "19570:20:13",
																		"nodeType": "YulFunctionCall",
																		"src": "19570:20:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "19543:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "19543:6:13"
																},
																"nativeSrc": "19543:48:13",
																"nodeType": "YulFunctionCall",
																"src": "19543:48:13"
															},
															"nativeSrc": "19543:48:13",
															"nodeType": "YulExpressionStatement",
															"src": "19543:48:13"
														},
														{
															"nativeSrc": "19600:84:13",
															"nodeType": "YulAssignment",
															"src": "19600:84:13",
															"value": {
																"arguments": [
																	{
																		"name": "value3",
																		"nativeSrc": "19670:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "19670:6:13"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "19679:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "19679:4:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack",
																	"nativeSrc": "19608:61:13",
																	"nodeType": "YulIdentifier",
																	"src": "19608:61:13"
																},
																"nativeSrc": "19608:76:13",
																"nodeType": "YulFunctionCall",
																"src": "19608:76:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "19600:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "19600:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed",
												"nativeSrc": "19051:640:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "19199:9:13",
														"nodeType": "YulTypedName",
														"src": "19199:9:13",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "19211:6:13",
														"nodeType": "YulTypedName",
														"src": "19211:6:13",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "19219:6:13",
														"nodeType": "YulTypedName",
														"src": "19219:6:13",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "19227:6:13",
														"nodeType": "YulTypedName",
														"src": "19227:6:13",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "19235:6:13",
														"nodeType": "YulTypedName",
														"src": "19235:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "19246:4:13",
														"nodeType": "YulTypedName",
														"src": "19246:4:13",
														"type": ""
													}
												],
												"src": "19051:640:13"
											},
											{
												"body": {
													"nativeSrc": "19759:79:13",
													"nodeType": "YulBlock",
													"src": "19759:79:13",
													"statements": [
														{
															"nativeSrc": "19769:22:13",
															"nodeType": "YulAssignment",
															"src": "19769:22:13",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "19784:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "19784:6:13"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "19778:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "19778:5:13"
																},
																"nativeSrc": "19778:13:13",
																"nodeType": "YulFunctionCall",
																"src": "19778:13:13"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "19769:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "19769:5:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "19826:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "19826:5:13"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bytes4",
																	"nativeSrc": "19800:25:13",
																	"nodeType": "YulIdentifier",
																	"src": "19800:25:13"
																},
																"nativeSrc": "19800:32:13",
																"nodeType": "YulFunctionCall",
																"src": "19800:32:13"
															},
															"nativeSrc": "19800:32:13",
															"nodeType": "YulExpressionStatement",
															"src": "19800:32:13"
														}
													]
												},
												"name": "abi_decode_t_bytes4_fromMemory",
												"nativeSrc": "19697:141:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "19737:6:13",
														"nodeType": "YulTypedName",
														"src": "19737:6:13",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "19745:3:13",
														"nodeType": "YulTypedName",
														"src": "19745:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "19753:5:13",
														"nodeType": "YulTypedName",
														"src": "19753:5:13",
														"type": ""
													}
												],
												"src": "19697:141:13"
											},
											{
												"body": {
													"nativeSrc": "19920:273:13",
													"nodeType": "YulBlock",
													"src": "19920:273:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "19966:83:13",
																"nodeType": "YulBlock",
																"src": "19966:83:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "19968:77:13",
																				"nodeType": "YulIdentifier",
																				"src": "19968:77:13"
																			},
																			"nativeSrc": "19968:79:13",
																			"nodeType": "YulFunctionCall",
																			"src": "19968:79:13"
																		},
																		"nativeSrc": "19968:79:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "19968:79:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "19941:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "19941:7:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "19950:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "19950:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "19937:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "19937:3:13"
																		},
																		"nativeSrc": "19937:23:13",
																		"nodeType": "YulFunctionCall",
																		"src": "19937:23:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "19962:2:13",
																		"nodeType": "YulLiteral",
																		"src": "19962:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "19933:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "19933:3:13"
																},
																"nativeSrc": "19933:32:13",
																"nodeType": "YulFunctionCall",
																"src": "19933:32:13"
															},
															"nativeSrc": "19930:119:13",
															"nodeType": "YulIf",
															"src": "19930:119:13"
														},
														{
															"nativeSrc": "20059:127:13",
															"nodeType": "YulBlock",
															"src": "20059:127:13",
															"statements": [
																{
																	"nativeSrc": "20074:15:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "20074:15:13",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "20088:1:13",
																		"nodeType": "YulLiteral",
																		"src": "20088:1:13",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "20078:6:13",
																			"nodeType": "YulTypedName",
																			"src": "20078:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "20103:73:13",
																	"nodeType": "YulAssignment",
																	"src": "20103:73:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "20148:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "20148:9:13"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "20159:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "20159:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "20144:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "20144:3:13"
																				},
																				"nativeSrc": "20144:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "20144:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "20168:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "20168:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes4_fromMemory",
																			"nativeSrc": "20113:30:13",
																			"nodeType": "YulIdentifier",
																			"src": "20113:30:13"
																		},
																		"nativeSrc": "20113:63:13",
																		"nodeType": "YulFunctionCall",
																		"src": "20113:63:13"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "20103:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "20103:6:13"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4_fromMemory",
												"nativeSrc": "19844:349:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "19890:9:13",
														"nodeType": "YulTypedName",
														"src": "19890:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "19901:7:13",
														"nodeType": "YulTypedName",
														"src": "19901:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "19913:6:13",
														"nodeType": "YulTypedName",
														"src": "19913:6:13",
														"type": ""
													}
												],
												"src": "19844:349:13"
											},
											{
												"body": {
													"nativeSrc": "20325:206:13",
													"nodeType": "YulBlock",
													"src": "20325:206:13",
													"statements": [
														{
															"nativeSrc": "20335:26:13",
															"nodeType": "YulAssignment",
															"src": "20335:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "20347:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "20347:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "20358:2:13",
																		"nodeType": "YulLiteral",
																		"src": "20358:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "20343:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "20343:3:13"
																},
																"nativeSrc": "20343:18:13",
																"nodeType": "YulFunctionCall",
																"src": "20343:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "20335:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "20335:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "20415:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "20415:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "20428:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "20428:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "20439:1:13",
																				"nodeType": "YulLiteral",
																				"src": "20439:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "20424:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "20424:3:13"
																		},
																		"nativeSrc": "20424:17:13",
																		"nodeType": "YulFunctionCall",
																		"src": "20424:17:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "20371:43:13",
																	"nodeType": "YulIdentifier",
																	"src": "20371:43:13"
																},
																"nativeSrc": "20371:71:13",
																"nodeType": "YulFunctionCall",
																"src": "20371:71:13"
															},
															"nativeSrc": "20371:71:13",
															"nodeType": "YulExpressionStatement",
															"src": "20371:71:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "20496:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "20496:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "20509:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "20509:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "20520:2:13",
																				"nodeType": "YulLiteral",
																				"src": "20520:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "20505:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "20505:3:13"
																		},
																		"nativeSrc": "20505:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "20505:18:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "20452:43:13",
																	"nodeType": "YulIdentifier",
																	"src": "20452:43:13"
																},
																"nativeSrc": "20452:72:13",
																"nodeType": "YulFunctionCall",
																"src": "20452:72:13"
															},
															"nativeSrc": "20452:72:13",
															"nodeType": "YulExpressionStatement",
															"src": "20452:72:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "20199:332:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "20289:9:13",
														"nodeType": "YulTypedName",
														"src": "20289:9:13",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "20301:6:13",
														"nodeType": "YulTypedName",
														"src": "20301:6:13",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "20309:6:13",
														"nodeType": "YulTypedName",
														"src": "20309:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "20320:4:13",
														"nodeType": "YulTypedName",
														"src": "20320:4:13",
														"type": ""
													}
												],
												"src": "20199:332:13"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bytes4(value) -> cleaned {\n        cleaned := and(value, 0xffffffff00000000000000000000000000000000000000000000000000000000)\n    }\n\n    function validator_revert_t_bytes4(value) {\n        if iszero(eq(value, cleanup_t_bytes4(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes4(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_string_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_calldata_to_memory_with_cleanup(src, dst, length) {\n        calldatacopy(dst, src, length)\n        mstore(add(dst, length), 0)\n    }\n\n    function abi_decode_available_length_t_string_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_string_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_calldata_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // string\n    function abi_decode_t_string_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_string_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_string_memory_ptr(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := calldataload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_string_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_bool(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_bool(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_bool(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_bool(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_allocation_size_t_bytes_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function abi_decode_available_length_t_bytes_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_bytes_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_calldata_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // bytes\n    function abi_decode_t_bytes_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_bytes_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3 {\n        if slt(sub(dataEnd, headStart), 128) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 96))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value3 := abi_decode_t_bytes_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_address__to_t_address_t_uint256_t_address__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_address_to_t_address_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        mstore(add(headStart, 96), sub(tail, headStart))\n        tail := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value3,  tail)\n\n    }\n\n    function abi_decode_t_bytes4_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    function abi_decode_tuple_t_bytes4_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n}\n",
									"id": 13,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405260043610610108575f3560e01c80636352211e11610094578063a22cb46511610063578063a22cb46514610370578063b88d4fde14610398578063c4e41b22146103c0578063c87b56dd146103ea578063e985e9c51461042657610108565b80636352211e1461029257806370a08231146102ce578063836387101461030a57806395d89b411461034657610108565b8063095ea7b3116100db578063095ea7b3146101ca5780630bdc9008146101f257806323b872dd1461021a57806329d6724e1461024257806342842e0e1461026a57610108565b806301c6adc31461010c57806301ffc9a71461012857806306fdde0314610164578063081812fc1461018e575b5f80fd5b610126600480360381019061012191906115cf565b610462565b005b348015610133575f80fd5b5061014e60048036038101906101499190611662565b610471565b60405161015b91906116a7565b60405180910390f35b34801561016f575f80fd5b50610178610552565b604051610185919061174a565b60405180910390f35b348015610199575f80fd5b506101b460048036038101906101af919061176a565b6105e1565b6040516101c191906117a4565b60405180910390f35b3480156101d5575f80fd5b506101f060048036038101906101eb91906115cf565b6105fc565b005b3480156101fd575f80fd5b50610218600480360381019061021391906118e9565b610612565b005b348015610225575f80fd5b50610240600480360381019061023b9190611930565b61065b565b005b34801561024d575f80fd5b50610268600480360381019061026391906119aa565b61075a565b005b348015610275575f80fd5b50610290600480360381019061028b9190611930565b61076a565b005b34801561029d575f80fd5b506102b860048036038101906102b3919061176a565b610789565b6040516102c591906117a4565b60405180910390f35b3480156102d9575f80fd5b506102f460048036038101906102ef91906119fa565b61079a565b6040516103019190611a34565b60405180910390f35b348015610315575f80fd5b50610330600480360381019061032b919061176a565b610850565b60405161033d91906117a4565b60405180910390f35b348015610351575f80fd5b5061035a610861565b604051610367919061174a565b60405180910390f35b34801561037b575f80fd5b5061039660048036038101906103919190611a4d565b6108f1565b005b3480156103a3575f80fd5b506103be60048036038101906103b99190611b29565b610907565b005b3480156103cb575f80fd5b506103d4610924565b6040516103e19190611a34565b60405180910390f35b3480156103f5575f80fd5b50610410600480360381019061040b919061176a565b61092d565b60405161041d919061174a565b60405180910390f35b348015610431575f80fd5b5061044c60048036038101906104479190611ba9565b6109ce565b60405161045991906116a7565b60405180910390f35b61046d33838361065b565b5050565b5f7f80ac58cd000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916148061053b57507f5b5e139f000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b8061054b575061054a82610a5c565b5b9050919050565b60605f805461056090611c14565b80601f016020809104026020016040519081016040528092919081815260200182805461058c90611c14565b80156105d75780601f106105ae576101008083540402835291602001916105d7565b820191905f5260205f20905b8154815290600101906020018083116105ba57829003601f168201915b5050505050905090565b5f6105eb82610ac5565b506105f582610b4b565b9050919050565b61060e8282610609610b84565b610b8b565b5050565b8060065f60075481526020019081526020015f2090816106329190611de1565b5061063f33600754610b9d565b600160075f8282546106519190611edd565b9250508190555050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036106cb575f6040517f64a0ae920000000000000000000000000000000000000000000000000000000081526004016106c291906117a4565b60405180910390fd5b5f6106de83836106d9610b84565b610c90565b90508373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610754578382826040517f64283d7b00000000000000000000000000000000000000000000000000000000815260040161074b93929190611f10565b60405180910390fd5b50505050565b610765838383610e9b565b505050565b61078483838360405180602001604052805f815250610907565b505050565b5f61079382610ac5565b9050919050565b5f8073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361080b575f6040517f89c62b6400000000000000000000000000000000000000000000000000000000815260040161080291906117a4565b60405180910390fd5b60035f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b5f61085a82611004565b9050919050565b60606001805461087090611c14565b80601f016020809104026020016040519081016040528092919081815260200182805461089c90611c14565b80156108e75780601f106108be576101008083540402835291602001916108e7565b820191905f5260205f20905b8154815290600101906020018083116108ca57829003601f168201915b5050505050905090565b6109036108fc610b84565b8383610e9b565b5050565b61091284848461065b565b61091e8484848461103d565b50505050565b5f600754905090565b606060065f8381526020019081526020015f20805461094b90611c14565b80601f016020809104026020016040519081016040528092919081815260200182805461097790611c14565b80156109c25780601f10610999576101008083540402835291602001916109c2565b820191905f5260205f20905b8154815290600101906020018083116109a557829003601f168201915b50505050509050919050565b5f60055f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff16905092915050565b5f7f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b5f80610ad083611004565b90505f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610b4257826040517f7e273289000000000000000000000000000000000000000000000000000000008152600401610b399190611a34565b60405180910390fd5b80915050919050565b5f60045f8381526020019081526020015f205f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b5f33905090565b610b9883838360016111ef565b505050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610c0d575f6040517f64a0ae92000000000000000000000000000000000000000000000000000000008152600401610c0491906117a4565b60405180910390fd5b5f610c1983835f610c90565b90505f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610c8b575f6040517f73c6ac6e000000000000000000000000000000000000000000000000000000008152600401610c8291906117a4565b60405180910390fd5b505050565b5f80610c9b84611004565b90505f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614610cdc57610cdb8184866113ae565b5b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610d6757610d1b5f855f806111ef565b600160035f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825403925050819055505b5f73ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff1614610de657600160035f8773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8460025f8681526020019081526020015f205f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550838573ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4809150509392505050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610f0b57816040517f5b08ba18000000000000000000000000000000000000000000000000000000008152600401610f0291906117a4565b60405180910390fd5b8060055f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3183604051610ff791906116a7565b60405180910390a3505050565b5f60025f8381526020019081526020015f205f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b5f8373ffffffffffffffffffffffffffffffffffffffff163b11156111e9578273ffffffffffffffffffffffffffffffffffffffff1663150b7a02611080610b84565b8685856040518563ffffffff1660e01b81526004016110a29493929190611f97565b6020604051808303815f875af19250505080156110dd57506040513d601f19601f820116820180604052508101906110da9190611ff5565b60015b61115e573d805f811461110b576040519150601f19603f3d011682016040523d82523d5f602084013e611110565b606091505b505f81510361115657836040517f64a0ae9200000000000000000000000000000000000000000000000000000000815260040161114d91906117a4565b60405180910390fd5b805181602001fd5b63150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916146111e757836040517f64a0ae920000000000000000000000000000000000000000000000000000000081526004016111de91906117a4565b60405180910390fd5b505b50505050565b808061122757505f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614155b15611359575f61123684610ac5565b90505f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16141580156112a057508273ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614155b80156112b357506112b181846109ce565b155b156112f557826040517fa9fbf51f0000000000000000000000000000000000000000000000000000000081526004016112ec91906117a4565b60405180910390fd5b811561135757838573ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45b505b8360045f8581526020019081526020015f205f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050505050565b6113b9838383611471565b61146c575f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361142d57806040517f7e2732890000000000000000000000000000000000000000000000000000000081526004016114249190611a34565b60405180910390fd5b81816040517f177e802f000000000000000000000000000000000000000000000000000000008152600401611463929190612020565b60405180910390fd5b505050565b5f8073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415801561152857508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1614806114e957506114e884846109ce565b5b8061152757508273ffffffffffffffffffffffffffffffffffffffff1661150f83610b4b565b73ffffffffffffffffffffffffffffffffffffffff16145b5b90509392505050565b5f604051905090565b5f80fd5b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f61156b82611542565b9050919050565b61157b81611561565b8114611585575f80fd5b50565b5f8135905061159681611572565b92915050565b5f819050919050565b6115ae8161159c565b81146115b8575f80fd5b50565b5f813590506115c9816115a5565b92915050565b5f80604083850312156115e5576115e461153a565b5b5f6115f285828601611588565b9250506020611603858286016115bb565b9150509250929050565b5f7fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b6116418161160d565b811461164b575f80fd5b50565b5f8135905061165c81611638565b92915050565b5f602082840312156116775761167661153a565b5b5f6116848482850161164e565b91505092915050565b5f8115159050919050565b6116a18161168d565b82525050565b5f6020820190506116ba5f830184611698565b92915050565b5f81519050919050565b5f82825260208201905092915050565b5f5b838110156116f75780820151818401526020810190506116dc565b5f8484015250505050565b5f601f19601f8301169050919050565b5f61171c826116c0565b61172681856116ca565b93506117368185602086016116da565b61173f81611702565b840191505092915050565b5f6020820190508181035f8301526117628184611712565b905092915050565b5f6020828403121561177f5761177e61153a565b5b5f61178c848285016115bb565b91505092915050565b61179e81611561565b82525050565b5f6020820190506117b75f830184611795565b92915050565b5f80fd5b5f80fd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b6117fb82611702565b810181811067ffffffffffffffff8211171561181a576118196117c5565b5b80604052505050565b5f61182c611531565b905061183882826117f2565b919050565b5f67ffffffffffffffff821115611857576118566117c5565b5b61186082611702565b9050602081019050919050565b828183375f83830152505050565b5f61188d6118888461183d565b611823565b9050828152602081018484840111156118a9576118a86117c1565b5b6118b484828561186d565b509392505050565b5f82601f8301126118d0576118cf6117bd565b5b81356118e084826020860161187b565b91505092915050565b5f602082840312156118fe576118fd61153a565b5b5f82013567ffffffffffffffff81111561191b5761191a61153e565b5b611927848285016118bc565b91505092915050565b5f805f606084860312156119475761194661153a565b5b5f61195486828701611588565b935050602061196586828701611588565b9250506040611976868287016115bb565b9150509250925092565b6119898161168d565b8114611993575f80fd5b50565b5f813590506119a481611980565b92915050565b5f805f606084860312156119c1576119c061153a565b5b5f6119ce86828701611588565b93505060206119df86828701611588565b92505060406119f086828701611996565b9150509250925092565b5f60208284031215611a0f57611a0e61153a565b5b5f611a1c84828501611588565b91505092915050565b611a2e8161159c565b82525050565b5f602082019050611a475f830184611a25565b92915050565b5f8060408385031215611a6357611a6261153a565b5b5f611a7085828601611588565b9250506020611a8185828601611996565b9150509250929050565b5f67ffffffffffffffff821115611aa557611aa46117c5565b5b611aae82611702565b9050602081019050919050565b5f611acd611ac884611a8b565b611823565b905082815260208101848484011115611ae957611ae86117c1565b5b611af484828561186d565b509392505050565b5f82601f830112611b1057611b0f6117bd565b5b8135611b20848260208601611abb565b91505092915050565b5f805f8060808587031215611b4157611b4061153a565b5b5f611b4e87828801611588565b9450506020611b5f87828801611588565b9350506040611b70878288016115bb565b925050606085013567ffffffffffffffff811115611b9157611b9061153e565b5b611b9d87828801611afc565b91505092959194509250565b5f8060408385031215611bbf57611bbe61153a565b5b5f611bcc85828601611588565b9250506020611bdd85828601611588565b9150509250929050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f6002820490506001821680611c2b57607f821691505b602082108103611c3e57611c3d611be7565b5b50919050565b5f819050815f5260205f209050919050565b5f6020601f8301049050919050565b5f82821b905092915050565b5f60088302611ca07fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82611c65565b611caa8683611c65565b95508019841693508086168417925050509392505050565b5f819050919050565b5f611ce5611ce0611cdb8461159c565b611cc2565b61159c565b9050919050565b5f819050919050565b611cfe83611ccb565b611d12611d0a82611cec565b848454611c71565b825550505050565b5f90565b611d26611d1a565b611d31818484611cf5565b505050565b5b81811015611d5457611d495f82611d1e565b600181019050611d37565b5050565b601f821115611d9957611d6a81611c44565b611d7384611c56565b81016020851015611d82578190505b611d96611d8e85611c56565b830182611d36565b50505b505050565b5f82821c905092915050565b5f611db95f1984600802611d9e565b1980831691505092915050565b5f611dd18383611daa565b9150826002028217905092915050565b611dea826116c0565b67ffffffffffffffff811115611e0357611e026117c5565b5b611e0d8254611c14565b611e18828285611d58565b5f60209050601f831160018114611e49575f8415611e37578287015190505b611e418582611dc6565b865550611ea8565b601f198416611e5786611c44565b5f5b82811015611e7e57848901518255600182019150602085019450602081019050611e59565b86831015611e9b5784890151611e97601f891682611daa565b8355505b6001600288020188555050505b505050505050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f611ee78261159c565b9150611ef28361159c565b9250828201905080821115611f0a57611f09611eb0565b5b92915050565b5f606082019050611f235f830186611795565b611f306020830185611a25565b611f3d6040830184611795565b949350505050565b5f81519050919050565b5f82825260208201905092915050565b5f611f6982611f45565b611f738185611f4f565b9350611f838185602086016116da565b611f8c81611702565b840191505092915050565b5f608082019050611faa5f830187611795565b611fb76020830186611795565b611fc46040830185611a25565b8181036060830152611fd68184611f5f565b905095945050505050565b5f81519050611fef81611638565b92915050565b5f6020828403121561200a5761200961153a565b5b5f61201784828501611fe1565b91505092915050565b5f6040820190506120335f830185611795565b6120406020830184611a25565b939250505056fea2646970667358221220040a895b576195cf9ef6881b00a9fa5b018493424ed5401b95e1b1addd87f8f464736f6c63430008150033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x108 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6352211E GT PUSH2 0x94 JUMPI DUP1 PUSH4 0xA22CB465 GT PUSH2 0x63 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x370 JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x398 JUMPI DUP1 PUSH4 0xC4E41B22 EQ PUSH2 0x3C0 JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x3EA JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x426 JUMPI PUSH2 0x108 JUMP JUMPDEST DUP1 PUSH4 0x6352211E EQ PUSH2 0x292 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x2CE JUMPI DUP1 PUSH4 0x83638710 EQ PUSH2 0x30A JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x346 JUMPI PUSH2 0x108 JUMP JUMPDEST DUP1 PUSH4 0x95EA7B3 GT PUSH2 0xDB JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x1CA JUMPI DUP1 PUSH4 0xBDC9008 EQ PUSH2 0x1F2 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x21A JUMPI DUP1 PUSH4 0x29D6724E EQ PUSH2 0x242 JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x26A JUMPI PUSH2 0x108 JUMP JUMPDEST DUP1 PUSH4 0x1C6ADC3 EQ PUSH2 0x10C JUMPI DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x128 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x164 JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x18E JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x126 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x121 SWAP2 SWAP1 PUSH2 0x15CF JUMP JUMPDEST PUSH2 0x462 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x133 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x14E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x149 SWAP2 SWAP1 PUSH2 0x1662 JUMP JUMPDEST PUSH2 0x471 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x15B SWAP2 SWAP1 PUSH2 0x16A7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x16F JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x178 PUSH2 0x552 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x185 SWAP2 SWAP1 PUSH2 0x174A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x199 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1B4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1AF SWAP2 SWAP1 PUSH2 0x176A JUMP JUMPDEST PUSH2 0x5E1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1C1 SWAP2 SWAP1 PUSH2 0x17A4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1D5 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1F0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1EB SWAP2 SWAP1 PUSH2 0x15CF JUMP JUMPDEST PUSH2 0x5FC JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1FD JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x218 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x213 SWAP2 SWAP1 PUSH2 0x18E9 JUMP JUMPDEST PUSH2 0x612 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x225 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x240 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x23B SWAP2 SWAP1 PUSH2 0x1930 JUMP JUMPDEST PUSH2 0x65B JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x24D JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x268 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x263 SWAP2 SWAP1 PUSH2 0x19AA JUMP JUMPDEST PUSH2 0x75A JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x275 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x290 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x28B SWAP2 SWAP1 PUSH2 0x1930 JUMP JUMPDEST PUSH2 0x76A JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x29D JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2B8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2B3 SWAP2 SWAP1 PUSH2 0x176A JUMP JUMPDEST PUSH2 0x789 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2C5 SWAP2 SWAP1 PUSH2 0x17A4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2D9 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2F4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2EF SWAP2 SWAP1 PUSH2 0x19FA JUMP JUMPDEST PUSH2 0x79A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x301 SWAP2 SWAP1 PUSH2 0x1A34 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x315 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x330 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x32B SWAP2 SWAP1 PUSH2 0x176A JUMP JUMPDEST PUSH2 0x850 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x33D SWAP2 SWAP1 PUSH2 0x17A4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x351 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x35A PUSH2 0x861 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x367 SWAP2 SWAP1 PUSH2 0x174A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x37B JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x396 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x391 SWAP2 SWAP1 PUSH2 0x1A4D JUMP JUMPDEST PUSH2 0x8F1 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3A3 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x3BE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3B9 SWAP2 SWAP1 PUSH2 0x1B29 JUMP JUMPDEST PUSH2 0x907 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3CB JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x3D4 PUSH2 0x924 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3E1 SWAP2 SWAP1 PUSH2 0x1A34 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3F5 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x410 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x40B SWAP2 SWAP1 PUSH2 0x176A JUMP JUMPDEST PUSH2 0x92D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x41D SWAP2 SWAP1 PUSH2 0x174A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x431 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x44C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x447 SWAP2 SWAP1 PUSH2 0x1BA9 JUMP JUMPDEST PUSH2 0x9CE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x459 SWAP2 SWAP1 PUSH2 0x16A7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x46D CALLER DUP4 DUP4 PUSH2 0x65B JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH32 0x80AC58CD00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x53B JUMPI POP PUSH32 0x5B5E139F00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ JUMPDEST DUP1 PUSH2 0x54B JUMPI POP PUSH2 0x54A DUP3 PUSH2 0xA5C JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH0 DUP1 SLOAD PUSH2 0x560 SWAP1 PUSH2 0x1C14 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x58C SWAP1 PUSH2 0x1C14 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x5D7 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x5AE JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x5D7 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x5BA JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH2 0x5EB DUP3 PUSH2 0xAC5 JUMP JUMPDEST POP PUSH2 0x5F5 DUP3 PUSH2 0xB4B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x60E DUP3 DUP3 PUSH2 0x609 PUSH2 0xB84 JUMP JUMPDEST PUSH2 0xB8B JUMP JUMPDEST POP POP JUMP JUMPDEST DUP1 PUSH1 0x6 PUSH0 PUSH1 0x7 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SWAP1 DUP2 PUSH2 0x632 SWAP2 SWAP1 PUSH2 0x1DE1 JUMP JUMPDEST POP PUSH2 0x63F CALLER PUSH1 0x7 SLOAD PUSH2 0xB9D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x7 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x651 SWAP2 SWAP1 PUSH2 0x1EDD JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x6CB JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6C2 SWAP2 SWAP1 PUSH2 0x17A4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0x6DE DUP4 DUP4 PUSH2 0x6D9 PUSH2 0xB84 JUMP JUMPDEST PUSH2 0xC90 JUMP JUMPDEST SWAP1 POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x754 JUMPI DUP4 DUP3 DUP3 PUSH1 0x40 MLOAD PUSH32 0x64283D7B00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x74B SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1F10 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x765 DUP4 DUP4 DUP4 PUSH2 0xE9B JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x784 DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 DUP2 MSTORE POP PUSH2 0x907 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x793 DUP3 PUSH2 0xAC5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x80B JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x89C62B6400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x802 SWAP2 SWAP1 PUSH2 0x17A4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x85A DUP3 PUSH2 0x1004 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 DUP1 SLOAD PUSH2 0x870 SWAP1 PUSH2 0x1C14 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x89C SWAP1 PUSH2 0x1C14 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x8E7 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x8BE JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x8E7 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x8CA JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x903 PUSH2 0x8FC PUSH2 0xB84 JUMP JUMPDEST DUP4 DUP4 PUSH2 0xE9B JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x912 DUP5 DUP5 DUP5 PUSH2 0x65B JUMP JUMPDEST PUSH2 0x91E DUP5 DUP5 DUP5 DUP5 PUSH2 0x103D JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x7 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x6 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP1 SLOAD PUSH2 0x94B SWAP1 PUSH2 0x1C14 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x977 SWAP1 PUSH2 0x1C14 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x9C2 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x999 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x9C2 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x9A5 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH2 0xAD0 DUP4 PUSH2 0x1004 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xB42 JUMPI DUP3 PUSH1 0x40 MLOAD PUSH32 0x7E27328900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB39 SWAP2 SWAP1 PUSH2 0x1A34 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x4 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xB98 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x11EF JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xC0D JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC04 SWAP2 SWAP1 PUSH2 0x17A4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0xC19 DUP4 DUP4 PUSH0 PUSH2 0xC90 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xC8B JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x73C6AC6E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC82 SWAP2 SWAP1 PUSH2 0x17A4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH2 0xC9B DUP5 PUSH2 0x1004 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xCDC JUMPI PUSH2 0xCDB DUP2 DUP5 DUP7 PUSH2 0x13AE JUMP JUMPDEST JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xD67 JUMPI PUSH2 0xD1B PUSH0 DUP6 PUSH0 DUP1 PUSH2 0x11EF JUMP JUMPDEST PUSH1 0x1 PUSH1 0x3 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xDE6 JUMPI PUSH1 0x1 PUSH1 0x3 PUSH0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP5 PUSH1 0x2 PUSH0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP4 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 DUP1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xF0B JUMPI DUP2 PUSH1 0x40 MLOAD PUSH32 0x5B08BA1800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF02 SWAP2 SWAP1 PUSH2 0x17A4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x5 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 DUP4 PUSH1 0x40 MLOAD PUSH2 0xFF7 SWAP2 SWAP1 PUSH2 0x16A7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x2 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT ISZERO PUSH2 0x11E9 JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x150B7A02 PUSH2 0x1080 PUSH2 0xB84 JUMP JUMPDEST DUP7 DUP6 DUP6 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x10A2 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1F97 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x10DD JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x10DA SWAP2 SWAP1 PUSH2 0x1FF5 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x115E JUMPI RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x110B JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1110 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP PUSH0 DUP2 MLOAD SUB PUSH2 0x1156 JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x114D SWAP2 SWAP1 PUSH2 0x17A4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH4 0x150B7A02 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ PUSH2 0x11E7 JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x11DE SWAP2 SWAP1 PUSH2 0x17A4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMPDEST POP POP POP POP JUMP JUMPDEST DUP1 DUP1 PUSH2 0x1227 JUMPI POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST ISZERO PUSH2 0x1359 JUMPI PUSH0 PUSH2 0x1236 DUP5 PUSH2 0xAC5 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0x12A0 JUMPI POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST DUP1 ISZERO PUSH2 0x12B3 JUMPI POP PUSH2 0x12B1 DUP2 DUP5 PUSH2 0x9CE JUMP JUMPDEST ISZERO JUMPDEST ISZERO PUSH2 0x12F5 JUMPI DUP3 PUSH1 0x40 MLOAD PUSH32 0xA9FBF51F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x12EC SWAP2 SWAP1 PUSH2 0x17A4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 ISZERO PUSH2 0x1357 JUMPI DUP4 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 JUMPDEST POP JUMPDEST DUP4 PUSH1 0x4 PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP POP POP JUMP JUMPDEST PUSH2 0x13B9 DUP4 DUP4 DUP4 PUSH2 0x1471 JUMP JUMPDEST PUSH2 0x146C JUMPI PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x142D JUMPI DUP1 PUSH1 0x40 MLOAD PUSH32 0x7E27328900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1424 SWAP2 SWAP1 PUSH2 0x1A34 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 PUSH1 0x40 MLOAD PUSH32 0x177E802F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1463 SWAP3 SWAP2 SWAP1 PUSH2 0x2020 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0x1528 JUMPI POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x14E9 JUMPI POP PUSH2 0x14E8 DUP5 DUP5 PUSH2 0x9CE JUMP JUMPDEST JUMPDEST DUP1 PUSH2 0x1527 JUMPI POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x150F DUP4 PUSH2 0xB4B JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x156B DUP3 PUSH2 0x1542 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x157B DUP2 PUSH2 0x1561 JUMP JUMPDEST DUP2 EQ PUSH2 0x1585 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1596 DUP2 PUSH2 0x1572 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x15AE DUP2 PUSH2 0x159C JUMP JUMPDEST DUP2 EQ PUSH2 0x15B8 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x15C9 DUP2 PUSH2 0x15A5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x15E5 JUMPI PUSH2 0x15E4 PUSH2 0x153A JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x15F2 DUP6 DUP3 DUP7 ADD PUSH2 0x1588 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1603 DUP6 DUP3 DUP7 ADD PUSH2 0x15BB JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1641 DUP2 PUSH2 0x160D JUMP JUMPDEST DUP2 EQ PUSH2 0x164B JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x165C DUP2 PUSH2 0x1638 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1677 JUMPI PUSH2 0x1676 PUSH2 0x153A JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1684 DUP5 DUP3 DUP6 ADD PUSH2 0x164E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x16A1 DUP2 PUSH2 0x168D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x16BA PUSH0 DUP4 ADD DUP5 PUSH2 0x1698 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x16F7 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x16DC JUMP JUMPDEST PUSH0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x171C DUP3 PUSH2 0x16C0 JUMP JUMPDEST PUSH2 0x1726 DUP2 DUP6 PUSH2 0x16CA JUMP JUMPDEST SWAP4 POP PUSH2 0x1736 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x16DA JUMP JUMPDEST PUSH2 0x173F DUP2 PUSH2 0x1702 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1762 DUP2 DUP5 PUSH2 0x1712 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x177F JUMPI PUSH2 0x177E PUSH2 0x153A JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x178C DUP5 DUP3 DUP6 ADD PUSH2 0x15BB JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x179E DUP2 PUSH2 0x1561 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x17B7 PUSH0 DUP4 ADD DUP5 PUSH2 0x1795 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH2 0x17FB DUP3 PUSH2 0x1702 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x181A JUMPI PUSH2 0x1819 PUSH2 0x17C5 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x182C PUSH2 0x1531 JUMP JUMPDEST SWAP1 POP PUSH2 0x1838 DUP3 DUP3 PUSH2 0x17F2 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1857 JUMPI PUSH2 0x1856 PUSH2 0x17C5 JUMP JUMPDEST JUMPDEST PUSH2 0x1860 DUP3 PUSH2 0x1702 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x188D PUSH2 0x1888 DUP5 PUSH2 0x183D JUMP JUMPDEST PUSH2 0x1823 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x18A9 JUMPI PUSH2 0x18A8 PUSH2 0x17C1 JUMP JUMPDEST JUMPDEST PUSH2 0x18B4 DUP5 DUP3 DUP6 PUSH2 0x186D JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x18D0 JUMPI PUSH2 0x18CF PUSH2 0x17BD JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x18E0 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x187B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x18FE JUMPI PUSH2 0x18FD PUSH2 0x153A JUMP JUMPDEST JUMPDEST PUSH0 DUP3 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x191B JUMPI PUSH2 0x191A PUSH2 0x153E JUMP JUMPDEST JUMPDEST PUSH2 0x1927 DUP5 DUP3 DUP6 ADD PUSH2 0x18BC JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1947 JUMPI PUSH2 0x1946 PUSH2 0x153A JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1954 DUP7 DUP3 DUP8 ADD PUSH2 0x1588 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1965 DUP7 DUP3 DUP8 ADD PUSH2 0x1588 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1976 DUP7 DUP3 DUP8 ADD PUSH2 0x15BB JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH2 0x1989 DUP2 PUSH2 0x168D JUMP JUMPDEST DUP2 EQ PUSH2 0x1993 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x19A4 DUP2 PUSH2 0x1980 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x19C1 JUMPI PUSH2 0x19C0 PUSH2 0x153A JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x19CE DUP7 DUP3 DUP8 ADD PUSH2 0x1588 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x19DF DUP7 DUP3 DUP8 ADD PUSH2 0x1588 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x19F0 DUP7 DUP3 DUP8 ADD PUSH2 0x1996 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1A0F JUMPI PUSH2 0x1A0E PUSH2 0x153A JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1A1C DUP5 DUP3 DUP6 ADD PUSH2 0x1588 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1A2E DUP2 PUSH2 0x159C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1A47 PUSH0 DUP4 ADD DUP5 PUSH2 0x1A25 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1A63 JUMPI PUSH2 0x1A62 PUSH2 0x153A JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1A70 DUP6 DUP3 DUP7 ADD PUSH2 0x1588 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1A81 DUP6 DUP3 DUP7 ADD PUSH2 0x1996 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1AA5 JUMPI PUSH2 0x1AA4 PUSH2 0x17C5 JUMP JUMPDEST JUMPDEST PUSH2 0x1AAE DUP3 PUSH2 0x1702 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1ACD PUSH2 0x1AC8 DUP5 PUSH2 0x1A8B JUMP JUMPDEST PUSH2 0x1823 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x1AE9 JUMPI PUSH2 0x1AE8 PUSH2 0x17C1 JUMP JUMPDEST JUMPDEST PUSH2 0x1AF4 DUP5 DUP3 DUP6 PUSH2 0x186D JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1B10 JUMPI PUSH2 0x1B0F PUSH2 0x17BD JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1B20 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x1ABB JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x1B41 JUMPI PUSH2 0x1B40 PUSH2 0x153A JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1B4E DUP8 DUP3 DUP9 ADD PUSH2 0x1588 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x1B5F DUP8 DUP3 DUP9 ADD PUSH2 0x1588 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x1B70 DUP8 DUP3 DUP9 ADD PUSH2 0x15BB JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1B91 JUMPI PUSH2 0x1B90 PUSH2 0x153E JUMP JUMPDEST JUMPDEST PUSH2 0x1B9D DUP8 DUP3 DUP9 ADD PUSH2 0x1AFC JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1BBF JUMPI PUSH2 0x1BBE PUSH2 0x153A JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1BCC DUP6 DUP3 DUP7 ADD PUSH2 0x1588 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1BDD DUP6 DUP3 DUP7 ADD PUSH2 0x1588 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x1C2B JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x1C3E JUMPI PUSH2 0x1C3D PUSH2 0x1BE7 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP DUP2 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x8 DUP4 MUL PUSH2 0x1CA0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0x1C65 JUMP JUMPDEST PUSH2 0x1CAA DUP7 DUP4 PUSH2 0x1C65 JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1CE5 PUSH2 0x1CE0 PUSH2 0x1CDB DUP5 PUSH2 0x159C JUMP JUMPDEST PUSH2 0x1CC2 JUMP JUMPDEST PUSH2 0x159C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1CFE DUP4 PUSH2 0x1CCB JUMP JUMPDEST PUSH2 0x1D12 PUSH2 0x1D0A DUP3 PUSH2 0x1CEC JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0x1C71 JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH0 SWAP1 JUMP JUMPDEST PUSH2 0x1D26 PUSH2 0x1D1A JUMP JUMPDEST PUSH2 0x1D31 DUP2 DUP5 DUP5 PUSH2 0x1CF5 JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1D54 JUMPI PUSH2 0x1D49 PUSH0 DUP3 PUSH2 0x1D1E JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x1D37 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x1D99 JUMPI PUSH2 0x1D6A DUP2 PUSH2 0x1C44 JUMP JUMPDEST PUSH2 0x1D73 DUP5 PUSH2 0x1C56 JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x1D82 JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0x1D96 PUSH2 0x1D8E DUP6 PUSH2 0x1C56 JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0x1D36 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1DB9 PUSH0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0x1D9E JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1DD1 DUP4 DUP4 PUSH2 0x1DAA JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1DEA DUP3 PUSH2 0x16C0 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1E03 JUMPI PUSH2 0x1E02 PUSH2 0x17C5 JUMP JUMPDEST JUMPDEST PUSH2 0x1E0D DUP3 SLOAD PUSH2 0x1C14 JUMP JUMPDEST PUSH2 0x1E18 DUP3 DUP3 DUP6 PUSH2 0x1D58 JUMP JUMPDEST PUSH0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x1E49 JUMPI PUSH0 DUP5 ISZERO PUSH2 0x1E37 JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0x1E41 DUP6 DUP3 PUSH2 0x1DC6 JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0x1EA8 JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0x1E57 DUP7 PUSH2 0x1C44 JUMP JUMPDEST PUSH0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x1E7E JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1E59 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0x1E9B JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0x1E97 PUSH1 0x1F DUP10 AND DUP3 PUSH2 0x1DAA JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x1EE7 DUP3 PUSH2 0x159C JUMP JUMPDEST SWAP2 POP PUSH2 0x1EF2 DUP4 PUSH2 0x159C JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x1F0A JUMPI PUSH2 0x1F09 PUSH2 0x1EB0 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1F23 PUSH0 DUP4 ADD DUP7 PUSH2 0x1795 JUMP JUMPDEST PUSH2 0x1F30 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1A25 JUMP JUMPDEST PUSH2 0x1F3D PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1795 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1F69 DUP3 PUSH2 0x1F45 JUMP JUMPDEST PUSH2 0x1F73 DUP2 DUP6 PUSH2 0x1F4F JUMP JUMPDEST SWAP4 POP PUSH2 0x1F83 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x16DA JUMP JUMPDEST PUSH2 0x1F8C DUP2 PUSH2 0x1702 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x1FAA PUSH0 DUP4 ADD DUP8 PUSH2 0x1795 JUMP JUMPDEST PUSH2 0x1FB7 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x1795 JUMP JUMPDEST PUSH2 0x1FC4 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x1A25 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x1FD6 DUP2 DUP5 PUSH2 0x1F5F JUMP JUMPDEST SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x1FEF DUP2 PUSH2 0x1638 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x200A JUMPI PUSH2 0x2009 PUSH2 0x153A JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2017 DUP5 DUP3 DUP6 ADD PUSH2 0x1FE1 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x2033 PUSH0 DUP4 ADD DUP6 PUSH2 0x1795 JUMP JUMPDEST PUSH2 0x2040 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1A25 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DIV EXP DUP10 JUMPDEST JUMPI PUSH2 0x95CF SWAP15 0xF6 DUP9 SHL STOP 0xA9 STATICCALL JUMPDEST ADD DUP5 SWAP4 TIMESTAMP 0x4E 0xD5 BLOCKHASH SHL SWAP6 0xE1 0xB1 0xAD 0xDD DUP8 0xF8 DELEGATECALL PUSH5 0x736F6C6343 STOP ADDMOD ISZERO STOP CALLER ",
							"sourceMap": "143:1645:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1663:122;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1561:300:3;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2365:89;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3497:154;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3323:113;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;379:169:0;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4143:578:3;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1242:138:0;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4787:132:3;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2185:118;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1920:208;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1388:106:0;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2518:93:3;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3718:144;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4985:208;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1502:93:0;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;701:241;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3928:153:3;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1663:122:0;1740:37;1753:10;1765:2;1769:7;1740:12;:37::i;:::-;1663:122;;:::o;1561:300:3:-;1663:4;1713:25;1698:40;;;:11;:40;;;;:104;;;;1769:33;1754:48;;;:11;:48;;;;1698:104;:156;;;;1818:36;1842:11;1818:23;:36::i;:::-;1698:156;1679:175;;1561:300;;;:::o;2365:89::-;2410:13;2442:5;2435:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2365:89;:::o;3497:154::-;3564:7;3583:22;3597:7;3583:13;:22::i;:::-;;3623:21;3636:7;3623:12;:21::i;:::-;3616:28;;3497:154;;;:::o;3323:113::-;3394:35;3403:2;3407:7;3416:12;:10;:12::i;:::-;3394:8;:35::i;:::-;3323:113;;:::o;379:169:0:-;464:8;438:10;:23;449:11;;438:23;;;;;;;;;;;:34;;;;;;:::i;:::-;;483:30;489:10;501:11;;483:5;:30::i;:::-;539:1;524:11;;:16;;;;;;;:::i;:::-;;;;;;;;379:169;:::o;4143:578:3:-;4251:1;4237:16;;:2;:16;;;4233:87;;4306:1;4276:33;;;;;;;;;;;:::i;:::-;;;;;;;;4233:87;4538:21;4562:34;4570:2;4574:7;4583:12;:10;:12::i;:::-;4562:7;:34::i;:::-;4538:58;;4627:4;4610:21;;:13;:21;;;4606:109;;4675:4;4681:7;4690:13;4654:50;;;;;;;;;;;;;:::i;:::-;;;;;;;;4606:109;4223:498;4143:578;;;:::o;1242:138:0:-;1327:45;1346:5;1353:8;1363;1327:18;:45::i;:::-;1242:138;;;:::o;4787:132:3:-;4873:39;4890:4;4896:2;4900:7;4873:39;;;;;;;;;;;;:16;:39::i;:::-;4787:132;;;:::o;2185:118::-;2248:7;2274:22;2288:7;2274:13;:22::i;:::-;2267:29;;2185:118;;;:::o;1920:208::-;1983:7;2023:1;2006:19;;:5;:19;;;2002:87;;2075:1;2048:30;;;;;;;;;;;:::i;:::-;;;;;;;;2002:87;2105:9;:16;2115:5;2105:16;;;;;;;;;;;;;;;;2098:23;;1920:208;;;:::o;1388:106:0:-;1444:7;1471:15;1480:5;1471:8;:15::i;:::-;1464:22;;1388:106;;;:::o;2518:93:3:-;2565:13;2597:7;2590:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2518:93;:::o;3718:144::-;3803:52;3822:12;:10;:12::i;:::-;3836:8;3846;3803:18;:52::i;:::-;3718:144;;:::o;4985:208::-;5098:31;5111:4;5117:2;5121:7;5098:12;:31::i;:::-;5139:47;5162:4;5168:2;5172:7;5181:4;5139:22;:47::i;:::-;4985:208;;;;:::o;1502:93:0:-;1549:7;1576:11;;1569:18;;1502:93;:::o;701:241::-;783:13;914:10;:20;925:8;914:20;;;;;;;;;;;907:27;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;701:241;;;:::o;3928:153:3:-;4016:4;4039:18;:25;4058:5;4039:25;;;;;;;;;;;;;;;:35;4065:8;4039:35;;;;;;;;;;;;;;;;;;;;;;;;;4032:42;;3928:153;;;;:::o;762:146:9:-;838:4;876:25;861:40;;;:11;:40;;;;854:47;;762:146;;;:::o;16138:241:3:-;16201:7;16220:13;16236:17;16245:7;16236:8;:17::i;:::-;16220:33;;16284:1;16267:19;;:5;:19;;;16263:88;;16332:7;16309:31;;;;;;;;;;;:::i;:::-;;;;;;;;16263:88;16367:5;16360:12;;;16138:241;;;:::o;5938:127::-;6008:7;6034:15;:24;6050:7;6034:24;;;;;;;;;;;;;;;;;;;;;6027:31;;5938:127;;;:::o;656:96:7:-;709:7;735:10;728:17;;656:96;:::o;14418:120:3:-;14498:33;14507:2;14511:7;14520:4;14526;14498:8;:33::i;:::-;14418:120;;;:::o;9955:327::-;10036:1;10022:16;;:2;:16;;;10018:87;;10091:1;10061:33;;;;;;;;;;;:::i;:::-;;;;;;;;10018:87;10114:21;10138:32;10146:2;10150:7;10167:1;10138:7;:32::i;:::-;10114:56;;10209:1;10184:27;;:13;:27;;;10180:96;;10262:1;10234:31;;;;;;;;;;;:::i;:::-;;;;;;;;10180:96;10008:274;9955:327;;:::o;8838:795::-;8924:7;8943:12;8958:17;8967:7;8958:8;:17::i;:::-;8943:32;;9051:1;9035:18;;:4;:18;;;9031:86;;9069:37;9086:4;9092;9098:7;9069:16;:37::i;:::-;9031:86;9177:1;9161:18;;:4;:18;;;9157:256;;9277:48;9294:1;9298:7;9315:1;9319:5;9277:8;:48::i;:::-;9387:1;9368:9;:15;9378:4;9368:15;;;;;;;;;;;;;;;;:20;;;;;;;;;;;9157:256;9441:1;9427:16;;:2;:16;;;9423:107;;9504:1;9487:9;:13;9497:2;9487:13;;;;;;;;;;;;;;;;:18;;;;;;;;;;;9423:107;9559:2;9540:7;:16;9548:7;9540:16;;;;;;;;;;;;:21;;;;;;;;;;;;;;;;;;9596:7;9592:2;9577:27;;9586:4;9577:27;;;;;;;;;;;;9622:4;9615:11;;;8838:795;;;;;:::o;15591:312::-;15718:1;15698:22;;:8;:22;;;15694:91;;15765:8;15743:31;;;;;;;;;;;:::i;:::-;;;;;;;;15694:91;15832:8;15794:18;:25;15813:5;15794:25;;;;;;;;;;;;;;;:35;15820:8;15794:35;;;;;;;;;;;;;;;;:46;;;;;;;;;;;;;;;;;;15877:8;15855:41;;15870:5;15855:41;;;15887:8;15855:41;;;;;;:::i;:::-;;;;;;;;15591:312;;;:::o;5707:115::-;5773:7;5799;:16;5807:7;5799:16;;;;;;;;;;;;;;;;;;;;;5792:23;;5707:115;;;:::o;16918:782::-;17051:1;17034:2;:14;;;:18;17030:664;;;17088:2;17072:36;;;17109:12;:10;:12::i;:::-;17123:4;17129:7;17138:4;17072:71;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;17068:616;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;17398:1;17381:6;:13;:18;17377:293;;17452:2;17430:25;;;;;;;;;;;:::i;:::-;;;;;;;;17377:293;17622:6;17616:13;17607:6;17603:2;17599:15;17592:38;17068:616;17200:41;;;17190:51;;;:6;:51;;;;17186:130;;17294:2;17272:25;;;;;;;;;;;:::i;:::-;;;;;;;;17186:130;17144:186;17030:664;16918:782;;;;:::o;14720:662::-;14880:9;:31;;;;14909:1;14893:18;;:4;:18;;;;14880:31;14876:460;;;14927:13;14943:22;14957:7;14943:13;:22::i;:::-;14927:38;;15109:1;15093:18;;:4;:18;;;;:35;;;;;15124:4;15115:13;;:5;:13;;;;15093:35;:69;;;;;15133:29;15150:5;15157:4;15133:16;:29::i;:::-;15132:30;15093:69;15089:142;;;15211:4;15189:27;;;;;;;;;;;:::i;:::-;;;;;;;;15089:142;15249:9;15245:81;;;15303:7;15299:2;15283:28;;15292:5;15283:28;;;;;;;;;;;;15245:81;14913:423;14876:460;15373:2;15346:15;:24;15362:7;15346:24;;;;;;;;;;;;:29;;;;;;;;;;;;;;;;;;14720:662;;;;:::o;7082:368::-;7194:38;7208:5;7215:7;7224;7194:13;:38::i;:::-;7189:255;;7269:1;7252:19;;:5;:19;;;7248:186;;7321:7;7298:31;;;;;;;;;;;:::i;:::-;;;;;;;;7248:186;7402:7;7411;7375:44;;;;;;;;;;;;:::i;:::-;;;;;;;;7189:255;7082:368;;;:::o;6376:272::-;6479:4;6533:1;6514:21;;:7;:21;;;;:127;;;;;6561:7;6552:16;;:5;:16;;;:52;;;;6572:32;6589:5;6596:7;6572:16;:32::i;:::-;6552:52;:88;;;;6633:7;6608:32;;:21;6621:7;6608:12;:21::i;:::-;:32;;;6552:88;6514:127;6495:146;;6376:272;;;;;:::o;7:75:13:-;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:139::-;742:5;780:6;767:20;758:29;;796:33;823:5;796:33;:::i;:::-;696:139;;;;:::o;841:77::-;878:7;907:5;896:16;;841:77;;;:::o;924:122::-;997:24;1015:5;997:24;:::i;:::-;990:5;987:35;977:63;;1036:1;1033;1026:12;977:63;924:122;:::o;1052:139::-;1098:5;1136:6;1123:20;1114:29;;1152:33;1179:5;1152:33;:::i;:::-;1052:139;;;;:::o;1197:474::-;1265:6;1273;1322:2;1310:9;1301:7;1297:23;1293:32;1290:119;;;1328:79;;:::i;:::-;1290:119;1448:1;1473:53;1518:7;1509:6;1498:9;1494:22;1473:53;:::i;:::-;1463:63;;1419:117;1575:2;1601:53;1646:7;1637:6;1626:9;1622:22;1601:53;:::i;:::-;1591:63;;1546:118;1197:474;;;;;:::o;1677:149::-;1713:7;1753:66;1746:5;1742:78;1731:89;;1677:149;;;:::o;1832:120::-;1904:23;1921:5;1904:23;:::i;:::-;1897:5;1894:34;1884:62;;1942:1;1939;1932:12;1884:62;1832:120;:::o;1958:137::-;2003:5;2041:6;2028:20;2019:29;;2057:32;2083:5;2057:32;:::i;:::-;1958:137;;;;:::o;2101:327::-;2159:6;2208:2;2196:9;2187:7;2183:23;2179:32;2176:119;;;2214:79;;:::i;:::-;2176:119;2334:1;2359:52;2403:7;2394:6;2383:9;2379:22;2359:52;:::i;:::-;2349:62;;2305:116;2101:327;;;;:::o;2434:90::-;2468:7;2511:5;2504:13;2497:21;2486:32;;2434:90;;;:::o;2530:109::-;2611:21;2626:5;2611:21;:::i;:::-;2606:3;2599:34;2530:109;;:::o;2645:210::-;2732:4;2770:2;2759:9;2755:18;2747:26;;2783:65;2845:1;2834:9;2830:17;2821:6;2783:65;:::i;:::-;2645:210;;;;:::o;2861:99::-;2913:6;2947:5;2941:12;2931:22;;2861:99;;;:::o;2966:169::-;3050:11;3084:6;3079:3;3072:19;3124:4;3119:3;3115:14;3100:29;;2966:169;;;;:::o;3141:246::-;3222:1;3232:113;3246:6;3243:1;3240:13;3232:113;;;3331:1;3326:3;3322:11;3316:18;3312:1;3307:3;3303:11;3296:39;3268:2;3265:1;3261:10;3256:15;;3232:113;;;3379:1;3370:6;3365:3;3361:16;3354:27;3203:184;3141:246;;;:::o;3393:102::-;3434:6;3485:2;3481:7;3476:2;3469:5;3465:14;3461:28;3451:38;;3393:102;;;:::o;3501:377::-;3589:3;3617:39;3650:5;3617:39;:::i;:::-;3672:71;3736:6;3731:3;3672:71;:::i;:::-;3665:78;;3752:65;3810:6;3805:3;3798:4;3791:5;3787:16;3752:65;:::i;:::-;3842:29;3864:6;3842:29;:::i;:::-;3837:3;3833:39;3826:46;;3593:285;3501:377;;;;:::o;3884:313::-;3997:4;4035:2;4024:9;4020:18;4012:26;;4084:9;4078:4;4074:20;4070:1;4059:9;4055:17;4048:47;4112:78;4185:4;4176:6;4112:78;:::i;:::-;4104:86;;3884:313;;;;:::o;4203:329::-;4262:6;4311:2;4299:9;4290:7;4286:23;4282:32;4279:119;;;4317:79;;:::i;:::-;4279:119;4437:1;4462:53;4507:7;4498:6;4487:9;4483:22;4462:53;:::i;:::-;4452:63;;4408:117;4203:329;;;;:::o;4538:118::-;4625:24;4643:5;4625:24;:::i;:::-;4620:3;4613:37;4538:118;;:::o;4662:222::-;4755:4;4793:2;4782:9;4778:18;4770:26;;4806:71;4874:1;4863:9;4859:17;4850:6;4806:71;:::i;:::-;4662:222;;;;:::o;4890:117::-;4999:1;4996;4989:12;5013:117;5122:1;5119;5112:12;5136:180;5184:77;5181:1;5174:88;5281:4;5278:1;5271:15;5305:4;5302:1;5295:15;5322:281;5405:27;5427:4;5405:27;:::i;:::-;5397:6;5393:40;5535:6;5523:10;5520:22;5499:18;5487:10;5484:34;5481:62;5478:88;;;5546:18;;:::i;:::-;5478:88;5586:10;5582:2;5575:22;5365:238;5322:281;;:::o;5609:129::-;5643:6;5670:20;;:::i;:::-;5660:30;;5699:33;5727:4;5719:6;5699:33;:::i;:::-;5609:129;;;:::o;5744:308::-;5806:4;5896:18;5888:6;5885:30;5882:56;;;5918:18;;:::i;:::-;5882:56;5956:29;5978:6;5956:29;:::i;:::-;5948:37;;6040:4;6034;6030:15;6022:23;;5744:308;;;:::o;6058:146::-;6155:6;6150:3;6145;6132:30;6196:1;6187:6;6182:3;6178:16;6171:27;6058:146;;;:::o;6210:425::-;6288:5;6313:66;6329:49;6371:6;6329:49;:::i;:::-;6313:66;:::i;:::-;6304:75;;6402:6;6395:5;6388:21;6440:4;6433:5;6429:16;6478:3;6469:6;6464:3;6460:16;6457:25;6454:112;;;6485:79;;:::i;:::-;6454:112;6575:54;6622:6;6617:3;6612;6575:54;:::i;:::-;6294:341;6210:425;;;;;:::o;6655:340::-;6711:5;6760:3;6753:4;6745:6;6741:17;6737:27;6727:122;;6768:79;;:::i;:::-;6727:122;6885:6;6872:20;6910:79;6985:3;6977:6;6970:4;6962:6;6958:17;6910:79;:::i;:::-;6901:88;;6717:278;6655:340;;;;:::o;7001:509::-;7070:6;7119:2;7107:9;7098:7;7094:23;7090:32;7087:119;;;7125:79;;:::i;:::-;7087:119;7273:1;7262:9;7258:17;7245:31;7303:18;7295:6;7292:30;7289:117;;;7325:79;;:::i;:::-;7289:117;7430:63;7485:7;7476:6;7465:9;7461:22;7430:63;:::i;:::-;7420:73;;7216:287;7001:509;;;;:::o;7516:619::-;7593:6;7601;7609;7658:2;7646:9;7637:7;7633:23;7629:32;7626:119;;;7664:79;;:::i;:::-;7626:119;7784:1;7809:53;7854:7;7845:6;7834:9;7830:22;7809:53;:::i;:::-;7799:63;;7755:117;7911:2;7937:53;7982:7;7973:6;7962:9;7958:22;7937:53;:::i;:::-;7927:63;;7882:118;8039:2;8065:53;8110:7;8101:6;8090:9;8086:22;8065:53;:::i;:::-;8055:63;;8010:118;7516:619;;;;;:::o;8141:116::-;8211:21;8226:5;8211:21;:::i;:::-;8204:5;8201:32;8191:60;;8247:1;8244;8237:12;8191:60;8141:116;:::o;8263:133::-;8306:5;8344:6;8331:20;8322:29;;8360:30;8384:5;8360:30;:::i;:::-;8263:133;;;;:::o;8402:613::-;8476:6;8484;8492;8541:2;8529:9;8520:7;8516:23;8512:32;8509:119;;;8547:79;;:::i;:::-;8509:119;8667:1;8692:53;8737:7;8728:6;8717:9;8713:22;8692:53;:::i;:::-;8682:63;;8638:117;8794:2;8820:53;8865:7;8856:6;8845:9;8841:22;8820:53;:::i;:::-;8810:63;;8765:118;8922:2;8948:50;8990:7;8981:6;8970:9;8966:22;8948:50;:::i;:::-;8938:60;;8893:115;8402:613;;;;;:::o;9021:329::-;9080:6;9129:2;9117:9;9108:7;9104:23;9100:32;9097:119;;;9135:79;;:::i;:::-;9097:119;9255:1;9280:53;9325:7;9316:6;9305:9;9301:22;9280:53;:::i;:::-;9270:63;;9226:117;9021:329;;;;:::o;9356:118::-;9443:24;9461:5;9443:24;:::i;:::-;9438:3;9431:37;9356:118;;:::o;9480:222::-;9573:4;9611:2;9600:9;9596:18;9588:26;;9624:71;9692:1;9681:9;9677:17;9668:6;9624:71;:::i;:::-;9480:222;;;;:::o;9708:468::-;9773:6;9781;9830:2;9818:9;9809:7;9805:23;9801:32;9798:119;;;9836:79;;:::i;:::-;9798:119;9956:1;9981:53;10026:7;10017:6;10006:9;10002:22;9981:53;:::i;:::-;9971:63;;9927:117;10083:2;10109:50;10151:7;10142:6;10131:9;10127:22;10109:50;:::i;:::-;10099:60;;10054:115;9708:468;;;;;:::o;10182:307::-;10243:4;10333:18;10325:6;10322:30;10319:56;;;10355:18;;:::i;:::-;10319:56;10393:29;10415:6;10393:29;:::i;:::-;10385:37;;10477:4;10471;10467:15;10459:23;;10182:307;;;:::o;10495:423::-;10572:5;10597:65;10613:48;10654:6;10613:48;:::i;:::-;10597:65;:::i;:::-;10588:74;;10685:6;10678:5;10671:21;10723:4;10716:5;10712:16;10761:3;10752:6;10747:3;10743:16;10740:25;10737:112;;;10768:79;;:::i;:::-;10737:112;10858:54;10905:6;10900:3;10895;10858:54;:::i;:::-;10578:340;10495:423;;;;;:::o;10937:338::-;10992:5;11041:3;11034:4;11026:6;11022:17;11018:27;11008:122;;11049:79;;:::i;:::-;11008:122;11166:6;11153:20;11191:78;11265:3;11257:6;11250:4;11242:6;11238:17;11191:78;:::i;:::-;11182:87;;10998:277;10937:338;;;;:::o;11281:943::-;11376:6;11384;11392;11400;11449:3;11437:9;11428:7;11424:23;11420:33;11417:120;;;11456:79;;:::i;:::-;11417:120;11576:1;11601:53;11646:7;11637:6;11626:9;11622:22;11601:53;:::i;:::-;11591:63;;11547:117;11703:2;11729:53;11774:7;11765:6;11754:9;11750:22;11729:53;:::i;:::-;11719:63;;11674:118;11831:2;11857:53;11902:7;11893:6;11882:9;11878:22;11857:53;:::i;:::-;11847:63;;11802:118;11987:2;11976:9;11972:18;11959:32;12018:18;12010:6;12007:30;12004:117;;;12040:79;;:::i;:::-;12004:117;12145:62;12199:7;12190:6;12179:9;12175:22;12145:62;:::i;:::-;12135:72;;11930:287;11281:943;;;;;;;:::o;12230:474::-;12298:6;12306;12355:2;12343:9;12334:7;12330:23;12326:32;12323:119;;;12361:79;;:::i;:::-;12323:119;12481:1;12506:53;12551:7;12542:6;12531:9;12527:22;12506:53;:::i;:::-;12496:63;;12452:117;12608:2;12634:53;12679:7;12670:6;12659:9;12655:22;12634:53;:::i;:::-;12624:63;;12579:118;12230:474;;;;;:::o;12710:180::-;12758:77;12755:1;12748:88;12855:4;12852:1;12845:15;12879:4;12876:1;12869:15;12896:320;12940:6;12977:1;12971:4;12967:12;12957:22;;13024:1;13018:4;13014:12;13045:18;13035:81;;13101:4;13093:6;13089:17;13079:27;;13035:81;13163:2;13155:6;13152:14;13132:18;13129:38;13126:84;;13182:18;;:::i;:::-;13126:84;12947:269;12896:320;;;:::o;13222:141::-;13271:4;13294:3;13286:11;;13317:3;13314:1;13307:14;13351:4;13348:1;13338:18;13330:26;;13222:141;;;:::o;13369:93::-;13406:6;13453:2;13448;13441:5;13437:14;13433:23;13423:33;;13369:93;;;:::o;13468:107::-;13512:8;13562:5;13556:4;13552:16;13531:37;;13468:107;;;;:::o;13581:393::-;13650:6;13700:1;13688:10;13684:18;13723:97;13753:66;13742:9;13723:97;:::i;:::-;13841:39;13871:8;13860:9;13841:39;:::i;:::-;13829:51;;13913:4;13909:9;13902:5;13898:21;13889:30;;13962:4;13952:8;13948:19;13941:5;13938:30;13928:40;;13657:317;;13581:393;;;;;:::o;13980:60::-;14008:3;14029:5;14022:12;;13980:60;;;:::o;14046:142::-;14096:9;14129:53;14147:34;14156:24;14174:5;14156:24;:::i;:::-;14147:34;:::i;:::-;14129:53;:::i;:::-;14116:66;;14046:142;;;:::o;14194:75::-;14237:3;14258:5;14251:12;;14194:75;;;:::o;14275:269::-;14385:39;14416:7;14385:39;:::i;:::-;14446:91;14495:41;14519:16;14495:41;:::i;:::-;14487:6;14480:4;14474:11;14446:91;:::i;:::-;14440:4;14433:105;14351:193;14275:269;;;:::o;14550:73::-;14595:3;14550:73;:::o;14629:189::-;14706:32;;:::i;:::-;14747:65;14805:6;14797;14791:4;14747:65;:::i;:::-;14682:136;14629:189;;:::o;14824:186::-;14884:120;14901:3;14894:5;14891:14;14884:120;;;14955:39;14992:1;14985:5;14955:39;:::i;:::-;14928:1;14921:5;14917:13;14908:22;;14884:120;;;14824:186;;:::o;15016:543::-;15117:2;15112:3;15109:11;15106:446;;;15151:38;15183:5;15151:38;:::i;:::-;15235:29;15253:10;15235:29;:::i;:::-;15225:8;15221:44;15418:2;15406:10;15403:18;15400:49;;;15439:8;15424:23;;15400:49;15462:80;15518:22;15536:3;15518:22;:::i;:::-;15508:8;15504:37;15491:11;15462:80;:::i;:::-;15121:431;;15106:446;15016:543;;;:::o;15565:117::-;15619:8;15669:5;15663:4;15659:16;15638:37;;15565:117;;;;:::o;15688:169::-;15732:6;15765:51;15813:1;15809:6;15801:5;15798:1;15794:13;15765:51;:::i;:::-;15761:56;15846:4;15840;15836:15;15826:25;;15739:118;15688:169;;;;:::o;15862:295::-;15938:4;16084:29;16109:3;16103:4;16084:29;:::i;:::-;16076:37;;16146:3;16143:1;16139:11;16133:4;16130:21;16122:29;;15862:295;;;;:::o;16162:1395::-;16279:37;16312:3;16279:37;:::i;:::-;16381:18;16373:6;16370:30;16367:56;;;16403:18;;:::i;:::-;16367:56;16447:38;16479:4;16473:11;16447:38;:::i;:::-;16532:67;16592:6;16584;16578:4;16532:67;:::i;:::-;16626:1;16650:4;16637:17;;16682:2;16674:6;16671:14;16699:1;16694:618;;;;17356:1;17373:6;17370:77;;;17422:9;17417:3;17413:19;17407:26;17398:35;;17370:77;17473:67;17533:6;17526:5;17473:67;:::i;:::-;17467:4;17460:81;17329:222;16664:887;;16694:618;16746:4;16742:9;16734:6;16730:22;16780:37;16812:4;16780:37;:::i;:::-;16839:1;16853:208;16867:7;16864:1;16861:14;16853:208;;;16946:9;16941:3;16937:19;16931:26;16923:6;16916:42;16997:1;16989:6;16985:14;16975:24;;17044:2;17033:9;17029:18;17016:31;;16890:4;16887:1;16883:12;16878:17;;16853:208;;;17089:6;17080:7;17077:19;17074:179;;;17147:9;17142:3;17138:19;17132:26;17190:48;17232:4;17224:6;17220:17;17209:9;17190:48;:::i;:::-;17182:6;17175:64;17097:156;17074:179;17299:1;17295;17287:6;17283:14;17279:22;17273:4;17266:36;16701:611;;;16664:887;;16254:1303;;;16162:1395;;:::o;17563:180::-;17611:77;17608:1;17601:88;17708:4;17705:1;17698:15;17732:4;17729:1;17722:15;17749:191;17789:3;17808:20;17826:1;17808:20;:::i;:::-;17803:25;;17842:20;17860:1;17842:20;:::i;:::-;17837:25;;17885:1;17882;17878:9;17871:16;;17906:3;17903:1;17900:10;17897:36;;;17913:18;;:::i;:::-;17897:36;17749:191;;;;:::o;17946:442::-;18095:4;18133:2;18122:9;18118:18;18110:26;;18146:71;18214:1;18203:9;18199:17;18190:6;18146:71;:::i;:::-;18227:72;18295:2;18284:9;18280:18;18271:6;18227:72;:::i;:::-;18309;18377:2;18366:9;18362:18;18353:6;18309:72;:::i;:::-;17946:442;;;;;;:::o;18394:98::-;18445:6;18479:5;18473:12;18463:22;;18394:98;;;:::o;18498:168::-;18581:11;18615:6;18610:3;18603:19;18655:4;18650:3;18646:14;18631:29;;18498:168;;;;:::o;18672:373::-;18758:3;18786:38;18818:5;18786:38;:::i;:::-;18840:70;18903:6;18898:3;18840:70;:::i;:::-;18833:77;;18919:65;18977:6;18972:3;18965:4;18958:5;18954:16;18919:65;:::i;:::-;19009:29;19031:6;19009:29;:::i;:::-;19004:3;19000:39;18993:46;;18762:283;18672:373;;;;:::o;19051:640::-;19246:4;19284:3;19273:9;19269:19;19261:27;;19298:71;19366:1;19355:9;19351:17;19342:6;19298:71;:::i;:::-;19379:72;19447:2;19436:9;19432:18;19423:6;19379:72;:::i;:::-;19461;19529:2;19518:9;19514:18;19505:6;19461:72;:::i;:::-;19580:9;19574:4;19570:20;19565:2;19554:9;19550:18;19543:48;19608:76;19679:4;19670:6;19608:76;:::i;:::-;19600:84;;19051:640;;;;;;;:::o;19697:141::-;19753:5;19784:6;19778:13;19769:22;;19800:32;19826:5;19800:32;:::i;:::-;19697:141;;;;:::o;19844:349::-;19913:6;19962:2;19950:9;19941:7;19937:23;19933:32;19930:119;;;19968:79;;:::i;:::-;19930:119;20088:1;20113:63;20168:7;20159:6;20148:9;20144:22;20113:63;:::i;:::-;20103:73;;20059:127;19844:349;;;;:::o;20199:332::-;20320:4;20358:2;20347:9;20343:18;20335:26;;20371:71;20439:1;20428:9;20424:17;20415:6;20371:71;:::i;:::-;20452:72;20520:2;20509:9;20505:18;20496:6;20452:72;:::i;:::-;20199:332;;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1663400",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"approve(address,uint256)": "infinite",
								"balanceOf(address)": "infinite",
								"getApproved(uint256)": "infinite",
								"getOwnerOf(uint256)": "2961",
								"getTotalSupply()": "2498",
								"isApprovedForAll(address,address)": "infinite",
								"minting(string)": "infinite",
								"name()": "infinite",
								"ownerOf(uint256)": "infinite",
								"safeTransferFrom(address,address,uint256)": "infinite",
								"safeTransferFrom(address,address,uint256,bytes)": "infinite",
								"setAppAll(address,address,bool)": "infinite",
								"setApprovalForAll(address,bool)": "infinite",
								"supportsInterface(bytes4)": "809",
								"symbol()": "infinite",
								"tokenURI(uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite",
								"transferFrom(address,uint256)": "infinite"
							},
							"internal": {
								"_baseURI()": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 143,
									"end": 1788,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 143,
									"end": 1788,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 143,
									"end": 1788,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 369,
									"end": 370,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 350,
									"end": 370,
									"name": "PUSH",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 350,
									"end": 370,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 175,
									"end": 281,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 175,
									"end": 281,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 175,
									"end": 281,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 175,
									"end": 281,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 175,
									"end": 281,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 175,
									"end": 281,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 175,
									"end": 281,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 175,
									"end": 281,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 175,
									"end": 281,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 175,
									"end": 281,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 175,
									"end": 281,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 175,
									"end": 281,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 175,
									"end": 281,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 175,
									"end": 281,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 175,
									"end": 281,
									"name": "CODESIZE",
									"source": 0
								},
								{
									"begin": 175,
									"end": 281,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 175,
									"end": 281,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 175,
									"end": 281,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 175,
									"end": 281,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 175,
									"end": 281,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 175,
									"end": 281,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 175,
									"end": 281,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 175,
									"end": 281,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 175,
									"end": 281,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 175,
									"end": 281,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 175,
									"end": 281,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 175,
									"end": 281,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 175,
									"end": 281,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 175,
									"end": 281,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 175,
									"end": 281,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 175,
									"end": 281,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 175,
									"end": 281,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 175,
									"end": 281,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 175,
									"end": 281,
									"name": "tag",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 175,
									"end": 281,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 263,
									"end": 268,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 270,
									"end": 277,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1455,
									"end": 1460,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1447,
									"end": 1452,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 1447,
									"end": 1460,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1447,
									"end": 1460,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1447,
									"end": 1460,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "7"
								},
								{
									"begin": 1447,
									"end": 1460,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 1447,
									"end": 1460,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1447,
									"end": 1460,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "8"
								},
								{
									"begin": 1447,
									"end": 1460,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 1447,
									"end": 1460,
									"name": "tag",
									"source": 3,
									"value": "7"
								},
								{
									"begin": 1447,
									"end": 1460,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1447,
									"end": 1460,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1480,
									"end": 1487,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1470,
									"end": 1477,
									"name": "PUSH",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 1470,
									"end": 1487,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1470,
									"end": 1487,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1470,
									"end": 1487,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "9"
								},
								{
									"begin": 1470,
									"end": 1487,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 1470,
									"end": 1487,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1470,
									"end": 1487,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "8"
								},
								{
									"begin": 1470,
									"end": 1487,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 1470,
									"end": 1487,
									"name": "tag",
									"source": 3,
									"value": "9"
								},
								{
									"begin": 1470,
									"end": 1487,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1470,
									"end": 1487,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 175,
									"end": 281,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 175,
									"end": 281,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 143,
									"end": 1788,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 143,
									"end": 1788,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 7,
									"end": 82,
									"name": "tag",
									"source": 13,
									"value": "12"
								},
								{
									"begin": 7,
									"end": 82,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 40,
									"end": 46,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 73,
									"end": 75,
									"name": "PUSH",
									"source": 13,
									"value": "40"
								},
								{
									"begin": 67,
									"end": 76,
									"name": "MLOAD",
									"source": 13
								},
								{
									"begin": 57,
									"end": 76,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 57,
									"end": 76,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 7,
									"end": 82,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 7,
									"end": 82,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 13,
									"value": "13"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 13
								},
								{
									"begin": 211,
									"end": 328,
									"name": "tag",
									"source": 13,
									"value": "14"
								},
								{
									"begin": 211,
									"end": 328,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 320,
									"end": 321,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 317,
									"end": 318,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 310,
									"end": 322,
									"name": "REVERT",
									"source": 13
								},
								{
									"begin": 334,
									"end": 451,
									"name": "tag",
									"source": 13,
									"value": "15"
								},
								{
									"begin": 334,
									"end": 451,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 443,
									"end": 444,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 440,
									"end": 441,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 433,
									"end": 445,
									"name": "REVERT",
									"source": 13
								},
								{
									"begin": 457,
									"end": 574,
									"name": "tag",
									"source": 13,
									"value": "16"
								},
								{
									"begin": 457,
									"end": 574,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 566,
									"end": 567,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 563,
									"end": 564,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 556,
									"end": 568,
									"name": "REVERT",
									"source": 13
								},
								{
									"begin": 580,
									"end": 682,
									"name": "tag",
									"source": 13,
									"value": "17"
								},
								{
									"begin": 580,
									"end": 682,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 621,
									"end": 627,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 672,
									"end": 674,
									"name": "PUSH",
									"source": 13,
									"value": "1F"
								},
								{
									"begin": 668,
									"end": 675,
									"name": "NOT",
									"source": 13
								},
								{
									"begin": 663,
									"end": 665,
									"name": "PUSH",
									"source": 13,
									"value": "1F"
								},
								{
									"begin": 656,
									"end": 661,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 652,
									"end": 666,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 648,
									"end": 676,
									"name": "AND",
									"source": 13
								},
								{
									"begin": 638,
									"end": 676,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 638,
									"end": 676,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 580,
									"end": 682,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 580,
									"end": 682,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 580,
									"end": 682,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 580,
									"end": 682,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 688,
									"end": 868,
									"name": "tag",
									"source": 13,
									"value": "18"
								},
								{
									"begin": 688,
									"end": 868,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 736,
									"end": 813,
									"name": "PUSH",
									"source": 13,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 733,
									"end": 734,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 726,
									"end": 814,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 833,
									"end": 837,
									"name": "PUSH",
									"source": 13,
									"value": "41"
								},
								{
									"begin": 830,
									"end": 831,
									"name": "PUSH",
									"source": 13,
									"value": "4"
								},
								{
									"begin": 823,
									"end": 838,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 857,
									"end": 861,
									"name": "PUSH",
									"source": 13,
									"value": "24"
								},
								{
									"begin": 854,
									"end": 855,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 847,
									"end": 862,
									"name": "REVERT",
									"source": 13
								},
								{
									"begin": 874,
									"end": 1155,
									"name": "tag",
									"source": 13,
									"value": "19"
								},
								{
									"begin": 874,
									"end": 1155,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 957,
									"end": 984,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "53"
								},
								{
									"begin": 979,
									"end": 983,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 957,
									"end": 984,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "17"
								},
								{
									"begin": 957,
									"end": 984,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 957,
									"end": 984,
									"name": "tag",
									"source": 13,
									"value": "53"
								},
								{
									"begin": 957,
									"end": 984,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 949,
									"end": 955,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 945,
									"end": 985,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 1087,
									"end": 1093,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 1075,
									"end": 1085,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 1072,
									"end": 1094,
									"name": "LT",
									"source": 13
								},
								{
									"begin": 1051,
									"end": 1069,
									"name": "PUSH",
									"source": 13,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1039,
									"end": 1049,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 1036,
									"end": 1070,
									"name": "GT",
									"source": 13
								},
								{
									"begin": 1033,
									"end": 1095,
									"name": "OR",
									"source": 13
								},
								{
									"begin": 1030,
									"end": 1118,
									"name": "ISZERO",
									"source": 13
								},
								{
									"begin": 1030,
									"end": 1118,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "54"
								},
								{
									"begin": 1030,
									"end": 1118,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 1098,
									"end": 1116,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "55"
								},
								{
									"begin": 1098,
									"end": 1116,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "18"
								},
								{
									"begin": 1098,
									"end": 1116,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 1098,
									"end": 1116,
									"name": "tag",
									"source": 13,
									"value": "55"
								},
								{
									"begin": 1098,
									"end": 1116,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 1030,
									"end": 1118,
									"name": "tag",
									"source": 13,
									"value": "54"
								},
								{
									"begin": 1030,
									"end": 1118,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 1138,
									"end": 1148,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 1134,
									"end": 1136,
									"name": "PUSH",
									"source": 13,
									"value": "40"
								},
								{
									"begin": 1127,
									"end": 1149,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 917,
									"end": 1155,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 874,
									"end": 1155,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 874,
									"end": 1155,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 874,
									"end": 1155,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 1161,
									"end": 1290,
									"name": "tag",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 1161,
									"end": 1290,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 1195,
									"end": 1201,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 1222,
									"end": 1242,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "57"
								},
								{
									"begin": 1222,
									"end": 1242,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "12"
								},
								{
									"begin": 1222,
									"end": 1242,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 1222,
									"end": 1242,
									"name": "tag",
									"source": 13,
									"value": "57"
								},
								{
									"begin": 1222,
									"end": 1242,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 1212,
									"end": 1242,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 1212,
									"end": 1242,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 1251,
									"end": 1284,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "58"
								},
								{
									"begin": 1279,
									"end": 1283,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 1271,
									"end": 1277,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 1251,
									"end": 1284,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "19"
								},
								{
									"begin": 1251,
									"end": 1284,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 1251,
									"end": 1284,
									"name": "tag",
									"source": 13,
									"value": "58"
								},
								{
									"begin": 1251,
									"end": 1284,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 1161,
									"end": 1290,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 1161,
									"end": 1290,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 1161,
									"end": 1290,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 1161,
									"end": 1290,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 1296,
									"end": 1604,
									"name": "tag",
									"source": 13,
									"value": "21"
								},
								{
									"begin": 1296,
									"end": 1604,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 1358,
									"end": 1362,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 1448,
									"end": 1466,
									"name": "PUSH",
									"source": 13,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1440,
									"end": 1446,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 1437,
									"end": 1467,
									"name": "GT",
									"source": 13
								},
								{
									"begin": 1434,
									"end": 1490,
									"name": "ISZERO",
									"source": 13
								},
								{
									"begin": 1434,
									"end": 1490,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "60"
								},
								{
									"begin": 1434,
									"end": 1490,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 1470,
									"end": 1488,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "61"
								},
								{
									"begin": 1470,
									"end": 1488,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "18"
								},
								{
									"begin": 1470,
									"end": 1488,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 1470,
									"end": 1488,
									"name": "tag",
									"source": 13,
									"value": "61"
								},
								{
									"begin": 1470,
									"end": 1488,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 1434,
									"end": 1490,
									"name": "tag",
									"source": 13,
									"value": "60"
								},
								{
									"begin": 1434,
									"end": 1490,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 1508,
									"end": 1537,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "62"
								},
								{
									"begin": 1530,
									"end": 1536,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 1508,
									"end": 1537,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "17"
								},
								{
									"begin": 1508,
									"end": 1537,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 1508,
									"end": 1537,
									"name": "tag",
									"source": 13,
									"value": "62"
								},
								{
									"begin": 1508,
									"end": 1537,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 1500,
									"end": 1537,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 1500,
									"end": 1537,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 1592,
									"end": 1596,
									"name": "PUSH",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 1586,
									"end": 1590,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 1582,
									"end": 1597,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 1574,
									"end": 1597,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 1574,
									"end": 1597,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 1296,
									"end": 1604,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 1296,
									"end": 1604,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 1296,
									"end": 1604,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 1296,
									"end": 1604,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 1610,
									"end": 1856,
									"name": "tag",
									"source": 13,
									"value": "22"
								},
								{
									"begin": 1610,
									"end": 1856,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 1691,
									"end": 1692,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 1701,
									"end": 1814,
									"name": "tag",
									"source": 13,
									"value": "64"
								},
								{
									"begin": 1701,
									"end": 1814,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 1715,
									"end": 1721,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 1712,
									"end": 1713,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 1709,
									"end": 1722,
									"name": "LT",
									"source": 13
								},
								{
									"begin": 1701,
									"end": 1814,
									"name": "ISZERO",
									"source": 13
								},
								{
									"begin": 1701,
									"end": 1814,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "66"
								},
								{
									"begin": 1701,
									"end": 1814,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 1800,
									"end": 1801,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 1795,
									"end": 1798,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 1791,
									"end": 1802,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 1785,
									"end": 1803,
									"name": "MLOAD",
									"source": 13
								},
								{
									"begin": 1781,
									"end": 1782,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 1776,
									"end": 1779,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 1772,
									"end": 1783,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 1765,
									"end": 1804,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 1737,
									"end": 1739,
									"name": "PUSH",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 1734,
									"end": 1735,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 1730,
									"end": 1740,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 1725,
									"end": 1740,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 1725,
									"end": 1740,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 1701,
									"end": 1814,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "64"
								},
								{
									"begin": 1701,
									"end": 1814,
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 1701,
									"end": 1814,
									"name": "tag",
									"source": 13,
									"value": "66"
								},
								{
									"begin": 1701,
									"end": 1814,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 1848,
									"end": 1849,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 1839,
									"end": 1845,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 1834,
									"end": 1837,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 1830,
									"end": 1846,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 1823,
									"end": 1850,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 1672,
									"end": 1856,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 1610,
									"end": 1856,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 1610,
									"end": 1856,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 1610,
									"end": 1856,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 1610,
									"end": 1856,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 1862,
									"end": 2296,
									"name": "tag",
									"source": 13,
									"value": "23"
								},
								{
									"begin": 1862,
									"end": 2296,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 1951,
									"end": 1956,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 1976,
									"end": 2042,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "68"
								},
								{
									"begin": 1992,
									"end": 2041,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "69"
								},
								{
									"begin": 2034,
									"end": 2040,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 1992,
									"end": 2041,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "21"
								},
								{
									"begin": 1992,
									"end": 2041,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 1992,
									"end": 2041,
									"name": "tag",
									"source": 13,
									"value": "69"
								},
								{
									"begin": 1992,
									"end": 2041,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 1976,
									"end": 2042,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 1976,
									"end": 2042,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 1976,
									"end": 2042,
									"name": "tag",
									"source": 13,
									"value": "68"
								},
								{
									"begin": 1976,
									"end": 2042,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 1967,
									"end": 2042,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 1967,
									"end": 2042,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 2065,
									"end": 2071,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 2058,
									"end": 2063,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 2051,
									"end": 2072,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 2103,
									"end": 2107,
									"name": "PUSH",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 2096,
									"end": 2101,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 2092,
									"end": 2108,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 2141,
									"end": 2144,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 2132,
									"end": 2138,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 2127,
									"end": 2130,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 2123,
									"end": 2139,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 2120,
									"end": 2145,
									"name": "GT",
									"source": 13
								},
								{
									"begin": 2117,
									"end": 2229,
									"name": "ISZERO",
									"source": 13
								},
								{
									"begin": 2117,
									"end": 2229,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "70"
								},
								{
									"begin": 2117,
									"end": 2229,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 2148,
									"end": 2227,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "71"
								},
								{
									"begin": 2148,
									"end": 2227,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "16"
								},
								{
									"begin": 2148,
									"end": 2227,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 2148,
									"end": 2227,
									"name": "tag",
									"source": 13,
									"value": "71"
								},
								{
									"begin": 2148,
									"end": 2227,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 2117,
									"end": 2229,
									"name": "tag",
									"source": 13,
									"value": "70"
								},
								{
									"begin": 2117,
									"end": 2229,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 2238,
									"end": 2290,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "72"
								},
								{
									"begin": 2283,
									"end": 2289,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 2278,
									"end": 2281,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 2273,
									"end": 2276,
									"name": "DUP6",
									"source": 13
								},
								{
									"begin": 2238,
									"end": 2290,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "22"
								},
								{
									"begin": 2238,
									"end": 2290,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 2238,
									"end": 2290,
									"name": "tag",
									"source": 13,
									"value": "72"
								},
								{
									"begin": 2238,
									"end": 2290,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 1957,
									"end": 2296,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 1862,
									"end": 2296,
									"name": "SWAP4",
									"source": 13
								},
								{
									"begin": 1862,
									"end": 2296,
									"name": "SWAP3",
									"source": 13
								},
								{
									"begin": 1862,
									"end": 2296,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 1862,
									"end": 2296,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 1862,
									"end": 2296,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 1862,
									"end": 2296,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 2316,
									"end": 2671,
									"name": "tag",
									"source": 13,
									"value": "24"
								},
								{
									"begin": 2316,
									"end": 2671,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 2383,
									"end": 2388,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 2432,
									"end": 2435,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 2425,
									"end": 2429,
									"name": "PUSH",
									"source": 13,
									"value": "1F"
								},
								{
									"begin": 2417,
									"end": 2423,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 2413,
									"end": 2430,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 2409,
									"end": 2436,
									"name": "SLT",
									"source": 13
								},
								{
									"begin": 2399,
									"end": 2521,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "74"
								},
								{
									"begin": 2399,
									"end": 2521,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 2440,
									"end": 2519,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "75"
								},
								{
									"begin": 2440,
									"end": 2519,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "15"
								},
								{
									"begin": 2440,
									"end": 2519,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 2440,
									"end": 2519,
									"name": "tag",
									"source": 13,
									"value": "75"
								},
								{
									"begin": 2440,
									"end": 2519,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 2399,
									"end": 2521,
									"name": "tag",
									"source": 13,
									"value": "74"
								},
								{
									"begin": 2399,
									"end": 2521,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 2550,
									"end": 2556,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 2544,
									"end": 2557,
									"name": "MLOAD",
									"source": 13
								},
								{
									"begin": 2575,
									"end": 2665,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "76"
								},
								{
									"begin": 2661,
									"end": 2664,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 2653,
									"end": 2659,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 2646,
									"end": 2650,
									"name": "PUSH",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 2638,
									"end": 2644,
									"name": "DUP7",
									"source": 13
								},
								{
									"begin": 2634,
									"end": 2651,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 2575,
									"end": 2665,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "23"
								},
								{
									"begin": 2575,
									"end": 2665,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 2575,
									"end": 2665,
									"name": "tag",
									"source": 13,
									"value": "76"
								},
								{
									"begin": 2575,
									"end": 2665,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 2566,
									"end": 2665,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 2566,
									"end": 2665,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 2389,
									"end": 2671,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 2316,
									"end": 2671,
									"name": "SWAP3",
									"source": 13
								},
								{
									"begin": 2316,
									"end": 2671,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 2316,
									"end": 2671,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 2316,
									"end": 2671,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 2316,
									"end": 2671,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 2677,
									"end": 3530,
									"name": "tag",
									"source": 13,
									"value": "3"
								},
								{
									"begin": 2677,
									"end": 3530,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 2776,
									"end": 2782,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 2784,
									"end": 2790,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 2833,
									"end": 2835,
									"name": "PUSH",
									"source": 13,
									"value": "40"
								},
								{
									"begin": 2821,
									"end": 2830,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 2812,
									"end": 2819,
									"name": "DUP6",
									"source": 13
								},
								{
									"begin": 2808,
									"end": 2831,
									"name": "SUB",
									"source": 13
								},
								{
									"begin": 2804,
									"end": 2836,
									"name": "SLT",
									"source": 13
								},
								{
									"begin": 2801,
									"end": 2920,
									"name": "ISZERO",
									"source": 13
								},
								{
									"begin": 2801,
									"end": 2920,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "78"
								},
								{
									"begin": 2801,
									"end": 2920,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 2839,
									"end": 2918,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "79"
								},
								{
									"begin": 2839,
									"end": 2918,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "13"
								},
								{
									"begin": 2839,
									"end": 2918,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 2839,
									"end": 2918,
									"name": "tag",
									"source": 13,
									"value": "79"
								},
								{
									"begin": 2839,
									"end": 2918,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 2801,
									"end": 2920,
									"name": "tag",
									"source": 13,
									"value": "78"
								},
								{
									"begin": 2801,
									"end": 2920,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 2980,
									"end": 2981,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 2969,
									"end": 2978,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 2965,
									"end": 2982,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 2959,
									"end": 2983,
									"name": "MLOAD",
									"source": 13
								},
								{
									"begin": 3010,
									"end": 3028,
									"name": "PUSH",
									"source": 13,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3002,
									"end": 3008,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 2999,
									"end": 3029,
									"name": "GT",
									"source": 13
								},
								{
									"begin": 2996,
									"end": 3113,
									"name": "ISZERO",
									"source": 13
								},
								{
									"begin": 2996,
									"end": 3113,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "80"
								},
								{
									"begin": 2996,
									"end": 3113,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 3032,
									"end": 3111,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "81"
								},
								{
									"begin": 3032,
									"end": 3111,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "14"
								},
								{
									"begin": 3032,
									"end": 3111,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 3032,
									"end": 3111,
									"name": "tag",
									"source": 13,
									"value": "81"
								},
								{
									"begin": 3032,
									"end": 3111,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 2996,
									"end": 3113,
									"name": "tag",
									"source": 13,
									"value": "80"
								},
								{
									"begin": 2996,
									"end": 3113,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 3137,
									"end": 3211,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "82"
								},
								{
									"begin": 3203,
									"end": 3210,
									"name": "DUP6",
									"source": 13
								},
								{
									"begin": 3194,
									"end": 3200,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 3183,
									"end": 3192,
									"name": "DUP7",
									"source": 13
								},
								{
									"begin": 3179,
									"end": 3201,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 3137,
									"end": 3211,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "24"
								},
								{
									"begin": 3137,
									"end": 3211,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 3137,
									"end": 3211,
									"name": "tag",
									"source": 13,
									"value": "82"
								},
								{
									"begin": 3137,
									"end": 3211,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 3127,
									"end": 3211,
									"name": "SWAP3",
									"source": 13
								},
								{
									"begin": 3127,
									"end": 3211,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 2930,
									"end": 3221,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 3281,
									"end": 3283,
									"name": "PUSH",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 3270,
									"end": 3279,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 3266,
									"end": 3284,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 3260,
									"end": 3285,
									"name": "MLOAD",
									"source": 13
								},
								{
									"begin": 3312,
									"end": 3330,
									"name": "PUSH",
									"source": 13,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3304,
									"end": 3310,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 3301,
									"end": 3331,
									"name": "GT",
									"source": 13
								},
								{
									"begin": 3298,
									"end": 3415,
									"name": "ISZERO",
									"source": 13
								},
								{
									"begin": 3298,
									"end": 3415,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "83"
								},
								{
									"begin": 3298,
									"end": 3415,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 3334,
									"end": 3413,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "84"
								},
								{
									"begin": 3334,
									"end": 3413,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "14"
								},
								{
									"begin": 3334,
									"end": 3413,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 3334,
									"end": 3413,
									"name": "tag",
									"source": 13,
									"value": "84"
								},
								{
									"begin": 3334,
									"end": 3413,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 3298,
									"end": 3415,
									"name": "tag",
									"source": 13,
									"value": "83"
								},
								{
									"begin": 3298,
									"end": 3415,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 3439,
									"end": 3513,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "85"
								},
								{
									"begin": 3505,
									"end": 3512,
									"name": "DUP6",
									"source": 13
								},
								{
									"begin": 3496,
									"end": 3502,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 3485,
									"end": 3494,
									"name": "DUP7",
									"source": 13
								},
								{
									"begin": 3481,
									"end": 3503,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 3439,
									"end": 3513,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "24"
								},
								{
									"begin": 3439,
									"end": 3513,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 3439,
									"end": 3513,
									"name": "tag",
									"source": 13,
									"value": "85"
								},
								{
									"begin": 3439,
									"end": 3513,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 3429,
									"end": 3513,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 3429,
									"end": 3513,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 3231,
									"end": 3523,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 2677,
									"end": 3530,
									"name": "SWAP3",
									"source": 13
								},
								{
									"begin": 2677,
									"end": 3530,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 2677,
									"end": 3530,
									"name": "SWAP3",
									"source": 13
								},
								{
									"begin": 2677,
									"end": 3530,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 2677,
									"end": 3530,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 2677,
									"end": 3530,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 3536,
									"end": 3635,
									"name": "tag",
									"source": 13,
									"value": "25"
								},
								{
									"begin": 3536,
									"end": 3635,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 3588,
									"end": 3594,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 3622,
									"end": 3627,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 3616,
									"end": 3628,
									"name": "MLOAD",
									"source": 13
								},
								{
									"begin": 3606,
									"end": 3628,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 3606,
									"end": 3628,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 3536,
									"end": 3635,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 3536,
									"end": 3635,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 3536,
									"end": 3635,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 3536,
									"end": 3635,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 3641,
									"end": 3821,
									"name": "tag",
									"source": 13,
									"value": "26"
								},
								{
									"begin": 3641,
									"end": 3821,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 3689,
									"end": 3766,
									"name": "PUSH",
									"source": 13,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 3686,
									"end": 3687,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 3679,
									"end": 3767,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 3786,
									"end": 3790,
									"name": "PUSH",
									"source": 13,
									"value": "22"
								},
								{
									"begin": 3783,
									"end": 3784,
									"name": "PUSH",
									"source": 13,
									"value": "4"
								},
								{
									"begin": 3776,
									"end": 3791,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 3810,
									"end": 3814,
									"name": "PUSH",
									"source": 13,
									"value": "24"
								},
								{
									"begin": 3807,
									"end": 3808,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 3800,
									"end": 3815,
									"name": "REVERT",
									"source": 13
								},
								{
									"begin": 3827,
									"end": 4147,
									"name": "tag",
									"source": 13,
									"value": "27"
								},
								{
									"begin": 3827,
									"end": 4147,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 3871,
									"end": 3877,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 3908,
									"end": 3909,
									"name": "PUSH",
									"source": 13,
									"value": "2"
								},
								{
									"begin": 3902,
									"end": 3906,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 3898,
									"end": 3910,
									"name": "DIV",
									"source": 13
								},
								{
									"begin": 3888,
									"end": 3910,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 3888,
									"end": 3910,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 3955,
									"end": 3956,
									"name": "PUSH",
									"source": 13,
									"value": "1"
								},
								{
									"begin": 3949,
									"end": 3953,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 3945,
									"end": 3957,
									"name": "AND",
									"source": 13
								},
								{
									"begin": 3976,
									"end": 3994,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 3966,
									"end": 4047,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "89"
								},
								{
									"begin": 3966,
									"end": 4047,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 4032,
									"end": 4036,
									"name": "PUSH",
									"source": 13,
									"value": "7F"
								},
								{
									"begin": 4024,
									"end": 4030,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 4020,
									"end": 4037,
									"name": "AND",
									"source": 13
								},
								{
									"begin": 4010,
									"end": 4037,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 4010,
									"end": 4037,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 3966,
									"end": 4047,
									"name": "tag",
									"source": 13,
									"value": "89"
								},
								{
									"begin": 3966,
									"end": 4047,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 4094,
									"end": 4096,
									"name": "PUSH",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 4086,
									"end": 4092,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 4083,
									"end": 4097,
									"name": "LT",
									"source": 13
								},
								{
									"begin": 4063,
									"end": 4081,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 4060,
									"end": 4098,
									"name": "SUB",
									"source": 13
								},
								{
									"begin": 4057,
									"end": 4141,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "90"
								},
								{
									"begin": 4057,
									"end": 4141,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 4113,
									"end": 4131,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "91"
								},
								{
									"begin": 4113,
									"end": 4131,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "26"
								},
								{
									"begin": 4113,
									"end": 4131,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 4113,
									"end": 4131,
									"name": "tag",
									"source": 13,
									"value": "91"
								},
								{
									"begin": 4113,
									"end": 4131,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 4057,
									"end": 4141,
									"name": "tag",
									"source": 13,
									"value": "90"
								},
								{
									"begin": 4057,
									"end": 4141,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 3878,
									"end": 4147,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 3827,
									"end": 4147,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 3827,
									"end": 4147,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 3827,
									"end": 4147,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 3827,
									"end": 4147,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 4153,
									"end": 4294,
									"name": "tag",
									"source": 13,
									"value": "28"
								},
								{
									"begin": 4153,
									"end": 4294,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 4202,
									"end": 4206,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 4225,
									"end": 4228,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 4217,
									"end": 4228,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 4217,
									"end": 4228,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 4248,
									"end": 4251,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 4245,
									"end": 4246,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 4238,
									"end": 4252,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 4282,
									"end": 4286,
									"name": "PUSH",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 4279,
									"end": 4280,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 4269,
									"end": 4287,
									"name": "KECCAK256",
									"source": 13
								},
								{
									"begin": 4261,
									"end": 4287,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 4261,
									"end": 4287,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 4153,
									"end": 4294,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 4153,
									"end": 4294,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 4153,
									"end": 4294,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 4153,
									"end": 4294,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 4300,
									"end": 4393,
									"name": "tag",
									"source": 13,
									"value": "29"
								},
								{
									"begin": 4300,
									"end": 4393,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 4337,
									"end": 4343,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 4384,
									"end": 4386,
									"name": "PUSH",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 4379,
									"end": 4381,
									"name": "PUSH",
									"source": 13,
									"value": "1F"
								},
								{
									"begin": 4372,
									"end": 4377,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 4368,
									"end": 4382,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 4364,
									"end": 4387,
									"name": "DIV",
									"source": 13
								},
								{
									"begin": 4354,
									"end": 4387,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 4354,
									"end": 4387,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 4300,
									"end": 4393,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 4300,
									"end": 4393,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 4300,
									"end": 4393,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 4300,
									"end": 4393,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 4399,
									"end": 4506,
									"name": "tag",
									"source": 13,
									"value": "30"
								},
								{
									"begin": 4399,
									"end": 4506,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 4443,
									"end": 4451,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 4493,
									"end": 4498,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 4487,
									"end": 4491,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 4483,
									"end": 4499,
									"name": "SHL",
									"source": 13
								},
								{
									"begin": 4462,
									"end": 4499,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 4462,
									"end": 4499,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 4399,
									"end": 4506,
									"name": "SWAP3",
									"source": 13
								},
								{
									"begin": 4399,
									"end": 4506,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 4399,
									"end": 4506,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 4399,
									"end": 4506,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 4399,
									"end": 4506,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 4512,
									"end": 4905,
									"name": "tag",
									"source": 13,
									"value": "31"
								},
								{
									"begin": 4512,
									"end": 4905,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 4581,
									"end": 4587,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 4631,
									"end": 4632,
									"name": "PUSH",
									"source": 13,
									"value": "8"
								},
								{
									"begin": 4619,
									"end": 4629,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 4615,
									"end": 4633,
									"name": "MUL",
									"source": 13
								},
								{
									"begin": 4654,
									"end": 4751,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "96"
								},
								{
									"begin": 4684,
									"end": 4750,
									"name": "PUSH",
									"source": 13,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 4673,
									"end": 4682,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 4654,
									"end": 4751,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "30"
								},
								{
									"begin": 4654,
									"end": 4751,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 4654,
									"end": 4751,
									"name": "tag",
									"source": 13,
									"value": "96"
								},
								{
									"begin": 4654,
									"end": 4751,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 4772,
									"end": 4811,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "97"
								},
								{
									"begin": 4802,
									"end": 4810,
									"name": "DUP7",
									"source": 13
								},
								{
									"begin": 4791,
									"end": 4800,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 4772,
									"end": 4811,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "30"
								},
								{
									"begin": 4772,
									"end": 4811,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 4772,
									"end": 4811,
									"name": "tag",
									"source": 13,
									"value": "97"
								},
								{
									"begin": 4772,
									"end": 4811,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 4760,
									"end": 4811,
									"name": "SWAP6",
									"source": 13
								},
								{
									"begin": 4760,
									"end": 4811,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 4844,
									"end": 4848,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 4840,
									"end": 4849,
									"name": "NOT",
									"source": 13
								},
								{
									"begin": 4833,
									"end": 4838,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 4829,
									"end": 4850,
									"name": "AND",
									"source": 13
								},
								{
									"begin": 4820,
									"end": 4850,
									"name": "SWAP4",
									"source": 13
								},
								{
									"begin": 4820,
									"end": 4850,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 4893,
									"end": 4897,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 4883,
									"end": 4891,
									"name": "DUP7",
									"source": 13
								},
								{
									"begin": 4879,
									"end": 4898,
									"name": "AND",
									"source": 13
								},
								{
									"begin": 4872,
									"end": 4877,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 4869,
									"end": 4899,
									"name": "OR",
									"source": 13
								},
								{
									"begin": 4859,
									"end": 4899,
									"name": "SWAP3",
									"source": 13
								},
								{
									"begin": 4859,
									"end": 4899,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 4588,
									"end": 4905,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 4588,
									"end": 4905,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 4512,
									"end": 4905,
									"name": "SWAP4",
									"source": 13
								},
								{
									"begin": 4512,
									"end": 4905,
									"name": "SWAP3",
									"source": 13
								},
								{
									"begin": 4512,
									"end": 4905,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 4512,
									"end": 4905,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 4512,
									"end": 4905,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 4512,
									"end": 4905,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 4911,
									"end": 4988,
									"name": "tag",
									"source": 13,
									"value": "32"
								},
								{
									"begin": 4911,
									"end": 4988,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 4948,
									"end": 4955,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 4977,
									"end": 4982,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 4966,
									"end": 4982,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 4966,
									"end": 4982,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 4911,
									"end": 4988,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 4911,
									"end": 4988,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 4911,
									"end": 4988,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 4911,
									"end": 4988,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 4994,
									"end": 5054,
									"name": "tag",
									"source": 13,
									"value": "33"
								},
								{
									"begin": 4994,
									"end": 5054,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 5022,
									"end": 5025,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 5043,
									"end": 5048,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 5036,
									"end": 5048,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 5036,
									"end": 5048,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 4994,
									"end": 5054,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 4994,
									"end": 5054,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 4994,
									"end": 5054,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 4994,
									"end": 5054,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 5060,
									"end": 5202,
									"name": "tag",
									"source": 13,
									"value": "34"
								},
								{
									"begin": 5060,
									"end": 5202,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 5110,
									"end": 5119,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 5143,
									"end": 5196,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "101"
								},
								{
									"begin": 5161,
									"end": 5195,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "102"
								},
								{
									"begin": 5170,
									"end": 5194,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "103"
								},
								{
									"begin": 5188,
									"end": 5193,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 5170,
									"end": 5194,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "32"
								},
								{
									"begin": 5170,
									"end": 5194,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 5170,
									"end": 5194,
									"name": "tag",
									"source": 13,
									"value": "103"
								},
								{
									"begin": 5170,
									"end": 5194,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 5161,
									"end": 5195,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "33"
								},
								{
									"begin": 5161,
									"end": 5195,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 5161,
									"end": 5195,
									"name": "tag",
									"source": 13,
									"value": "102"
								},
								{
									"begin": 5161,
									"end": 5195,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 5143,
									"end": 5196,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "32"
								},
								{
									"begin": 5143,
									"end": 5196,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 5143,
									"end": 5196,
									"name": "tag",
									"source": 13,
									"value": "101"
								},
								{
									"begin": 5143,
									"end": 5196,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 5130,
									"end": 5196,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 5130,
									"end": 5196,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 5060,
									"end": 5202,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 5060,
									"end": 5202,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 5060,
									"end": 5202,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 5060,
									"end": 5202,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 5208,
									"end": 5283,
									"name": "tag",
									"source": 13,
									"value": "35"
								},
								{
									"begin": 5208,
									"end": 5283,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 5251,
									"end": 5254,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 5272,
									"end": 5277,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 5265,
									"end": 5277,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 5265,
									"end": 5277,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 5208,
									"end": 5283,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 5208,
									"end": 5283,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 5208,
									"end": 5283,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 5208,
									"end": 5283,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 5289,
									"end": 5558,
									"name": "tag",
									"source": 13,
									"value": "36"
								},
								{
									"begin": 5289,
									"end": 5558,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 5399,
									"end": 5438,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "106"
								},
								{
									"begin": 5430,
									"end": 5437,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 5399,
									"end": 5438,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "34"
								},
								{
									"begin": 5399,
									"end": 5438,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 5399,
									"end": 5438,
									"name": "tag",
									"source": 13,
									"value": "106"
								},
								{
									"begin": 5399,
									"end": 5438,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 5460,
									"end": 5551,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "107"
								},
								{
									"begin": 5509,
									"end": 5550,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "108"
								},
								{
									"begin": 5533,
									"end": 5549,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 5509,
									"end": 5550,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "35"
								},
								{
									"begin": 5509,
									"end": 5550,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 5509,
									"end": 5550,
									"name": "tag",
									"source": 13,
									"value": "108"
								},
								{
									"begin": 5509,
									"end": 5550,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 5501,
									"end": 5507,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 5494,
									"end": 5498,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 5488,
									"end": 5499,
									"name": "SLOAD",
									"source": 13
								},
								{
									"begin": 5460,
									"end": 5551,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "31"
								},
								{
									"begin": 5460,
									"end": 5551,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 5460,
									"end": 5551,
									"name": "tag",
									"source": 13,
									"value": "107"
								},
								{
									"begin": 5460,
									"end": 5551,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 5454,
									"end": 5458,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 5447,
									"end": 5552,
									"name": "SSTORE",
									"source": 13
								},
								{
									"begin": 5365,
									"end": 5558,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 5289,
									"end": 5558,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 5289,
									"end": 5558,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 5289,
									"end": 5558,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 5289,
									"end": 5558,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 5564,
									"end": 5637,
									"name": "tag",
									"source": 13,
									"value": "37"
								},
								{
									"begin": 5564,
									"end": 5637,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 5609,
									"end": 5612,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 5564,
									"end": 5637,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 5564,
									"end": 5637,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 5643,
									"end": 5832,
									"name": "tag",
									"source": 13,
									"value": "38"
								},
								{
									"begin": 5643,
									"end": 5832,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 5720,
									"end": 5752,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "111"
								},
								{
									"begin": 5720,
									"end": 5752,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "37"
								},
								{
									"begin": 5720,
									"end": 5752,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 5720,
									"end": 5752,
									"name": "tag",
									"source": 13,
									"value": "111"
								},
								{
									"begin": 5720,
									"end": 5752,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 5761,
									"end": 5826,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "112"
								},
								{
									"begin": 5819,
									"end": 5825,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 5811,
									"end": 5817,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 5805,
									"end": 5809,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 5761,
									"end": 5826,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "36"
								},
								{
									"begin": 5761,
									"end": 5826,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 5761,
									"end": 5826,
									"name": "tag",
									"source": 13,
									"value": "112"
								},
								{
									"begin": 5761,
									"end": 5826,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 5696,
									"end": 5832,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 5643,
									"end": 5832,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 5643,
									"end": 5832,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 5643,
									"end": 5832,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 5838,
									"end": 6024,
									"name": "tag",
									"source": 13,
									"value": "39"
								},
								{
									"begin": 5838,
									"end": 6024,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 5898,
									"end": 6018,
									"name": "tag",
									"source": 13,
									"value": "114"
								},
								{
									"begin": 5898,
									"end": 6018,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 5915,
									"end": 5918,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 5908,
									"end": 5913,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 5905,
									"end": 5919,
									"name": "LT",
									"source": 13
								},
								{
									"begin": 5898,
									"end": 6018,
									"name": "ISZERO",
									"source": 13
								},
								{
									"begin": 5898,
									"end": 6018,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "116"
								},
								{
									"begin": 5898,
									"end": 6018,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 5969,
									"end": 6008,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "117"
								},
								{
									"begin": 6006,
									"end": 6007,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 5999,
									"end": 6004,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 5969,
									"end": 6008,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "38"
								},
								{
									"begin": 5969,
									"end": 6008,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 5969,
									"end": 6008,
									"name": "tag",
									"source": 13,
									"value": "117"
								},
								{
									"begin": 5969,
									"end": 6008,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 5942,
									"end": 5943,
									"name": "PUSH",
									"source": 13,
									"value": "1"
								},
								{
									"begin": 5935,
									"end": 5940,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 5931,
									"end": 5944,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 5922,
									"end": 5944,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 5922,
									"end": 5944,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 5898,
									"end": 6018,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "114"
								},
								{
									"begin": 5898,
									"end": 6018,
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 5898,
									"end": 6018,
									"name": "tag",
									"source": 13,
									"value": "116"
								},
								{
									"begin": 5898,
									"end": 6018,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 5838,
									"end": 6024,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 5838,
									"end": 6024,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 5838,
									"end": 6024,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 6030,
									"end": 6573,
									"name": "tag",
									"source": 13,
									"value": "40"
								},
								{
									"begin": 6030,
									"end": 6573,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 6131,
									"end": 6133,
									"name": "PUSH",
									"source": 13,
									"value": "1F"
								},
								{
									"begin": 6126,
									"end": 6129,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 6123,
									"end": 6134,
									"name": "GT",
									"source": 13
								},
								{
									"begin": 6120,
									"end": 6566,
									"name": "ISZERO",
									"source": 13
								},
								{
									"begin": 6120,
									"end": 6566,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "119"
								},
								{
									"begin": 6120,
									"end": 6566,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 6165,
									"end": 6203,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "120"
								},
								{
									"begin": 6197,
									"end": 6202,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 6165,
									"end": 6203,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "28"
								},
								{
									"begin": 6165,
									"end": 6203,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 6165,
									"end": 6203,
									"name": "tag",
									"source": 13,
									"value": "120"
								},
								{
									"begin": 6165,
									"end": 6203,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 6249,
									"end": 6278,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "121"
								},
								{
									"begin": 6267,
									"end": 6277,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 6249,
									"end": 6278,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "29"
								},
								{
									"begin": 6249,
									"end": 6278,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 6249,
									"end": 6278,
									"name": "tag",
									"source": 13,
									"value": "121"
								},
								{
									"begin": 6249,
									"end": 6278,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 6239,
									"end": 6247,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 6235,
									"end": 6279,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 6432,
									"end": 6434,
									"name": "PUSH",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 6420,
									"end": 6430,
									"name": "DUP6",
									"source": 13
								},
								{
									"begin": 6417,
									"end": 6435,
									"name": "LT",
									"source": 13
								},
								{
									"begin": 6414,
									"end": 6463,
									"name": "ISZERO",
									"source": 13
								},
								{
									"begin": 6414,
									"end": 6463,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "122"
								},
								{
									"begin": 6414,
									"end": 6463,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 6453,
									"end": 6461,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 6438,
									"end": 6461,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 6438,
									"end": 6461,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 6414,
									"end": 6463,
									"name": "tag",
									"source": 13,
									"value": "122"
								},
								{
									"begin": 6414,
									"end": 6463,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 6476,
									"end": 6556,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "123"
								},
								{
									"begin": 6532,
									"end": 6554,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "124"
								},
								{
									"begin": 6550,
									"end": 6553,
									"name": "DUP6",
									"source": 13
								},
								{
									"begin": 6532,
									"end": 6554,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "29"
								},
								{
									"begin": 6532,
									"end": 6554,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 6532,
									"end": 6554,
									"name": "tag",
									"source": 13,
									"value": "124"
								},
								{
									"begin": 6532,
									"end": 6554,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 6522,
									"end": 6530,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 6518,
									"end": 6555,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 6505,
									"end": 6516,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 6476,
									"end": 6556,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "39"
								},
								{
									"begin": 6476,
									"end": 6556,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 6476,
									"end": 6556,
									"name": "tag",
									"source": 13,
									"value": "123"
								},
								{
									"begin": 6476,
									"end": 6556,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 6135,
									"end": 6566,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 6135,
									"end": 6566,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 6120,
									"end": 6566,
									"name": "tag",
									"source": 13,
									"value": "119"
								},
								{
									"begin": 6120,
									"end": 6566,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 6030,
									"end": 6573,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 6030,
									"end": 6573,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 6030,
									"end": 6573,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 6030,
									"end": 6573,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 6579,
									"end": 6696,
									"name": "tag",
									"source": 13,
									"value": "41"
								},
								{
									"begin": 6579,
									"end": 6696,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 6633,
									"end": 6641,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 6683,
									"end": 6688,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 6677,
									"end": 6681,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 6673,
									"end": 6689,
									"name": "SHR",
									"source": 13
								},
								{
									"begin": 6652,
									"end": 6689,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 6652,
									"end": 6689,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 6579,
									"end": 6696,
									"name": "SWAP3",
									"source": 13
								},
								{
									"begin": 6579,
									"end": 6696,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 6579,
									"end": 6696,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 6579,
									"end": 6696,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 6579,
									"end": 6696,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 6702,
									"end": 6871,
									"name": "tag",
									"source": 13,
									"value": "42"
								},
								{
									"begin": 6702,
									"end": 6871,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 6746,
									"end": 6752,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 6779,
									"end": 6830,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "127"
								},
								{
									"begin": 6827,
									"end": 6828,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 6823,
									"end": 6829,
									"name": "NOT",
									"source": 13
								},
								{
									"begin": 6815,
									"end": 6820,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 6812,
									"end": 6813,
									"name": "PUSH",
									"source": 13,
									"value": "8"
								},
								{
									"begin": 6808,
									"end": 6821,
									"name": "MUL",
									"source": 13
								},
								{
									"begin": 6779,
									"end": 6830,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "41"
								},
								{
									"begin": 6779,
									"end": 6830,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 6779,
									"end": 6830,
									"name": "tag",
									"source": 13,
									"value": "127"
								},
								{
									"begin": 6779,
									"end": 6830,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 6775,
									"end": 6831,
									"name": "NOT",
									"source": 13
								},
								{
									"begin": 6860,
									"end": 6864,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 6854,
									"end": 6858,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 6850,
									"end": 6865,
									"name": "AND",
									"source": 13
								},
								{
									"begin": 6840,
									"end": 6865,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 6840,
									"end": 6865,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 6753,
									"end": 6871,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 6702,
									"end": 6871,
									"name": "SWAP3",
									"source": 13
								},
								{
									"begin": 6702,
									"end": 6871,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 6702,
									"end": 6871,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 6702,
									"end": 6871,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 6702,
									"end": 6871,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 6876,
									"end": 7171,
									"name": "tag",
									"source": 13,
									"value": "43"
								},
								{
									"begin": 6876,
									"end": 7171,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 6952,
									"end": 6956,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 7098,
									"end": 7127,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "129"
								},
								{
									"begin": 7123,
									"end": 7126,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 7117,
									"end": 7121,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 7098,
									"end": 7127,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "42"
								},
								{
									"begin": 7098,
									"end": 7127,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 7098,
									"end": 7127,
									"name": "tag",
									"source": 13,
									"value": "129"
								},
								{
									"begin": 7098,
									"end": 7127,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 7090,
									"end": 7127,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 7090,
									"end": 7127,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 7160,
									"end": 7163,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 7157,
									"end": 7158,
									"name": "PUSH",
									"source": 13,
									"value": "2"
								},
								{
									"begin": 7153,
									"end": 7164,
									"name": "MUL",
									"source": 13
								},
								{
									"begin": 7147,
									"end": 7151,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 7144,
									"end": 7165,
									"name": "OR",
									"source": 13
								},
								{
									"begin": 7136,
									"end": 7165,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 7136,
									"end": 7165,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 6876,
									"end": 7171,
									"name": "SWAP3",
									"source": 13
								},
								{
									"begin": 6876,
									"end": 7171,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 6876,
									"end": 7171,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 6876,
									"end": 7171,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 6876,
									"end": 7171,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 7176,
									"end": 8571,
									"name": "tag",
									"source": 13,
									"value": "8"
								},
								{
									"begin": 7176,
									"end": 8571,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 7293,
									"end": 7330,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "131"
								},
								{
									"begin": 7326,
									"end": 7329,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 7293,
									"end": 7330,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "25"
								},
								{
									"begin": 7293,
									"end": 7330,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 7293,
									"end": 7330,
									"name": "tag",
									"source": 13,
									"value": "131"
								},
								{
									"begin": 7293,
									"end": 7330,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 7395,
									"end": 7413,
									"name": "PUSH",
									"source": 13,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7387,
									"end": 7393,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 7384,
									"end": 7414,
									"name": "GT",
									"source": 13
								},
								{
									"begin": 7381,
									"end": 7437,
									"name": "ISZERO",
									"source": 13
								},
								{
									"begin": 7381,
									"end": 7437,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "132"
								},
								{
									"begin": 7381,
									"end": 7437,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 7417,
									"end": 7435,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "133"
								},
								{
									"begin": 7417,
									"end": 7435,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "18"
								},
								{
									"begin": 7417,
									"end": 7435,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 7417,
									"end": 7435,
									"name": "tag",
									"source": 13,
									"value": "133"
								},
								{
									"begin": 7417,
									"end": 7435,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 7381,
									"end": 7437,
									"name": "tag",
									"source": 13,
									"value": "132"
								},
								{
									"begin": 7381,
									"end": 7437,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 7461,
									"end": 7499,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "134"
								},
								{
									"begin": 7493,
									"end": 7497,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 7487,
									"end": 7498,
									"name": "SLOAD",
									"source": 13
								},
								{
									"begin": 7461,
									"end": 7499,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "27"
								},
								{
									"begin": 7461,
									"end": 7499,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 7461,
									"end": 7499,
									"name": "tag",
									"source": 13,
									"value": "134"
								},
								{
									"begin": 7461,
									"end": 7499,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 7546,
									"end": 7613,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "135"
								},
								{
									"begin": 7606,
									"end": 7612,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 7598,
									"end": 7604,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 7592,
									"end": 7596,
									"name": "DUP6",
									"source": 13
								},
								{
									"begin": 7546,
									"end": 7613,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "40"
								},
								{
									"begin": 7546,
									"end": 7613,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 7546,
									"end": 7613,
									"name": "tag",
									"source": 13,
									"value": "135"
								},
								{
									"begin": 7546,
									"end": 7613,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 7640,
									"end": 7641,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 7664,
									"end": 7668,
									"name": "PUSH",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 7651,
									"end": 7668,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 7651,
									"end": 7668,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 7696,
									"end": 7698,
									"name": "PUSH",
									"source": 13,
									"value": "1F"
								},
								{
									"begin": 7688,
									"end": 7694,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 7685,
									"end": 7699,
									"name": "GT",
									"source": 13
								},
								{
									"begin": 7713,
									"end": 7714,
									"name": "PUSH",
									"source": 13,
									"value": "1"
								},
								{
									"begin": 7708,
									"end": 8326,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 7708,
									"end": 8326,
									"name": "EQ",
									"source": 13
								},
								{
									"begin": 7708,
									"end": 8326,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "137"
								},
								{
									"begin": 7708,
									"end": 8326,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 8370,
									"end": 8371,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 8387,
									"end": 8393,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 8384,
									"end": 8461,
									"name": "ISZERO",
									"source": 13
								},
								{
									"begin": 8384,
									"end": 8461,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "138"
								},
								{
									"begin": 8384,
									"end": 8461,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 8436,
									"end": 8445,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 8431,
									"end": 8434,
									"name": "DUP8",
									"source": 13
								},
								{
									"begin": 8427,
									"end": 8446,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 8421,
									"end": 8447,
									"name": "MLOAD",
									"source": 13
								},
								{
									"begin": 8412,
									"end": 8447,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 8412,
									"end": 8447,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 8384,
									"end": 8461,
									"name": "tag",
									"source": 13,
									"value": "138"
								},
								{
									"begin": 8384,
									"end": 8461,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 8487,
									"end": 8554,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "139"
								},
								{
									"begin": 8547,
									"end": 8553,
									"name": "DUP6",
									"source": 13
								},
								{
									"begin": 8540,
									"end": 8545,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 8487,
									"end": 8554,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "43"
								},
								{
									"begin": 8487,
									"end": 8554,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 8487,
									"end": 8554,
									"name": "tag",
									"source": 13,
									"value": "139"
								},
								{
									"begin": 8487,
									"end": 8554,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 8481,
									"end": 8485,
									"name": "DUP7",
									"source": 13
								},
								{
									"begin": 8474,
									"end": 8555,
									"name": "SSTORE",
									"source": 13
								},
								{
									"begin": 8343,
									"end": 8565,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 7678,
									"end": 8565,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "136"
								},
								{
									"begin": 7678,
									"end": 8565,
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 7708,
									"end": 8326,
									"name": "tag",
									"source": 13,
									"value": "137"
								},
								{
									"begin": 7708,
									"end": 8326,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 7760,
									"end": 7764,
									"name": "PUSH",
									"source": 13,
									"value": "1F"
								},
								{
									"begin": 7756,
									"end": 7765,
									"name": "NOT",
									"source": 13
								},
								{
									"begin": 7748,
									"end": 7754,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 7744,
									"end": 7766,
									"name": "AND",
									"source": 13
								},
								{
									"begin": 7794,
									"end": 7831,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "140"
								},
								{
									"begin": 7826,
									"end": 7830,
									"name": "DUP7",
									"source": 13
								},
								{
									"begin": 7794,
									"end": 7831,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "28"
								},
								{
									"begin": 7794,
									"end": 7831,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 7794,
									"end": 7831,
									"name": "tag",
									"source": 13,
									"value": "140"
								},
								{
									"begin": 7794,
									"end": 7831,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 7853,
									"end": 7854,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 7867,
									"end": 8075,
									"name": "tag",
									"source": 13,
									"value": "141"
								},
								{
									"begin": 7867,
									"end": 8075,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 7881,
									"end": 7888,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 7878,
									"end": 7879,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 7875,
									"end": 7889,
									"name": "LT",
									"source": 13
								},
								{
									"begin": 7867,
									"end": 8075,
									"name": "ISZERO",
									"source": 13
								},
								{
									"begin": 7867,
									"end": 8075,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "143"
								},
								{
									"begin": 7867,
									"end": 8075,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 7960,
									"end": 7969,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 7955,
									"end": 7958,
									"name": "DUP10",
									"source": 13
								},
								{
									"begin": 7951,
									"end": 7970,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 7945,
									"end": 7971,
									"name": "MLOAD",
									"source": 13
								},
								{
									"begin": 7937,
									"end": 7943,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 7930,
									"end": 7972,
									"name": "SSTORE",
									"source": 13
								},
								{
									"begin": 8011,
									"end": 8012,
									"name": "PUSH",
									"source": 13,
									"value": "1"
								},
								{
									"begin": 8003,
									"end": 8009,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 7999,
									"end": 8013,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 7989,
									"end": 8013,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 7989,
									"end": 8013,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 8058,
									"end": 8060,
									"name": "PUSH",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 8047,
									"end": 8056,
									"name": "DUP6",
									"source": 13
								},
								{
									"begin": 8043,
									"end": 8061,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 8030,
									"end": 8061,
									"name": "SWAP5",
									"source": 13
								},
								{
									"begin": 8030,
									"end": 8061,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 7904,
									"end": 7908,
									"name": "PUSH",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 7901,
									"end": 7902,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 7897,
									"end": 7909,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 7892,
									"end": 7909,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 7892,
									"end": 7909,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 7867,
									"end": 8075,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "141"
								},
								{
									"begin": 7867,
									"end": 8075,
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 7867,
									"end": 8075,
									"name": "tag",
									"source": 13,
									"value": "143"
								},
								{
									"begin": 7867,
									"end": 8075,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 8103,
									"end": 8109,
									"name": "DUP7",
									"source": 13
								},
								{
									"begin": 8094,
									"end": 8101,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 8091,
									"end": 8110,
									"name": "LT",
									"source": 13
								},
								{
									"begin": 8088,
									"end": 8267,
									"name": "ISZERO",
									"source": 13
								},
								{
									"begin": 8088,
									"end": 8267,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "144"
								},
								{
									"begin": 8088,
									"end": 8267,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 8161,
									"end": 8170,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 8156,
									"end": 8159,
									"name": "DUP10",
									"source": 13
								},
								{
									"begin": 8152,
									"end": 8171,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 8146,
									"end": 8172,
									"name": "MLOAD",
									"source": 13
								},
								{
									"begin": 8204,
									"end": 8252,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "145"
								},
								{
									"begin": 8246,
									"end": 8250,
									"name": "PUSH",
									"source": 13,
									"value": "1F"
								},
								{
									"begin": 8238,
									"end": 8244,
									"name": "DUP10",
									"source": 13
								},
								{
									"begin": 8234,
									"end": 8251,
									"name": "AND",
									"source": 13
								},
								{
									"begin": 8223,
									"end": 8232,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 8204,
									"end": 8252,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "42"
								},
								{
									"begin": 8204,
									"end": 8252,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 8204,
									"end": 8252,
									"name": "tag",
									"source": 13,
									"value": "145"
								},
								{
									"begin": 8204,
									"end": 8252,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 8196,
									"end": 8202,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 8189,
									"end": 8253,
									"name": "SSTORE",
									"source": 13
								},
								{
									"begin": 8111,
									"end": 8267,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 8088,
									"end": 8267,
									"name": "tag",
									"source": 13,
									"value": "144"
								},
								{
									"begin": 8088,
									"end": 8267,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 8313,
									"end": 8314,
									"name": "PUSH",
									"source": 13,
									"value": "1"
								},
								{
									"begin": 8309,
									"end": 8310,
									"name": "PUSH",
									"source": 13,
									"value": "2"
								},
								{
									"begin": 8301,
									"end": 8307,
									"name": "DUP9",
									"source": 13
								},
								{
									"begin": 8297,
									"end": 8311,
									"name": "MUL",
									"source": 13
								},
								{
									"begin": 8293,
									"end": 8315,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 8287,
									"end": 8291,
									"name": "DUP9",
									"source": 13
								},
								{
									"begin": 8280,
									"end": 8316,
									"name": "SSTORE",
									"source": 13
								},
								{
									"begin": 7715,
									"end": 8326,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 7715,
									"end": 8326,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 7715,
									"end": 8326,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 7678,
									"end": 8565,
									"name": "tag",
									"source": 13,
									"value": "136"
								},
								{
									"begin": 7678,
									"end": 8565,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 7678,
									"end": 8565,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 7268,
									"end": 8571,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 7268,
									"end": 8571,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 7268,
									"end": 8571,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 7176,
									"end": 8571,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 7176,
									"end": 8571,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 7176,
									"end": 8571,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 143,
									"end": 1788,
									"name": "tag",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 143,
									"end": 1788,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 143,
									"end": 1788,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 143,
									"end": 1788,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 143,
									"end": 1788,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 143,
									"end": 1788,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 143,
									"end": 1788,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 143,
									"end": 1788,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 143,
									"end": 1788,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220040a895b576195cf9ef6881b00a9fa5b018493424ed5401b95e1b1addd87f8f464736f6c63430008150033",
									".code": [
										{
											"begin": 143,
											"end": 1788,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 143,
											"end": 1788,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 143,
											"end": 1788,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 143,
											"end": 1788,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 143,
											"end": 1788,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 143,
											"end": 1788,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 143,
											"end": 1788,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 143,
											"end": 1788,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 143,
											"end": 1788,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 143,
											"end": 1788,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 143,
											"end": 1788,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 143,
											"end": 1788,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 143,
											"end": 1788,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 143,
											"end": 1788,
											"name": "PUSH",
											"source": 0,
											"value": "6352211E"
										},
										{
											"begin": 143,
											"end": 1788,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 143,
											"end": 1788,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 143,
											"end": 1788,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 143,
											"end": 1788,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 143,
											"end": 1788,
											"name": "PUSH",
											"source": 0,
											"value": "A22CB465"
										},
										{
											"begin": 143,
											"end": 1788,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 143,
											"end": 1788,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 143,
											"end": 1788,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 143,
											"end": 1788,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 143,
											"end": 1788,
											"name": "PUSH",
											"source": 0,
											"value": "A22CB465"
										},
										{
											"begin": 143,
											"end": 1788,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 143,
											"end": 1788,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 143,
											"end": 1788,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 143,
											"end": 1788,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 143,
											"end": 1788,
											"name": "PUSH",
											"source": 0,
											"value": "B88D4FDE"
										},
										{
											"begin": 143,
											"end": 1788,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 143,
											"end": 1788,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 143,
											"end": 1788,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 143,
											"end": 1788,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 143,
											"end": 1788,
											"name": "PUSH",
											"source": 0,
											"value": "C4E41B22"
										},
										{
											"begin": 143,
											"end": 1788,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 143,
											"end": 1788,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 143,
											"end": 1788,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 143,
											"end": 1788,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 143,
											"end": 1788,
											"name": "PUSH",
											"source": 0,
											"value": "C87B56DD"
										},
										{
											"begin": 143,
											"end": 1788,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 143,
											"end": 1788,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 143,
											"end": 1788,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 143,
											"end": 1788,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 143,
											"end": 1788,
											"name": "PUSH",
											"source": 0,
											"value": "E985E9C5"
										},
										{
											"begin": 143,
											"end": 1788,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 143,
											"end": 1788,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 143,
											"end": 1788,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 143,
											"end": 1788,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 143,
											"end": 1788,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 143,
											"end": 1788,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 143,
											"end": 1788,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 143,
											"end": 1788,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 143,
											"end": 1788,
											"name": "PUSH",
											"source": 0,
											"value": "6352211E"
										},
										{
											"begin": 143,
											"end": 1788,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 143,
											"end": 1788,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 143,
											"end": 1788,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 143,
											"end": 1788,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 143,
											"end": 1788,
											"name": "PUSH",
											"source": 0,
											"value": "70A08231"
										},
										{
											"begin": 143,
											"end": 1788,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 143,
											"end": 1788,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 143,
											"end": 1788,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 143,
											"end": 1788,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 143,
											"end": 1788,
											"name": "PUSH",
											"source": 0,
											"value": "83638710"
										},
										{
											"begin": 143,
											"end": 1788,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 143,
											"end": 1788,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 143,
											"end": 1788,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 143,
											"end": 1788,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 143,
											"end": 1788,
											"name": "PUSH",
											"source": 0,
											"value": "95D89B41"
										},
										{
											"begin": 143,
											"end": 1788,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 143,
											"end": 1788,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 143,
											"end": 1788,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 143,
											"end": 1788,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 143,
											"end": 1788,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 143,
											"end": 1788,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 143,
											"end": 1788,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 143,
											"end": 1788,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 143,
											"end": 1788,
											"name": "PUSH",
											"source": 0,
											"value": "95EA7B3"
										},
										{
											"begin": 143,
											"end": 1788,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 143,
											"end": 1788,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 143,
											"end": 1788,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 143,
											"end": 1788,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 143,
											"end": 1788,
											"name": "PUSH",
											"source": 0,
											"value": "95EA7B3"
										},
										{
											"begin": 143,
											"end": 1788,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 143,
											"end": 1788,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 143,
											"end": 1788,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 143,
											"end": 1788,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 143,
											"end": 1788,
											"name": "PUSH",
											"source": 0,
											"value": "BDC9008"
										},
										{
											"begin": 143,
											"end": 1788,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 143,
											"end": 1788,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 143,
											"end": 1788,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 143,
											"end": 1788,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 143,
											"end": 1788,
											"name": "PUSH",
											"source": 0,
											"value": "23B872DD"
										},
										{
											"begin": 143,
											"end": 1788,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 143,
											"end": 1788,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 143,
											"end": 1788,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 143,
											"end": 1788,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 143,
											"end": 1788,
											"name": "PUSH",
											"source": 0,
											"value": "29D6724E"
										},
										{
											"begin": 143,
											"end": 1788,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 143,
											"end": 1788,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 143,
											"end": 1788,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 143,
											"end": 1788,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 143,
											"end": 1788,
											"name": "PUSH",
											"source": 0,
											"value": "42842E0E"
										},
										{
											"begin": 143,
											"end": 1788,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 143,
											"end": 1788,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 143,
											"end": 1788,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 143,
											"end": 1788,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 143,
											"end": 1788,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 143,
											"end": 1788,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 143,
											"end": 1788,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 143,
											"end": 1788,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 143,
											"end": 1788,
											"name": "PUSH",
											"source": 0,
											"value": "1C6ADC3"
										},
										{
											"begin": 143,
											"end": 1788,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 143,
											"end": 1788,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 143,
											"end": 1788,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 143,
											"end": 1788,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 143,
											"end": 1788,
											"name": "PUSH",
											"source": 0,
											"value": "1FFC9A7"
										},
										{
											"begin": 143,
											"end": 1788,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 143,
											"end": 1788,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 143,
											"end": 1788,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 143,
											"end": 1788,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 143,
											"end": 1788,
											"name": "PUSH",
											"source": 0,
											"value": "6FDDE03"
										},
										{
											"begin": 143,
											"end": 1788,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 143,
											"end": 1788,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 143,
											"end": 1788,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 143,
											"end": 1788,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 143,
											"end": 1788,
											"name": "PUSH",
											"source": 0,
											"value": "81812FC"
										},
										{
											"begin": 143,
											"end": 1788,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 143,
											"end": 1788,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 143,
											"end": 1788,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 143,
											"end": 1788,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 143,
											"end": 1788,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 143,
											"end": 1788,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 143,
											"end": 1788,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 143,
											"end": 1788,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1663,
											"end": 1785,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 1663,
											"end": 1785,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1663,
											"end": 1785,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 1663,
											"end": 1785,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1663,
											"end": 1785,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1663,
											"end": 1785,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 1663,
											"end": 1785,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1663,
											"end": 1785,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1663,
											"end": 1785,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1663,
											"end": 1785,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1663,
											"end": 1785,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 1663,
											"end": 1785,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1663,
											"end": 1785,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1663,
											"end": 1785,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 1663,
											"end": 1785,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1663,
											"end": 1785,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 1663,
											"end": 1785,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1663,
											"end": 1785,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 1663,
											"end": 1785,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1663,
											"end": 1785,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 1663,
											"end": 1785,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1663,
											"end": 1785,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "tag",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "27"
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "tag",
											"source": 3,
											"value": "27"
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "28"
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "29"
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "30"
										},
										{
											"begin": 1561,
											"end": 1861,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "tag",
											"source": 3,
											"value": "29"
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "31"
										},
										{
											"begin": 1561,
											"end": 1861,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "tag",
											"source": 3,
											"value": "28"
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "32"
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "33"
										},
										{
											"begin": 1561,
											"end": 1861,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "tag",
											"source": 3,
											"value": "32"
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "tag",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "34"
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "tag",
											"source": 3,
											"value": "34"
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "35"
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "36"
										},
										{
											"begin": 2365,
											"end": 2454,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "tag",
											"source": 3,
											"value": "35"
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "37"
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "38"
										},
										{
											"begin": 2365,
											"end": 2454,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "tag",
											"source": 3,
											"value": "37"
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "tag",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "39"
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "tag",
											"source": 3,
											"value": "39"
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "41"
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "42"
										},
										{
											"begin": 3497,
											"end": 3651,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "tag",
											"source": 3,
											"value": "41"
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "43"
										},
										{
											"begin": 3497,
											"end": 3651,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "tag",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "44"
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "45"
										},
										{
											"begin": 3497,
											"end": 3651,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "tag",
											"source": 3,
											"value": "44"
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "tag",
											"source": 3,
											"value": "6"
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "46"
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "tag",
											"source": 3,
											"value": "46"
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "47"
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "48"
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "25"
										},
										{
											"begin": 3323,
											"end": 3436,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "tag",
											"source": 3,
											"value": "48"
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "49"
										},
										{
											"begin": 3323,
											"end": 3436,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "tag",
											"source": 3,
											"value": "47"
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "STOP",
											"source": 3
										},
										{
											"begin": 379,
											"end": 548,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 379,
											"end": 548,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 379,
											"end": 548,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 379,
											"end": 548,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 379,
											"end": 548,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 379,
											"end": 548,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 379,
											"end": 548,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 379,
											"end": 548,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 379,
											"end": 548,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 379,
											"end": 548,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 379,
											"end": 548,
											"name": "tag",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 379,
											"end": 548,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 379,
											"end": 548,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 379,
											"end": 548,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 379,
											"end": 548,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 379,
											"end": 548,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 379,
											"end": 548,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 379,
											"end": 548,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 379,
											"end": 548,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 379,
											"end": 548,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 379,
											"end": 548,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 379,
											"end": 548,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 379,
											"end": 548,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 379,
											"end": 548,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 379,
											"end": 548,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 379,
											"end": 548,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 379,
											"end": 548,
											"name": "tag",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 379,
											"end": 548,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 379,
											"end": 548,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 379,
											"end": 548,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 379,
											"end": 548,
											"name": "tag",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 379,
											"end": 548,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 379,
											"end": 548,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "tag",
											"source": 3,
											"value": "8"
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "55"
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "tag",
											"source": 3,
											"value": "55"
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "56"
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "57"
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "58"
										},
										{
											"begin": 4143,
											"end": 4721,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "tag",
											"source": 3,
											"value": "57"
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "59"
										},
										{
											"begin": 4143,
											"end": 4721,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "tag",
											"source": 3,
											"value": "56"
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "STOP",
											"source": 3
										},
										{
											"begin": 1242,
											"end": 1380,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 1242,
											"end": 1380,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1242,
											"end": 1380,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 1242,
											"end": 1380,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1242,
											"end": 1380,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1242,
											"end": 1380,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 1242,
											"end": 1380,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1242,
											"end": 1380,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1242,
											"end": 1380,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1242,
											"end": 1380,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1242,
											"end": 1380,
											"name": "tag",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 1242,
											"end": 1380,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1242,
											"end": 1380,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1242,
											"end": 1380,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 1242,
											"end": 1380,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1242,
											"end": 1380,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1242,
											"end": 1380,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 1242,
											"end": 1380,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1242,
											"end": 1380,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1242,
											"end": 1380,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1242,
											"end": 1380,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1242,
											"end": 1380,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 1242,
											"end": 1380,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1242,
											"end": 1380,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1242,
											"end": 1380,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 1242,
											"end": 1380,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1242,
											"end": 1380,
											"name": "tag",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 1242,
											"end": 1380,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1242,
											"end": 1380,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 1242,
											"end": 1380,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1242,
											"end": 1380,
											"name": "tag",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 1242,
											"end": 1380,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1242,
											"end": 1380,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "tag",
											"source": 3,
											"value": "10"
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "65"
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "tag",
											"source": 3,
											"value": "65"
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "66"
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "67"
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "58"
										},
										{
											"begin": 4787,
											"end": 4919,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "tag",
											"source": 3,
											"value": "67"
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "68"
										},
										{
											"begin": 4787,
											"end": 4919,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "tag",
											"source": 3,
											"value": "66"
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "STOP",
											"source": 3
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "tag",
											"source": 3,
											"value": "11"
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "69"
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "tag",
											"source": 3,
											"value": "69"
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "70"
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "71"
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "42"
										},
										{
											"begin": 2185,
											"end": 2303,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "tag",
											"source": 3,
											"value": "71"
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "72"
										},
										{
											"begin": 2185,
											"end": 2303,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "tag",
											"source": 3,
											"value": "70"
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "73"
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "45"
										},
										{
											"begin": 2185,
											"end": 2303,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "tag",
											"source": 3,
											"value": "73"
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "tag",
											"source": 3,
											"value": "12"
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "74"
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "tag",
											"source": 3,
											"value": "74"
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "75"
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "76"
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "77"
										},
										{
											"begin": 1920,
											"end": 2128,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "tag",
											"source": 3,
											"value": "76"
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "78"
										},
										{
											"begin": 1920,
											"end": 2128,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "tag",
											"source": 3,
											"value": "75"
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "79"
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 1920,
											"end": 2128,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "tag",
											"source": 3,
											"value": "79"
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 1388,
											"end": 1494,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 1388,
											"end": 1494,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1388,
											"end": 1494,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 1388,
											"end": 1494,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1388,
											"end": 1494,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1388,
											"end": 1494,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 1388,
											"end": 1494,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1388,
											"end": 1494,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1388,
											"end": 1494,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1388,
											"end": 1494,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1388,
											"end": 1494,
											"name": "tag",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 1388,
											"end": 1494,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1388,
											"end": 1494,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1388,
											"end": 1494,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 1388,
											"end": 1494,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1388,
											"end": 1494,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1388,
											"end": 1494,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 1388,
											"end": 1494,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1388,
											"end": 1494,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1388,
											"end": 1494,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1388,
											"end": 1494,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1388,
											"end": 1494,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 1388,
											"end": 1494,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1388,
											"end": 1494,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1388,
											"end": 1494,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 1388,
											"end": 1494,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1388,
											"end": 1494,
											"name": "tag",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 1388,
											"end": 1494,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1388,
											"end": 1494,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 1388,
											"end": 1494,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1388,
											"end": 1494,
											"name": "tag",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 1388,
											"end": 1494,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1388,
											"end": 1494,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1388,
											"end": 1494,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1388,
											"end": 1494,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 1388,
											"end": 1494,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1388,
											"end": 1494,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1388,
											"end": 1494,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 1388,
											"end": 1494,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1388,
											"end": 1494,
											"name": "tag",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 1388,
											"end": 1494,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1388,
											"end": 1494,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1388,
											"end": 1494,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1388,
											"end": 1494,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1388,
											"end": 1494,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1388,
											"end": 1494,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1388,
											"end": 1494,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1388,
											"end": 1494,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "tag",
											"source": 3,
											"value": "14"
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "86"
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "tag",
											"source": 3,
											"value": "86"
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "87"
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "88"
										},
										{
											"begin": 2518,
											"end": 2611,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "tag",
											"source": 3,
											"value": "87"
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "89"
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "38"
										},
										{
											"begin": 2518,
											"end": 2611,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "tag",
											"source": 3,
											"value": "89"
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "tag",
											"source": 3,
											"value": "15"
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "90"
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "tag",
											"source": 3,
											"value": "90"
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "91"
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "92"
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "93"
										},
										{
											"begin": 3718,
											"end": 3862,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "tag",
											"source": 3,
											"value": "92"
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "94"
										},
										{
											"begin": 3718,
											"end": 3862,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "tag",
											"source": 3,
											"value": "91"
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "STOP",
											"source": 3
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "tag",
											"source": 3,
											"value": "16"
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "95"
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "tag",
											"source": 3,
											"value": "95"
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "96"
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "97"
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "98"
										},
										{
											"begin": 4985,
											"end": 5193,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "tag",
											"source": 3,
											"value": "97"
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "99"
										},
										{
											"begin": 4985,
											"end": 5193,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "tag",
											"source": 3,
											"value": "96"
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "STOP",
											"source": 3
										},
										{
											"begin": 1502,
											"end": 1595,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 1502,
											"end": 1595,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1502,
											"end": 1595,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 1502,
											"end": 1595,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1502,
											"end": 1595,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1502,
											"end": 1595,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1502,
											"end": 1595,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1502,
											"end": 1595,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1502,
											"end": 1595,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1502,
											"end": 1595,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1502,
											"end": 1595,
											"name": "tag",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1502,
											"end": 1595,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1502,
											"end": 1595,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1502,
											"end": 1595,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 1502,
											"end": 1595,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 1502,
											"end": 1595,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1502,
											"end": 1595,
											"name": "tag",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 1502,
											"end": 1595,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1502,
											"end": 1595,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1502,
											"end": 1595,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1502,
											"end": 1595,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 1502,
											"end": 1595,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1502,
											"end": 1595,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1502,
											"end": 1595,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 1502,
											"end": 1595,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1502,
											"end": 1595,
											"name": "tag",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 1502,
											"end": 1595,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1502,
											"end": 1595,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1502,
											"end": 1595,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1502,
											"end": 1595,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1502,
											"end": 1595,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1502,
											"end": 1595,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1502,
											"end": 1595,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1502,
											"end": 1595,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 701,
											"end": 942,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 701,
											"end": 942,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 701,
											"end": 942,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 701,
											"end": 942,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 701,
											"end": 942,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 701,
											"end": 942,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 701,
											"end": 942,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 701,
											"end": 942,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 701,
											"end": 942,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 701,
											"end": 942,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 701,
											"end": 942,
											"name": "tag",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 701,
											"end": 942,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 701,
											"end": 942,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 701,
											"end": 942,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 701,
											"end": 942,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 701,
											"end": 942,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 701,
											"end": 942,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 701,
											"end": 942,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 701,
											"end": 942,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 701,
											"end": 942,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 701,
											"end": 942,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 701,
											"end": 942,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 701,
											"end": 942,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 701,
											"end": 942,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 701,
											"end": 942,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 701,
											"end": 942,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 701,
											"end": 942,
											"name": "tag",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 701,
											"end": 942,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 701,
											"end": 942,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 701,
											"end": 942,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 701,
											"end": 942,
											"name": "tag",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 701,
											"end": 942,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 701,
											"end": 942,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 701,
											"end": 942,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 701,
											"end": 942,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 701,
											"end": 942,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 701,
											"end": 942,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 701,
											"end": 942,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 701,
											"end": 942,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 701,
											"end": 942,
											"name": "tag",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 701,
											"end": 942,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 701,
											"end": 942,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 701,
											"end": 942,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 701,
											"end": 942,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 701,
											"end": 942,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 701,
											"end": 942,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 701,
											"end": 942,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 701,
											"end": 942,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "tag",
											"source": 3,
											"value": "19"
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "109"
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "tag",
											"source": 3,
											"value": "109"
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "110"
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "111"
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "112"
										},
										{
											"begin": 3928,
											"end": 4081,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "tag",
											"source": 3,
											"value": "111"
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "113"
										},
										{
											"begin": 3928,
											"end": 4081,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "tag",
											"source": 3,
											"value": "110"
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "114"
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "33"
										},
										{
											"begin": 3928,
											"end": 4081,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "tag",
											"source": 3,
											"value": "114"
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 1663,
											"end": 1785,
											"name": "tag",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 1663,
											"end": 1785,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1740,
											"end": 1777,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 1753,
											"end": 1763,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 1765,
											"end": 1767,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1769,
											"end": 1776,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1740,
											"end": 1752,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 1740,
											"end": 1777,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1740,
											"end": 1777,
											"name": "tag",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 1740,
											"end": 1777,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1663,
											"end": 1785,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1663,
											"end": 1785,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1663,
											"end": 1785,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "tag",
											"source": 3,
											"value": "31"
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1663,
											"end": 1667,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1713,
											"end": 1738,
											"name": "PUSH",
											"source": 3,
											"value": "80AC58CD00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1698,
											"end": 1738,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1698,
											"end": 1738,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 1698,
											"end": 1738,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1698,
											"end": 1709,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1698,
											"end": 1738,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1698,
											"end": 1738,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 1698,
											"end": 1738,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1698,
											"end": 1738,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 1698,
											"end": 1802,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1698,
											"end": 1802,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "118"
										},
										{
											"begin": 1698,
											"end": 1802,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1698,
											"end": 1802,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1769,
											"end": 1802,
											"name": "PUSH",
											"source": 3,
											"value": "5B5E139F00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1754,
											"end": 1802,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1754,
											"end": 1802,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 1754,
											"end": 1802,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1754,
											"end": 1765,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1754,
											"end": 1802,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1754,
											"end": 1802,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 1754,
											"end": 1802,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1754,
											"end": 1802,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 1698,
											"end": 1802,
											"name": "tag",
											"source": 3,
											"value": "118"
										},
										{
											"begin": 1698,
											"end": 1802,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1698,
											"end": 1854,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1698,
											"end": 1854,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "119"
										},
										{
											"begin": 1698,
											"end": 1854,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1698,
											"end": 1854,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1818,
											"end": 1854,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "120"
										},
										{
											"begin": 1842,
											"end": 1853,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1818,
											"end": 1841,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "121"
										},
										{
											"begin": 1818,
											"end": 1854,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1818,
											"end": 1854,
											"name": "tag",
											"source": 3,
											"value": "120"
										},
										{
											"begin": 1818,
											"end": 1854,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1698,
											"end": 1854,
											"name": "tag",
											"source": 3,
											"value": "119"
										},
										{
											"begin": 1698,
											"end": 1854,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1679,
											"end": 1854,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1679,
											"end": 1854,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1561,
											"end": 1861,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "tag",
											"source": 3,
											"value": "36"
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2410,
											"end": 2423,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 2442,
											"end": 2447,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "123"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "124"
										},
										{
											"begin": 2435,
											"end": 2447,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "tag",
											"source": 3,
											"value": "123"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "125"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "124"
										},
										{
											"begin": 2435,
											"end": 2447,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "tag",
											"source": 3,
											"value": "125"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "126"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "127"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "126"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "tag",
											"source": 3,
											"value": "127"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "tag",
											"source": 3,
											"value": "128"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "128"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "tag",
											"source": 3,
											"value": "126"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2365,
											"end": 2454,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "tag",
											"source": 3,
											"value": "43"
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3564,
											"end": 3571,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3583,
											"end": 3605,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "130"
										},
										{
											"begin": 3597,
											"end": 3604,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3583,
											"end": 3596,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "131"
										},
										{
											"begin": 3583,
											"end": 3605,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3583,
											"end": 3605,
											"name": "tag",
											"source": 3,
											"value": "130"
										},
										{
											"begin": 3583,
											"end": 3605,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3583,
											"end": 3605,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3623,
											"end": 3644,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "132"
										},
										{
											"begin": 3636,
											"end": 3643,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "133"
										},
										{
											"begin": 3623,
											"end": 3644,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3623,
											"end": 3644,
											"name": "tag",
											"source": 3,
											"value": "132"
										},
										{
											"begin": 3623,
											"end": 3644,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3616,
											"end": 3644,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3616,
											"end": 3644,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3497,
											"end": 3651,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "tag",
											"source": 3,
											"value": "49"
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3394,
											"end": 3429,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "135"
										},
										{
											"begin": 3403,
											"end": 3405,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3407,
											"end": 3414,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3416,
											"end": 3428,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "136"
										},
										{
											"begin": 3416,
											"end": 3426,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "137"
										},
										{
											"begin": 3416,
											"end": 3428,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3416,
											"end": 3428,
											"name": "tag",
											"source": 3,
											"value": "136"
										},
										{
											"begin": 3416,
											"end": 3428,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3394,
											"end": 3402,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "138"
										},
										{
											"begin": 3394,
											"end": 3429,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3394,
											"end": 3429,
											"name": "tag",
											"source": 3,
											"value": "135"
										},
										{
											"begin": 3394,
											"end": 3429,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3323,
											"end": 3436,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 379,
											"end": 548,
											"name": "tag",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 379,
											"end": 548,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 464,
											"end": 472,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 438,
											"end": 448,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 438,
											"end": 461,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 449,
											"end": 460,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 449,
											"end": 460,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 438,
											"end": 461,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 438,
											"end": 461,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 438,
											"end": 461,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 438,
											"end": 461,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 438,
											"end": 461,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 438,
											"end": 461,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 438,
											"end": 461,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 438,
											"end": 461,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 438,
											"end": 461,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 438,
											"end": 461,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 438,
											"end": 461,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 438,
											"end": 472,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 438,
											"end": 472,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 438,
											"end": 472,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 438,
											"end": 472,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 438,
											"end": 472,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 438,
											"end": 472,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "141"
										},
										{
											"begin": 438,
											"end": 472,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 438,
											"end": 472,
											"name": "tag",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 438,
											"end": 472,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 438,
											"end": 472,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 483,
											"end": 513,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 489,
											"end": 499,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 501,
											"end": 512,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 501,
											"end": 512,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 483,
											"end": 488,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 483,
											"end": 513,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 483,
											"end": 513,
											"name": "tag",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 483,
											"end": 513,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 539,
											"end": 540,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 524,
											"end": 535,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 524,
											"end": 535,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 524,
											"end": 540,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 524,
											"end": 540,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 524,
											"end": 540,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 524,
											"end": 540,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 524,
											"end": 540,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 524,
											"end": 540,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 524,
											"end": 540,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 524,
											"end": 540,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 524,
											"end": 540,
											"name": "tag",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 524,
											"end": 540,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 524,
											"end": 540,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 524,
											"end": 540,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 524,
											"end": 540,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 524,
											"end": 540,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 524,
											"end": 540,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 524,
											"end": 540,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 524,
											"end": 540,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 379,
											"end": 548,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 379,
											"end": 548,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "tag",
											"source": 3,
											"value": "59"
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4251,
											"end": 4252,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4237,
											"end": 4253,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4237,
											"end": 4253,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 4237,
											"end": 4239,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4237,
											"end": 4253,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4237,
											"end": 4253,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 4237,
											"end": 4253,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 4233,
											"end": 4320,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "147"
										},
										{
											"begin": 4233,
											"end": 4320,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 4306,
											"end": 4307,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "PUSH",
											"source": 3,
											"value": "64A0AE9200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "148"
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "45"
										},
										{
											"begin": 4276,
											"end": 4309,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "tag",
											"source": 3,
											"value": "148"
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 4233,
											"end": 4320,
											"name": "tag",
											"source": 3,
											"value": "147"
										},
										{
											"begin": 4233,
											"end": 4320,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4538,
											"end": 4559,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4562,
											"end": 4596,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "149"
										},
										{
											"begin": 4570,
											"end": 4572,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 4574,
											"end": 4581,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 4583,
											"end": 4595,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "150"
										},
										{
											"begin": 4583,
											"end": 4593,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "137"
										},
										{
											"begin": 4583,
											"end": 4595,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4583,
											"end": 4595,
											"name": "tag",
											"source": 3,
											"value": "150"
										},
										{
											"begin": 4583,
											"end": 4595,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4562,
											"end": 4569,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "151"
										},
										{
											"begin": 4562,
											"end": 4596,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4562,
											"end": 4596,
											"name": "tag",
											"source": 3,
											"value": "149"
										},
										{
											"begin": 4562,
											"end": 4596,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4538,
											"end": 4596,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4538,
											"end": 4596,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4627,
											"end": 4631,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 4610,
											"end": 4631,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4610,
											"end": 4631,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 4610,
											"end": 4623,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4610,
											"end": 4631,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4610,
											"end": 4631,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 4610,
											"end": 4631,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 4606,
											"end": 4715,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "152"
										},
										{
											"begin": 4606,
											"end": 4715,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 4675,
											"end": 4679,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 4681,
											"end": 4688,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4690,
											"end": 4703,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "PUSH",
											"source": 3,
											"value": "64283D7B00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "153"
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "154"
										},
										{
											"begin": 4654,
											"end": 4704,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "tag",
											"source": 3,
											"value": "153"
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 4606,
											"end": 4715,
											"name": "tag",
											"source": 3,
											"value": "152"
										},
										{
											"begin": 4606,
											"end": 4715,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4223,
											"end": 4721,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4143,
											"end": 4721,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1242,
											"end": 1380,
											"name": "tag",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 1242,
											"end": 1380,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1327,
											"end": 1372,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "156"
										},
										{
											"begin": 1346,
											"end": 1351,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1353,
											"end": 1361,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1363,
											"end": 1371,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1327,
											"end": 1345,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "157"
										},
										{
											"begin": 1327,
											"end": 1372,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1327,
											"end": 1372,
											"name": "tag",
											"source": 0,
											"value": "156"
										},
										{
											"begin": 1327,
											"end": 1372,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1242,
											"end": 1380,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1242,
											"end": 1380,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1242,
											"end": 1380,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1242,
											"end": 1380,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "tag",
											"source": 3,
											"value": "68"
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4873,
											"end": 4912,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "159"
										},
										{
											"begin": 4890,
											"end": 4894,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 4896,
											"end": 4898,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 4900,
											"end": 4907,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 4873,
											"end": 4912,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4873,
											"end": 4912,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 4873,
											"end": 4912,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4873,
											"end": 4912,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 4873,
											"end": 4912,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4873,
											"end": 4912,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4873,
											"end": 4912,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4873,
											"end": 4912,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4873,
											"end": 4912,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4873,
											"end": 4912,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4873,
											"end": 4912,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4873,
											"end": 4912,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4873,
											"end": 4889,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "99"
										},
										{
											"begin": 4873,
											"end": 4912,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4873,
											"end": 4912,
											"name": "tag",
											"source": 3,
											"value": "159"
										},
										{
											"begin": 4873,
											"end": 4912,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4787,
											"end": 4919,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "tag",
											"source": 3,
											"value": "72"
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2248,
											"end": 2255,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2274,
											"end": 2296,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "161"
										},
										{
											"begin": 2288,
											"end": 2295,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2274,
											"end": 2287,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "131"
										},
										{
											"begin": 2274,
											"end": 2296,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2274,
											"end": 2296,
											"name": "tag",
											"source": 3,
											"value": "161"
										},
										{
											"begin": 2274,
											"end": 2296,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2267,
											"end": 2296,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2267,
											"end": 2296,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2185,
											"end": 2303,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "tag",
											"source": 3,
											"value": "78"
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1983,
											"end": 1990,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2023,
											"end": 2024,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2006,
											"end": 2025,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2006,
											"end": 2025,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2006,
											"end": 2011,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2006,
											"end": 2025,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2006,
											"end": 2025,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2006,
											"end": 2025,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2002,
											"end": 2089,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "163"
										},
										{
											"begin": 2002,
											"end": 2089,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2075,
											"end": 2076,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "PUSH",
											"source": 3,
											"value": "89C62B6400000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "164"
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "45"
										},
										{
											"begin": 2048,
											"end": 2078,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "tag",
											"source": 3,
											"value": "164"
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 2002,
											"end": 2089,
											"name": "tag",
											"source": 3,
											"value": "163"
										},
										{
											"begin": 2002,
											"end": 2089,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2105,
											"end": 2114,
											"name": "PUSH",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2115,
											"end": 2120,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2098,
											"end": 2121,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2098,
											"end": 2121,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1920,
											"end": 2128,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1388,
											"end": 1494,
											"name": "tag",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 1388,
											"end": 1494,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1444,
											"end": 1451,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1471,
											"end": 1486,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "166"
										},
										{
											"begin": 1480,
											"end": 1485,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1471,
											"end": 1479,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "167"
										},
										{
											"begin": 1471,
											"end": 1486,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1471,
											"end": 1486,
											"name": "tag",
											"source": 0,
											"value": "166"
										},
										{
											"begin": 1471,
											"end": 1486,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1464,
											"end": 1486,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1464,
											"end": 1486,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1388,
											"end": 1494,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1388,
											"end": 1494,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1388,
											"end": 1494,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1388,
											"end": 1494,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "tag",
											"source": 3,
											"value": "88"
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2565,
											"end": 2578,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 2597,
											"end": 2604,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "169"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "124"
										},
										{
											"begin": 2590,
											"end": 2604,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "tag",
											"source": 3,
											"value": "169"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "170"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "124"
										},
										{
											"begin": 2590,
											"end": 2604,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "tag",
											"source": 3,
											"value": "170"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "171"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "172"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "171"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "tag",
											"source": 3,
											"value": "172"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "tag",
											"source": 3,
											"value": "173"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "173"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "tag",
											"source": 3,
											"value": "171"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2518,
											"end": 2611,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "tag",
											"source": 3,
											"value": "94"
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3803,
											"end": 3855,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "175"
										},
										{
											"begin": 3822,
											"end": 3834,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "176"
										},
										{
											"begin": 3822,
											"end": 3832,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "137"
										},
										{
											"begin": 3822,
											"end": 3834,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3822,
											"end": 3834,
											"name": "tag",
											"source": 3,
											"value": "176"
										},
										{
											"begin": 3822,
											"end": 3834,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3836,
											"end": 3844,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3846,
											"end": 3854,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3803,
											"end": 3821,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "157"
										},
										{
											"begin": 3803,
											"end": 3855,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3803,
											"end": 3855,
											"name": "tag",
											"source": 3,
											"value": "175"
										},
										{
											"begin": 3803,
											"end": 3855,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3718,
											"end": 3862,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "tag",
											"source": 3,
											"value": "99"
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5098,
											"end": 5129,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "178"
										},
										{
											"begin": 5111,
											"end": 5115,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 5117,
											"end": 5119,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 5121,
											"end": 5128,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 5098,
											"end": 5110,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "59"
										},
										{
											"begin": 5098,
											"end": 5129,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5098,
											"end": 5129,
											"name": "tag",
											"source": 3,
											"value": "178"
										},
										{
											"begin": 5098,
											"end": 5129,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5139,
											"end": 5186,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "179"
										},
										{
											"begin": 5162,
											"end": 5166,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 5168,
											"end": 5170,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 5172,
											"end": 5179,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 5181,
											"end": 5185,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 5139,
											"end": 5161,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "180"
										},
										{
											"begin": 5139,
											"end": 5186,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5139,
											"end": 5186,
											"name": "tag",
											"source": 3,
											"value": "179"
										},
										{
											"begin": 5139,
											"end": 5186,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4985,
											"end": 5193,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1502,
											"end": 1595,
											"name": "tag",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 1502,
											"end": 1595,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1549,
											"end": 1556,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1576,
											"end": 1587,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 1576,
											"end": 1587,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1569,
											"end": 1587,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1569,
											"end": 1587,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1502,
											"end": 1595,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1502,
											"end": 1595,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 701,
											"end": 942,
											"name": "tag",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 701,
											"end": 942,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 783,
											"end": 796,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 914,
											"end": 924,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 914,
											"end": 934,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 925,
											"end": 933,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 914,
											"end": 934,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 914,
											"end": 934,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 914,
											"end": 934,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 914,
											"end": 934,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 914,
											"end": 934,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 914,
											"end": 934,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 914,
											"end": 934,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 914,
											"end": 934,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 914,
											"end": 934,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 914,
											"end": 934,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 914,
											"end": 934,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 907,
											"end": 934,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 907,
											"end": 934,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 907,
											"end": 934,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "183"
										},
										{
											"begin": 907,
											"end": 934,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 907,
											"end": 934,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 907,
											"end": 934,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 907,
											"end": 934,
											"name": "tag",
											"source": 0,
											"value": "183"
										},
										{
											"begin": 907,
											"end": 934,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 907,
											"end": 934,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 907,
											"end": 934,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 907,
											"end": 934,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 907,
											"end": 934,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 907,
											"end": 934,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 907,
											"end": 934,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 907,
											"end": 934,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 907,
											"end": 934,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 907,
											"end": 934,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 907,
											"end": 934,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 907,
											"end": 934,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 907,
											"end": 934,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 907,
											"end": 934,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 907,
											"end": 934,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 907,
											"end": 934,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 907,
											"end": 934,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 907,
											"end": 934,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 907,
											"end": 934,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 907,
											"end": 934,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 907,
											"end": 934,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 907,
											"end": 934,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 907,
											"end": 934,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 907,
											"end": 934,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 907,
											"end": 934,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 907,
											"end": 934,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 907,
											"end": 934,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 907,
											"end": 934,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 907,
											"end": 934,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 907,
											"end": 934,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 907,
											"end": 934,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "184"
										},
										{
											"begin": 907,
											"end": 934,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 907,
											"end": 934,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 907,
											"end": 934,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 907,
											"end": 934,
											"name": "tag",
											"source": 0,
											"value": "184"
										},
										{
											"begin": 907,
											"end": 934,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 907,
											"end": 934,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 907,
											"end": 934,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 907,
											"end": 934,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "185"
										},
										{
											"begin": 907,
											"end": 934,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 907,
											"end": 934,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 907,
											"end": 934,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 907,
											"end": 934,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 907,
											"end": 934,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "186"
										},
										{
											"begin": 907,
											"end": 934,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 907,
											"end": 934,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 907,
											"end": 934,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 907,
											"end": 934,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 907,
											"end": 934,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 907,
											"end": 934,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 907,
											"end": 934,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 907,
											"end": 934,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 907,
											"end": 934,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 907,
											"end": 934,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 907,
											"end": 934,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 907,
											"end": 934,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 907,
											"end": 934,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 907,
											"end": 934,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "185"
										},
										{
											"begin": 907,
											"end": 934,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 907,
											"end": 934,
											"name": "tag",
											"source": 0,
											"value": "186"
										},
										{
											"begin": 907,
											"end": 934,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 907,
											"end": 934,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 907,
											"end": 934,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 907,
											"end": 934,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 907,
											"end": 934,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 907,
											"end": 934,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 907,
											"end": 934,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 907,
											"end": 934,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 907,
											"end": 934,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 907,
											"end": 934,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 907,
											"end": 934,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 907,
											"end": 934,
											"name": "tag",
											"source": 0,
											"value": "187"
										},
										{
											"begin": 907,
											"end": 934,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 907,
											"end": 934,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 907,
											"end": 934,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 907,
											"end": 934,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 907,
											"end": 934,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 907,
											"end": 934,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 907,
											"end": 934,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 907,
											"end": 934,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 907,
											"end": 934,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 907,
											"end": 934,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 907,
											"end": 934,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 907,
											"end": 934,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 907,
											"end": 934,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 907,
											"end": 934,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 907,
											"end": 934,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "187"
										},
										{
											"begin": 907,
											"end": 934,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 907,
											"end": 934,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 907,
											"end": 934,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 907,
											"end": 934,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 907,
											"end": 934,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 907,
											"end": 934,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 907,
											"end": 934,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 907,
											"end": 934,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 907,
											"end": 934,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 907,
											"end": 934,
											"name": "tag",
											"source": 0,
											"value": "185"
										},
										{
											"begin": 907,
											"end": 934,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 907,
											"end": 934,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 907,
											"end": 934,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 907,
											"end": 934,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 907,
											"end": 934,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 907,
											"end": 934,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 907,
											"end": 934,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 907,
											"end": 934,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 701,
											"end": 942,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 701,
											"end": 942,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 701,
											"end": 942,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 701,
											"end": 942,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "tag",
											"source": 3,
											"value": "113"
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4016,
											"end": 4020,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4039,
											"end": 4057,
											"name": "PUSH",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4058,
											"end": 4063,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4065,
											"end": 4073,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "PUSH",
											"source": 3,
											"value": "FF"
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 4032,
											"end": 4074,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4032,
											"end": 4074,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3928,
											"end": 4081,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 762,
											"end": 908,
											"name": "tag",
											"source": 9,
											"value": "121"
										},
										{
											"begin": 762,
											"end": 908,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 838,
											"end": 842,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 876,
											"end": 901,
											"name": "PUSH",
											"source": 9,
											"value": "1FFC9A700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 861,
											"end": 901,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 861,
											"end": 901,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 861,
											"end": 901,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 861,
											"end": 872,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 861,
											"end": 901,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 861,
											"end": 901,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 861,
											"end": 901,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 861,
											"end": 901,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 854,
											"end": 901,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 854,
											"end": 901,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 762,
											"end": 908,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 762,
											"end": 908,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 762,
											"end": 908,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 762,
											"end": 908,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 16138,
											"end": 16379,
											"name": "tag",
											"source": 3,
											"value": "131"
										},
										{
											"begin": 16138,
											"end": 16379,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 16201,
											"end": 16208,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 16220,
											"end": 16233,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 16236,
											"end": 16253,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "191"
										},
										{
											"begin": 16245,
											"end": 16252,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 16236,
											"end": 16244,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "167"
										},
										{
											"begin": 16236,
											"end": 16253,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 16236,
											"end": 16253,
											"name": "tag",
											"source": 3,
											"value": "191"
										},
										{
											"begin": 16236,
											"end": 16253,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 16220,
											"end": 16253,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 16220,
											"end": 16253,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 16284,
											"end": 16285,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 16267,
											"end": 16286,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16267,
											"end": 16286,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 16267,
											"end": 16272,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 16267,
											"end": 16286,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16267,
											"end": 16286,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 16267,
											"end": 16286,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 16263,
											"end": 16351,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "192"
										},
										{
											"begin": 16263,
											"end": 16351,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 16332,
											"end": 16339,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "PUSH",
											"source": 3,
											"value": "7E27328900000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "193"
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 16309,
											"end": 16340,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "tag",
											"source": 3,
											"value": "193"
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 16263,
											"end": 16351,
											"name": "tag",
											"source": 3,
											"value": "192"
										},
										{
											"begin": 16263,
											"end": 16351,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 16367,
											"end": 16372,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 16360,
											"end": 16372,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 16360,
											"end": 16372,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 16360,
											"end": 16372,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 16138,
											"end": 16379,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 16138,
											"end": 16379,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 16138,
											"end": 16379,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 16138,
											"end": 16379,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5938,
											"end": 6065,
											"name": "tag",
											"source": 3,
											"value": "133"
										},
										{
											"begin": 5938,
											"end": 6065,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6008,
											"end": 6015,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6034,
											"end": 6049,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6050,
											"end": 6057,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6027,
											"end": 6058,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6027,
											"end": 6058,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5938,
											"end": 6065,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5938,
											"end": 6065,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5938,
											"end": 6065,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5938,
											"end": 6065,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 656,
											"end": 752,
											"name": "tag",
											"source": 7,
											"value": "137"
										},
										{
											"begin": 656,
											"end": 752,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 709,
											"end": 716,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 728,
											"end": 745,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 728,
											"end": 745,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 656,
											"end": 752,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 656,
											"end": 752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 14418,
											"end": 14538,
											"name": "tag",
											"source": 3,
											"value": "138"
										},
										{
											"begin": 14418,
											"end": 14538,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 14498,
											"end": 14531,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "197"
										},
										{
											"begin": 14507,
											"end": 14509,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 14511,
											"end": 14518,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 14520,
											"end": 14524,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 14526,
											"end": 14530,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 14498,
											"end": 14506,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "198"
										},
										{
											"begin": 14498,
											"end": 14531,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 14498,
											"end": 14531,
											"name": "tag",
											"source": 3,
											"value": "197"
										},
										{
											"begin": 14498,
											"end": 14531,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 14418,
											"end": 14538,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 14418,
											"end": 14538,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 14418,
											"end": 14538,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 14418,
											"end": 14538,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 9955,
											"end": 10282,
											"name": "tag",
											"source": 3,
											"value": "143"
										},
										{
											"begin": 9955,
											"end": 10282,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10036,
											"end": 10037,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 10022,
											"end": 10038,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10022,
											"end": 10038,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 10022,
											"end": 10024,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 10022,
											"end": 10038,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10022,
											"end": 10038,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 10022,
											"end": 10038,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 10018,
											"end": 10105,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "200"
										},
										{
											"begin": 10018,
											"end": 10105,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 10091,
											"end": 10092,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 10061,
											"end": 10094,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 10061,
											"end": 10094,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 10061,
											"end": 10094,
											"name": "PUSH",
											"source": 3,
											"value": "64A0AE9200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10061,
											"end": 10094,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10061,
											"end": 10094,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 10061,
											"end": 10094,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 10061,
											"end": 10094,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 10061,
											"end": 10094,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "201"
										},
										{
											"begin": 10061,
											"end": 10094,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 10061,
											"end": 10094,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10061,
											"end": 10094,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "45"
										},
										{
											"begin": 10061,
											"end": 10094,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 10061,
											"end": 10094,
											"name": "tag",
											"source": 3,
											"value": "201"
										},
										{
											"begin": 10061,
											"end": 10094,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10061,
											"end": 10094,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 10061,
											"end": 10094,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 10061,
											"end": 10094,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 10061,
											"end": 10094,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 10061,
											"end": 10094,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 10061,
											"end": 10094,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10061,
											"end": 10094,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 10018,
											"end": 10105,
											"name": "tag",
											"source": 3,
											"value": "200"
										},
										{
											"begin": 10018,
											"end": 10105,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10114,
											"end": 10135,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 10138,
											"end": 10170,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "202"
										},
										{
											"begin": 10146,
											"end": 10148,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 10150,
											"end": 10157,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 10167,
											"end": 10168,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 10138,
											"end": 10145,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "151"
										},
										{
											"begin": 10138,
											"end": 10170,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 10138,
											"end": 10170,
											"name": "tag",
											"source": 3,
											"value": "202"
										},
										{
											"begin": 10138,
											"end": 10170,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10114,
											"end": 10170,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10114,
											"end": 10170,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10209,
											"end": 10210,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 10184,
											"end": 10211,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10184,
											"end": 10211,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 10184,
											"end": 10197,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10184,
											"end": 10211,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10184,
											"end": 10211,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 10184,
											"end": 10211,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 10180,
											"end": 10276,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "203"
										},
										{
											"begin": 10180,
											"end": 10276,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 10262,
											"end": 10263,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 10234,
											"end": 10265,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 10234,
											"end": 10265,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 10234,
											"end": 10265,
											"name": "PUSH",
											"source": 3,
											"value": "73C6AC6E00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10234,
											"end": 10265,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10234,
											"end": 10265,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 10234,
											"end": 10265,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 10234,
											"end": 10265,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 10234,
											"end": 10265,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "204"
										},
										{
											"begin": 10234,
											"end": 10265,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 10234,
											"end": 10265,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10234,
											"end": 10265,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "45"
										},
										{
											"begin": 10234,
											"end": 10265,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 10234,
											"end": 10265,
											"name": "tag",
											"source": 3,
											"value": "204"
										},
										{
											"begin": 10234,
											"end": 10265,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10234,
											"end": 10265,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 10234,
											"end": 10265,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 10234,
											"end": 10265,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 10234,
											"end": 10265,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 10234,
											"end": 10265,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 10234,
											"end": 10265,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10234,
											"end": 10265,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 10180,
											"end": 10276,
											"name": "tag",
											"source": 3,
											"value": "203"
										},
										{
											"begin": 10180,
											"end": 10276,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10008,
											"end": 10282,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9955,
											"end": 10282,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9955,
											"end": 10282,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9955,
											"end": 10282,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 8838,
											"end": 9633,
											"name": "tag",
											"source": 3,
											"value": "151"
										},
										{
											"begin": 8838,
											"end": 9633,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8924,
											"end": 8931,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 8943,
											"end": 8955,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 8958,
											"end": 8975,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "206"
										},
										{
											"begin": 8967,
											"end": 8974,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 8958,
											"end": 8966,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "167"
										},
										{
											"begin": 8958,
											"end": 8975,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 8958,
											"end": 8975,
											"name": "tag",
											"source": 3,
											"value": "206"
										},
										{
											"begin": 8958,
											"end": 8975,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8943,
											"end": 8975,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 8943,
											"end": 8975,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9051,
											"end": 9052,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 9035,
											"end": 9053,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9035,
											"end": 9053,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 9035,
											"end": 9039,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 9035,
											"end": 9053,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9035,
											"end": 9053,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 9035,
											"end": 9053,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 9031,
											"end": 9117,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "207"
										},
										{
											"begin": 9031,
											"end": 9117,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 9069,
											"end": 9106,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "208"
										},
										{
											"begin": 9086,
											"end": 9090,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 9092,
											"end": 9096,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 9098,
											"end": 9105,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 9069,
											"end": 9085,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "209"
										},
										{
											"begin": 9069,
											"end": 9106,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 9069,
											"end": 9106,
											"name": "tag",
											"source": 3,
											"value": "208"
										},
										{
											"begin": 9069,
											"end": 9106,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9031,
											"end": 9117,
											"name": "tag",
											"source": 3,
											"value": "207"
										},
										{
											"begin": 9031,
											"end": 9117,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9177,
											"end": 9178,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 9161,
											"end": 9179,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9161,
											"end": 9179,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 9161,
											"end": 9165,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 9161,
											"end": 9179,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9161,
											"end": 9179,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 9161,
											"end": 9179,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 9157,
											"end": 9413,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "210"
										},
										{
											"begin": 9157,
											"end": 9413,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 9277,
											"end": 9325,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "211"
										},
										{
											"begin": 9294,
											"end": 9295,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 9298,
											"end": 9305,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 9315,
											"end": 9316,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 9319,
											"end": 9324,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 9277,
											"end": 9285,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "198"
										},
										{
											"begin": 9277,
											"end": 9325,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 9277,
											"end": 9325,
											"name": "tag",
											"source": 3,
											"value": "211"
										},
										{
											"begin": 9277,
											"end": 9325,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9387,
											"end": 9388,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 9368,
											"end": 9377,
											"name": "PUSH",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 9378,
											"end": 9382,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 9368,
											"end": 9388,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 9368,
											"end": 9388,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 9368,
											"end": 9388,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 9368,
											"end": 9388,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 9368,
											"end": 9388,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 9368,
											"end": 9388,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9368,
											"end": 9388,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9368,
											"end": 9388,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 9368,
											"end": 9388,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9368,
											"end": 9388,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 9368,
											"end": 9388,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9157,
											"end": 9413,
											"name": "tag",
											"source": 3,
											"value": "210"
										},
										{
											"begin": 9157,
											"end": 9413,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9441,
											"end": 9442,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 9427,
											"end": 9443,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9427,
											"end": 9443,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 9427,
											"end": 9429,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 9427,
											"end": 9443,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9427,
											"end": 9443,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 9427,
											"end": 9443,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 9423,
											"end": 9530,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "212"
										},
										{
											"begin": 9423,
											"end": 9530,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 9504,
											"end": 9505,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 9487,
											"end": 9496,
											"name": "PUSH",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 9497,
											"end": 9499,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 9487,
											"end": 9505,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 9487,
											"end": 9505,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 9487,
											"end": 9505,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 9487,
											"end": 9505,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 9487,
											"end": 9505,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 9487,
											"end": 9505,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9487,
											"end": 9505,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9487,
											"end": 9505,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 9487,
											"end": 9505,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9487,
											"end": 9505,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 9487,
											"end": 9505,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9423,
											"end": 9530,
											"name": "tag",
											"source": 3,
											"value": "212"
										},
										{
											"begin": 9423,
											"end": 9530,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9559,
											"end": 9561,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 9540,
											"end": 9547,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 9540,
											"end": 9556,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 9548,
											"end": 9555,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 9540,
											"end": 9556,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 9540,
											"end": 9556,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 9540,
											"end": 9556,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 9540,
											"end": 9556,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 9540,
											"end": 9556,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9540,
											"end": 9556,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 9540,
											"end": 9556,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 9540,
											"end": 9556,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 9540,
											"end": 9556,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 9540,
											"end": 9556,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 9540,
											"end": 9556,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 9540,
											"end": 9556,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "OR",
											"source": 3
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9596,
											"end": 9603,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 9592,
											"end": 9594,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 9577,
											"end": 9604,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9577,
											"end": 9604,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 9586,
											"end": 9590,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 9577,
											"end": 9604,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9577,
											"end": 9604,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 9577,
											"end": 9604,
											"name": "PUSH",
											"source": 3,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 9577,
											"end": 9604,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 9577,
											"end": 9604,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 9577,
											"end": 9604,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 9577,
											"end": 9604,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 9577,
											"end": 9604,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 9577,
											"end": 9604,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 9577,
											"end": 9604,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 9577,
											"end": 9604,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9577,
											"end": 9604,
											"name": "LOG4",
											"source": 3
										},
										{
											"begin": 9622,
											"end": 9626,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 9615,
											"end": 9626,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 9615,
											"end": 9626,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9615,
											"end": 9626,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8838,
											"end": 9633,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 8838,
											"end": 9633,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 8838,
											"end": 9633,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8838,
											"end": 9633,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8838,
											"end": 9633,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8838,
											"end": 9633,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 15591,
											"end": 15903,
											"name": "tag",
											"source": 3,
											"value": "157"
										},
										{
											"begin": 15591,
											"end": 15903,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 15718,
											"end": 15719,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 15698,
											"end": 15720,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15698,
											"end": 15720,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 15698,
											"end": 15706,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 15698,
											"end": 15720,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15698,
											"end": 15720,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 15698,
											"end": 15720,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 15694,
											"end": 15785,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "214"
										},
										{
											"begin": 15694,
											"end": 15785,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 15765,
											"end": 15773,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "PUSH",
											"source": 3,
											"value": "5B08BA1800000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "215"
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "45"
										},
										{
											"begin": 15743,
											"end": 15774,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "tag",
											"source": 3,
											"value": "215"
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 15694,
											"end": 15785,
											"name": "tag",
											"source": 3,
											"value": "214"
										},
										{
											"begin": 15694,
											"end": 15785,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 15832,
											"end": 15840,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 15794,
											"end": 15812,
											"name": "PUSH",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 15794,
											"end": 15819,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 15813,
											"end": 15818,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 15794,
											"end": 15819,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15794,
											"end": 15819,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 15794,
											"end": 15819,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15794,
											"end": 15819,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 15794,
											"end": 15819,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 15794,
											"end": 15819,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 15794,
											"end": 15819,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 15794,
											"end": 15819,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 15794,
											"end": 15819,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 15794,
											"end": 15819,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 15794,
											"end": 15819,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 15794,
											"end": 15819,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 15794,
											"end": 15819,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 15794,
											"end": 15819,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 15794,
											"end": 15819,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 15820,
											"end": 15828,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "PUSH",
											"source": 3,
											"value": "FF"
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "OR",
											"source": 3
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 15877,
											"end": 15885,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 15870,
											"end": 15875,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "PUSH",
											"source": 3,
											"value": "17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31"
										},
										{
											"begin": 15887,
											"end": 15895,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "216"
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "33"
										},
										{
											"begin": 15855,
											"end": 15896,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "tag",
											"source": 3,
											"value": "216"
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "LOG3",
											"source": 3
										},
										{
											"begin": 15591,
											"end": 15903,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 15591,
											"end": 15903,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 15591,
											"end": 15903,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 15591,
											"end": 15903,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5707,
											"end": 5822,
											"name": "tag",
											"source": 3,
											"value": "167"
										},
										{
											"begin": 5707,
											"end": 5822,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5773,
											"end": 5780,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5799,
											"end": 5806,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5807,
											"end": 5814,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 5792,
											"end": 5815,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5792,
											"end": 5815,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5707,
											"end": 5822,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5707,
											"end": 5822,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5707,
											"end": 5822,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5707,
											"end": 5822,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 16918,
											"end": 17700,
											"name": "tag",
											"source": 3,
											"value": "180"
										},
										{
											"begin": 16918,
											"end": 17700,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 17051,
											"end": 17052,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 17034,
											"end": 17036,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 17034,
											"end": 17048,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17034,
											"end": 17048,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 17034,
											"end": 17048,
											"name": "EXTCODESIZE",
											"source": 3
										},
										{
											"begin": 17034,
											"end": 17052,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 17030,
											"end": 17694,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 17030,
											"end": 17694,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "219"
										},
										{
											"begin": 17030,
											"end": 17694,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 17088,
											"end": 17090,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 17072,
											"end": 17108,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17072,
											"end": 17108,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 17072,
											"end": 17108,
											"name": "PUSH",
											"source": 3,
											"value": "150B7A02"
										},
										{
											"begin": 17109,
											"end": 17121,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "220"
										},
										{
											"begin": 17109,
											"end": 17119,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "137"
										},
										{
											"begin": 17109,
											"end": 17121,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 17109,
											"end": 17121,
											"name": "tag",
											"source": 3,
											"value": "220"
										},
										{
											"begin": 17109,
											"end": 17121,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 17123,
											"end": 17127,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 17129,
											"end": 17136,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 17138,
											"end": 17142,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFF"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH",
											"source": 3,
											"value": "E0"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "SHL",
											"source": 3
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "221"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "SWAP5",
											"source": 3
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "222"
										},
										{
											"begin": 17072,
											"end": 17143,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "tag",
											"source": 3,
											"value": "221"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "GAS",
											"source": 3
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "CALL",
											"source": 3
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "223"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "224"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "225"
										},
										{
											"begin": 17072,
											"end": 17143,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "tag",
											"source": 3,
											"value": "224"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "tag",
											"source": 3,
											"value": "223"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "226"
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "231"
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "PUSH",
											"source": 3,
											"value": "3F"
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "RETURNDATACOPY",
											"source": 3
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "230"
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "tag",
											"source": 3,
											"value": "231"
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "tag",
											"source": 3,
											"value": "230"
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 17398,
											"end": 17399,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 17381,
											"end": 17387,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 17381,
											"end": 17394,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 17381,
											"end": 17399,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 17377,
											"end": 17670,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "232"
										},
										{
											"begin": 17377,
											"end": 17670,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 17452,
											"end": 17454,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "PUSH",
											"source": 3,
											"value": "64A0AE9200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "233"
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "45"
										},
										{
											"begin": 17430,
											"end": 17455,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "tag",
											"source": 3,
											"value": "233"
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 17377,
											"end": 17670,
											"name": "tag",
											"source": 3,
											"value": "232"
										},
										{
											"begin": 17377,
											"end": 17670,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 17622,
											"end": 17628,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 17616,
											"end": 17629,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 17607,
											"end": 17613,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 17603,
											"end": 17605,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 17599,
											"end": 17614,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 17592,
											"end": 17630,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "tag",
											"source": 3,
											"value": "226"
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 17200,
											"end": 17241,
											"name": "PUSH",
											"source": 3,
											"value": "150B7A02"
										},
										{
											"begin": 17200,
											"end": 17241,
											"name": "PUSH",
											"source": 3,
											"value": "E0"
										},
										{
											"begin": 17200,
											"end": 17241,
											"name": "SHL",
											"source": 3
										},
										{
											"begin": 17190,
											"end": 17241,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17190,
											"end": 17241,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 17190,
											"end": 17241,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 17190,
											"end": 17196,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 17190,
											"end": 17241,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17190,
											"end": 17241,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 17190,
											"end": 17241,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 17190,
											"end": 17241,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 17186,
											"end": 17316,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "236"
										},
										{
											"begin": 17186,
											"end": 17316,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 17294,
											"end": 17296,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "PUSH",
											"source": 3,
											"value": "64A0AE9200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "237"
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "45"
										},
										{
											"begin": 17272,
											"end": 17297,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "tag",
											"source": 3,
											"value": "237"
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 17186,
											"end": 17316,
											"name": "tag",
											"source": 3,
											"value": "236"
										},
										{
											"begin": 17186,
											"end": 17316,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 17144,
											"end": 17330,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 17030,
											"end": 17694,
											"name": "tag",
											"source": 3,
											"value": "219"
										},
										{
											"begin": 17030,
											"end": 17694,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 16918,
											"end": 17700,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 16918,
											"end": 17700,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 16918,
											"end": 17700,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 16918,
											"end": 17700,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 16918,
											"end": 17700,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 14720,
											"end": 15382,
											"name": "tag",
											"source": 3,
											"value": "198"
										},
										{
											"begin": 14720,
											"end": 15382,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 14880,
											"end": 14889,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 14880,
											"end": 14911,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 14880,
											"end": 14911,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "239"
										},
										{
											"begin": 14880,
											"end": 14911,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 14880,
											"end": 14911,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 14909,
											"end": 14910,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 14893,
											"end": 14911,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14893,
											"end": 14911,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 14893,
											"end": 14897,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 14893,
											"end": 14911,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14893,
											"end": 14911,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 14893,
											"end": 14911,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 14893,
											"end": 14911,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 14880,
											"end": 14911,
											"name": "tag",
											"source": 3,
											"value": "239"
										},
										{
											"begin": 14880,
											"end": 14911,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 14876,
											"end": 15336,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 14876,
											"end": 15336,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "240"
										},
										{
											"begin": 14876,
											"end": 15336,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 14927,
											"end": 14940,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 14943,
											"end": 14965,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "241"
										},
										{
											"begin": 14957,
											"end": 14964,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 14943,
											"end": 14956,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "131"
										},
										{
											"begin": 14943,
											"end": 14965,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 14943,
											"end": 14965,
											"name": "tag",
											"source": 3,
											"value": "241"
										},
										{
											"begin": 14943,
											"end": 14965,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 14927,
											"end": 14965,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 14927,
											"end": 14965,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 15109,
											"end": 15110,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 15093,
											"end": 15111,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15093,
											"end": 15111,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 15093,
											"end": 15097,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 15093,
											"end": 15111,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15093,
											"end": 15111,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 15093,
											"end": 15111,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 15093,
											"end": 15111,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 15093,
											"end": 15128,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 15093,
											"end": 15128,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 15093,
											"end": 15128,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "242"
										},
										{
											"begin": 15093,
											"end": 15128,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 15093,
											"end": 15128,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 15124,
											"end": 15128,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 15115,
											"end": 15128,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15115,
											"end": 15128,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 15115,
											"end": 15120,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 15115,
											"end": 15128,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15115,
											"end": 15128,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 15115,
											"end": 15128,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 15115,
											"end": 15128,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 15093,
											"end": 15128,
											"name": "tag",
											"source": 3,
											"value": "242"
										},
										{
											"begin": 15093,
											"end": 15128,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 15093,
											"end": 15162,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 15093,
											"end": 15162,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 15093,
											"end": 15162,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "243"
										},
										{
											"begin": 15093,
											"end": 15162,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 15093,
											"end": 15162,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 15133,
											"end": 15162,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "244"
										},
										{
											"begin": 15150,
											"end": 15155,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 15157,
											"end": 15161,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 15133,
											"end": 15149,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "113"
										},
										{
											"begin": 15133,
											"end": 15162,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 15133,
											"end": 15162,
											"name": "tag",
											"source": 3,
											"value": "244"
										},
										{
											"begin": 15133,
											"end": 15162,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 15132,
											"end": 15162,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 15093,
											"end": 15162,
											"name": "tag",
											"source": 3,
											"value": "243"
										},
										{
											"begin": 15093,
											"end": 15162,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 15089,
											"end": 15231,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 15089,
											"end": 15231,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "245"
										},
										{
											"begin": 15089,
											"end": 15231,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 15211,
											"end": 15215,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "PUSH",
											"source": 3,
											"value": "A9FBF51F00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "246"
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "45"
										},
										{
											"begin": 15189,
											"end": 15216,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "tag",
											"source": 3,
											"value": "246"
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 15089,
											"end": 15231,
											"name": "tag",
											"source": 3,
											"value": "245"
										},
										{
											"begin": 15089,
											"end": 15231,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 15249,
											"end": 15258,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 15245,
											"end": 15326,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 15245,
											"end": 15326,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "247"
										},
										{
											"begin": 15245,
											"end": 15326,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 15303,
											"end": 15310,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 15299,
											"end": 15301,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 15283,
											"end": 15311,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15283,
											"end": 15311,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 15292,
											"end": 15297,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 15283,
											"end": 15311,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15283,
											"end": 15311,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 15283,
											"end": 15311,
											"name": "PUSH",
											"source": 3,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 15283,
											"end": 15311,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 15283,
											"end": 15311,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 15283,
											"end": 15311,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 15283,
											"end": 15311,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 15283,
											"end": 15311,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 15283,
											"end": 15311,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 15283,
											"end": 15311,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 15283,
											"end": 15311,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 15283,
											"end": 15311,
											"name": "LOG4",
											"source": 3
										},
										{
											"begin": 15245,
											"end": 15326,
											"name": "tag",
											"source": 3,
											"value": "247"
										},
										{
											"begin": 15245,
											"end": 15326,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 14913,
											"end": 15336,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 14876,
											"end": 15336,
											"name": "tag",
											"source": 3,
											"value": "240"
										},
										{
											"begin": 14876,
											"end": 15336,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 15373,
											"end": 15375,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 15346,
											"end": 15361,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 15346,
											"end": 15370,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 15362,
											"end": 15369,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 15346,
											"end": 15370,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 15346,
											"end": 15370,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 15346,
											"end": 15370,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 15346,
											"end": 15370,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 15346,
											"end": 15370,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 15346,
											"end": 15370,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 15346,
											"end": 15370,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 15346,
											"end": 15370,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 15346,
											"end": 15370,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 15346,
											"end": 15370,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 15346,
											"end": 15370,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 15346,
											"end": 15370,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "OR",
											"source": 3
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 14720,
											"end": 15382,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 14720,
											"end": 15382,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 14720,
											"end": 15382,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 14720,
											"end": 15382,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 14720,
											"end": 15382,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7082,
											"end": 7450,
											"name": "tag",
											"source": 3,
											"value": "209"
										},
										{
											"begin": 7082,
											"end": 7450,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7194,
											"end": 7232,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "249"
										},
										{
											"begin": 7208,
											"end": 7213,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 7215,
											"end": 7222,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 7224,
											"end": 7231,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 7194,
											"end": 7207,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "250"
										},
										{
											"begin": 7194,
											"end": 7232,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7194,
											"end": 7232,
											"name": "tag",
											"source": 3,
											"value": "249"
										},
										{
											"begin": 7194,
											"end": 7232,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7189,
											"end": 7444,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "251"
										},
										{
											"begin": 7189,
											"end": 7444,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 7269,
											"end": 7270,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7252,
											"end": 7271,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7252,
											"end": 7271,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 7252,
											"end": 7257,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 7252,
											"end": 7271,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7252,
											"end": 7271,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 7252,
											"end": 7271,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 7248,
											"end": 7434,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "252"
										},
										{
											"begin": 7248,
											"end": 7434,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 7321,
											"end": 7328,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "PUSH",
											"source": 3,
											"value": "7E27328900000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "253"
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 7298,
											"end": 7329,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "tag",
											"source": 3,
											"value": "253"
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 7248,
											"end": 7434,
											"name": "tag",
											"source": 3,
											"value": "252"
										},
										{
											"begin": 7248,
											"end": 7434,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7402,
											"end": 7409,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7411,
											"end": 7418,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "PUSH",
											"source": 3,
											"value": "177E802F00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "255"
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "256"
										},
										{
											"begin": 7375,
											"end": 7419,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "tag",
											"source": 3,
											"value": "255"
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 7189,
											"end": 7444,
											"name": "tag",
											"source": 3,
											"value": "251"
										},
										{
											"begin": 7189,
											"end": 7444,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7082,
											"end": 7450,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7082,
											"end": 7450,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7082,
											"end": 7450,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7082,
											"end": 7450,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6376,
											"end": 6648,
											"name": "tag",
											"source": 3,
											"value": "250"
										},
										{
											"begin": 6376,
											"end": 6648,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6479,
											"end": 6483,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6533,
											"end": 6534,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6514,
											"end": 6535,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6514,
											"end": 6535,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6514,
											"end": 6521,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 6514,
											"end": 6535,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6514,
											"end": 6535,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6514,
											"end": 6535,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 6514,
											"end": 6535,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 6514,
											"end": 6641,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6514,
											"end": 6641,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 6514,
											"end": 6641,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "258"
										},
										{
											"begin": 6514,
											"end": 6641,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 6514,
											"end": 6641,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6561,
											"end": 6568,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6552,
											"end": 6568,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6552,
											"end": 6568,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6552,
											"end": 6557,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 6552,
											"end": 6568,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6552,
											"end": 6568,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6552,
											"end": 6568,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 6552,
											"end": 6604,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6552,
											"end": 6604,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "259"
										},
										{
											"begin": 6552,
											"end": 6604,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 6552,
											"end": 6604,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6572,
											"end": 6604,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "260"
										},
										{
											"begin": 6589,
											"end": 6594,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 6596,
											"end": 6603,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 6572,
											"end": 6588,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "113"
										},
										{
											"begin": 6572,
											"end": 6604,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6572,
											"end": 6604,
											"name": "tag",
											"source": 3,
											"value": "260"
										},
										{
											"begin": 6572,
											"end": 6604,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6552,
											"end": 6604,
											"name": "tag",
											"source": 3,
											"value": "259"
										},
										{
											"begin": 6552,
											"end": 6604,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6552,
											"end": 6640,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6552,
											"end": 6640,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "261"
										},
										{
											"begin": 6552,
											"end": 6640,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 6552,
											"end": 6640,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6633,
											"end": 6640,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6608,
											"end": 6640,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6608,
											"end": 6640,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6608,
											"end": 6629,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "262"
										},
										{
											"begin": 6621,
											"end": 6628,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 6608,
											"end": 6620,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "133"
										},
										{
											"begin": 6608,
											"end": 6629,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6608,
											"end": 6629,
											"name": "tag",
											"source": 3,
											"value": "262"
										},
										{
											"begin": 6608,
											"end": 6629,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6608,
											"end": 6640,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6608,
											"end": 6640,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6608,
											"end": 6640,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 6552,
											"end": 6640,
											"name": "tag",
											"source": 3,
											"value": "261"
										},
										{
											"begin": 6552,
											"end": 6640,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6514,
											"end": 6641,
											"name": "tag",
											"source": 3,
											"value": "258"
										},
										{
											"begin": 6514,
											"end": 6641,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6495,
											"end": 6641,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6495,
											"end": 6641,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6376,
											"end": 6648,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 6376,
											"end": 6648,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 6376,
											"end": 6648,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6376,
											"end": 6648,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6376,
											"end": 6648,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6376,
											"end": 6648,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7,
											"end": 82,
											"name": "tag",
											"source": 13,
											"value": "263"
										},
										{
											"begin": 7,
											"end": 82,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 40,
											"end": 46,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 73,
											"end": 75,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 67,
											"end": 76,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 57,
											"end": 76,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 57,
											"end": 76,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7,
											"end": 82,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 7,
											"end": 82,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 13,
											"value": "264"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 211,
											"end": 328,
											"name": "tag",
											"source": 13,
											"value": "265"
										},
										{
											"begin": 211,
											"end": 328,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 320,
											"end": 321,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 317,
											"end": 318,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 310,
											"end": 322,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 334,
											"end": 460,
											"name": "tag",
											"source": 13,
											"value": "266"
										},
										{
											"begin": 334,
											"end": 460,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 371,
											"end": 378,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 411,
											"end": 453,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 404,
											"end": 409,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 400,
											"end": 454,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 389,
											"end": 454,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 389,
											"end": 454,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 334,
											"end": 460,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 334,
											"end": 460,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 334,
											"end": 460,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 334,
											"end": 460,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 466,
											"end": 562,
											"name": "tag",
											"source": 13,
											"value": "267"
										},
										{
											"begin": 466,
											"end": 562,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 503,
											"end": 510,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 532,
											"end": 556,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "326"
										},
										{
											"begin": 550,
											"end": 555,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 532,
											"end": 556,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "266"
										},
										{
											"begin": 532,
											"end": 556,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 532,
											"end": 556,
											"name": "tag",
											"source": 13,
											"value": "326"
										},
										{
											"begin": 532,
											"end": 556,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 521,
											"end": 556,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 521,
											"end": 556,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 466,
											"end": 562,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 466,
											"end": 562,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 466,
											"end": 562,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 466,
											"end": 562,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 568,
											"end": 690,
											"name": "tag",
											"source": 13,
											"value": "268"
										},
										{
											"begin": 568,
											"end": 690,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 641,
											"end": 665,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "328"
										},
										{
											"begin": 659,
											"end": 664,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 641,
											"end": 665,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "267"
										},
										{
											"begin": 641,
											"end": 665,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 641,
											"end": 665,
											"name": "tag",
											"source": 13,
											"value": "328"
										},
										{
											"begin": 641,
											"end": 665,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 634,
											"end": 639,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 631,
											"end": 666,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 621,
											"end": 684,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "329"
										},
										{
											"begin": 621,
											"end": 684,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 680,
											"end": 681,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 677,
											"end": 678,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 670,
											"end": 682,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 621,
											"end": 684,
											"name": "tag",
											"source": 13,
											"value": "329"
										},
										{
											"begin": 621,
											"end": 684,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 568,
											"end": 690,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 568,
											"end": 690,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 696,
											"end": 835,
											"name": "tag",
											"source": 13,
											"value": "269"
										},
										{
											"begin": 696,
											"end": 835,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 742,
											"end": 747,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 780,
											"end": 786,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 767,
											"end": 787,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 758,
											"end": 787,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 758,
											"end": 787,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 796,
											"end": 829,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "331"
										},
										{
											"begin": 823,
											"end": 828,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 796,
											"end": 829,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "268"
										},
										{
											"begin": 796,
											"end": 829,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 796,
											"end": 829,
											"name": "tag",
											"source": 13,
											"value": "331"
										},
										{
											"begin": 796,
											"end": 829,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 696,
											"end": 835,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 696,
											"end": 835,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 696,
											"end": 835,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 696,
											"end": 835,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 696,
											"end": 835,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 841,
											"end": 918,
											"name": "tag",
											"source": 13,
											"value": "270"
										},
										{
											"begin": 841,
											"end": 918,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 878,
											"end": 885,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 907,
											"end": 912,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 896,
											"end": 912,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 896,
											"end": 912,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 841,
											"end": 918,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 841,
											"end": 918,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 841,
											"end": 918,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 841,
											"end": 918,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 924,
											"end": 1046,
											"name": "tag",
											"source": 13,
											"value": "271"
										},
										{
											"begin": 924,
											"end": 1046,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 997,
											"end": 1021,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "334"
										},
										{
											"begin": 1015,
											"end": 1020,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 997,
											"end": 1021,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "270"
										},
										{
											"begin": 997,
											"end": 1021,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 997,
											"end": 1021,
											"name": "tag",
											"source": 13,
											"value": "334"
										},
										{
											"begin": 997,
											"end": 1021,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 990,
											"end": 995,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 987,
											"end": 1022,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 977,
											"end": 1040,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "335"
										},
										{
											"begin": 977,
											"end": 1040,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 1036,
											"end": 1037,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1033,
											"end": 1034,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1026,
											"end": 1038,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 977,
											"end": 1040,
											"name": "tag",
											"source": 13,
											"value": "335"
										},
										{
											"begin": 977,
											"end": 1040,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 924,
											"end": 1046,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 924,
											"end": 1046,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1052,
											"end": 1191,
											"name": "tag",
											"source": 13,
											"value": "272"
										},
										{
											"begin": 1052,
											"end": 1191,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1098,
											"end": 1103,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1136,
											"end": 1142,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1123,
											"end": 1143,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 1114,
											"end": 1143,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1114,
											"end": 1143,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1152,
											"end": 1185,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "337"
										},
										{
											"begin": 1179,
											"end": 1184,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1152,
											"end": 1185,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "271"
										},
										{
											"begin": 1152,
											"end": 1185,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1152,
											"end": 1185,
											"name": "tag",
											"source": 13,
											"value": "337"
										},
										{
											"begin": 1152,
											"end": 1185,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1052,
											"end": 1191,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 1052,
											"end": 1191,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1052,
											"end": 1191,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1052,
											"end": 1191,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1052,
											"end": 1191,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1197,
											"end": 1671,
											"name": "tag",
											"source": 13,
											"value": "25"
										},
										{
											"begin": 1197,
											"end": 1671,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1265,
											"end": 1271,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1322,
											"end": 1324,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 1310,
											"end": 1319,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 1301,
											"end": 1308,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 1297,
											"end": 1320,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 1293,
											"end": 1325,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 1290,
											"end": 1409,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 1290,
											"end": 1409,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "339"
										},
										{
											"begin": 1290,
											"end": 1409,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 1328,
											"end": 1407,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "340"
										},
										{
											"begin": 1328,
											"end": 1407,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "264"
										},
										{
											"begin": 1328,
											"end": 1407,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1328,
											"end": 1407,
											"name": "tag",
											"source": 13,
											"value": "340"
										},
										{
											"begin": 1328,
											"end": 1407,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1290,
											"end": 1409,
											"name": "tag",
											"source": 13,
											"value": "339"
										},
										{
											"begin": 1290,
											"end": 1409,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1448,
											"end": 1449,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1473,
											"end": 1526,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "341"
										},
										{
											"begin": 1518,
											"end": 1525,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 1509,
											"end": 1515,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1498,
											"end": 1507,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 1494,
											"end": 1516,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1473,
											"end": 1526,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "269"
										},
										{
											"begin": 1473,
											"end": 1526,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1473,
											"end": 1526,
											"name": "tag",
											"source": 13,
											"value": "341"
										},
										{
											"begin": 1473,
											"end": 1526,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1463,
											"end": 1526,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 1463,
											"end": 1526,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1419,
											"end": 1536,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1575,
											"end": 1577,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 1601,
											"end": 1654,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "342"
										},
										{
											"begin": 1646,
											"end": 1653,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 1637,
											"end": 1643,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1626,
											"end": 1635,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 1622,
											"end": 1644,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1601,
											"end": 1654,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "272"
										},
										{
											"begin": 1601,
											"end": 1654,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1601,
											"end": 1654,
											"name": "tag",
											"source": 13,
											"value": "342"
										},
										{
											"begin": 1601,
											"end": 1654,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1591,
											"end": 1654,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1591,
											"end": 1654,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1546,
											"end": 1664,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1197,
											"end": 1671,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 1197,
											"end": 1671,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1197,
											"end": 1671,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 1197,
											"end": 1671,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1197,
											"end": 1671,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1197,
											"end": 1671,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1677,
											"end": 1826,
											"name": "tag",
											"source": 13,
											"value": "273"
										},
										{
											"begin": 1677,
											"end": 1826,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1713,
											"end": 1720,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1753,
											"end": 1819,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFF00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1746,
											"end": 1751,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1742,
											"end": 1820,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 1731,
											"end": 1820,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1731,
											"end": 1820,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1677,
											"end": 1826,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1677,
											"end": 1826,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1677,
											"end": 1826,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1677,
											"end": 1826,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1832,
											"end": 1952,
											"name": "tag",
											"source": 13,
											"value": "274"
										},
										{
											"begin": 1832,
											"end": 1952,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1904,
											"end": 1927,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "345"
										},
										{
											"begin": 1921,
											"end": 1926,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1904,
											"end": 1927,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "273"
										},
										{
											"begin": 1904,
											"end": 1927,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1904,
											"end": 1927,
											"name": "tag",
											"source": 13,
											"value": "345"
										},
										{
											"begin": 1904,
											"end": 1927,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1897,
											"end": 1902,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1894,
											"end": 1928,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 1884,
											"end": 1946,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "346"
										},
										{
											"begin": 1884,
											"end": 1946,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 1942,
											"end": 1943,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1939,
											"end": 1940,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1932,
											"end": 1944,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 1884,
											"end": 1946,
											"name": "tag",
											"source": 13,
											"value": "346"
										},
										{
											"begin": 1884,
											"end": 1946,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1832,
											"end": 1952,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1832,
											"end": 1952,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1958,
											"end": 2095,
											"name": "tag",
											"source": 13,
											"value": "275"
										},
										{
											"begin": 1958,
											"end": 2095,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2003,
											"end": 2008,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2041,
											"end": 2047,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2028,
											"end": 2048,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 2019,
											"end": 2048,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2019,
											"end": 2048,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2057,
											"end": 2089,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "348"
										},
										{
											"begin": 2083,
											"end": 2088,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2057,
											"end": 2089,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "274"
										},
										{
											"begin": 2057,
											"end": 2089,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2057,
											"end": 2089,
											"name": "tag",
											"source": 13,
											"value": "348"
										},
										{
											"begin": 2057,
											"end": 2089,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1958,
											"end": 2095,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 1958,
											"end": 2095,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1958,
											"end": 2095,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1958,
											"end": 2095,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1958,
											"end": 2095,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2101,
											"end": 2428,
											"name": "tag",
											"source": 13,
											"value": "30"
										},
										{
											"begin": 2101,
											"end": 2428,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2159,
											"end": 2165,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2208,
											"end": 2210,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 2196,
											"end": 2205,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 2187,
											"end": 2194,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 2183,
											"end": 2206,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 2179,
											"end": 2211,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 2176,
											"end": 2295,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 2176,
											"end": 2295,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "350"
										},
										{
											"begin": 2176,
											"end": 2295,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 2214,
											"end": 2293,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "351"
										},
										{
											"begin": 2214,
											"end": 2293,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "264"
										},
										{
											"begin": 2214,
											"end": 2293,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2214,
											"end": 2293,
											"name": "tag",
											"source": 13,
											"value": "351"
										},
										{
											"begin": 2214,
											"end": 2293,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2176,
											"end": 2295,
											"name": "tag",
											"source": 13,
											"value": "350"
										},
										{
											"begin": 2176,
											"end": 2295,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2334,
											"end": 2335,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2359,
											"end": 2411,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "352"
										},
										{
											"begin": 2403,
											"end": 2410,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 2394,
											"end": 2400,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 2383,
											"end": 2392,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 2379,
											"end": 2401,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2359,
											"end": 2411,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "275"
										},
										{
											"begin": 2359,
											"end": 2411,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2359,
											"end": 2411,
											"name": "tag",
											"source": 13,
											"value": "352"
										},
										{
											"begin": 2359,
											"end": 2411,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2349,
											"end": 2411,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 2349,
											"end": 2411,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2305,
											"end": 2421,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2101,
											"end": 2428,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 2101,
											"end": 2428,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 2101,
											"end": 2428,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2101,
											"end": 2428,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2101,
											"end": 2428,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2434,
											"end": 2524,
											"name": "tag",
											"source": 13,
											"value": "276"
										},
										{
											"begin": 2434,
											"end": 2524,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2468,
											"end": 2475,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2511,
											"end": 2516,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2504,
											"end": 2517,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 2497,
											"end": 2518,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 2486,
											"end": 2518,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2486,
											"end": 2518,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2434,
											"end": 2524,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 2434,
											"end": 2524,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2434,
											"end": 2524,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2434,
											"end": 2524,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2530,
											"end": 2639,
											"name": "tag",
											"source": 13,
											"value": "277"
										},
										{
											"begin": 2530,
											"end": 2639,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2611,
											"end": 2632,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "355"
										},
										{
											"begin": 2626,
											"end": 2631,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2611,
											"end": 2632,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "276"
										},
										{
											"begin": 2611,
											"end": 2632,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2611,
											"end": 2632,
											"name": "tag",
											"source": 13,
											"value": "355"
										},
										{
											"begin": 2611,
											"end": 2632,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2606,
											"end": 2609,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 2599,
											"end": 2633,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 2530,
											"end": 2639,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2530,
											"end": 2639,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2530,
											"end": 2639,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2645,
											"end": 2855,
											"name": "tag",
											"source": 13,
											"value": "33"
										},
										{
											"begin": 2645,
											"end": 2855,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2732,
											"end": 2736,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2770,
											"end": 2772,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 2759,
											"end": 2768,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 2755,
											"end": 2773,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2747,
											"end": 2773,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2747,
											"end": 2773,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2783,
											"end": 2848,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "357"
										},
										{
											"begin": 2845,
											"end": 2846,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2834,
											"end": 2843,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 2830,
											"end": 2847,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2821,
											"end": 2827,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 2783,
											"end": 2848,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "277"
										},
										{
											"begin": 2783,
											"end": 2848,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2783,
											"end": 2848,
											"name": "tag",
											"source": 13,
											"value": "357"
										},
										{
											"begin": 2783,
											"end": 2848,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2645,
											"end": 2855,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 2645,
											"end": 2855,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 2645,
											"end": 2855,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2645,
											"end": 2855,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2645,
											"end": 2855,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2861,
											"end": 2960,
											"name": "tag",
											"source": 13,
											"value": "278"
										},
										{
											"begin": 2861,
											"end": 2960,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2913,
											"end": 2919,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2947,
											"end": 2952,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2941,
											"end": 2953,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 2931,
											"end": 2953,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2931,
											"end": 2953,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2861,
											"end": 2960,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 2861,
											"end": 2960,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2861,
											"end": 2960,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2861,
											"end": 2960,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2966,
											"end": 3135,
											"name": "tag",
											"source": 13,
											"value": "279"
										},
										{
											"begin": 2966,
											"end": 3135,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3050,
											"end": 3061,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3084,
											"end": 3090,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 3079,
											"end": 3082,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 3072,
											"end": 3091,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 3124,
											"end": 3128,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 3119,
											"end": 3122,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 3115,
											"end": 3129,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3100,
											"end": 3129,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3100,
											"end": 3129,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2966,
											"end": 3135,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 2966,
											"end": 3135,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 2966,
											"end": 3135,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2966,
											"end": 3135,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2966,
											"end": 3135,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3141,
											"end": 3387,
											"name": "tag",
											"source": 13,
											"value": "280"
										},
										{
											"begin": 3141,
											"end": 3387,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3222,
											"end": 3223,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3232,
											"end": 3345,
											"name": "tag",
											"source": 13,
											"value": "361"
										},
										{
											"begin": 3232,
											"end": 3345,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3246,
											"end": 3252,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 3243,
											"end": 3244,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3240,
											"end": 3253,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 3232,
											"end": 3345,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 3232,
											"end": 3345,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "363"
										},
										{
											"begin": 3232,
											"end": 3345,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 3331,
											"end": 3332,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 3326,
											"end": 3329,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 3322,
											"end": 3333,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3316,
											"end": 3334,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 3312,
											"end": 3313,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3307,
											"end": 3310,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 3303,
											"end": 3314,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3296,
											"end": 3335,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 3268,
											"end": 3270,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 3265,
											"end": 3266,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3261,
											"end": 3271,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3256,
											"end": 3271,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3256,
											"end": 3271,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3232,
											"end": 3345,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "361"
										},
										{
											"begin": 3232,
											"end": 3345,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3232,
											"end": 3345,
											"name": "tag",
											"source": 13,
											"value": "363"
										},
										{
											"begin": 3232,
											"end": 3345,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3379,
											"end": 3380,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3370,
											"end": 3376,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 3365,
											"end": 3368,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 3361,
											"end": 3377,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3354,
											"end": 3381,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 3203,
											"end": 3387,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3141,
											"end": 3387,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3141,
											"end": 3387,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3141,
											"end": 3387,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3141,
											"end": 3387,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3393,
											"end": 3495,
											"name": "tag",
											"source": 13,
											"value": "281"
										},
										{
											"begin": 3393,
											"end": 3495,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3434,
											"end": 3440,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3485,
											"end": 3487,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 3481,
											"end": 3488,
											"name": "NOT",
											"source": 13
										},
										{
											"begin": 3476,
											"end": 3478,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 3469,
											"end": 3474,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 3465,
											"end": 3479,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3461,
											"end": 3489,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 3451,
											"end": 3489,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3451,
											"end": 3489,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3393,
											"end": 3495,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 3393,
											"end": 3495,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3393,
											"end": 3495,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3393,
											"end": 3495,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3501,
											"end": 3878,
											"name": "tag",
											"source": 13,
											"value": "282"
										},
										{
											"begin": 3501,
											"end": 3878,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3589,
											"end": 3592,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3617,
											"end": 3656,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "366"
										},
										{
											"begin": 3650,
											"end": 3655,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 3617,
											"end": 3656,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "278"
										},
										{
											"begin": 3617,
											"end": 3656,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3617,
											"end": 3656,
											"name": "tag",
											"source": 13,
											"value": "366"
										},
										{
											"begin": 3617,
											"end": 3656,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3672,
											"end": 3743,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "367"
										},
										{
											"begin": 3736,
											"end": 3742,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3731,
											"end": 3734,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 3672,
											"end": 3743,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "279"
										},
										{
											"begin": 3672,
											"end": 3743,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3672,
											"end": 3743,
											"name": "tag",
											"source": 13,
											"value": "367"
										},
										{
											"begin": 3672,
											"end": 3743,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3665,
											"end": 3743,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 3665,
											"end": 3743,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3752,
											"end": 3817,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "368"
										},
										{
											"begin": 3810,
											"end": 3816,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3805,
											"end": 3808,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 3798,
											"end": 3802,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 3791,
											"end": 3796,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 3787,
											"end": 3803,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3752,
											"end": 3817,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "280"
										},
										{
											"begin": 3752,
											"end": 3817,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3752,
											"end": 3817,
											"name": "tag",
											"source": 13,
											"value": "368"
										},
										{
											"begin": 3752,
											"end": 3817,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3842,
											"end": 3871,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "369"
										},
										{
											"begin": 3864,
											"end": 3870,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3842,
											"end": 3871,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "281"
										},
										{
											"begin": 3842,
											"end": 3871,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3842,
											"end": 3871,
											"name": "tag",
											"source": 13,
											"value": "369"
										},
										{
											"begin": 3842,
											"end": 3871,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3837,
											"end": 3840,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 3833,
											"end": 3872,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3826,
											"end": 3872,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 3826,
											"end": 3872,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3593,
											"end": 3878,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3501,
											"end": 3878,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 3501,
											"end": 3878,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 3501,
											"end": 3878,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3501,
											"end": 3878,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3501,
											"end": 3878,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3884,
											"end": 4197,
											"name": "tag",
											"source": 13,
											"value": "38"
										},
										{
											"begin": 3884,
											"end": 4197,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3997,
											"end": 4001,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4035,
											"end": 4037,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 4024,
											"end": 4033,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 4020,
											"end": 4038,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4012,
											"end": 4038,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4012,
											"end": 4038,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4084,
											"end": 4093,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4078,
											"end": 4082,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4074,
											"end": 4094,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 4070,
											"end": 4071,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4059,
											"end": 4068,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 4055,
											"end": 4072,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4048,
											"end": 4095,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 4112,
											"end": 4190,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "371"
										},
										{
											"begin": 4185,
											"end": 4189,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4176,
											"end": 4182,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 4112,
											"end": 4190,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "282"
										},
										{
											"begin": 4112,
											"end": 4190,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4112,
											"end": 4190,
											"name": "tag",
											"source": 13,
											"value": "371"
										},
										{
											"begin": 4112,
											"end": 4190,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4104,
											"end": 4190,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4104,
											"end": 4190,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3884,
											"end": 4197,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 3884,
											"end": 4197,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 3884,
											"end": 4197,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3884,
											"end": 4197,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3884,
											"end": 4197,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4203,
											"end": 4532,
											"name": "tag",
											"source": 13,
											"value": "42"
										},
										{
											"begin": 4203,
											"end": 4532,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4262,
											"end": 4268,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4311,
											"end": 4313,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 4299,
											"end": 4308,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 4290,
											"end": 4297,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 4286,
											"end": 4309,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 4282,
											"end": 4314,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 4279,
											"end": 4398,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 4279,
											"end": 4398,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "373"
										},
										{
											"begin": 4279,
											"end": 4398,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 4317,
											"end": 4396,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "374"
										},
										{
											"begin": 4317,
											"end": 4396,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "264"
										},
										{
											"begin": 4317,
											"end": 4396,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4317,
											"end": 4396,
											"name": "tag",
											"source": 13,
											"value": "374"
										},
										{
											"begin": 4317,
											"end": 4396,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4279,
											"end": 4398,
											"name": "tag",
											"source": 13,
											"value": "373"
										},
										{
											"begin": 4279,
											"end": 4398,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4437,
											"end": 4438,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4462,
											"end": 4515,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "375"
										},
										{
											"begin": 4507,
											"end": 4514,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 4498,
											"end": 4504,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 4487,
											"end": 4496,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 4483,
											"end": 4505,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4462,
											"end": 4515,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "272"
										},
										{
											"begin": 4462,
											"end": 4515,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4462,
											"end": 4515,
											"name": "tag",
											"source": 13,
											"value": "375"
										},
										{
											"begin": 4462,
											"end": 4515,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4452,
											"end": 4515,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 4452,
											"end": 4515,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4408,
											"end": 4525,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4203,
											"end": 4532,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 4203,
											"end": 4532,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 4203,
											"end": 4532,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4203,
											"end": 4532,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4203,
											"end": 4532,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4538,
											"end": 4656,
											"name": "tag",
											"source": 13,
											"value": "283"
										},
										{
											"begin": 4538,
											"end": 4656,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4625,
											"end": 4649,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "377"
										},
										{
											"begin": 4643,
											"end": 4648,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4625,
											"end": 4649,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "267"
										},
										{
											"begin": 4625,
											"end": 4649,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4625,
											"end": 4649,
											"name": "tag",
											"source": 13,
											"value": "377"
										},
										{
											"begin": 4625,
											"end": 4649,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4620,
											"end": 4623,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 4613,
											"end": 4650,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 4538,
											"end": 4656,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4538,
											"end": 4656,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4538,
											"end": 4656,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4662,
											"end": 4884,
											"name": "tag",
											"source": 13,
											"value": "45"
										},
										{
											"begin": 4662,
											"end": 4884,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4755,
											"end": 4759,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4793,
											"end": 4795,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 4782,
											"end": 4791,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 4778,
											"end": 4796,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4770,
											"end": 4796,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4770,
											"end": 4796,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4806,
											"end": 4877,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "379"
										},
										{
											"begin": 4874,
											"end": 4875,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4863,
											"end": 4872,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 4859,
											"end": 4876,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4850,
											"end": 4856,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 4806,
											"end": 4877,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "283"
										},
										{
											"begin": 4806,
											"end": 4877,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4806,
											"end": 4877,
											"name": "tag",
											"source": 13,
											"value": "379"
										},
										{
											"begin": 4806,
											"end": 4877,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4662,
											"end": 4884,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 4662,
											"end": 4884,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 4662,
											"end": 4884,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4662,
											"end": 4884,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4662,
											"end": 4884,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4890,
											"end": 5007,
											"name": "tag",
											"source": 13,
											"value": "284"
										},
										{
											"begin": 4890,
											"end": 5007,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4999,
											"end": 5000,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4996,
											"end": 4997,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 4989,
											"end": 5001,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 5013,
											"end": 5130,
											"name": "tag",
											"source": 13,
											"value": "285"
										},
										{
											"begin": 5013,
											"end": 5130,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5122,
											"end": 5123,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 5119,
											"end": 5120,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 5112,
											"end": 5124,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 5136,
											"end": 5316,
											"name": "tag",
											"source": 13,
											"value": "286"
										},
										{
											"begin": 5136,
											"end": 5316,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5184,
											"end": 5261,
											"name": "PUSH",
											"source": 13,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5181,
											"end": 5182,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 5174,
											"end": 5262,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 5281,
											"end": 5285,
											"name": "PUSH",
											"source": 13,
											"value": "41"
										},
										{
											"begin": 5278,
											"end": 5279,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 5271,
											"end": 5286,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 5305,
											"end": 5309,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 5302,
											"end": 5303,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 5295,
											"end": 5310,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 5322,
											"end": 5603,
											"name": "tag",
											"source": 13,
											"value": "287"
										},
										{
											"begin": 5322,
											"end": 5603,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5405,
											"end": 5432,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "384"
										},
										{
											"begin": 5427,
											"end": 5431,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 5405,
											"end": 5432,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "281"
										},
										{
											"begin": 5405,
											"end": 5432,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5405,
											"end": 5432,
											"name": "tag",
											"source": 13,
											"value": "384"
										},
										{
											"begin": 5405,
											"end": 5432,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5397,
											"end": 5403,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 5393,
											"end": 5433,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5535,
											"end": 5541,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 5523,
											"end": 5533,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 5520,
											"end": 5542,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 5499,
											"end": 5517,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5487,
											"end": 5497,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 5484,
											"end": 5518,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 5481,
											"end": 5543,
											"name": "OR",
											"source": 13
										},
										{
											"begin": 5478,
											"end": 5566,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 5478,
											"end": 5566,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "385"
										},
										{
											"begin": 5478,
											"end": 5566,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 5546,
											"end": 5564,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "386"
										},
										{
											"begin": 5546,
											"end": 5564,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "286"
										},
										{
											"begin": 5546,
											"end": 5564,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5546,
											"end": 5564,
											"name": "tag",
											"source": 13,
											"value": "386"
										},
										{
											"begin": 5546,
											"end": 5564,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5478,
											"end": 5566,
											"name": "tag",
											"source": 13,
											"value": "385"
										},
										{
											"begin": 5478,
											"end": 5566,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5586,
											"end": 5596,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 5582,
											"end": 5584,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 5575,
											"end": 5597,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 5365,
											"end": 5603,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5322,
											"end": 5603,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5322,
											"end": 5603,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5322,
											"end": 5603,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5609,
											"end": 5738,
											"name": "tag",
											"source": 13,
											"value": "288"
										},
										{
											"begin": 5609,
											"end": 5738,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5643,
											"end": 5649,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 5670,
											"end": 5690,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "388"
										},
										{
											"begin": 5670,
											"end": 5690,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "263"
										},
										{
											"begin": 5670,
											"end": 5690,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5670,
											"end": 5690,
											"name": "tag",
											"source": 13,
											"value": "388"
										},
										{
											"begin": 5670,
											"end": 5690,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5660,
											"end": 5690,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5660,
											"end": 5690,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5699,
											"end": 5732,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "389"
										},
										{
											"begin": 5727,
											"end": 5731,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 5719,
											"end": 5725,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 5699,
											"end": 5732,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "287"
										},
										{
											"begin": 5699,
											"end": 5732,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5699,
											"end": 5732,
											"name": "tag",
											"source": 13,
											"value": "389"
										},
										{
											"begin": 5699,
											"end": 5732,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5609,
											"end": 5738,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 5609,
											"end": 5738,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5609,
											"end": 5738,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5609,
											"end": 5738,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5744,
											"end": 6052,
											"name": "tag",
											"source": 13,
											"value": "289"
										},
										{
											"begin": 5744,
											"end": 6052,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5806,
											"end": 5810,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 5896,
											"end": 5914,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5888,
											"end": 5894,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 5885,
											"end": 5915,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 5882,
											"end": 5938,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 5882,
											"end": 5938,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "391"
										},
										{
											"begin": 5882,
											"end": 5938,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 5918,
											"end": 5936,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "392"
										},
										{
											"begin": 5918,
											"end": 5936,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "286"
										},
										{
											"begin": 5918,
											"end": 5936,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5918,
											"end": 5936,
											"name": "tag",
											"source": 13,
											"value": "392"
										},
										{
											"begin": 5918,
											"end": 5936,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5882,
											"end": 5938,
											"name": "tag",
											"source": 13,
											"value": "391"
										},
										{
											"begin": 5882,
											"end": 5938,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5956,
											"end": 5985,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "393"
										},
										{
											"begin": 5978,
											"end": 5984,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 5956,
											"end": 5985,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "281"
										},
										{
											"begin": 5956,
											"end": 5985,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5956,
											"end": 5985,
											"name": "tag",
											"source": 13,
											"value": "393"
										},
										{
											"begin": 5956,
											"end": 5985,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5948,
											"end": 5985,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5948,
											"end": 5985,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6040,
											"end": 6044,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 6034,
											"end": 6038,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 6030,
											"end": 6045,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6022,
											"end": 6045,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 6022,
											"end": 6045,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5744,
											"end": 6052,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 5744,
											"end": 6052,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5744,
											"end": 6052,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5744,
											"end": 6052,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6058,
											"end": 6204,
											"name": "tag",
											"source": 13,
											"value": "290"
										},
										{
											"begin": 6058,
											"end": 6204,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6155,
											"end": 6161,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 6150,
											"end": 6153,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 6145,
											"end": 6148,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 6132,
											"end": 6162,
											"name": "CALLDATACOPY",
											"source": 13
										},
										{
											"begin": 6196,
											"end": 6197,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 6187,
											"end": 6193,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 6182,
											"end": 6185,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 6178,
											"end": 6194,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6171,
											"end": 6198,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 6058,
											"end": 6204,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6058,
											"end": 6204,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6058,
											"end": 6204,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6058,
											"end": 6204,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6210,
											"end": 6635,
											"name": "tag",
											"source": 13,
											"value": "291"
										},
										{
											"begin": 6210,
											"end": 6635,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6288,
											"end": 6293,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 6313,
											"end": 6379,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "396"
										},
										{
											"begin": 6329,
											"end": 6378,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "397"
										},
										{
											"begin": 6371,
											"end": 6377,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 6329,
											"end": 6378,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "289"
										},
										{
											"begin": 6329,
											"end": 6378,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6329,
											"end": 6378,
											"name": "tag",
											"source": 13,
											"value": "397"
										},
										{
											"begin": 6329,
											"end": 6378,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6313,
											"end": 6379,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "288"
										},
										{
											"begin": 6313,
											"end": 6379,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6313,
											"end": 6379,
											"name": "tag",
											"source": 13,
											"value": "396"
										},
										{
											"begin": 6313,
											"end": 6379,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6304,
											"end": 6379,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 6304,
											"end": 6379,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6402,
											"end": 6408,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 6395,
											"end": 6400,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 6388,
											"end": 6409,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 6440,
											"end": 6444,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 6433,
											"end": 6438,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 6429,
											"end": 6445,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6478,
											"end": 6481,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 6469,
											"end": 6475,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 6464,
											"end": 6467,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 6460,
											"end": 6476,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6457,
											"end": 6482,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 6454,
											"end": 6566,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 6454,
											"end": 6566,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "398"
										},
										{
											"begin": 6454,
											"end": 6566,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 6485,
											"end": 6564,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "399"
										},
										{
											"begin": 6485,
											"end": 6564,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "285"
										},
										{
											"begin": 6485,
											"end": 6564,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6485,
											"end": 6564,
											"name": "tag",
											"source": 13,
											"value": "399"
										},
										{
											"begin": 6485,
											"end": 6564,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6454,
											"end": 6566,
											"name": "tag",
											"source": 13,
											"value": "398"
										},
										{
											"begin": 6454,
											"end": 6566,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6575,
											"end": 6629,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "400"
										},
										{
											"begin": 6622,
											"end": 6628,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 6617,
											"end": 6620,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 6612,
											"end": 6615,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 6575,
											"end": 6629,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "290"
										},
										{
											"begin": 6575,
											"end": 6629,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6575,
											"end": 6629,
											"name": "tag",
											"source": 13,
											"value": "400"
										},
										{
											"begin": 6575,
											"end": 6629,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6294,
											"end": 6635,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6210,
											"end": 6635,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 6210,
											"end": 6635,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 6210,
											"end": 6635,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6210,
											"end": 6635,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6210,
											"end": 6635,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6210,
											"end": 6635,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6655,
											"end": 6995,
											"name": "tag",
											"source": 13,
											"value": "292"
										},
										{
											"begin": 6655,
											"end": 6995,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6711,
											"end": 6716,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 6760,
											"end": 6763,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 6753,
											"end": 6757,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 6745,
											"end": 6751,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 6741,
											"end": 6758,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6737,
											"end": 6764,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 6727,
											"end": 6849,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "402"
										},
										{
											"begin": 6727,
											"end": 6849,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 6768,
											"end": 6847,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "403"
										},
										{
											"begin": 6768,
											"end": 6847,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "284"
										},
										{
											"begin": 6768,
											"end": 6847,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6768,
											"end": 6847,
											"name": "tag",
											"source": 13,
											"value": "403"
										},
										{
											"begin": 6768,
											"end": 6847,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6727,
											"end": 6849,
											"name": "tag",
											"source": 13,
											"value": "402"
										},
										{
											"begin": 6727,
											"end": 6849,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6885,
											"end": 6891,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 6872,
											"end": 6892,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 6910,
											"end": 6989,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "404"
										},
										{
											"begin": 6985,
											"end": 6988,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 6977,
											"end": 6983,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 6970,
											"end": 6974,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 6962,
											"end": 6968,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 6958,
											"end": 6975,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6910,
											"end": 6989,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "291"
										},
										{
											"begin": 6910,
											"end": 6989,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6910,
											"end": 6989,
											"name": "tag",
											"source": 13,
											"value": "404"
										},
										{
											"begin": 6910,
											"end": 6989,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6901,
											"end": 6989,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 6901,
											"end": 6989,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6717,
											"end": 6995,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6655,
											"end": 6995,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 6655,
											"end": 6995,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 6655,
											"end": 6995,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6655,
											"end": 6995,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6655,
											"end": 6995,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 7001,
											"end": 7510,
											"name": "tag",
											"source": 13,
											"value": "53"
										},
										{
											"begin": 7001,
											"end": 7510,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7070,
											"end": 7076,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 7119,
											"end": 7121,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 7107,
											"end": 7116,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 7098,
											"end": 7105,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 7094,
											"end": 7117,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 7090,
											"end": 7122,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 7087,
											"end": 7206,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 7087,
											"end": 7206,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "406"
										},
										{
											"begin": 7087,
											"end": 7206,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 7125,
											"end": 7204,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "407"
										},
										{
											"begin": 7125,
											"end": 7204,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "264"
										},
										{
											"begin": 7125,
											"end": 7204,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 7125,
											"end": 7204,
											"name": "tag",
											"source": 13,
											"value": "407"
										},
										{
											"begin": 7125,
											"end": 7204,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7087,
											"end": 7206,
											"name": "tag",
											"source": 13,
											"value": "406"
										},
										{
											"begin": 7087,
											"end": 7206,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7273,
											"end": 7274,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 7262,
											"end": 7271,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 7258,
											"end": 7275,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 7245,
											"end": 7276,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 7303,
											"end": 7321,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7295,
											"end": 7301,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 7292,
											"end": 7322,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 7289,
											"end": 7406,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 7289,
											"end": 7406,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "408"
										},
										{
											"begin": 7289,
											"end": 7406,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 7325,
											"end": 7404,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "409"
										},
										{
											"begin": 7325,
											"end": 7404,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "265"
										},
										{
											"begin": 7325,
											"end": 7404,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 7325,
											"end": 7404,
											"name": "tag",
											"source": 13,
											"value": "409"
										},
										{
											"begin": 7325,
											"end": 7404,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7289,
											"end": 7406,
											"name": "tag",
											"source": 13,
											"value": "408"
										},
										{
											"begin": 7289,
											"end": 7406,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7430,
											"end": 7493,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "410"
										},
										{
											"begin": 7485,
											"end": 7492,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 7476,
											"end": 7482,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 7465,
											"end": 7474,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 7461,
											"end": 7483,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 7430,
											"end": 7493,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "292"
										},
										{
											"begin": 7430,
											"end": 7493,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 7430,
											"end": 7493,
											"name": "tag",
											"source": 13,
											"value": "410"
										},
										{
											"begin": 7430,
											"end": 7493,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7420,
											"end": 7493,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 7420,
											"end": 7493,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7216,
											"end": 7503,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7001,
											"end": 7510,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 7001,
											"end": 7510,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 7001,
											"end": 7510,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7001,
											"end": 7510,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7001,
											"end": 7510,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 7516,
											"end": 8135,
											"name": "tag",
											"source": 13,
											"value": "58"
										},
										{
											"begin": 7516,
											"end": 8135,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7593,
											"end": 7599,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 7601,
											"end": 7607,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 7609,
											"end": 7615,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 7658,
											"end": 7660,
											"name": "PUSH",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 7646,
											"end": 7655,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 7637,
											"end": 7644,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 7633,
											"end": 7656,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 7629,
											"end": 7661,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 7626,
											"end": 7745,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 7626,
											"end": 7745,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "412"
										},
										{
											"begin": 7626,
											"end": 7745,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 7664,
											"end": 7743,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "413"
										},
										{
											"begin": 7664,
											"end": 7743,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "264"
										},
										{
											"begin": 7664,
											"end": 7743,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 7664,
											"end": 7743,
											"name": "tag",
											"source": 13,
											"value": "413"
										},
										{
											"begin": 7664,
											"end": 7743,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7626,
											"end": 7745,
											"name": "tag",
											"source": 13,
											"value": "412"
										},
										{
											"begin": 7626,
											"end": 7745,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7784,
											"end": 7785,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 7809,
											"end": 7862,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "414"
										},
										{
											"begin": 7854,
											"end": 7861,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 7845,
											"end": 7851,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 7834,
											"end": 7843,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 7830,
											"end": 7852,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 7809,
											"end": 7862,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "269"
										},
										{
											"begin": 7809,
											"end": 7862,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 7809,
											"end": 7862,
											"name": "tag",
											"source": 13,
											"value": "414"
										},
										{
											"begin": 7809,
											"end": 7862,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7799,
											"end": 7862,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 7799,
											"end": 7862,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7755,
											"end": 7872,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7911,
											"end": 7913,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 7937,
											"end": 7990,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "415"
										},
										{
											"begin": 7982,
											"end": 7989,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 7973,
											"end": 7979,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 7962,
											"end": 7971,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 7958,
											"end": 7980,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 7937,
											"end": 7990,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "269"
										},
										{
											"begin": 7937,
											"end": 7990,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 7937,
											"end": 7990,
											"name": "tag",
											"source": 13,
											"value": "415"
										},
										{
											"begin": 7937,
											"end": 7990,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7927,
											"end": 7990,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 7927,
											"end": 7990,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7882,
											"end": 8000,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8039,
											"end": 8041,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 8065,
											"end": 8118,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "416"
										},
										{
											"begin": 8110,
											"end": 8117,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 8101,
											"end": 8107,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 8090,
											"end": 8099,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 8086,
											"end": 8108,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 8065,
											"end": 8118,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "272"
										},
										{
											"begin": 8065,
											"end": 8118,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 8065,
											"end": 8118,
											"name": "tag",
											"source": 13,
											"value": "416"
										},
										{
											"begin": 8065,
											"end": 8118,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8055,
											"end": 8118,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 8055,
											"end": 8118,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8010,
											"end": 8128,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7516,
											"end": 8135,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 7516,
											"end": 8135,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7516,
											"end": 8135,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 7516,
											"end": 8135,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7516,
											"end": 8135,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 7516,
											"end": 8135,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 8141,
											"end": 8257,
											"name": "tag",
											"source": 13,
											"value": "293"
										},
										{
											"begin": 8141,
											"end": 8257,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8211,
											"end": 8232,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "418"
										},
										{
											"begin": 8226,
											"end": 8231,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 8211,
											"end": 8232,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "276"
										},
										{
											"begin": 8211,
											"end": 8232,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 8211,
											"end": 8232,
											"name": "tag",
											"source": 13,
											"value": "418"
										},
										{
											"begin": 8211,
											"end": 8232,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8204,
											"end": 8209,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 8201,
											"end": 8233,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 8191,
											"end": 8251,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "419"
										},
										{
											"begin": 8191,
											"end": 8251,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 8247,
											"end": 8248,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 8244,
											"end": 8245,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 8237,
											"end": 8249,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 8191,
											"end": 8251,
											"name": "tag",
											"source": 13,
											"value": "419"
										},
										{
											"begin": 8191,
											"end": 8251,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8141,
											"end": 8257,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8141,
											"end": 8257,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 8263,
											"end": 8396,
											"name": "tag",
											"source": 13,
											"value": "294"
										},
										{
											"begin": 8263,
											"end": 8396,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8306,
											"end": 8311,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 8344,
											"end": 8350,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 8331,
											"end": 8351,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 8322,
											"end": 8351,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 8322,
											"end": 8351,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8360,
											"end": 8390,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "421"
										},
										{
											"begin": 8384,
											"end": 8389,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 8360,
											"end": 8390,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "293"
										},
										{
											"begin": 8360,
											"end": 8390,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 8360,
											"end": 8390,
											"name": "tag",
											"source": 13,
											"value": "421"
										},
										{
											"begin": 8360,
											"end": 8390,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8263,
											"end": 8396,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 8263,
											"end": 8396,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 8263,
											"end": 8396,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8263,
											"end": 8396,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8263,
											"end": 8396,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 8402,
											"end": 9015,
											"name": "tag",
											"source": 13,
											"value": "63"
										},
										{
											"begin": 8402,
											"end": 9015,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8476,
											"end": 8482,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 8484,
											"end": 8490,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 8492,
											"end": 8498,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 8541,
											"end": 8543,
											"name": "PUSH",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 8529,
											"end": 8538,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 8520,
											"end": 8527,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 8516,
											"end": 8539,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 8512,
											"end": 8544,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 8509,
											"end": 8628,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 8509,
											"end": 8628,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "423"
										},
										{
											"begin": 8509,
											"end": 8628,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 8547,
											"end": 8626,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "424"
										},
										{
											"begin": 8547,
											"end": 8626,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "264"
										},
										{
											"begin": 8547,
											"end": 8626,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 8547,
											"end": 8626,
											"name": "tag",
											"source": 13,
											"value": "424"
										},
										{
											"begin": 8547,
											"end": 8626,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8509,
											"end": 8628,
											"name": "tag",
											"source": 13,
											"value": "423"
										},
										{
											"begin": 8509,
											"end": 8628,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8667,
											"end": 8668,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 8692,
											"end": 8745,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "425"
										},
										{
											"begin": 8737,
											"end": 8744,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 8728,
											"end": 8734,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 8717,
											"end": 8726,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 8713,
											"end": 8735,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 8692,
											"end": 8745,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "269"
										},
										{
											"begin": 8692,
											"end": 8745,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 8692,
											"end": 8745,
											"name": "tag",
											"source": 13,
											"value": "425"
										},
										{
											"begin": 8692,
											"end": 8745,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8682,
											"end": 8745,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 8682,
											"end": 8745,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8638,
											"end": 8755,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8794,
											"end": 8796,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 8820,
											"end": 8873,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "426"
										},
										{
											"begin": 8865,
											"end": 8872,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 8856,
											"end": 8862,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 8845,
											"end": 8854,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 8841,
											"end": 8863,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 8820,
											"end": 8873,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "269"
										},
										{
											"begin": 8820,
											"end": 8873,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 8820,
											"end": 8873,
											"name": "tag",
											"source": 13,
											"value": "426"
										},
										{
											"begin": 8820,
											"end": 8873,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8810,
											"end": 8873,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 8810,
											"end": 8873,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8765,
											"end": 8883,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8922,
											"end": 8924,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 8948,
											"end": 8998,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "427"
										},
										{
											"begin": 8990,
											"end": 8997,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 8981,
											"end": 8987,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 8970,
											"end": 8979,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 8966,
											"end": 8988,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 8948,
											"end": 8998,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "294"
										},
										{
											"begin": 8948,
											"end": 8998,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 8948,
											"end": 8998,
											"name": "tag",
											"source": 13,
											"value": "427"
										},
										{
											"begin": 8948,
											"end": 8998,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8938,
											"end": 8998,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 8938,
											"end": 8998,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8893,
											"end": 9008,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8402,
											"end": 9015,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 8402,
											"end": 9015,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8402,
											"end": 9015,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 8402,
											"end": 9015,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8402,
											"end": 9015,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 8402,
											"end": 9015,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 9021,
											"end": 9350,
											"name": "tag",
											"source": 13,
											"value": "77"
										},
										{
											"begin": 9021,
											"end": 9350,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9080,
											"end": 9086,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 9129,
											"end": 9131,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 9117,
											"end": 9126,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 9108,
											"end": 9115,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 9104,
											"end": 9127,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 9100,
											"end": 9132,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 9097,
											"end": 9216,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 9097,
											"end": 9216,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "429"
										},
										{
											"begin": 9097,
											"end": 9216,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 9135,
											"end": 9214,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "430"
										},
										{
											"begin": 9135,
											"end": 9214,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "264"
										},
										{
											"begin": 9135,
											"end": 9214,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 9135,
											"end": 9214,
											"name": "tag",
											"source": 13,
											"value": "430"
										},
										{
											"begin": 9135,
											"end": 9214,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9097,
											"end": 9216,
											"name": "tag",
											"source": 13,
											"value": "429"
										},
										{
											"begin": 9097,
											"end": 9216,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9255,
											"end": 9256,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 9280,
											"end": 9333,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "431"
										},
										{
											"begin": 9325,
											"end": 9332,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 9316,
											"end": 9322,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 9305,
											"end": 9314,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 9301,
											"end": 9323,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 9280,
											"end": 9333,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "269"
										},
										{
											"begin": 9280,
											"end": 9333,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 9280,
											"end": 9333,
											"name": "tag",
											"source": 13,
											"value": "431"
										},
										{
											"begin": 9280,
											"end": 9333,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9270,
											"end": 9333,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 9270,
											"end": 9333,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 9226,
											"end": 9343,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 9021,
											"end": 9350,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 9021,
											"end": 9350,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 9021,
											"end": 9350,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 9021,
											"end": 9350,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 9021,
											"end": 9350,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 9356,
											"end": 9474,
											"name": "tag",
											"source": 13,
											"value": "295"
										},
										{
											"begin": 9356,
											"end": 9474,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9443,
											"end": 9467,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "433"
										},
										{
											"begin": 9461,
											"end": 9466,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 9443,
											"end": 9467,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "270"
										},
										{
											"begin": 9443,
											"end": 9467,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 9443,
											"end": 9467,
											"name": "tag",
											"source": 13,
											"value": "433"
										},
										{
											"begin": 9443,
											"end": 9467,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9438,
											"end": 9441,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 9431,
											"end": 9468,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 9356,
											"end": 9474,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 9356,
											"end": 9474,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 9356,
											"end": 9474,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 9480,
											"end": 9702,
											"name": "tag",
											"source": 13,
											"value": "80"
										},
										{
											"begin": 9480,
											"end": 9702,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9573,
											"end": 9577,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 9611,
											"end": 9613,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 9600,
											"end": 9609,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 9596,
											"end": 9614,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 9588,
											"end": 9614,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 9588,
											"end": 9614,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 9624,
											"end": 9695,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "435"
										},
										{
											"begin": 9692,
											"end": 9693,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 9681,
											"end": 9690,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 9677,
											"end": 9694,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 9668,
											"end": 9674,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 9624,
											"end": 9695,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "295"
										},
										{
											"begin": 9624,
											"end": 9695,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 9624,
											"end": 9695,
											"name": "tag",
											"source": 13,
											"value": "435"
										},
										{
											"begin": 9624,
											"end": 9695,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9480,
											"end": 9702,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 9480,
											"end": 9702,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 9480,
											"end": 9702,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 9480,
											"end": 9702,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 9480,
											"end": 9702,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 9708,
											"end": 10176,
											"name": "tag",
											"source": 13,
											"value": "93"
										},
										{
											"begin": 9708,
											"end": 10176,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9773,
											"end": 9779,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 9781,
											"end": 9787,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 9830,
											"end": 9832,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 9818,
											"end": 9827,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 9809,
											"end": 9816,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 9805,
											"end": 9828,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 9801,
											"end": 9833,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 9798,
											"end": 9917,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 9798,
											"end": 9917,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "437"
										},
										{
											"begin": 9798,
											"end": 9917,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 9836,
											"end": 9915,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "438"
										},
										{
											"begin": 9836,
											"end": 9915,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "264"
										},
										{
											"begin": 9836,
											"end": 9915,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 9836,
											"end": 9915,
											"name": "tag",
											"source": 13,
											"value": "438"
										},
										{
											"begin": 9836,
											"end": 9915,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9798,
											"end": 9917,
											"name": "tag",
											"source": 13,
											"value": "437"
										},
										{
											"begin": 9798,
											"end": 9917,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9956,
											"end": 9957,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 9981,
											"end": 10034,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "439"
										},
										{
											"begin": 10026,
											"end": 10033,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 10017,
											"end": 10023,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 10006,
											"end": 10015,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 10002,
											"end": 10024,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 9981,
											"end": 10034,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "269"
										},
										{
											"begin": 9981,
											"end": 10034,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 9981,
											"end": 10034,
											"name": "tag",
											"source": 13,
											"value": "439"
										},
										{
											"begin": 9981,
											"end": 10034,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9971,
											"end": 10034,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 9971,
											"end": 10034,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 9927,
											"end": 10044,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 10083,
											"end": 10085,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 10109,
											"end": 10159,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "440"
										},
										{
											"begin": 10151,
											"end": 10158,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 10142,
											"end": 10148,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 10131,
											"end": 10140,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 10127,
											"end": 10149,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 10109,
											"end": 10159,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "294"
										},
										{
											"begin": 10109,
											"end": 10159,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 10109,
											"end": 10159,
											"name": "tag",
											"source": 13,
											"value": "440"
										},
										{
											"begin": 10109,
											"end": 10159,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 10099,
											"end": 10159,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 10099,
											"end": 10159,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 10054,
											"end": 10169,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 9708,
											"end": 10176,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 9708,
											"end": 10176,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 9708,
											"end": 10176,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 9708,
											"end": 10176,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 9708,
											"end": 10176,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 9708,
											"end": 10176,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 10182,
											"end": 10489,
											"name": "tag",
											"source": 13,
											"value": "296"
										},
										{
											"begin": 10182,
											"end": 10489,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 10243,
											"end": 10247,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 10333,
											"end": 10351,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10325,
											"end": 10331,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 10322,
											"end": 10352,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 10319,
											"end": 10375,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 10319,
											"end": 10375,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "442"
										},
										{
											"begin": 10319,
											"end": 10375,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 10355,
											"end": 10373,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "443"
										},
										{
											"begin": 10355,
											"end": 10373,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "286"
										},
										{
											"begin": 10355,
											"end": 10373,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 10355,
											"end": 10373,
											"name": "tag",
											"source": 13,
											"value": "443"
										},
										{
											"begin": 10355,
											"end": 10373,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 10319,
											"end": 10375,
											"name": "tag",
											"source": 13,
											"value": "442"
										},
										{
											"begin": 10319,
											"end": 10375,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 10393,
											"end": 10422,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "444"
										},
										{
											"begin": 10415,
											"end": 10421,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 10393,
											"end": 10422,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "281"
										},
										{
											"begin": 10393,
											"end": 10422,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 10393,
											"end": 10422,
											"name": "tag",
											"source": 13,
											"value": "444"
										},
										{
											"begin": 10393,
											"end": 10422,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 10385,
											"end": 10422,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 10385,
											"end": 10422,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 10477,
											"end": 10481,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 10471,
											"end": 10475,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 10467,
											"end": 10482,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 10459,
											"end": 10482,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 10459,
											"end": 10482,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 10182,
											"end": 10489,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 10182,
											"end": 10489,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 10182,
											"end": 10489,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 10182,
											"end": 10489,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 10495,
											"end": 10918,
											"name": "tag",
											"source": 13,
											"value": "297"
										},
										{
											"begin": 10495,
											"end": 10918,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 10572,
											"end": 10577,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 10597,
											"end": 10662,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "446"
										},
										{
											"begin": 10613,
											"end": 10661,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "447"
										},
										{
											"begin": 10654,
											"end": 10660,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 10613,
											"end": 10661,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "296"
										},
										{
											"begin": 10613,
											"end": 10661,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 10613,
											"end": 10661,
											"name": "tag",
											"source": 13,
											"value": "447"
										},
										{
											"begin": 10613,
											"end": 10661,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 10597,
											"end": 10662,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "288"
										},
										{
											"begin": 10597,
											"end": 10662,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 10597,
											"end": 10662,
											"name": "tag",
											"source": 13,
											"value": "446"
										},
										{
											"begin": 10597,
											"end": 10662,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 10588,
											"end": 10662,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 10588,
											"end": 10662,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 10685,
											"end": 10691,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 10678,
											"end": 10683,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 10671,
											"end": 10692,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 10723,
											"end": 10727,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 10716,
											"end": 10721,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 10712,
											"end": 10728,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 10761,
											"end": 10764,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 10752,
											"end": 10758,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 10747,
											"end": 10750,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 10743,
											"end": 10759,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 10740,
											"end": 10765,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 10737,
											"end": 10849,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 10737,
											"end": 10849,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "448"
										},
										{
											"begin": 10737,
											"end": 10849,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 10768,
											"end": 10847,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "449"
										},
										{
											"begin": 10768,
											"end": 10847,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "285"
										},
										{
											"begin": 10768,
											"end": 10847,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 10768,
											"end": 10847,
											"name": "tag",
											"source": 13,
											"value": "449"
										},
										{
											"begin": 10768,
											"end": 10847,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 10737,
											"end": 10849,
											"name": "tag",
											"source": 13,
											"value": "448"
										},
										{
											"begin": 10737,
											"end": 10849,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 10858,
											"end": 10912,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "450"
										},
										{
											"begin": 10905,
											"end": 10911,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 10900,
											"end": 10903,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 10895,
											"end": 10898,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 10858,
											"end": 10912,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "290"
										},
										{
											"begin": 10858,
											"end": 10912,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 10858,
											"end": 10912,
											"name": "tag",
											"source": 13,
											"value": "450"
										},
										{
											"begin": 10858,
											"end": 10912,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 10578,
											"end": 10918,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 10495,
											"end": 10918,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 10495,
											"end": 10918,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 10495,
											"end": 10918,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 10495,
											"end": 10918,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 10495,
											"end": 10918,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 10495,
											"end": 10918,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 10937,
											"end": 11275,
											"name": "tag",
											"source": 13,
											"value": "298"
										},
										{
											"begin": 10937,
											"end": 11275,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 10992,
											"end": 10997,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 11041,
											"end": 11044,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 11034,
											"end": 11038,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 11026,
											"end": 11032,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 11022,
											"end": 11039,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 11018,
											"end": 11045,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 11008,
											"end": 11130,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "452"
										},
										{
											"begin": 11008,
											"end": 11130,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 11049,
											"end": 11128,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "453"
										},
										{
											"begin": 11049,
											"end": 11128,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "284"
										},
										{
											"begin": 11049,
											"end": 11128,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 11049,
											"end": 11128,
											"name": "tag",
											"source": 13,
											"value": "453"
										},
										{
											"begin": 11049,
											"end": 11128,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 11008,
											"end": 11130,
											"name": "tag",
											"source": 13,
											"value": "452"
										},
										{
											"begin": 11008,
											"end": 11130,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 11166,
											"end": 11172,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 11153,
											"end": 11173,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 11191,
											"end": 11269,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "454"
										},
										{
											"begin": 11265,
											"end": 11268,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 11257,
											"end": 11263,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 11250,
											"end": 11254,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 11242,
											"end": 11248,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 11238,
											"end": 11255,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 11191,
											"end": 11269,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "297"
										},
										{
											"begin": 11191,
											"end": 11269,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 11191,
											"end": 11269,
											"name": "tag",
											"source": 13,
											"value": "454"
										},
										{
											"begin": 11191,
											"end": 11269,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 11182,
											"end": 11269,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 11182,
											"end": 11269,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 10998,
											"end": 11275,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 10937,
											"end": 11275,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 10937,
											"end": 11275,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 10937,
											"end": 11275,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 10937,
											"end": 11275,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 10937,
											"end": 11275,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 11281,
											"end": 12224,
											"name": "tag",
											"source": 13,
											"value": "98"
										},
										{
											"begin": 11281,
											"end": 12224,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 11376,
											"end": 11382,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 11384,
											"end": 11390,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 11392,
											"end": 11398,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 11400,
											"end": 11406,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 11449,
											"end": 11452,
											"name": "PUSH",
											"source": 13,
											"value": "80"
										},
										{
											"begin": 11437,
											"end": 11446,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 11428,
											"end": 11435,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 11424,
											"end": 11447,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 11420,
											"end": 11453,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 11417,
											"end": 11537,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 11417,
											"end": 11537,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "456"
										},
										{
											"begin": 11417,
											"end": 11537,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 11456,
											"end": 11535,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "457"
										},
										{
											"begin": 11456,
											"end": 11535,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "264"
										},
										{
											"begin": 11456,
											"end": 11535,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 11456,
											"end": 11535,
											"name": "tag",
											"source": 13,
											"value": "457"
										},
										{
											"begin": 11456,
											"end": 11535,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 11417,
											"end": 11537,
											"name": "tag",
											"source": 13,
											"value": "456"
										},
										{
											"begin": 11417,
											"end": 11537,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 11576,
											"end": 11577,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 11601,
											"end": 11654,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "458"
										},
										{
											"begin": 11646,
											"end": 11653,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 11637,
											"end": 11643,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 11626,
											"end": 11635,
											"name": "DUP9",
											"source": 13
										},
										{
											"begin": 11622,
											"end": 11644,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 11601,
											"end": 11654,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "269"
										},
										{
											"begin": 11601,
											"end": 11654,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 11601,
											"end": 11654,
											"name": "tag",
											"source": 13,
											"value": "458"
										},
										{
											"begin": 11601,
											"end": 11654,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 11591,
											"end": 11654,
											"name": "SWAP5",
											"source": 13
										},
										{
											"begin": 11591,
											"end": 11654,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 11547,
											"end": 11664,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 11703,
											"end": 11705,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 11729,
											"end": 11782,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "459"
										},
										{
											"begin": 11774,
											"end": 11781,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 11765,
											"end": 11771,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 11754,
											"end": 11763,
											"name": "DUP9",
											"source": 13
										},
										{
											"begin": 11750,
											"end": 11772,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 11729,
											"end": 11782,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "269"
										},
										{
											"begin": 11729,
											"end": 11782,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 11729,
											"end": 11782,
											"name": "tag",
											"source": 13,
											"value": "459"
										},
										{
											"begin": 11729,
											"end": 11782,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 11719,
											"end": 11782,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 11719,
											"end": 11782,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 11674,
											"end": 11792,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 11831,
											"end": 11833,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 11857,
											"end": 11910,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "460"
										},
										{
											"begin": 11902,
											"end": 11909,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 11893,
											"end": 11899,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 11882,
											"end": 11891,
											"name": "DUP9",
											"source": 13
										},
										{
											"begin": 11878,
											"end": 11900,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 11857,
											"end": 11910,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "272"
										},
										{
											"begin": 11857,
											"end": 11910,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 11857,
											"end": 11910,
											"name": "tag",
											"source": 13,
											"value": "460"
										},
										{
											"begin": 11857,
											"end": 11910,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 11847,
											"end": 11910,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 11847,
											"end": 11910,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 11802,
											"end": 11920,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 11987,
											"end": 11989,
											"name": "PUSH",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 11976,
											"end": 11985,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 11972,
											"end": 11990,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 11959,
											"end": 11991,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 12018,
											"end": 12036,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12010,
											"end": 12016,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 12007,
											"end": 12037,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 12004,
											"end": 12121,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 12004,
											"end": 12121,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "461"
										},
										{
											"begin": 12004,
											"end": 12121,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 12040,
											"end": 12119,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "462"
										},
										{
											"begin": 12040,
											"end": 12119,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "265"
										},
										{
											"begin": 12040,
											"end": 12119,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 12040,
											"end": 12119,
											"name": "tag",
											"source": 13,
											"value": "462"
										},
										{
											"begin": 12040,
											"end": 12119,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 12004,
											"end": 12121,
											"name": "tag",
											"source": 13,
											"value": "461"
										},
										{
											"begin": 12004,
											"end": 12121,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 12145,
											"end": 12207,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "463"
										},
										{
											"begin": 12199,
											"end": 12206,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 12190,
											"end": 12196,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 12179,
											"end": 12188,
											"name": "DUP9",
											"source": 13
										},
										{
											"begin": 12175,
											"end": 12197,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 12145,
											"end": 12207,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "298"
										},
										{
											"begin": 12145,
											"end": 12207,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 12145,
											"end": 12207,
											"name": "tag",
											"source": 13,
											"value": "463"
										},
										{
											"begin": 12145,
											"end": 12207,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 12135,
											"end": 12207,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 12135,
											"end": 12207,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 11930,
											"end": 12217,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 11281,
											"end": 12224,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 11281,
											"end": 12224,
											"name": "SWAP6",
											"source": 13
										},
										{
											"begin": 11281,
											"end": 12224,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 11281,
											"end": 12224,
											"name": "SWAP5",
											"source": 13
										},
										{
											"begin": 11281,
											"end": 12224,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 11281,
											"end": 12224,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 11281,
											"end": 12224,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 11281,
											"end": 12224,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 12230,
											"end": 12704,
											"name": "tag",
											"source": 13,
											"value": "112"
										},
										{
											"begin": 12230,
											"end": 12704,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 12298,
											"end": 12304,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 12306,
											"end": 12312,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 12355,
											"end": 12357,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 12343,
											"end": 12352,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 12334,
											"end": 12341,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 12330,
											"end": 12353,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 12326,
											"end": 12358,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 12323,
											"end": 12442,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 12323,
											"end": 12442,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "465"
										},
										{
											"begin": 12323,
											"end": 12442,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 12361,
											"end": 12440,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "466"
										},
										{
											"begin": 12361,
											"end": 12440,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "264"
										},
										{
											"begin": 12361,
											"end": 12440,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 12361,
											"end": 12440,
											"name": "tag",
											"source": 13,
											"value": "466"
										},
										{
											"begin": 12361,
											"end": 12440,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 12323,
											"end": 12442,
											"name": "tag",
											"source": 13,
											"value": "465"
										},
										{
											"begin": 12323,
											"end": 12442,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 12481,
											"end": 12482,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 12506,
											"end": 12559,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "467"
										},
										{
											"begin": 12551,
											"end": 12558,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 12542,
											"end": 12548,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 12531,
											"end": 12540,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 12527,
											"end": 12549,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 12506,
											"end": 12559,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "269"
										},
										{
											"begin": 12506,
											"end": 12559,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 12506,
											"end": 12559,
											"name": "tag",
											"source": 13,
											"value": "467"
										},
										{
											"begin": 12506,
											"end": 12559,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 12496,
											"end": 12559,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 12496,
											"end": 12559,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 12452,
											"end": 12569,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 12608,
											"end": 12610,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 12634,
											"end": 12687,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "468"
										},
										{
											"begin": 12679,
											"end": 12686,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 12670,
											"end": 12676,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 12659,
											"end": 12668,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 12655,
											"end": 12677,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 12634,
											"end": 12687,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "269"
										},
										{
											"begin": 12634,
											"end": 12687,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 12634,
											"end": 12687,
											"name": "tag",
											"source": 13,
											"value": "468"
										},
										{
											"begin": 12634,
											"end": 12687,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 12624,
											"end": 12687,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 12624,
											"end": 12687,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 12579,
											"end": 12697,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 12230,
											"end": 12704,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 12230,
											"end": 12704,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 12230,
											"end": 12704,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 12230,
											"end": 12704,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 12230,
											"end": 12704,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 12230,
											"end": 12704,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 12710,
											"end": 12890,
											"name": "tag",
											"source": 13,
											"value": "299"
										},
										{
											"begin": 12710,
											"end": 12890,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 12758,
											"end": 12835,
											"name": "PUSH",
											"source": 13,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 12755,
											"end": 12756,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 12748,
											"end": 12836,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 12855,
											"end": 12859,
											"name": "PUSH",
											"source": 13,
											"value": "22"
										},
										{
											"begin": 12852,
											"end": 12853,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 12845,
											"end": 12860,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 12879,
											"end": 12883,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 12876,
											"end": 12877,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 12869,
											"end": 12884,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 12896,
											"end": 13216,
											"name": "tag",
											"source": 13,
											"value": "124"
										},
										{
											"begin": 12896,
											"end": 13216,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 12940,
											"end": 12946,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 12977,
											"end": 12978,
											"name": "PUSH",
											"source": 13,
											"value": "2"
										},
										{
											"begin": 12971,
											"end": 12975,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 12967,
											"end": 12979,
											"name": "DIV",
											"source": 13
										},
										{
											"begin": 12957,
											"end": 12979,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 12957,
											"end": 12979,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 13024,
											"end": 13025,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 13018,
											"end": 13022,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 13014,
											"end": 13026,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 13045,
											"end": 13063,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 13035,
											"end": 13116,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "471"
										},
										{
											"begin": 13035,
											"end": 13116,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 13101,
											"end": 13105,
											"name": "PUSH",
											"source": 13,
											"value": "7F"
										},
										{
											"begin": 13093,
											"end": 13099,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 13089,
											"end": 13106,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 13079,
											"end": 13106,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 13079,
											"end": 13106,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 13035,
											"end": 13116,
											"name": "tag",
											"source": 13,
											"value": "471"
										},
										{
											"begin": 13035,
											"end": 13116,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 13163,
											"end": 13165,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 13155,
											"end": 13161,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 13152,
											"end": 13166,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 13132,
											"end": 13150,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 13129,
											"end": 13167,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 13126,
											"end": 13210,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "472"
										},
										{
											"begin": 13126,
											"end": 13210,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 13182,
											"end": 13200,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "473"
										},
										{
											"begin": 13182,
											"end": 13200,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "299"
										},
										{
											"begin": 13182,
											"end": 13200,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 13182,
											"end": 13200,
											"name": "tag",
											"source": 13,
											"value": "473"
										},
										{
											"begin": 13182,
											"end": 13200,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 13126,
											"end": 13210,
											"name": "tag",
											"source": 13,
											"value": "472"
										},
										{
											"begin": 13126,
											"end": 13210,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 12947,
											"end": 13216,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 12896,
											"end": 13216,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 12896,
											"end": 13216,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 12896,
											"end": 13216,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 12896,
											"end": 13216,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 13222,
											"end": 13363,
											"name": "tag",
											"source": 13,
											"value": "300"
										},
										{
											"begin": 13222,
											"end": 13363,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 13271,
											"end": 13275,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 13294,
											"end": 13297,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 13286,
											"end": 13297,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 13286,
											"end": 13297,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 13317,
											"end": 13320,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 13314,
											"end": 13315,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 13307,
											"end": 13321,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 13351,
											"end": 13355,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 13348,
											"end": 13349,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 13338,
											"end": 13356,
											"name": "KECCAK256",
											"source": 13
										},
										{
											"begin": 13330,
											"end": 13356,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 13330,
											"end": 13356,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 13222,
											"end": 13363,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 13222,
											"end": 13363,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 13222,
											"end": 13363,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 13222,
											"end": 13363,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 13369,
											"end": 13462,
											"name": "tag",
											"source": 13,
											"value": "301"
										},
										{
											"begin": 13369,
											"end": 13462,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 13406,
											"end": 13412,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 13453,
											"end": 13455,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 13448,
											"end": 13450,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 13441,
											"end": 13446,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 13437,
											"end": 13451,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 13433,
											"end": 13456,
											"name": "DIV",
											"source": 13
										},
										{
											"begin": 13423,
											"end": 13456,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 13423,
											"end": 13456,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 13369,
											"end": 13462,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 13369,
											"end": 13462,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 13369,
											"end": 13462,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 13369,
											"end": 13462,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 13468,
											"end": 13575,
											"name": "tag",
											"source": 13,
											"value": "302"
										},
										{
											"begin": 13468,
											"end": 13575,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 13512,
											"end": 13520,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 13562,
											"end": 13567,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 13556,
											"end": 13560,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 13552,
											"end": 13568,
											"name": "SHL",
											"source": 13
										},
										{
											"begin": 13531,
											"end": 13568,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 13531,
											"end": 13568,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 13468,
											"end": 13575,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 13468,
											"end": 13575,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 13468,
											"end": 13575,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 13468,
											"end": 13575,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 13468,
											"end": 13575,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 13581,
											"end": 13974,
											"name": "tag",
											"source": 13,
											"value": "303"
										},
										{
											"begin": 13581,
											"end": 13974,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 13650,
											"end": 13656,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 13700,
											"end": 13701,
											"name": "PUSH",
											"source": 13,
											"value": "8"
										},
										{
											"begin": 13688,
											"end": 13698,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 13684,
											"end": 13702,
											"name": "MUL",
											"source": 13
										},
										{
											"begin": 13723,
											"end": 13820,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "478"
										},
										{
											"begin": 13753,
											"end": 13819,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13742,
											"end": 13751,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 13723,
											"end": 13820,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "302"
										},
										{
											"begin": 13723,
											"end": 13820,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 13723,
											"end": 13820,
											"name": "tag",
											"source": 13,
											"value": "478"
										},
										{
											"begin": 13723,
											"end": 13820,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 13841,
											"end": 13880,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "479"
										},
										{
											"begin": 13871,
											"end": 13879,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 13860,
											"end": 13869,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 13841,
											"end": 13880,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "302"
										},
										{
											"begin": 13841,
											"end": 13880,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 13841,
											"end": 13880,
											"name": "tag",
											"source": 13,
											"value": "479"
										},
										{
											"begin": 13841,
											"end": 13880,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 13829,
											"end": 13880,
											"name": "SWAP6",
											"source": 13
										},
										{
											"begin": 13829,
											"end": 13880,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 13913,
											"end": 13917,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 13909,
											"end": 13918,
											"name": "NOT",
											"source": 13
										},
										{
											"begin": 13902,
											"end": 13907,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 13898,
											"end": 13919,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 13889,
											"end": 13919,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 13889,
											"end": 13919,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 13962,
											"end": 13966,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 13952,
											"end": 13960,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 13948,
											"end": 13967,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 13941,
											"end": 13946,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 13938,
											"end": 13968,
											"name": "OR",
											"source": 13
										},
										{
											"begin": 13928,
											"end": 13968,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 13928,
											"end": 13968,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 13657,
											"end": 13974,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 13657,
											"end": 13974,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 13581,
											"end": 13974,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 13581,
											"end": 13974,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 13581,
											"end": 13974,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 13581,
											"end": 13974,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 13581,
											"end": 13974,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 13581,
											"end": 13974,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 13980,
											"end": 14040,
											"name": "tag",
											"source": 13,
											"value": "304"
										},
										{
											"begin": 13980,
											"end": 14040,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 14008,
											"end": 14011,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 14029,
											"end": 14034,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 14022,
											"end": 14034,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 14022,
											"end": 14034,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 13980,
											"end": 14040,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 13980,
											"end": 14040,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 13980,
											"end": 14040,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 13980,
											"end": 14040,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 14046,
											"end": 14188,
											"name": "tag",
											"source": 13,
											"value": "305"
										},
										{
											"begin": 14046,
											"end": 14188,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 14096,
											"end": 14105,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 14129,
											"end": 14182,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "482"
										},
										{
											"begin": 14147,
											"end": 14181,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "483"
										},
										{
											"begin": 14156,
											"end": 14180,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "484"
										},
										{
											"begin": 14174,
											"end": 14179,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 14156,
											"end": 14180,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "270"
										},
										{
											"begin": 14156,
											"end": 14180,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 14156,
											"end": 14180,
											"name": "tag",
											"source": 13,
											"value": "484"
										},
										{
											"begin": 14156,
											"end": 14180,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 14147,
											"end": 14181,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "304"
										},
										{
											"begin": 14147,
											"end": 14181,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 14147,
											"end": 14181,
											"name": "tag",
											"source": 13,
											"value": "483"
										},
										{
											"begin": 14147,
											"end": 14181,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 14129,
											"end": 14182,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "270"
										},
										{
											"begin": 14129,
											"end": 14182,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 14129,
											"end": 14182,
											"name": "tag",
											"source": 13,
											"value": "482"
										},
										{
											"begin": 14129,
											"end": 14182,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 14116,
											"end": 14182,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 14116,
											"end": 14182,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 14046,
											"end": 14188,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 14046,
											"end": 14188,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 14046,
											"end": 14188,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 14046,
											"end": 14188,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 14194,
											"end": 14269,
											"name": "tag",
											"source": 13,
											"value": "306"
										},
										{
											"begin": 14194,
											"end": 14269,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 14237,
											"end": 14240,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 14258,
											"end": 14263,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 14251,
											"end": 14263,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 14251,
											"end": 14263,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 14194,
											"end": 14269,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 14194,
											"end": 14269,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 14194,
											"end": 14269,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 14194,
											"end": 14269,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 14275,
											"end": 14544,
											"name": "tag",
											"source": 13,
											"value": "307"
										},
										{
											"begin": 14275,
											"end": 14544,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 14385,
											"end": 14424,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "487"
										},
										{
											"begin": 14416,
											"end": 14423,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 14385,
											"end": 14424,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "305"
										},
										{
											"begin": 14385,
											"end": 14424,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 14385,
											"end": 14424,
											"name": "tag",
											"source": 13,
											"value": "487"
										},
										{
											"begin": 14385,
											"end": 14424,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 14446,
											"end": 14537,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "488"
										},
										{
											"begin": 14495,
											"end": 14536,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "489"
										},
										{
											"begin": 14519,
											"end": 14535,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 14495,
											"end": 14536,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "306"
										},
										{
											"begin": 14495,
											"end": 14536,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 14495,
											"end": 14536,
											"name": "tag",
											"source": 13,
											"value": "489"
										},
										{
											"begin": 14495,
											"end": 14536,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 14487,
											"end": 14493,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 14480,
											"end": 14484,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 14474,
											"end": 14485,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 14446,
											"end": 14537,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "303"
										},
										{
											"begin": 14446,
											"end": 14537,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 14446,
											"end": 14537,
											"name": "tag",
											"source": 13,
											"value": "488"
										},
										{
											"begin": 14446,
											"end": 14537,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 14440,
											"end": 14444,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 14433,
											"end": 14538,
											"name": "SSTORE",
											"source": 13
										},
										{
											"begin": 14351,
											"end": 14544,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 14275,
											"end": 14544,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 14275,
											"end": 14544,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 14275,
											"end": 14544,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 14275,
											"end": 14544,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 14550,
											"end": 14623,
											"name": "tag",
											"source": 13,
											"value": "308"
										},
										{
											"begin": 14550,
											"end": 14623,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 14595,
											"end": 14598,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 14550,
											"end": 14623,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 14550,
											"end": 14623,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 14629,
											"end": 14818,
											"name": "tag",
											"source": 13,
											"value": "309"
										},
										{
											"begin": 14629,
											"end": 14818,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 14706,
											"end": 14738,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "492"
										},
										{
											"begin": 14706,
											"end": 14738,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "308"
										},
										{
											"begin": 14706,
											"end": 14738,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 14706,
											"end": 14738,
											"name": "tag",
											"source": 13,
											"value": "492"
										},
										{
											"begin": 14706,
											"end": 14738,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 14747,
											"end": 14812,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "493"
										},
										{
											"begin": 14805,
											"end": 14811,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 14797,
											"end": 14803,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 14791,
											"end": 14795,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 14747,
											"end": 14812,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "307"
										},
										{
											"begin": 14747,
											"end": 14812,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 14747,
											"end": 14812,
											"name": "tag",
											"source": 13,
											"value": "493"
										},
										{
											"begin": 14747,
											"end": 14812,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 14682,
											"end": 14818,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 14629,
											"end": 14818,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 14629,
											"end": 14818,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 14629,
											"end": 14818,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 14824,
											"end": 15010,
											"name": "tag",
											"source": 13,
											"value": "310"
										},
										{
											"begin": 14824,
											"end": 15010,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 14884,
											"end": 15004,
											"name": "tag",
											"source": 13,
											"value": "495"
										},
										{
											"begin": 14884,
											"end": 15004,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 14901,
											"end": 14904,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 14894,
											"end": 14899,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 14891,
											"end": 14905,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 14884,
											"end": 15004,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 14884,
											"end": 15004,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "497"
										},
										{
											"begin": 14884,
											"end": 15004,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 14955,
											"end": 14994,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "498"
										},
										{
											"begin": 14992,
											"end": 14993,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 14985,
											"end": 14990,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 14955,
											"end": 14994,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "309"
										},
										{
											"begin": 14955,
											"end": 14994,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 14955,
											"end": 14994,
											"name": "tag",
											"source": 13,
											"value": "498"
										},
										{
											"begin": 14955,
											"end": 14994,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 14928,
											"end": 14929,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 14921,
											"end": 14926,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 14917,
											"end": 14930,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 14908,
											"end": 14930,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 14908,
											"end": 14930,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 14884,
											"end": 15004,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "495"
										},
										{
											"begin": 14884,
											"end": 15004,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 14884,
											"end": 15004,
											"name": "tag",
											"source": 13,
											"value": "497"
										},
										{
											"begin": 14884,
											"end": 15004,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 14824,
											"end": 15010,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 14824,
											"end": 15010,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 14824,
											"end": 15010,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 15016,
											"end": 15559,
											"name": "tag",
											"source": 13,
											"value": "311"
										},
										{
											"begin": 15016,
											"end": 15559,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 15117,
											"end": 15119,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 15112,
											"end": 15115,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 15109,
											"end": 15120,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 15106,
											"end": 15552,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 15106,
											"end": 15552,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "500"
										},
										{
											"begin": 15106,
											"end": 15552,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 15151,
											"end": 15189,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "501"
										},
										{
											"begin": 15183,
											"end": 15188,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 15151,
											"end": 15189,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "300"
										},
										{
											"begin": 15151,
											"end": 15189,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 15151,
											"end": 15189,
											"name": "tag",
											"source": 13,
											"value": "501"
										},
										{
											"begin": 15151,
											"end": 15189,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 15235,
											"end": 15264,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "502"
										},
										{
											"begin": 15253,
											"end": 15263,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 15235,
											"end": 15264,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "301"
										},
										{
											"begin": 15235,
											"end": 15264,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 15235,
											"end": 15264,
											"name": "tag",
											"source": 13,
											"value": "502"
										},
										{
											"begin": 15235,
											"end": 15264,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 15225,
											"end": 15233,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 15221,
											"end": 15265,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 15418,
											"end": 15420,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 15406,
											"end": 15416,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 15403,
											"end": 15421,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 15400,
											"end": 15449,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 15400,
											"end": 15449,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "503"
										},
										{
											"begin": 15400,
											"end": 15449,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 15439,
											"end": 15447,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 15424,
											"end": 15447,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 15424,
											"end": 15447,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 15400,
											"end": 15449,
											"name": "tag",
											"source": 13,
											"value": "503"
										},
										{
											"begin": 15400,
											"end": 15449,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 15462,
											"end": 15542,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "504"
										},
										{
											"begin": 15518,
											"end": 15540,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "505"
										},
										{
											"begin": 15536,
											"end": 15539,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 15518,
											"end": 15540,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "301"
										},
										{
											"begin": 15518,
											"end": 15540,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 15518,
											"end": 15540,
											"name": "tag",
											"source": 13,
											"value": "505"
										},
										{
											"begin": 15518,
											"end": 15540,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 15508,
											"end": 15516,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 15504,
											"end": 15541,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 15491,
											"end": 15502,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 15462,
											"end": 15542,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "310"
										},
										{
											"begin": 15462,
											"end": 15542,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 15462,
											"end": 15542,
											"name": "tag",
											"source": 13,
											"value": "504"
										},
										{
											"begin": 15462,
											"end": 15542,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 15121,
											"end": 15552,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 15121,
											"end": 15552,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 15106,
											"end": 15552,
											"name": "tag",
											"source": 13,
											"value": "500"
										},
										{
											"begin": 15106,
											"end": 15552,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 15016,
											"end": 15559,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 15016,
											"end": 15559,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 15016,
											"end": 15559,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 15016,
											"end": 15559,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 15565,
											"end": 15682,
											"name": "tag",
											"source": 13,
											"value": "312"
										},
										{
											"begin": 15565,
											"end": 15682,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 15619,
											"end": 15627,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 15669,
											"end": 15674,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 15663,
											"end": 15667,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 15659,
											"end": 15675,
											"name": "SHR",
											"source": 13
										},
										{
											"begin": 15638,
											"end": 15675,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 15638,
											"end": 15675,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 15565,
											"end": 15682,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 15565,
											"end": 15682,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 15565,
											"end": 15682,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 15565,
											"end": 15682,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 15565,
											"end": 15682,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 15688,
											"end": 15857,
											"name": "tag",
											"source": 13,
											"value": "313"
										},
										{
											"begin": 15688,
											"end": 15857,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 15732,
											"end": 15738,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 15765,
											"end": 15816,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "508"
										},
										{
											"begin": 15813,
											"end": 15814,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 15809,
											"end": 15815,
											"name": "NOT",
											"source": 13
										},
										{
											"begin": 15801,
											"end": 15806,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 15798,
											"end": 15799,
											"name": "PUSH",
											"source": 13,
											"value": "8"
										},
										{
											"begin": 15794,
											"end": 15807,
											"name": "MUL",
											"source": 13
										},
										{
											"begin": 15765,
											"end": 15816,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "312"
										},
										{
											"begin": 15765,
											"end": 15816,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 15765,
											"end": 15816,
											"name": "tag",
											"source": 13,
											"value": "508"
										},
										{
											"begin": 15765,
											"end": 15816,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 15761,
											"end": 15817,
											"name": "NOT",
											"source": 13
										},
										{
											"begin": 15846,
											"end": 15850,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 15840,
											"end": 15844,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 15836,
											"end": 15851,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 15826,
											"end": 15851,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 15826,
											"end": 15851,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 15739,
											"end": 15857,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 15688,
											"end": 15857,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 15688,
											"end": 15857,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 15688,
											"end": 15857,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 15688,
											"end": 15857,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 15688,
											"end": 15857,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 15862,
											"end": 16157,
											"name": "tag",
											"source": 13,
											"value": "314"
										},
										{
											"begin": 15862,
											"end": 16157,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 15938,
											"end": 15942,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 16084,
											"end": 16113,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "510"
										},
										{
											"begin": 16109,
											"end": 16112,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 16103,
											"end": 16107,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 16084,
											"end": 16113,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "313"
										},
										{
											"begin": 16084,
											"end": 16113,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 16084,
											"end": 16113,
											"name": "tag",
											"source": 13,
											"value": "510"
										},
										{
											"begin": 16084,
											"end": 16113,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 16076,
											"end": 16113,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 16076,
											"end": 16113,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 16146,
											"end": 16149,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 16143,
											"end": 16144,
											"name": "PUSH",
											"source": 13,
											"value": "2"
										},
										{
											"begin": 16139,
											"end": 16150,
											"name": "MUL",
											"source": 13
										},
										{
											"begin": 16133,
											"end": 16137,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 16130,
											"end": 16151,
											"name": "OR",
											"source": 13
										},
										{
											"begin": 16122,
											"end": 16151,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 16122,
											"end": 16151,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 15862,
											"end": 16157,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 15862,
											"end": 16157,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 15862,
											"end": 16157,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 15862,
											"end": 16157,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 15862,
											"end": 16157,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 16162,
											"end": 17557,
											"name": "tag",
											"source": 13,
											"value": "141"
										},
										{
											"begin": 16162,
											"end": 17557,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 16279,
											"end": 16316,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "512"
										},
										{
											"begin": 16312,
											"end": 16315,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 16279,
											"end": 16316,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "278"
										},
										{
											"begin": 16279,
											"end": 16316,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 16279,
											"end": 16316,
											"name": "tag",
											"source": 13,
											"value": "512"
										},
										{
											"begin": 16279,
											"end": 16316,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 16381,
											"end": 16399,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16373,
											"end": 16379,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 16370,
											"end": 16400,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 16367,
											"end": 16423,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 16367,
											"end": 16423,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "513"
										},
										{
											"begin": 16367,
											"end": 16423,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 16403,
											"end": 16421,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "514"
										},
										{
											"begin": 16403,
											"end": 16421,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "286"
										},
										{
											"begin": 16403,
											"end": 16421,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 16403,
											"end": 16421,
											"name": "tag",
											"source": 13,
											"value": "514"
										},
										{
											"begin": 16403,
											"end": 16421,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 16367,
											"end": 16423,
											"name": "tag",
											"source": 13,
											"value": "513"
										},
										{
											"begin": 16367,
											"end": 16423,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 16447,
											"end": 16485,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "515"
										},
										{
											"begin": 16479,
											"end": 16483,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 16473,
											"end": 16484,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 16447,
											"end": 16485,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "124"
										},
										{
											"begin": 16447,
											"end": 16485,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 16447,
											"end": 16485,
											"name": "tag",
											"source": 13,
											"value": "515"
										},
										{
											"begin": 16447,
											"end": 16485,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 16532,
											"end": 16599,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "516"
										},
										{
											"begin": 16592,
											"end": 16598,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 16584,
											"end": 16590,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 16578,
											"end": 16582,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 16532,
											"end": 16599,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "311"
										},
										{
											"begin": 16532,
											"end": 16599,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 16532,
											"end": 16599,
											"name": "tag",
											"source": 13,
											"value": "516"
										},
										{
											"begin": 16532,
											"end": 16599,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 16626,
											"end": 16627,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 16650,
											"end": 16654,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 16637,
											"end": 16654,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 16637,
											"end": 16654,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 16682,
											"end": 16684,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 16674,
											"end": 16680,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 16671,
											"end": 16685,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 16699,
											"end": 16700,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 16694,
											"end": 17312,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 16694,
											"end": 17312,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 16694,
											"end": 17312,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "518"
										},
										{
											"begin": 16694,
											"end": 17312,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 17356,
											"end": 17357,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 17373,
											"end": 17379,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 17370,
											"end": 17447,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 17370,
											"end": 17447,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "519"
										},
										{
											"begin": 17370,
											"end": 17447,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 17422,
											"end": 17431,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 17417,
											"end": 17420,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 17413,
											"end": 17432,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 17407,
											"end": 17433,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 17398,
											"end": 17433,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 17398,
											"end": 17433,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 17370,
											"end": 17447,
											"name": "tag",
											"source": 13,
											"value": "519"
										},
										{
											"begin": 17370,
											"end": 17447,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 17473,
											"end": 17540,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "520"
										},
										{
											"begin": 17533,
											"end": 17539,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 17526,
											"end": 17531,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 17473,
											"end": 17540,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "314"
										},
										{
											"begin": 17473,
											"end": 17540,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 17473,
											"end": 17540,
											"name": "tag",
											"source": 13,
											"value": "520"
										},
										{
											"begin": 17473,
											"end": 17540,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 17467,
											"end": 17471,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 17460,
											"end": 17541,
											"name": "SSTORE",
											"source": 13
										},
										{
											"begin": 17329,
											"end": 17551,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 16664,
											"end": 17551,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "517"
										},
										{
											"begin": 16664,
											"end": 17551,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 16694,
											"end": 17312,
											"name": "tag",
											"source": 13,
											"value": "518"
										},
										{
											"begin": 16694,
											"end": 17312,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 16746,
											"end": 16750,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 16742,
											"end": 16751,
											"name": "NOT",
											"source": 13
										},
										{
											"begin": 16734,
											"end": 16740,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 16730,
											"end": 16752,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 16780,
											"end": 16817,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "521"
										},
										{
											"begin": 16812,
											"end": 16816,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 16780,
											"end": 16817,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "300"
										},
										{
											"begin": 16780,
											"end": 16817,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 16780,
											"end": 16817,
											"name": "tag",
											"source": 13,
											"value": "521"
										},
										{
											"begin": 16780,
											"end": 16817,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 16839,
											"end": 16840,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 16853,
											"end": 17061,
											"name": "tag",
											"source": 13,
											"value": "522"
										},
										{
											"begin": 16853,
											"end": 17061,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 16867,
											"end": 16874,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 16864,
											"end": 16865,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 16861,
											"end": 16875,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 16853,
											"end": 17061,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 16853,
											"end": 17061,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "524"
										},
										{
											"begin": 16853,
											"end": 17061,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 16946,
											"end": 16955,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 16941,
											"end": 16944,
											"name": "DUP10",
											"source": 13
										},
										{
											"begin": 16937,
											"end": 16956,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 16931,
											"end": 16957,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 16923,
											"end": 16929,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 16916,
											"end": 16958,
											"name": "SSTORE",
											"source": 13
										},
										{
											"begin": 16997,
											"end": 16998,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 16989,
											"end": 16995,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 16985,
											"end": 16999,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 16975,
											"end": 16999,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 16975,
											"end": 16999,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 17044,
											"end": 17046,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 17033,
											"end": 17042,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 17029,
											"end": 17047,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 17016,
											"end": 17047,
											"name": "SWAP5",
											"source": 13
										},
										{
											"begin": 17016,
											"end": 17047,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 16890,
											"end": 16894,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 16887,
											"end": 16888,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 16883,
											"end": 16895,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 16878,
											"end": 16895,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 16878,
											"end": 16895,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 16853,
											"end": 17061,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "522"
										},
										{
											"begin": 16853,
											"end": 17061,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 16853,
											"end": 17061,
											"name": "tag",
											"source": 13,
											"value": "524"
										},
										{
											"begin": 16853,
											"end": 17061,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 17089,
											"end": 17095,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 17080,
											"end": 17087,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 17077,
											"end": 17096,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 17074,
											"end": 17253,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 17074,
											"end": 17253,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "525"
										},
										{
											"begin": 17074,
											"end": 17253,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 17147,
											"end": 17156,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 17142,
											"end": 17145,
											"name": "DUP10",
											"source": 13
										},
										{
											"begin": 17138,
											"end": 17157,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 17132,
											"end": 17158,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 17190,
											"end": 17238,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "526"
										},
										{
											"begin": 17232,
											"end": 17236,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 17224,
											"end": 17230,
											"name": "DUP10",
											"source": 13
										},
										{
											"begin": 17220,
											"end": 17237,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 17209,
											"end": 17218,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 17190,
											"end": 17238,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "313"
										},
										{
											"begin": 17190,
											"end": 17238,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 17190,
											"end": 17238,
											"name": "tag",
											"source": 13,
											"value": "526"
										},
										{
											"begin": 17190,
											"end": 17238,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 17182,
											"end": 17188,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 17175,
											"end": 17239,
											"name": "SSTORE",
											"source": 13
										},
										{
											"begin": 17097,
											"end": 17253,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 17074,
											"end": 17253,
											"name": "tag",
											"source": 13,
											"value": "525"
										},
										{
											"begin": 17074,
											"end": 17253,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 17299,
											"end": 17300,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 17295,
											"end": 17296,
											"name": "PUSH",
											"source": 13,
											"value": "2"
										},
										{
											"begin": 17287,
											"end": 17293,
											"name": "DUP9",
											"source": 13
										},
										{
											"begin": 17283,
											"end": 17297,
											"name": "MUL",
											"source": 13
										},
										{
											"begin": 17279,
											"end": 17301,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 17273,
											"end": 17277,
											"name": "DUP9",
											"source": 13
										},
										{
											"begin": 17266,
											"end": 17302,
											"name": "SSTORE",
											"source": 13
										},
										{
											"begin": 16701,
											"end": 17312,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 16701,
											"end": 17312,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 16701,
											"end": 17312,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 16664,
											"end": 17551,
											"name": "tag",
											"source": 13,
											"value": "517"
										},
										{
											"begin": 16664,
											"end": 17551,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 16664,
											"end": 17551,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 16254,
											"end": 17557,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 16254,
											"end": 17557,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 16254,
											"end": 17557,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 16162,
											"end": 17557,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 16162,
											"end": 17557,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 16162,
											"end": 17557,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 17563,
											"end": 17743,
											"name": "tag",
											"source": 13,
											"value": "315"
										},
										{
											"begin": 17563,
											"end": 17743,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 17611,
											"end": 17688,
											"name": "PUSH",
											"source": 13,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 17608,
											"end": 17609,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 17601,
											"end": 17689,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 17708,
											"end": 17712,
											"name": "PUSH",
											"source": 13,
											"value": "11"
										},
										{
											"begin": 17705,
											"end": 17706,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 17698,
											"end": 17713,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 17732,
											"end": 17736,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 17729,
											"end": 17730,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 17722,
											"end": 17737,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 17749,
											"end": 17940,
											"name": "tag",
											"source": 13,
											"value": "145"
										},
										{
											"begin": 17749,
											"end": 17940,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 17789,
											"end": 17792,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 17808,
											"end": 17828,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "529"
										},
										{
											"begin": 17826,
											"end": 17827,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 17808,
											"end": 17828,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "270"
										},
										{
											"begin": 17808,
											"end": 17828,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 17808,
											"end": 17828,
											"name": "tag",
											"source": 13,
											"value": "529"
										},
										{
											"begin": 17808,
											"end": 17828,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 17803,
											"end": 17828,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 17803,
											"end": 17828,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 17842,
											"end": 17862,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "530"
										},
										{
											"begin": 17860,
											"end": 17861,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 17842,
											"end": 17862,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "270"
										},
										{
											"begin": 17842,
											"end": 17862,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 17842,
											"end": 17862,
											"name": "tag",
											"source": 13,
											"value": "530"
										},
										{
											"begin": 17842,
											"end": 17862,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 17837,
											"end": 17862,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 17837,
											"end": 17862,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 17885,
											"end": 17886,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 17882,
											"end": 17883,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 17878,
											"end": 17887,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 17871,
											"end": 17887,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 17871,
											"end": 17887,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 17906,
											"end": 17909,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 17903,
											"end": 17904,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 17900,
											"end": 17910,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 17897,
											"end": 17933,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 17897,
											"end": 17933,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "531"
										},
										{
											"begin": 17897,
											"end": 17933,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 17913,
											"end": 17931,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "532"
										},
										{
											"begin": 17913,
											"end": 17931,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "315"
										},
										{
											"begin": 17913,
											"end": 17931,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 17913,
											"end": 17931,
											"name": "tag",
											"source": 13,
											"value": "532"
										},
										{
											"begin": 17913,
											"end": 17931,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 17897,
											"end": 17933,
											"name": "tag",
											"source": 13,
											"value": "531"
										},
										{
											"begin": 17897,
											"end": 17933,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 17749,
											"end": 17940,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 17749,
											"end": 17940,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 17749,
											"end": 17940,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 17749,
											"end": 17940,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 17749,
											"end": 17940,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 17946,
											"end": 18388,
											"name": "tag",
											"source": 13,
											"value": "154"
										},
										{
											"begin": 17946,
											"end": 18388,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 18095,
											"end": 18099,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 18133,
											"end": 18135,
											"name": "PUSH",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 18122,
											"end": 18131,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 18118,
											"end": 18136,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 18110,
											"end": 18136,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 18110,
											"end": 18136,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 18146,
											"end": 18217,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "534"
										},
										{
											"begin": 18214,
											"end": 18215,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 18203,
											"end": 18212,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 18199,
											"end": 18216,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 18190,
											"end": 18196,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 18146,
											"end": 18217,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "283"
										},
										{
											"begin": 18146,
											"end": 18217,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 18146,
											"end": 18217,
											"name": "tag",
											"source": 13,
											"value": "534"
										},
										{
											"begin": 18146,
											"end": 18217,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 18227,
											"end": 18299,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "535"
										},
										{
											"begin": 18295,
											"end": 18297,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 18284,
											"end": 18293,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 18280,
											"end": 18298,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 18271,
											"end": 18277,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 18227,
											"end": 18299,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "295"
										},
										{
											"begin": 18227,
											"end": 18299,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 18227,
											"end": 18299,
											"name": "tag",
											"source": 13,
											"value": "535"
										},
										{
											"begin": 18227,
											"end": 18299,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 18309,
											"end": 18381,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "536"
										},
										{
											"begin": 18377,
											"end": 18379,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 18366,
											"end": 18375,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 18362,
											"end": 18380,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 18353,
											"end": 18359,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 18309,
											"end": 18381,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "283"
										},
										{
											"begin": 18309,
											"end": 18381,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 18309,
											"end": 18381,
											"name": "tag",
											"source": 13,
											"value": "536"
										},
										{
											"begin": 18309,
											"end": 18381,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 17946,
											"end": 18388,
											"name": "SWAP5",
											"source": 13
										},
										{
											"begin": 17946,
											"end": 18388,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 17946,
											"end": 18388,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 17946,
											"end": 18388,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 17946,
											"end": 18388,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 17946,
											"end": 18388,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 17946,
											"end": 18388,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 18394,
											"end": 18492,
											"name": "tag",
											"source": 13,
											"value": "316"
										},
										{
											"begin": 18394,
											"end": 18492,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 18445,
											"end": 18451,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 18479,
											"end": 18484,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 18473,
											"end": 18485,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 18463,
											"end": 18485,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 18463,
											"end": 18485,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 18394,
											"end": 18492,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 18394,
											"end": 18492,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 18394,
											"end": 18492,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 18394,
											"end": 18492,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 18498,
											"end": 18666,
											"name": "tag",
											"source": 13,
											"value": "317"
										},
										{
											"begin": 18498,
											"end": 18666,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 18581,
											"end": 18592,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 18615,
											"end": 18621,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 18610,
											"end": 18613,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 18603,
											"end": 18622,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 18655,
											"end": 18659,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 18650,
											"end": 18653,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 18646,
											"end": 18660,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 18631,
											"end": 18660,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 18631,
											"end": 18660,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 18498,
											"end": 18666,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 18498,
											"end": 18666,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 18498,
											"end": 18666,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 18498,
											"end": 18666,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 18498,
											"end": 18666,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 18672,
											"end": 19045,
											"name": "tag",
											"source": 13,
											"value": "318"
										},
										{
											"begin": 18672,
											"end": 19045,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 18758,
											"end": 18761,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 18786,
											"end": 18824,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "540"
										},
										{
											"begin": 18818,
											"end": 18823,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 18786,
											"end": 18824,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "316"
										},
										{
											"begin": 18786,
											"end": 18824,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 18786,
											"end": 18824,
											"name": "tag",
											"source": 13,
											"value": "540"
										},
										{
											"begin": 18786,
											"end": 18824,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 18840,
											"end": 18910,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "541"
										},
										{
											"begin": 18903,
											"end": 18909,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 18898,
											"end": 18901,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 18840,
											"end": 18910,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "317"
										},
										{
											"begin": 18840,
											"end": 18910,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 18840,
											"end": 18910,
											"name": "tag",
											"source": 13,
											"value": "541"
										},
										{
											"begin": 18840,
											"end": 18910,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 18833,
											"end": 18910,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 18833,
											"end": 18910,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 18919,
											"end": 18984,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "542"
										},
										{
											"begin": 18977,
											"end": 18983,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 18972,
											"end": 18975,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 18965,
											"end": 18969,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 18958,
											"end": 18963,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 18954,
											"end": 18970,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 18919,
											"end": 18984,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "280"
										},
										{
											"begin": 18919,
											"end": 18984,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 18919,
											"end": 18984,
											"name": "tag",
											"source": 13,
											"value": "542"
										},
										{
											"begin": 18919,
											"end": 18984,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 19009,
											"end": 19038,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "543"
										},
										{
											"begin": 19031,
											"end": 19037,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 19009,
											"end": 19038,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "281"
										},
										{
											"begin": 19009,
											"end": 19038,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 19009,
											"end": 19038,
											"name": "tag",
											"source": 13,
											"value": "543"
										},
										{
											"begin": 19009,
											"end": 19038,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 19004,
											"end": 19007,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 19000,
											"end": 19039,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 18993,
											"end": 19039,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 18993,
											"end": 19039,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 18762,
											"end": 19045,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 18672,
											"end": 19045,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 18672,
											"end": 19045,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 18672,
											"end": 19045,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 18672,
											"end": 19045,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 18672,
											"end": 19045,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 19051,
											"end": 19691,
											"name": "tag",
											"source": 13,
											"value": "222"
										},
										{
											"begin": 19051,
											"end": 19691,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 19246,
											"end": 19250,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 19284,
											"end": 19287,
											"name": "PUSH",
											"source": 13,
											"value": "80"
										},
										{
											"begin": 19273,
											"end": 19282,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 19269,
											"end": 19288,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 19261,
											"end": 19288,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 19261,
											"end": 19288,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 19298,
											"end": 19369,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "545"
										},
										{
											"begin": 19366,
											"end": 19367,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 19355,
											"end": 19364,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 19351,
											"end": 19368,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 19342,
											"end": 19348,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 19298,
											"end": 19369,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "283"
										},
										{
											"begin": 19298,
											"end": 19369,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 19298,
											"end": 19369,
											"name": "tag",
											"source": 13,
											"value": "545"
										},
										{
											"begin": 19298,
											"end": 19369,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 19379,
											"end": 19451,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "546"
										},
										{
											"begin": 19447,
											"end": 19449,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 19436,
											"end": 19445,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 19432,
											"end": 19450,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 19423,
											"end": 19429,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 19379,
											"end": 19451,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "283"
										},
										{
											"begin": 19379,
											"end": 19451,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 19379,
											"end": 19451,
											"name": "tag",
											"source": 13,
											"value": "546"
										},
										{
											"begin": 19379,
											"end": 19451,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 19461,
											"end": 19533,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "547"
										},
										{
											"begin": 19529,
											"end": 19531,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 19518,
											"end": 19527,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 19514,
											"end": 19532,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 19505,
											"end": 19511,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 19461,
											"end": 19533,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "295"
										},
										{
											"begin": 19461,
											"end": 19533,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 19461,
											"end": 19533,
											"name": "tag",
											"source": 13,
											"value": "547"
										},
										{
											"begin": 19461,
											"end": 19533,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 19580,
											"end": 19589,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 19574,
											"end": 19578,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 19570,
											"end": 19590,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 19565,
											"end": 19567,
											"name": "PUSH",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 19554,
											"end": 19563,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 19550,
											"end": 19568,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 19543,
											"end": 19591,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 19608,
											"end": 19684,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "548"
										},
										{
											"begin": 19679,
											"end": 19683,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 19670,
											"end": 19676,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 19608,
											"end": 19684,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "318"
										},
										{
											"begin": 19608,
											"end": 19684,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 19608,
											"end": 19684,
											"name": "tag",
											"source": 13,
											"value": "548"
										},
										{
											"begin": 19608,
											"end": 19684,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 19600,
											"end": 19684,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 19600,
											"end": 19684,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 19051,
											"end": 19691,
											"name": "SWAP6",
											"source": 13
										},
										{
											"begin": 19051,
											"end": 19691,
											"name": "SWAP5",
											"source": 13
										},
										{
											"begin": 19051,
											"end": 19691,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 19051,
											"end": 19691,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 19051,
											"end": 19691,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 19051,
											"end": 19691,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 19051,
											"end": 19691,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 19051,
											"end": 19691,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 19697,
											"end": 19838,
											"name": "tag",
											"source": 13,
											"value": "319"
										},
										{
											"begin": 19697,
											"end": 19838,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 19753,
											"end": 19758,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 19784,
											"end": 19790,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 19778,
											"end": 19791,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 19769,
											"end": 19791,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 19769,
											"end": 19791,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 19800,
											"end": 19832,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "550"
										},
										{
											"begin": 19826,
											"end": 19831,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 19800,
											"end": 19832,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "274"
										},
										{
											"begin": 19800,
											"end": 19832,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 19800,
											"end": 19832,
											"name": "tag",
											"source": 13,
											"value": "550"
										},
										{
											"begin": 19800,
											"end": 19832,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 19697,
											"end": 19838,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 19697,
											"end": 19838,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 19697,
											"end": 19838,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 19697,
											"end": 19838,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 19697,
											"end": 19838,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 19844,
											"end": 20193,
											"name": "tag",
											"source": 13,
											"value": "225"
										},
										{
											"begin": 19844,
											"end": 20193,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 19913,
											"end": 19919,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 19962,
											"end": 19964,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 19950,
											"end": 19959,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 19941,
											"end": 19948,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 19937,
											"end": 19960,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 19933,
											"end": 19965,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 19930,
											"end": 20049,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 19930,
											"end": 20049,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "552"
										},
										{
											"begin": 19930,
											"end": 20049,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 19968,
											"end": 20047,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "553"
										},
										{
											"begin": 19968,
											"end": 20047,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "264"
										},
										{
											"begin": 19968,
											"end": 20047,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 19968,
											"end": 20047,
											"name": "tag",
											"source": 13,
											"value": "553"
										},
										{
											"begin": 19968,
											"end": 20047,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 19930,
											"end": 20049,
											"name": "tag",
											"source": 13,
											"value": "552"
										},
										{
											"begin": 19930,
											"end": 20049,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 20088,
											"end": 20089,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 20113,
											"end": 20176,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "554"
										},
										{
											"begin": 20168,
											"end": 20175,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 20159,
											"end": 20165,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 20148,
											"end": 20157,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 20144,
											"end": 20166,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 20113,
											"end": 20176,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "319"
										},
										{
											"begin": 20113,
											"end": 20176,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 20113,
											"end": 20176,
											"name": "tag",
											"source": 13,
											"value": "554"
										},
										{
											"begin": 20113,
											"end": 20176,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 20103,
											"end": 20176,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 20103,
											"end": 20176,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 20059,
											"end": 20186,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 19844,
											"end": 20193,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 19844,
											"end": 20193,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 19844,
											"end": 20193,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 19844,
											"end": 20193,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 19844,
											"end": 20193,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 20199,
											"end": 20531,
											"name": "tag",
											"source": 13,
											"value": "256"
										},
										{
											"begin": 20199,
											"end": 20531,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 20320,
											"end": 20324,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 20358,
											"end": 20360,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 20347,
											"end": 20356,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 20343,
											"end": 20361,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 20335,
											"end": 20361,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 20335,
											"end": 20361,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 20371,
											"end": 20442,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "556"
										},
										{
											"begin": 20439,
											"end": 20440,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 20428,
											"end": 20437,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 20424,
											"end": 20441,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 20415,
											"end": 20421,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 20371,
											"end": 20442,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "283"
										},
										{
											"begin": 20371,
											"end": 20442,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 20371,
											"end": 20442,
											"name": "tag",
											"source": 13,
											"value": "556"
										},
										{
											"begin": 20371,
											"end": 20442,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 20452,
											"end": 20524,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "557"
										},
										{
											"begin": 20520,
											"end": 20522,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 20509,
											"end": 20518,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 20505,
											"end": 20523,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 20496,
											"end": 20502,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 20452,
											"end": 20524,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "295"
										},
										{
											"begin": 20452,
											"end": 20524,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 20452,
											"end": 20524,
											"name": "tag",
											"source": 13,
											"value": "557"
										},
										{
											"begin": 20452,
											"end": 20524,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 20199,
											"end": 20531,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 20199,
											"end": 20531,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 20199,
											"end": 20531,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 20199,
											"end": 20531,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 20199,
											"end": 20531,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 20199,
											"end": 20531,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										}
									]
								}
							},
							"sourceList": [
								"contracts/myNFT.sol",
								"contracts/saleNFT.sol",
								"main/node_modules/@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"main/node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol",
								"main/node_modules/@openzeppelin/contracts/token/ERC721/IERC721.sol",
								"main/node_modules/@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
								"main/node_modules/@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
								"main/node_modules/@openzeppelin/contracts/utils/Context.sol",
								"main/node_modules/@openzeppelin/contracts/utils/Strings.sol",
								"main/node_modules/@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"main/node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"main/node_modules/@openzeppelin/contracts/utils/math/Math.sol",
								"main/node_modules/@openzeppelin/contracts/utils/math/SignedMath.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"getOwnerOf(uint256)": "83638710",
							"getTotalSupply()": "c4e41b22",
							"isApprovedForAll(address,address)": "e985e9c5",
							"minting(string)": "0bdc9008",
							"name()": "06fdde03",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setAppAll(address,address,bool)": "29d6724e",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"symbol()": "95d89b41",
							"tokenURI(uint256)": "c87b56dd",
							"transferFrom(address,address,uint256)": "23b872dd",
							"transferFrom(address,uint256)": "01c6adc3"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_symbol\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getOwnerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTotalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"tokenURI\",\"type\":\"string\"}],\"name\":\"minting\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setAppAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"See {IERC721-approve}.\"},\"balanceOf(address)\":{\"details\":\"See {IERC721-balanceOf}.\"},\"getApproved(uint256)\":{\"details\":\"See {IERC721-getApproved}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC721-isApprovedForAll}.\"},\"name()\":{\"details\":\"See {IERC721Metadata-name}.\"},\"ownerOf(uint256)\":{\"details\":\"See {IERC721-ownerOf}.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC721-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"symbol()\":{\"details\":\"See {IERC721Metadata-symbol}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-transferFrom}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/myNFT.sol\":\"MyNFT\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/myNFT.sol\":{\"keccak256\":\"0x5d8026465cdb76ecb80000c262ce22d6de60a22f98d417ab1cb9a3c5b110d386\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b18505c3fd19a744a377c2dcb7b734bd6618e89035fbf414c46e98174d462d76\",\"dweb:/ipfs/QmfGbLvH6qE5k7uyH4XR47EUGrtSx5wj3J3ncMkAR44Koz\"]},\"main/node_modules/@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"main/node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0x13dd061770956c8489b80cfc89d9cdfc8ea2783d953691ea037a380731d52784\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ed37f0f86e7fe31659e48c3a2a5920a92dd7f13c85cf8991fb79fe5f01e08efd\",\"dweb:/ipfs/QmUtm9bQGvjr9hHGwkPWrbgFmVqzaJcxjkaYDex2oGsonS\"]},\"main/node_modules/@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5ef46daa3b58ef2702279d514780316efaa952915ee1aa3396f041ee2982b0b4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2f8f2a76e23b02fc69e8cd24c3cb47da6c7af3a2d6c3a382f8ac25c6e094ade7\",\"dweb:/ipfs/QmPV4ZS4tPVv4mTCf9ejyZ1ai57EEibDRj7mN2ARDCLV5n\"]},\"main/node_modules/@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0x7f7a26306c79a65fb8b3b6c757cd74660c532cd8a02e165488e30027dd34ca49\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d01e0b2b837ee2f628545e54d8715b49c7ef2befd08356c2e7f6c50dde8a1c22\",\"dweb:/ipfs/QmWBAn6y2D1xgftci97Z3qR9tQnkvwQpYwFwkTvDMvqU4i\"]},\"main/node_modules/@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x37d1aaaa5a2908a09e9dcf56a26ddf762ecf295afb5964695937344fc6802ce1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ed0bfc1b92153c5000e50f4021367b931bbe96372ac6facec3c4961b72053d02\",\"dweb:/ipfs/Qmbwp8VDerjS5SV1quwHH1oMXxPQ93fzfLVqJ2RCqbowGE\"]},\"main/node_modules/@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x75a4ee64c68dbd5f38bddd06e664a64c8271b4caa554fb6f0607dfd672bb4bf3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0c4e6cb30d3601e2f7af5af09e265508147cb275a8dcd99d6f7363645cc56867\",\"dweb:/ipfs/QmNgFkoXNWoUbAyw71rr1sKQ95Rj2GfvYiWg79xEYDn2NY\"]},\"main/node_modules/@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x55f102ea785d8399c0e58d1108e2d289506dde18abc6db1b7f68c1f9f9bc5792\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e52e0a7765c943ef14e5bcf11e46e6139fa044be564881378349236bf2e3453\",\"dweb:/ipfs/QmZEeeXoFPW47amyP35gfzomF9DixqqTEPwzBakv6cZw6i\"]},\"main/node_modules/@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x9e8778b14317ba9e256c30a76fd6c32b960af621987f56069e1e819c77c6a133\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1777404f1dcd0fac188e55a288724ec3c67b45288e49cc64723e95e702b49ab8\",\"dweb:/ipfs/QmZFdC626GButBApwDUvvTnUzdinevC3B24d7yyh57XkiA\"]},\"main/node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]},\"main/node_modules/@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]},\"main/node_modules/@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 352,
								"contract": "contracts/myNFT.sol:MyNFT",
								"label": "_name",
								"offset": 0,
								"slot": "0",
								"type": "t_string_storage"
							},
							{
								"astId": 354,
								"contract": "contracts/myNFT.sol:MyNFT",
								"label": "_symbol",
								"offset": 0,
								"slot": "1",
								"type": "t_string_storage"
							},
							{
								"astId": 358,
								"contract": "contracts/myNFT.sol:MyNFT",
								"label": "_owners",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_uint256,t_address)"
							},
							{
								"astId": 362,
								"contract": "contracts/myNFT.sol:MyNFT",
								"label": "_balances",
								"offset": 0,
								"slot": "3",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 366,
								"contract": "contracts/myNFT.sol:MyNFT",
								"label": "_tokenApprovals",
								"offset": 0,
								"slot": "4",
								"type": "t_mapping(t_uint256,t_address)"
							},
							{
								"astId": 372,
								"contract": "contracts/myNFT.sol:MyNFT",
								"label": "_operatorApprovals",
								"offset": 0,
								"slot": "5",
								"type": "t_mapping(t_address,t_mapping(t_address,t_bool))"
							},
							{
								"astId": 20,
								"contract": "contracts/myNFT.sol:MyNFT",
								"label": "_tokenURIs",
								"offset": 0,
								"slot": "6",
								"type": "t_mapping(t_uint256,t_string_storage)"
							},
							{
								"astId": 23,
								"contract": "contracts/myNFT.sol:MyNFT",
								"label": "totalSupply",
								"offset": 0,
								"slot": "7",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_bool))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => bool))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_bool)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_uint256,t_address)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => address)",
								"numberOfBytes": "32",
								"value": "t_address"
							},
							"t_mapping(t_uint256,t_string_storage)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => string)",
								"numberOfBytes": "32",
								"value": "t_string_storage"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/saleNFT.sol": {
				"SaleNFT": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_nftCA",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [],
							"name": "_nft",
							"outputs": [
								{
									"internalType": "contract MyNFT",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "url",
									"type": "string"
								}
							],
							"name": "_saleNFTmint",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "salesNFT",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/saleNFT.sol\":86:1823  contract SaleNFT {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/saleNFT.sol\":384:501  constructor(address _nftCA){... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"contracts/saleNFT.sol\":435:441  _nftCA */\n  dup1\n    /* \"contracts/saleNFT.sol\":422:426  _nft */\n  0x00\n  dup1\n    /* \"contracts/saleNFT.sol\":422:442  _nft = MyNFT(_nftCA) */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/saleNFT.sol\":384:501  constructor(address _nftCA){... */\n  pop\n    /* \"contracts/saleNFT.sol\":86:1823  contract SaleNFT {... */\n  jump(tag_6)\n    /* \"#utility.yul\":88:205   */\ntag_8:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  dup1\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":334:460   */\ntag_10:\n    /* \"#utility.yul\":371:378   */\n  0x00\n    /* \"#utility.yul\":411:453   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":404:409   */\n  dup3\n    /* \"#utility.yul\":400:454   */\n  and\n    /* \"#utility.yul\":389:454   */\n  swap1\n  pop\n    /* \"#utility.yul\":334:460   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":466:562   */\ntag_11:\n    /* \"#utility.yul\":503:510   */\n  0x00\n    /* \"#utility.yul\":532:556   */\n  tag_20\n    /* \"#utility.yul\":550:555   */\n  dup3\n    /* \"#utility.yul\":532:556   */\n  tag_10\n  jump\t// in\ntag_20:\n    /* \"#utility.yul\":521:556   */\n  swap1\n  pop\n    /* \"#utility.yul\":466:562   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":568:690   */\ntag_12:\n    /* \"#utility.yul\":641:665   */\n  tag_22\n    /* \"#utility.yul\":659:664   */\n  dup2\n    /* \"#utility.yul\":641:665   */\n  tag_11\n  jump\t// in\ntag_22:\n    /* \"#utility.yul\":634:639   */\n  dup2\n    /* \"#utility.yul\":631:666   */\n  eq\n    /* \"#utility.yul\":621:684   */\n  tag_23\n  jumpi\n    /* \"#utility.yul\":680:681   */\n  0x00\n    /* \"#utility.yul\":677:678   */\n  dup1\n    /* \"#utility.yul\":670:682   */\n  revert\n    /* \"#utility.yul\":621:684   */\ntag_23:\n    /* \"#utility.yul\":568:690   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":696:839   */\ntag_13:\n    /* \"#utility.yul\":753:758   */\n  0x00\n    /* \"#utility.yul\":784:790   */\n  dup2\n    /* \"#utility.yul\":778:791   */\n  mload\n    /* \"#utility.yul\":769:791   */\n  swap1\n  pop\n    /* \"#utility.yul\":800:833   */\n  tag_25\n    /* \"#utility.yul\":827:832   */\n  dup2\n    /* \"#utility.yul\":800:833   */\n  tag_12\n  jump\t// in\ntag_25:\n    /* \"#utility.yul\":696:839   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":845:1196   */\ntag_3:\n    /* \"#utility.yul\":915:921   */\n  0x00\n    /* \"#utility.yul\":964:966   */\n  0x20\n    /* \"#utility.yul\":952:961   */\n  dup3\n    /* \"#utility.yul\":943:950   */\n  dup5\n    /* \"#utility.yul\":939:962   */\n  sub\n    /* \"#utility.yul\":935:967   */\n  slt\n    /* \"#utility.yul\":932:1051   */\n  iszero\n  tag_27\n  jumpi\n    /* \"#utility.yul\":970:1049   */\n  tag_28\n  tag_8\n  jump\t// in\ntag_28:\n    /* \"#utility.yul\":932:1051   */\ntag_27:\n    /* \"#utility.yul\":1090:1091   */\n  0x00\n    /* \"#utility.yul\":1115:1179   */\n  tag_29\n    /* \"#utility.yul\":1171:1178   */\n  dup5\n    /* \"#utility.yul\":1162:1168   */\n  dup3\n    /* \"#utility.yul\":1151:1160   */\n  dup6\n    /* \"#utility.yul\":1147:1169   */\n  add\n    /* \"#utility.yul\":1115:1179   */\n  tag_13\n  jump\t// in\ntag_29:\n    /* \"#utility.yul\":1105:1179   */\n  swap2\n  pop\n    /* \"#utility.yul\":1061:1189   */\n  pop\n    /* \"#utility.yul\":845:1196   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"contracts/saleNFT.sol\":86:1823  contract SaleNFT {... */\ntag_6:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/saleNFT.sol\":86:1823  contract SaleNFT {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x6aa5e376\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x98300e18\n      eq\n      tag_4\n      jumpi\n      dup1\n      0xa15db9d0\n      eq\n      tag_5\n      jumpi\n      dup1\n      0xcc9562a5\n      eq\n      tag_6\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/saleNFT.sol\":1248:1369  function salesNFT() public view returns (bool) {... */\n    tag_3:\n      tag_7\n      tag_8\n      jump\t// in\n    tag_7:\n      mload(0x40)\n      tag_9\n      swap2\n      swap1\n      tag_10\n      jump\t// in\n    tag_9:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/saleNFT.sol\":294:311  MyNFT public _nft */\n    tag_4:\n      tag_11\n      tag_12\n      jump\t// in\n    tag_11:\n      mload(0x40)\n      tag_13\n      swap2\n      swap1\n      tag_14\n      jump\t// in\n    tag_13:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/saleNFT.sol\":509:654  function _saleNFTmint(string memory url) public {... */\n    tag_5:\n      tag_15\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_16\n      swap2\n      swap1\n      tag_17\n      jump\t// in\n    tag_16:\n      tag_18\n      jump\t// in\n    tag_15:\n      stop\n        /* \"contracts/saleNFT.sol\":835:1055  function setApprovalForAll() public {... */\n    tag_6:\n      tag_19\n      tag_20\n      jump\t// in\n    tag_19:\n      stop\n        /* \"contracts/saleNFT.sol\":1248:1369  function salesNFT() public view returns (bool) {... */\n    tag_8:\n        /* \"contracts/saleNFT.sol\":1289:1293  bool */\n      0x00\n        /* \"contracts/saleNFT.sol\":1313:1317  _nft */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/saleNFT.sol\":1313:1334  _nft.isApprovedForAll */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xe985e9c5\n        /* \"contracts/saleNFT.sol\":1335:1345  msg.sender */\n      caller\n        /* \"contracts/saleNFT.sol\":1355:1359  this */\n      address\n        /* \"contracts/saleNFT.sol\":1313:1361  _nft.isApprovedForAll(msg.sender, address(this)) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_22\n      swap3\n      swap2\n      swap1\n      tag_23\n      jump\t// in\n    tag_22:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_25\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_25:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_26\n      swap2\n      swap1\n      tag_27\n      jump\t// in\n    tag_26:\n        /* \"contracts/saleNFT.sol\":1306:1361  return _nft.isApprovedForAll(msg.sender, address(this)) */\n      swap1\n      pop\n        /* \"contracts/saleNFT.sol\":1248:1369  function salesNFT() public view returns (bool) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/saleNFT.sol\":294:311  MyNFT public _nft */\n    tag_12:\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/saleNFT.sol\":509:654  function _saleNFTmint(string memory url) public {... */\n    tag_18:\n        /* \"contracts/saleNFT.sol\":629:633  _nft */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/saleNFT.sol\":629:641  _nft.minting */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x0bdc9008\n        /* \"contracts/saleNFT.sol\":642:645  url */\n      dup3\n        /* \"contracts/saleNFT.sol\":629:646  _nft.minting(url) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_29\n      swap2\n      swap1\n      tag_30\n      jump\t// in\n    tag_29:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_31\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_31:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_33\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_33:\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/saleNFT.sol\":509:654  function _saleNFTmint(string memory url) public {... */\n      pop\n      jump\t// out\n        /* \"contracts/saleNFT.sol\":835:1055  function setApprovalForAll() public {... */\n    tag_20:\n        /* \"contracts/saleNFT.sol\":1000:1004  _nft */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/saleNFT.sol\":1000:1014  _nft.setAppAll */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x29d6724e\n        /* \"contracts/saleNFT.sol\":1015:1025  msg.sender */\n      caller\n        /* \"contracts/saleNFT.sol\":1035:1039  this */\n      address\n        /* \"contracts/saleNFT.sol\":1042:1046  true */\n      0x01\n        /* \"contracts/saleNFT.sol\":1000:1047  _nft.setAppAll(msg.sender, address(this), true) */\n      mload(0x40)\n      dup5\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_35\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_36\n      jump\t// in\n    tag_35:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_37\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_37:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_39\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_39:\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/saleNFT.sol\":835:1055  function setApprovalForAll() public {... */\n      jump\t// out\n        /* \"#utility.yul\":7:97   */\n    tag_40:\n        /* \"#utility.yul\":41:48   */\n      0x00\n        /* \"#utility.yul\":84:89   */\n      dup2\n        /* \"#utility.yul\":77:90   */\n      iszero\n        /* \"#utility.yul\":70:91   */\n      iszero\n        /* \"#utility.yul\":59:91   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:97   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":103:212   */\n    tag_41:\n        /* \"#utility.yul\":184:205   */\n      tag_72\n        /* \"#utility.yul\":199:204   */\n      dup2\n        /* \"#utility.yul\":184:205   */\n      tag_40\n      jump\t// in\n    tag_72:\n        /* \"#utility.yul\":179:182   */\n      dup3\n        /* \"#utility.yul\":172:206   */\n      mstore\n        /* \"#utility.yul\":103:212   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":218:428   */\n    tag_10:\n        /* \"#utility.yul\":305:309   */\n      0x00\n        /* \"#utility.yul\":343:345   */\n      0x20\n        /* \"#utility.yul\":332:341   */\n      dup3\n        /* \"#utility.yul\":328:346   */\n      add\n        /* \"#utility.yul\":320:346   */\n      swap1\n      pop\n        /* \"#utility.yul\":356:421   */\n      tag_74\n        /* \"#utility.yul\":418:419   */\n      0x00\n        /* \"#utility.yul\":407:416   */\n      dup4\n        /* \"#utility.yul\":403:420   */\n      add\n        /* \"#utility.yul\":394:400   */\n      dup5\n        /* \"#utility.yul\":356:421   */\n      tag_41\n      jump\t// in\n    tag_74:\n        /* \"#utility.yul\":218:428   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":434:560   */\n    tag_42:\n        /* \"#utility.yul\":471:478   */\n      0x00\n        /* \"#utility.yul\":511:553   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":504:509   */\n      dup3\n        /* \"#utility.yul\":500:554   */\n      and\n        /* \"#utility.yul\":489:554   */\n      swap1\n      pop\n        /* \"#utility.yul\":434:560   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":566:626   */\n    tag_43:\n        /* \"#utility.yul\":594:597   */\n      0x00\n        /* \"#utility.yul\":615:620   */\n      dup2\n        /* \"#utility.yul\":608:620   */\n      swap1\n      pop\n        /* \"#utility.yul\":566:626   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":632:774   */\n    tag_44:\n        /* \"#utility.yul\":682:691   */\n      0x00\n        /* \"#utility.yul\":715:768   */\n      tag_78\n        /* \"#utility.yul\":733:767   */\n      tag_79\n        /* \"#utility.yul\":742:766   */\n      tag_80\n        /* \"#utility.yul\":760:765   */\n      dup5\n        /* \"#utility.yul\":742:766   */\n      tag_42\n      jump\t// in\n    tag_80:\n        /* \"#utility.yul\":733:767   */\n      tag_43\n      jump\t// in\n    tag_79:\n        /* \"#utility.yul\":715:768   */\n      tag_42\n      jump\t// in\n    tag_78:\n        /* \"#utility.yul\":702:768   */\n      swap1\n      pop\n        /* \"#utility.yul\":632:774   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":780:906   */\n    tag_45:\n        /* \"#utility.yul\":830:839   */\n      0x00\n        /* \"#utility.yul\":863:900   */\n      tag_82\n        /* \"#utility.yul\":894:899   */\n      dup3\n        /* \"#utility.yul\":863:900   */\n      tag_44\n      jump\t// in\n    tag_82:\n        /* \"#utility.yul\":850:900   */\n      swap1\n      pop\n        /* \"#utility.yul\":780:906   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":912:1051   */\n    tag_46:\n        /* \"#utility.yul\":975:984   */\n      0x00\n        /* \"#utility.yul\":1008:1045   */\n      tag_84\n        /* \"#utility.yul\":1039:1044   */\n      dup3\n        /* \"#utility.yul\":1008:1045   */\n      tag_45\n      jump\t// in\n    tag_84:\n        /* \"#utility.yul\":995:1045   */\n      swap1\n      pop\n        /* \"#utility.yul\":912:1051   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1057:1214   */\n    tag_47:\n        /* \"#utility.yul\":1157:1207   */\n      tag_86\n        /* \"#utility.yul\":1201:1206   */\n      dup2\n        /* \"#utility.yul\":1157:1207   */\n      tag_46\n      jump\t// in\n    tag_86:\n        /* \"#utility.yul\":1152:1155   */\n      dup3\n        /* \"#utility.yul\":1145:1208   */\n      mstore\n        /* \"#utility.yul\":1057:1214   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1220:1468   */\n    tag_14:\n        /* \"#utility.yul\":1326:1330   */\n      0x00\n        /* \"#utility.yul\":1364:1366   */\n      0x20\n        /* \"#utility.yul\":1353:1362   */\n      dup3\n        /* \"#utility.yul\":1349:1367   */\n      add\n        /* \"#utility.yul\":1341:1367   */\n      swap1\n      pop\n        /* \"#utility.yul\":1377:1461   */\n      tag_88\n        /* \"#utility.yul\":1458:1459   */\n      0x00\n        /* \"#utility.yul\":1447:1456   */\n      dup4\n        /* \"#utility.yul\":1443:1460   */\n      add\n        /* \"#utility.yul\":1434:1440   */\n      dup5\n        /* \"#utility.yul\":1377:1461   */\n      tag_47\n      jump\t// in\n    tag_88:\n        /* \"#utility.yul\":1220:1468   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1474:1549   */\n    tag_48:\n        /* \"#utility.yul\":1507:1513   */\n      0x00\n        /* \"#utility.yul\":1540:1542   */\n      0x40\n        /* \"#utility.yul\":1534:1543   */\n      mload\n        /* \"#utility.yul\":1524:1543   */\n      swap1\n      pop\n        /* \"#utility.yul\":1474:1549   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":1555:1672   */\n    tag_49:\n        /* \"#utility.yul\":1664:1665   */\n      0x00\n        /* \"#utility.yul\":1661:1662   */\n      dup1\n        /* \"#utility.yul\":1654:1666   */\n      revert\n        /* \"#utility.yul\":1678:1795   */\n    tag_50:\n        /* \"#utility.yul\":1787:1788   */\n      0x00\n        /* \"#utility.yul\":1784:1785   */\n      dup1\n        /* \"#utility.yul\":1777:1789   */\n      revert\n        /* \"#utility.yul\":1801:1918   */\n    tag_51:\n        /* \"#utility.yul\":1910:1911   */\n      0x00\n        /* \"#utility.yul\":1907:1908   */\n      dup1\n        /* \"#utility.yul\":1900:1912   */\n      revert\n        /* \"#utility.yul\":1924:2041   */\n    tag_52:\n        /* \"#utility.yul\":2033:2034   */\n      0x00\n        /* \"#utility.yul\":2030:2031   */\n      dup1\n        /* \"#utility.yul\":2023:2035   */\n      revert\n        /* \"#utility.yul\":2047:2149   */\n    tag_53:\n        /* \"#utility.yul\":2088:2094   */\n      0x00\n        /* \"#utility.yul\":2139:2141   */\n      0x1f\n        /* \"#utility.yul\":2135:2142   */\n      not\n        /* \"#utility.yul\":2130:2132   */\n      0x1f\n        /* \"#utility.yul\":2123:2128   */\n      dup4\n        /* \"#utility.yul\":2119:2133   */\n      add\n        /* \"#utility.yul\":2115:2143   */\n      and\n        /* \"#utility.yul\":2105:2143   */\n      swap1\n      pop\n        /* \"#utility.yul\":2047:2149   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2155:2335   */\n    tag_54:\n        /* \"#utility.yul\":2203:2280   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":2200:2201   */\n      0x00\n        /* \"#utility.yul\":2193:2281   */\n      mstore\n        /* \"#utility.yul\":2300:2304   */\n      0x41\n        /* \"#utility.yul\":2297:2298   */\n      0x04\n        /* \"#utility.yul\":2290:2305   */\n      mstore\n        /* \"#utility.yul\":2324:2328   */\n      0x24\n        /* \"#utility.yul\":2321:2322   */\n      0x00\n        /* \"#utility.yul\":2314:2329   */\n      revert\n        /* \"#utility.yul\":2341:2622   */\n    tag_55:\n        /* \"#utility.yul\":2424:2451   */\n      tag_97\n        /* \"#utility.yul\":2446:2450   */\n      dup3\n        /* \"#utility.yul\":2424:2451   */\n      tag_53\n      jump\t// in\n    tag_97:\n        /* \"#utility.yul\":2416:2422   */\n      dup2\n        /* \"#utility.yul\":2412:2452   */\n      add\n        /* \"#utility.yul\":2554:2560   */\n      dup2\n        /* \"#utility.yul\":2542:2552   */\n      dup2\n        /* \"#utility.yul\":2539:2561   */\n      lt\n        /* \"#utility.yul\":2518:2536   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":2506:2516   */\n      dup3\n        /* \"#utility.yul\":2503:2537   */\n      gt\n        /* \"#utility.yul\":2500:2562   */\n      or\n        /* \"#utility.yul\":2497:2585   */\n      iszero\n      tag_98\n      jumpi\n        /* \"#utility.yul\":2565:2583   */\n      tag_99\n      tag_54\n      jump\t// in\n    tag_99:\n        /* \"#utility.yul\":2497:2585   */\n    tag_98:\n        /* \"#utility.yul\":2605:2615   */\n      dup1\n        /* \"#utility.yul\":2601:2603   */\n      0x40\n        /* \"#utility.yul\":2594:2616   */\n      mstore\n        /* \"#utility.yul\":2384:2622   */\n      pop\n        /* \"#utility.yul\":2341:2622   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2628:2757   */\n    tag_56:\n        /* \"#utility.yul\":2662:2668   */\n      0x00\n        /* \"#utility.yul\":2689:2709   */\n      tag_101\n      tag_48\n      jump\t// in\n    tag_101:\n        /* \"#utility.yul\":2679:2709   */\n      swap1\n      pop\n        /* \"#utility.yul\":2718:2751   */\n      tag_102\n        /* \"#utility.yul\":2746:2750   */\n      dup3\n        /* \"#utility.yul\":2738:2744   */\n      dup3\n        /* \"#utility.yul\":2718:2751   */\n      tag_55\n      jump\t// in\n    tag_102:\n        /* \"#utility.yul\":2628:2757   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2763:3071   */\n    tag_57:\n        /* \"#utility.yul\":2825:2829   */\n      0x00\n        /* \"#utility.yul\":2915:2933   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":2907:2913   */\n      dup3\n        /* \"#utility.yul\":2904:2934   */\n      gt\n        /* \"#utility.yul\":2901:2957   */\n      iszero\n      tag_104\n      jumpi\n        /* \"#utility.yul\":2937:2955   */\n      tag_105\n      tag_54\n      jump\t// in\n    tag_105:\n        /* \"#utility.yul\":2901:2957   */\n    tag_104:\n        /* \"#utility.yul\":2975:3004   */\n      tag_106\n        /* \"#utility.yul\":2997:3003   */\n      dup3\n        /* \"#utility.yul\":2975:3004   */\n      tag_53\n      jump\t// in\n    tag_106:\n        /* \"#utility.yul\":2967:3004   */\n      swap1\n      pop\n        /* \"#utility.yul\":3059:3063   */\n      0x20\n        /* \"#utility.yul\":3053:3057   */\n      dup2\n        /* \"#utility.yul\":3049:3064   */\n      add\n        /* \"#utility.yul\":3041:3064   */\n      swap1\n      pop\n        /* \"#utility.yul\":2763:3071   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3077:3223   */\n    tag_58:\n        /* \"#utility.yul\":3174:3180   */\n      dup3\n        /* \"#utility.yul\":3169:3172   */\n      dup2\n        /* \"#utility.yul\":3164:3167   */\n      dup4\n        /* \"#utility.yul\":3151:3181   */\n      calldatacopy\n        /* \"#utility.yul\":3215:3216   */\n      0x00\n        /* \"#utility.yul\":3206:3212   */\n      dup4\n        /* \"#utility.yul\":3201:3204   */\n      dup4\n        /* \"#utility.yul\":3197:3213   */\n      add\n        /* \"#utility.yul\":3190:3217   */\n      mstore\n        /* \"#utility.yul\":3077:3223   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3229:3654   */\n    tag_59:\n        /* \"#utility.yul\":3307:3312   */\n      0x00\n        /* \"#utility.yul\":3332:3398   */\n      tag_109\n        /* \"#utility.yul\":3348:3397   */\n      tag_110\n        /* \"#utility.yul\":3390:3396   */\n      dup5\n        /* \"#utility.yul\":3348:3397   */\n      tag_57\n      jump\t// in\n    tag_110:\n        /* \"#utility.yul\":3332:3398   */\n      tag_56\n      jump\t// in\n    tag_109:\n        /* \"#utility.yul\":3323:3398   */\n      swap1\n      pop\n        /* \"#utility.yul\":3421:3427   */\n      dup3\n        /* \"#utility.yul\":3414:3419   */\n      dup2\n        /* \"#utility.yul\":3407:3428   */\n      mstore\n        /* \"#utility.yul\":3459:3463   */\n      0x20\n        /* \"#utility.yul\":3452:3457   */\n      dup2\n        /* \"#utility.yul\":3448:3464   */\n      add\n        /* \"#utility.yul\":3497:3500   */\n      dup5\n        /* \"#utility.yul\":3488:3494   */\n      dup5\n        /* \"#utility.yul\":3483:3486   */\n      dup5\n        /* \"#utility.yul\":3479:3495   */\n      add\n        /* \"#utility.yul\":3476:3501   */\n      gt\n        /* \"#utility.yul\":3473:3585   */\n      iszero\n      tag_111\n      jumpi\n        /* \"#utility.yul\":3504:3583   */\n      tag_112\n      tag_52\n      jump\t// in\n    tag_112:\n        /* \"#utility.yul\":3473:3585   */\n    tag_111:\n        /* \"#utility.yul\":3594:3648   */\n      tag_113\n        /* \"#utility.yul\":3641:3647   */\n      dup5\n        /* \"#utility.yul\":3636:3639   */\n      dup3\n        /* \"#utility.yul\":3631:3634   */\n      dup6\n        /* \"#utility.yul\":3594:3648   */\n      tag_58\n      jump\t// in\n    tag_113:\n        /* \"#utility.yul\":3313:3654   */\n      pop\n        /* \"#utility.yul\":3229:3654   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3674:4014   */\n    tag_60:\n        /* \"#utility.yul\":3730:3735   */\n      0x00\n        /* \"#utility.yul\":3779:3782   */\n      dup3\n        /* \"#utility.yul\":3772:3776   */\n      0x1f\n        /* \"#utility.yul\":3764:3770   */\n      dup4\n        /* \"#utility.yul\":3760:3777   */\n      add\n        /* \"#utility.yul\":3756:3783   */\n      slt\n        /* \"#utility.yul\":3746:3868   */\n      tag_115\n      jumpi\n        /* \"#utility.yul\":3787:3866   */\n      tag_116\n      tag_51\n      jump\t// in\n    tag_116:\n        /* \"#utility.yul\":3746:3868   */\n    tag_115:\n        /* \"#utility.yul\":3904:3910   */\n      dup2\n        /* \"#utility.yul\":3891:3911   */\n      calldataload\n        /* \"#utility.yul\":3929:4008   */\n      tag_117\n        /* \"#utility.yul\":4004:4007   */\n      dup5\n        /* \"#utility.yul\":3996:4002   */\n      dup3\n        /* \"#utility.yul\":3989:3993   */\n      0x20\n        /* \"#utility.yul\":3981:3987   */\n      dup7\n        /* \"#utility.yul\":3977:3994   */\n      add\n        /* \"#utility.yul\":3929:4008   */\n      tag_59\n      jump\t// in\n    tag_117:\n        /* \"#utility.yul\":3920:4008   */\n      swap2\n      pop\n        /* \"#utility.yul\":3736:4014   */\n      pop\n        /* \"#utility.yul\":3674:4014   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4020:4529   */\n    tag_17:\n        /* \"#utility.yul\":4089:4095   */\n      0x00\n        /* \"#utility.yul\":4138:4140   */\n      0x20\n        /* \"#utility.yul\":4126:4135   */\n      dup3\n        /* \"#utility.yul\":4117:4124   */\n      dup5\n        /* \"#utility.yul\":4113:4136   */\n      sub\n        /* \"#utility.yul\":4109:4141   */\n      slt\n        /* \"#utility.yul\":4106:4225   */\n      iszero\n      tag_119\n      jumpi\n        /* \"#utility.yul\":4144:4223   */\n      tag_120\n      tag_49\n      jump\t// in\n    tag_120:\n        /* \"#utility.yul\":4106:4225   */\n    tag_119:\n        /* \"#utility.yul\":4292:4293   */\n      0x00\n        /* \"#utility.yul\":4281:4290   */\n      dup3\n        /* \"#utility.yul\":4277:4294   */\n      add\n        /* \"#utility.yul\":4264:4295   */\n      calldataload\n        /* \"#utility.yul\":4322:4340   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":4314:4320   */\n      dup2\n        /* \"#utility.yul\":4311:4341   */\n      gt\n        /* \"#utility.yul\":4308:4425   */\n      iszero\n      tag_121\n      jumpi\n        /* \"#utility.yul\":4344:4423   */\n      tag_122\n      tag_50\n      jump\t// in\n    tag_122:\n        /* \"#utility.yul\":4308:4425   */\n    tag_121:\n        /* \"#utility.yul\":4449:4512   */\n      tag_123\n        /* \"#utility.yul\":4504:4511   */\n      dup5\n        /* \"#utility.yul\":4495:4501   */\n      dup3\n        /* \"#utility.yul\":4484:4493   */\n      dup6\n        /* \"#utility.yul\":4480:4502   */\n      add\n        /* \"#utility.yul\":4449:4512   */\n      tag_60\n      jump\t// in\n    tag_123:\n        /* \"#utility.yul\":4439:4512   */\n      swap2\n      pop\n        /* \"#utility.yul\":4235:4522   */\n      pop\n        /* \"#utility.yul\":4020:4529   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4535:4631   */\n    tag_61:\n        /* \"#utility.yul\":4572:4579   */\n      0x00\n        /* \"#utility.yul\":4601:4625   */\n      tag_125\n        /* \"#utility.yul\":4619:4624   */\n      dup3\n        /* \"#utility.yul\":4601:4625   */\n      tag_42\n      jump\t// in\n    tag_125:\n        /* \"#utility.yul\":4590:4625   */\n      swap1\n      pop\n        /* \"#utility.yul\":4535:4631   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4637:4755   */\n    tag_62:\n        /* \"#utility.yul\":4724:4748   */\n      tag_127\n        /* \"#utility.yul\":4742:4747   */\n      dup2\n        /* \"#utility.yul\":4724:4748   */\n      tag_61\n      jump\t// in\n    tag_127:\n        /* \"#utility.yul\":4719:4722   */\n      dup3\n        /* \"#utility.yul\":4712:4749   */\n      mstore\n        /* \"#utility.yul\":4637:4755   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4761:5093   */\n    tag_23:\n        /* \"#utility.yul\":4882:4886   */\n      0x00\n        /* \"#utility.yul\":4920:4922   */\n      0x40\n        /* \"#utility.yul\":4909:4918   */\n      dup3\n        /* \"#utility.yul\":4905:4923   */\n      add\n        /* \"#utility.yul\":4897:4923   */\n      swap1\n      pop\n        /* \"#utility.yul\":4933:5004   */\n      tag_129\n        /* \"#utility.yul\":5001:5002   */\n      0x00\n        /* \"#utility.yul\":4990:4999   */\n      dup4\n        /* \"#utility.yul\":4986:5003   */\n      add\n        /* \"#utility.yul\":4977:4983   */\n      dup6\n        /* \"#utility.yul\":4933:5004   */\n      tag_62\n      jump\t// in\n    tag_129:\n        /* \"#utility.yul\":5014:5086   */\n      tag_130\n        /* \"#utility.yul\":5082:5084   */\n      0x20\n        /* \"#utility.yul\":5071:5080   */\n      dup4\n        /* \"#utility.yul\":5067:5085   */\n      add\n        /* \"#utility.yul\":5058:5064   */\n      dup5\n        /* \"#utility.yul\":5014:5086   */\n      tag_62\n      jump\t// in\n    tag_130:\n        /* \"#utility.yul\":4761:5093   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5099:5215   */\n    tag_63:\n        /* \"#utility.yul\":5169:5190   */\n      tag_132\n        /* \"#utility.yul\":5184:5189   */\n      dup2\n        /* \"#utility.yul\":5169:5190   */\n      tag_40\n      jump\t// in\n    tag_132:\n        /* \"#utility.yul\":5162:5167   */\n      dup2\n        /* \"#utility.yul\":5159:5191   */\n      eq\n        /* \"#utility.yul\":5149:5209   */\n      tag_133\n      jumpi\n        /* \"#utility.yul\":5205:5206   */\n      0x00\n        /* \"#utility.yul\":5202:5203   */\n      dup1\n        /* \"#utility.yul\":5195:5207   */\n      revert\n        /* \"#utility.yul\":5149:5209   */\n    tag_133:\n        /* \"#utility.yul\":5099:5215   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5221:5358   */\n    tag_64:\n        /* \"#utility.yul\":5275:5280   */\n      0x00\n        /* \"#utility.yul\":5306:5312   */\n      dup2\n        /* \"#utility.yul\":5300:5313   */\n      mload\n        /* \"#utility.yul\":5291:5313   */\n      swap1\n      pop\n        /* \"#utility.yul\":5322:5352   */\n      tag_135\n        /* \"#utility.yul\":5346:5351   */\n      dup2\n        /* \"#utility.yul\":5322:5352   */\n      tag_63\n      jump\t// in\n    tag_135:\n        /* \"#utility.yul\":5221:5358   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5364:5709   */\n    tag_27:\n        /* \"#utility.yul\":5431:5437   */\n      0x00\n        /* \"#utility.yul\":5480:5482   */\n      0x20\n        /* \"#utility.yul\":5468:5477   */\n      dup3\n        /* \"#utility.yul\":5459:5466   */\n      dup5\n        /* \"#utility.yul\":5455:5478   */\n      sub\n        /* \"#utility.yul\":5451:5483   */\n      slt\n        /* \"#utility.yul\":5448:5567   */\n      iszero\n      tag_137\n      jumpi\n        /* \"#utility.yul\":5486:5565   */\n      tag_138\n      tag_49\n      jump\t// in\n    tag_138:\n        /* \"#utility.yul\":5448:5567   */\n    tag_137:\n        /* \"#utility.yul\":5606:5607   */\n      0x00\n        /* \"#utility.yul\":5631:5692   */\n      tag_139\n        /* \"#utility.yul\":5684:5691   */\n      dup5\n        /* \"#utility.yul\":5675:5681   */\n      dup3\n        /* \"#utility.yul\":5664:5673   */\n      dup6\n        /* \"#utility.yul\":5660:5682   */\n      add\n        /* \"#utility.yul\":5631:5692   */\n      tag_64\n      jump\t// in\n    tag_139:\n        /* \"#utility.yul\":5621:5692   */\n      swap2\n      pop\n        /* \"#utility.yul\":5577:5702   */\n      pop\n        /* \"#utility.yul\":5364:5709   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5715:5814   */\n    tag_65:\n        /* \"#utility.yul\":5767:5773   */\n      0x00\n        /* \"#utility.yul\":5801:5806   */\n      dup2\n        /* \"#utility.yul\":5795:5807   */\n      mload\n        /* \"#utility.yul\":5785:5807   */\n      swap1\n      pop\n        /* \"#utility.yul\":5715:5814   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5820:5989   */\n    tag_66:\n        /* \"#utility.yul\":5904:5915   */\n      0x00\n        /* \"#utility.yul\":5938:5944   */\n      dup3\n        /* \"#utility.yul\":5933:5936   */\n      dup3\n        /* \"#utility.yul\":5926:5945   */\n      mstore\n        /* \"#utility.yul\":5978:5982   */\n      0x20\n        /* \"#utility.yul\":5973:5976   */\n      dup3\n        /* \"#utility.yul\":5969:5983   */\n      add\n        /* \"#utility.yul\":5954:5983   */\n      swap1\n      pop\n        /* \"#utility.yul\":5820:5989   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5995:6241   */\n    tag_67:\n        /* \"#utility.yul\":6076:6077   */\n      0x00\n        /* \"#utility.yul\":6086:6199   */\n    tag_143:\n        /* \"#utility.yul\":6100:6106   */\n      dup4\n        /* \"#utility.yul\":6097:6098   */\n      dup2\n        /* \"#utility.yul\":6094:6107   */\n      lt\n        /* \"#utility.yul\":6086:6199   */\n      iszero\n      tag_145\n      jumpi\n        /* \"#utility.yul\":6185:6186   */\n      dup1\n        /* \"#utility.yul\":6180:6183   */\n      dup3\n        /* \"#utility.yul\":6176:6187   */\n      add\n        /* \"#utility.yul\":6170:6188   */\n      mload\n        /* \"#utility.yul\":6166:6167   */\n      dup2\n        /* \"#utility.yul\":6161:6164   */\n      dup5\n        /* \"#utility.yul\":6157:6168   */\n      add\n        /* \"#utility.yul\":6150:6189   */\n      mstore\n        /* \"#utility.yul\":6122:6124   */\n      0x20\n        /* \"#utility.yul\":6119:6120   */\n      dup2\n        /* \"#utility.yul\":6115:6125   */\n      add\n        /* \"#utility.yul\":6110:6125   */\n      swap1\n      pop\n        /* \"#utility.yul\":6086:6199   */\n      jump(tag_143)\n    tag_145:\n        /* \"#utility.yul\":6233:6234   */\n      0x00\n        /* \"#utility.yul\":6224:6230   */\n      dup5\n        /* \"#utility.yul\":6219:6222   */\n      dup5\n        /* \"#utility.yul\":6215:6231   */\n      add\n        /* \"#utility.yul\":6208:6235   */\n      mstore\n        /* \"#utility.yul\":6057:6241   */\n      pop\n        /* \"#utility.yul\":5995:6241   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6247:6624   */\n    tag_68:\n        /* \"#utility.yul\":6335:6338   */\n      0x00\n        /* \"#utility.yul\":6363:6402   */\n      tag_147\n        /* \"#utility.yul\":6396:6401   */\n      dup3\n        /* \"#utility.yul\":6363:6402   */\n      tag_65\n      jump\t// in\n    tag_147:\n        /* \"#utility.yul\":6418:6489   */\n      tag_148\n        /* \"#utility.yul\":6482:6488   */\n      dup2\n        /* \"#utility.yul\":6477:6480   */\n      dup6\n        /* \"#utility.yul\":6418:6489   */\n      tag_66\n      jump\t// in\n    tag_148:\n        /* \"#utility.yul\":6411:6489   */\n      swap4\n      pop\n        /* \"#utility.yul\":6498:6563   */\n      tag_149\n        /* \"#utility.yul\":6556:6562   */\n      dup2\n        /* \"#utility.yul\":6551:6554   */\n      dup6\n        /* \"#utility.yul\":6544:6548   */\n      0x20\n        /* \"#utility.yul\":6537:6542   */\n      dup7\n        /* \"#utility.yul\":6533:6549   */\n      add\n        /* \"#utility.yul\":6498:6563   */\n      tag_67\n      jump\t// in\n    tag_149:\n        /* \"#utility.yul\":6588:6617   */\n      tag_150\n        /* \"#utility.yul\":6610:6616   */\n      dup2\n        /* \"#utility.yul\":6588:6617   */\n      tag_53\n      jump\t// in\n    tag_150:\n        /* \"#utility.yul\":6583:6586   */\n      dup5\n        /* \"#utility.yul\":6579:6618   */\n      add\n        /* \"#utility.yul\":6572:6618   */\n      swap2\n      pop\n        /* \"#utility.yul\":6339:6624   */\n      pop\n        /* \"#utility.yul\":6247:6624   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6630:6943   */\n    tag_30:\n        /* \"#utility.yul\":6743:6747   */\n      0x00\n        /* \"#utility.yul\":6781:6783   */\n      0x20\n        /* \"#utility.yul\":6770:6779   */\n      dup3\n        /* \"#utility.yul\":6766:6784   */\n      add\n        /* \"#utility.yul\":6758:6784   */\n      swap1\n      pop\n        /* \"#utility.yul\":6830:6839   */\n      dup2\n        /* \"#utility.yul\":6824:6828   */\n      dup2\n        /* \"#utility.yul\":6820:6840   */\n      sub\n        /* \"#utility.yul\":6816:6817   */\n      0x00\n        /* \"#utility.yul\":6805:6814   */\n      dup4\n        /* \"#utility.yul\":6801:6818   */\n      add\n        /* \"#utility.yul\":6794:6841   */\n      mstore\n        /* \"#utility.yul\":6858:6936   */\n      tag_152\n        /* \"#utility.yul\":6931:6935   */\n      dup2\n        /* \"#utility.yul\":6922:6928   */\n      dup5\n        /* \"#utility.yul\":6858:6936   */\n      tag_68\n      jump\t// in\n    tag_152:\n        /* \"#utility.yul\":6850:6936   */\n      swap1\n      pop\n        /* \"#utility.yul\":6630:6943   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6949:7379   */\n    tag_36:\n        /* \"#utility.yul\":7092:7096   */\n      0x00\n        /* \"#utility.yul\":7130:7132   */\n      0x60\n        /* \"#utility.yul\":7119:7128   */\n      dup3\n        /* \"#utility.yul\":7115:7133   */\n      add\n        /* \"#utility.yul\":7107:7133   */\n      swap1\n      pop\n        /* \"#utility.yul\":7143:7214   */\n      tag_154\n        /* \"#utility.yul\":7211:7212   */\n      0x00\n        /* \"#utility.yul\":7200:7209   */\n      dup4\n        /* \"#utility.yul\":7196:7213   */\n      add\n        /* \"#utility.yul\":7187:7193   */\n      dup7\n        /* \"#utility.yul\":7143:7214   */\n      tag_62\n      jump\t// in\n    tag_154:\n        /* \"#utility.yul\":7224:7296   */\n      tag_155\n        /* \"#utility.yul\":7292:7294   */\n      0x20\n        /* \"#utility.yul\":7281:7290   */\n      dup4\n        /* \"#utility.yul\":7277:7295   */\n      add\n        /* \"#utility.yul\":7268:7274   */\n      dup6\n        /* \"#utility.yul\":7224:7296   */\n      tag_62\n      jump\t// in\n    tag_155:\n        /* \"#utility.yul\":7306:7372   */\n      tag_156\n        /* \"#utility.yul\":7368:7370   */\n      0x40\n        /* \"#utility.yul\":7357:7366   */\n      dup4\n        /* \"#utility.yul\":7353:7371   */\n      add\n        /* \"#utility.yul\":7344:7350   */\n      dup5\n        /* \"#utility.yul\":7306:7372   */\n      tag_41\n      jump\t// in\n    tag_156:\n        /* \"#utility.yul\":6949:7379   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa26469706673582212200372a5e4fdfe2a87cb8b92b3a72a216f3e8e4a6bd5596ecd6aef5fd55fc282b264736f6c63430008150033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_137": {
									"entryPoint": null,
									"id": 137,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_address_fromMemory": {
									"entryPoint": 192,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address_fromMemory": {
									"entryPoint": 212,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 153,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 122,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 118,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 170,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:1199:13",
										"nodeType": "YulBlock",
										"src": "0:1199:13",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:13",
													"nodeType": "YulBlock",
													"src": "47:35:13",
													"statements": [
														{
															"nativeSrc": "57:19:13",
															"nodeType": "YulAssignment",
															"src": "57:19:13",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:13",
																		"nodeType": "YulLiteral",
																		"src": "73:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:13"
																},
																"nativeSrc": "67:9:13",
																"nodeType": "YulFunctionCall",
																"src": "67:9:13"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:13"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:13",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:13",
														"nodeType": "YulTypedName",
														"src": "40:6:13",
														"type": ""
													}
												],
												"src": "7:75:13"
											},
											{
												"body": {
													"nativeSrc": "177:28:13",
													"nodeType": "YulBlock",
													"src": "177:28:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:13",
																		"nodeType": "YulLiteral",
																		"src": "194:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:13",
																		"nodeType": "YulLiteral",
																		"src": "197:1:13",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:13"
																},
																"nativeSrc": "187:12:13",
																"nodeType": "YulFunctionCall",
																"src": "187:12:13"
															},
															"nativeSrc": "187:12:13",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:13"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:13",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:13"
											},
											{
												"body": {
													"nativeSrc": "300:28:13",
													"nodeType": "YulBlock",
													"src": "300:28:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:13",
																		"nodeType": "YulLiteral",
																		"src": "317:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:13",
																		"nodeType": "YulLiteral",
																		"src": "320:1:13",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:13"
																},
																"nativeSrc": "310:12:13",
																"nodeType": "YulFunctionCall",
																"src": "310:12:13"
															},
															"nativeSrc": "310:12:13",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:13"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:13",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:13"
											},
											{
												"body": {
													"nativeSrc": "379:81:13",
													"nodeType": "YulBlock",
													"src": "379:81:13",
													"statements": [
														{
															"nativeSrc": "389:65:13",
															"nodeType": "YulAssignment",
															"src": "389:65:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "404:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "411:42:13",
																		"nodeType": "YulLiteral",
																		"src": "411:42:13",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "400:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:13"
																},
																"nativeSrc": "400:54:13",
																"nodeType": "YulFunctionCall",
																"src": "400:54:13"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "389:7:13",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:13"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "334:126:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "361:5:13",
														"nodeType": "YulTypedName",
														"src": "361:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "371:7:13",
														"nodeType": "YulTypedName",
														"src": "371:7:13",
														"type": ""
													}
												],
												"src": "334:126:13"
											},
											{
												"body": {
													"nativeSrc": "511:51:13",
													"nodeType": "YulBlock",
													"src": "511:51:13",
													"statements": [
														{
															"nativeSrc": "521:35:13",
															"nodeType": "YulAssignment",
															"src": "521:35:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "550:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:13"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "532:17:13",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:13"
																},
																"nativeSrc": "532:24:13",
																"nodeType": "YulFunctionCall",
																"src": "532:24:13"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "521:7:13",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:13"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "466:96:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "493:5:13",
														"nodeType": "YulTypedName",
														"src": "493:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "503:7:13",
														"nodeType": "YulTypedName",
														"src": "503:7:13",
														"type": ""
													}
												],
												"src": "466:96:13"
											},
											{
												"body": {
													"nativeSrc": "611:79:13",
													"nodeType": "YulBlock",
													"src": "611:79:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "668:16:13",
																"nodeType": "YulBlock",
																"src": "668:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "677:1:13",
																					"nodeType": "YulLiteral",
																					"src": "677:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "680:1:13",
																					"nodeType": "YulLiteral",
																					"src": "680:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "670:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "670:6:13"
																			},
																			"nativeSrc": "670:12:13",
																			"nodeType": "YulFunctionCall",
																			"src": "670:12:13"
																		},
																		"nativeSrc": "670:12:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "670:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "634:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "634:5:13"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "659:5:13",
																						"nodeType": "YulIdentifier",
																						"src": "659:5:13"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "641:17:13",
																					"nodeType": "YulIdentifier",
																					"src": "641:17:13"
																				},
																				"nativeSrc": "641:24:13",
																				"nodeType": "YulFunctionCall",
																				"src": "641:24:13"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "631:2:13",
																			"nodeType": "YulIdentifier",
																			"src": "631:2:13"
																		},
																		"nativeSrc": "631:35:13",
																		"nodeType": "YulFunctionCall",
																		"src": "631:35:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "624:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "624:6:13"
																},
																"nativeSrc": "624:43:13",
																"nodeType": "YulFunctionCall",
																"src": "624:43:13"
															},
															"nativeSrc": "621:63:13",
															"nodeType": "YulIf",
															"src": "621:63:13"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "568:122:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "604:5:13",
														"nodeType": "YulTypedName",
														"src": "604:5:13",
														"type": ""
													}
												],
												"src": "568:122:13"
											},
											{
												"body": {
													"nativeSrc": "759:80:13",
													"nodeType": "YulBlock",
													"src": "759:80:13",
													"statements": [
														{
															"nativeSrc": "769:22:13",
															"nodeType": "YulAssignment",
															"src": "769:22:13",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "784:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "784:6:13"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "778:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "778:5:13"
																},
																"nativeSrc": "778:13:13",
																"nodeType": "YulFunctionCall",
																"src": "778:13:13"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "769:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "769:5:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "827:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "827:5:13"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "800:26:13",
																	"nodeType": "YulIdentifier",
																	"src": "800:26:13"
																},
																"nativeSrc": "800:33:13",
																"nodeType": "YulFunctionCall",
																"src": "800:33:13"
															},
															"nativeSrc": "800:33:13",
															"nodeType": "YulExpressionStatement",
															"src": "800:33:13"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nativeSrc": "696:143:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "737:6:13",
														"nodeType": "YulTypedName",
														"src": "737:6:13",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "745:3:13",
														"nodeType": "YulTypedName",
														"src": "745:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "753:5:13",
														"nodeType": "YulTypedName",
														"src": "753:5:13",
														"type": ""
													}
												],
												"src": "696:143:13"
											},
											{
												"body": {
													"nativeSrc": "922:274:13",
													"nodeType": "YulBlock",
													"src": "922:274:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "968:83:13",
																"nodeType": "YulBlock",
																"src": "968:83:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "970:77:13",
																				"nodeType": "YulIdentifier",
																				"src": "970:77:13"
																			},
																			"nativeSrc": "970:79:13",
																			"nodeType": "YulFunctionCall",
																			"src": "970:79:13"
																		},
																		"nativeSrc": "970:79:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "970:79:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "943:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "943:7:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "952:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "952:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "939:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "939:3:13"
																		},
																		"nativeSrc": "939:23:13",
																		"nodeType": "YulFunctionCall",
																		"src": "939:23:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "964:2:13",
																		"nodeType": "YulLiteral",
																		"src": "964:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "935:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "935:3:13"
																},
																"nativeSrc": "935:32:13",
																"nodeType": "YulFunctionCall",
																"src": "935:32:13"
															},
															"nativeSrc": "932:119:13",
															"nodeType": "YulIf",
															"src": "932:119:13"
														},
														{
															"nativeSrc": "1061:128:13",
															"nodeType": "YulBlock",
															"src": "1061:128:13",
															"statements": [
																{
																	"nativeSrc": "1076:15:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1076:15:13",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1090:1:13",
																		"nodeType": "YulLiteral",
																		"src": "1090:1:13",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1080:6:13",
																			"nodeType": "YulTypedName",
																			"src": "1080:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1105:74:13",
																	"nodeType": "YulAssignment",
																	"src": "1105:74:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1151:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "1151:9:13"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1162:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "1162:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1147:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "1147:3:13"
																				},
																				"nativeSrc": "1147:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "1147:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1171:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "1171:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nativeSrc": "1115:31:13",
																			"nodeType": "YulIdentifier",
																			"src": "1115:31:13"
																		},
																		"nativeSrc": "1115:64:13",
																		"nodeType": "YulFunctionCall",
																		"src": "1115:64:13"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1105:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "1105:6:13"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address_fromMemory",
												"nativeSrc": "845:351:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "892:9:13",
														"nodeType": "YulTypedName",
														"src": "892:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "903:7:13",
														"nodeType": "YulTypedName",
														"src": "903:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "915:6:13",
														"nodeType": "YulTypedName",
														"src": "915:6:13",
														"type": ""
													}
												],
												"src": "845:351:13"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n}\n",
									"id": 13,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b5060405161078e38038061078e833981810160405281019061003191906100d4565b805f806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550506100ff565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6100a38261007a565b9050919050565b6100b381610099565b81146100bd575f80fd5b50565b5f815190506100ce816100aa565b92915050565b5f602082840312156100e9576100e8610076565b5b5f6100f6848285016100c0565b91505092915050565b6106828061010c5f395ff3fe608060405234801561000f575f80fd5b506004361061004a575f3560e01c80636aa5e3761461004e57806398300e181461006c578063a15db9d01461008a578063cc9562a5146100a6575b5f80fd5b6100566100b0565b60405161006391906102a1565b60405180910390f35b610074610150565b6040516100819190610334565b60405180910390f35b6100a4600480360381019061009f919061049a565b610173565b005b6100ae6101fb565b005b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663e985e9c533306040518363ffffffff1660e01b815260040161010c929190610501565b602060405180830381865afa158015610127573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061014b9190610552565b905090565b5f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b5f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16630bdc9008826040518263ffffffff1660e01b81526004016101cb91906105f7565b5f604051808303815f87803b1580156101e2575f80fd5b505af11580156101f4573d5f803e3d5ffd5b5050505050565b5f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166329d6724e333060016040518463ffffffff1660e01b815260040161025893929190610617565b5f604051808303815f87803b15801561026f575f80fd5b505af1158015610281573d5f803e3d5ffd5b50505050565b5f8115159050919050565b61029b81610287565b82525050565b5f6020820190506102b45f830184610292565b92915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f819050919050565b5f6102fc6102f76102f2846102ba565b6102d9565b6102ba565b9050919050565b5f61030d826102e2565b9050919050565b5f61031e82610303565b9050919050565b61032e81610314565b82525050565b5f6020820190506103475f830184610325565b92915050565b5f604051905090565b5f80fd5b5f80fd5b5f80fd5b5f80fd5b5f601f19601f8301169050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b6103ac82610366565b810181811067ffffffffffffffff821117156103cb576103ca610376565b5b80604052505050565b5f6103dd61034d565b90506103e982826103a3565b919050565b5f67ffffffffffffffff82111561040857610407610376565b5b61041182610366565b9050602081019050919050565b828183375f83830152505050565b5f61043e610439846103ee565b6103d4565b90508281526020810184848401111561045a57610459610362565b5b61046584828561041e565b509392505050565b5f82601f8301126104815761048061035e565b5b813561049184826020860161042c565b91505092915050565b5f602082840312156104af576104ae610356565b5b5f82013567ffffffffffffffff8111156104cc576104cb61035a565b5b6104d88482850161046d565b91505092915050565b5f6104eb826102ba565b9050919050565b6104fb816104e1565b82525050565b5f6040820190506105145f8301856104f2565b61052160208301846104f2565b9392505050565b61053181610287565b811461053b575f80fd5b50565b5f8151905061054c81610528565b92915050565b5f6020828403121561056757610566610356565b5b5f6105748482850161053e565b91505092915050565b5f81519050919050565b5f82825260208201905092915050565b5f5b838110156105b4578082015181840152602081019050610599565b5f8484015250505050565b5f6105c98261057d565b6105d38185610587565b93506105e3818560208601610597565b6105ec81610366565b840191505092915050565b5f6020820190508181035f83015261060f81846105bf565b905092915050565b5f60608201905061062a5f8301866104f2565b61063760208301856104f2565b6106446040830184610292565b94935050505056fea26469706673582212200372a5e4fdfe2a87cb8b92b3a72a216f3e8e4a6bd5596ecd6aef5fd55fc282b264736f6c63430008150033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x78E CODESIZE SUB DUP1 PUSH2 0x78E DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH2 0x31 SWAP2 SWAP1 PUSH2 0xD4 JUMP JUMPDEST DUP1 PUSH0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP PUSH2 0xFF JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xA3 DUP3 PUSH2 0x7A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xB3 DUP2 PUSH2 0x99 JUMP JUMPDEST DUP2 EQ PUSH2 0xBD JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0xCE DUP2 PUSH2 0xAA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xE9 JUMPI PUSH2 0xE8 PUSH2 0x76 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xF6 DUP5 DUP3 DUP6 ADD PUSH2 0xC0 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x682 DUP1 PUSH2 0x10C PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x4A JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6AA5E376 EQ PUSH2 0x4E JUMPI DUP1 PUSH4 0x98300E18 EQ PUSH2 0x6C JUMPI DUP1 PUSH4 0xA15DB9D0 EQ PUSH2 0x8A JUMPI DUP1 PUSH4 0xCC9562A5 EQ PUSH2 0xA6 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x56 PUSH2 0xB0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x63 SWAP2 SWAP1 PUSH2 0x2A1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x74 PUSH2 0x150 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x81 SWAP2 SWAP1 PUSH2 0x334 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xA4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x9F SWAP2 SWAP1 PUSH2 0x49A JUMP JUMPDEST PUSH2 0x173 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xAE PUSH2 0x1FB JUMP JUMPDEST STOP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xE985E9C5 CALLER ADDRESS PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x10C SWAP3 SWAP2 SWAP1 PUSH2 0x501 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x127 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x14B SWAP2 SWAP1 PUSH2 0x552 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xBDC9008 DUP3 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1CB SWAP2 SWAP1 PUSH2 0x5F7 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1E2 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1F4 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x29D6724E CALLER ADDRESS PUSH1 0x1 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x258 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x617 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x26F JUMPI PUSH0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x281 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x29B DUP2 PUSH2 0x287 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2B4 PUSH0 DUP4 ADD DUP5 PUSH2 0x292 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x2FC PUSH2 0x2F7 PUSH2 0x2F2 DUP5 PUSH2 0x2BA JUMP JUMPDEST PUSH2 0x2D9 JUMP JUMPDEST PUSH2 0x2BA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x30D DUP3 PUSH2 0x2E2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x31E DUP3 PUSH2 0x303 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x32E DUP2 PUSH2 0x314 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x347 PUSH0 DUP4 ADD DUP5 PUSH2 0x325 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH2 0x3AC DUP3 PUSH2 0x366 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x3CB JUMPI PUSH2 0x3CA PUSH2 0x376 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x3DD PUSH2 0x34D JUMP JUMPDEST SWAP1 POP PUSH2 0x3E9 DUP3 DUP3 PUSH2 0x3A3 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x408 JUMPI PUSH2 0x407 PUSH2 0x376 JUMP JUMPDEST JUMPDEST PUSH2 0x411 DUP3 PUSH2 0x366 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x43E PUSH2 0x439 DUP5 PUSH2 0x3EE JUMP JUMPDEST PUSH2 0x3D4 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x45A JUMPI PUSH2 0x459 PUSH2 0x362 JUMP JUMPDEST JUMPDEST PUSH2 0x465 DUP5 DUP3 DUP6 PUSH2 0x41E JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x481 JUMPI PUSH2 0x480 PUSH2 0x35E JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x491 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x42C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x4AF JUMPI PUSH2 0x4AE PUSH2 0x356 JUMP JUMPDEST JUMPDEST PUSH0 DUP3 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x4CC JUMPI PUSH2 0x4CB PUSH2 0x35A JUMP JUMPDEST JUMPDEST PUSH2 0x4D8 DUP5 DUP3 DUP6 ADD PUSH2 0x46D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x4EB DUP3 PUSH2 0x2BA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x4FB DUP2 PUSH2 0x4E1 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x514 PUSH0 DUP4 ADD DUP6 PUSH2 0x4F2 JUMP JUMPDEST PUSH2 0x521 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x4F2 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x531 DUP2 PUSH2 0x287 JUMP JUMPDEST DUP2 EQ PUSH2 0x53B JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x54C DUP2 PUSH2 0x528 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x567 JUMPI PUSH2 0x566 PUSH2 0x356 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x574 DUP5 DUP3 DUP6 ADD PUSH2 0x53E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x5B4 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x599 JUMP JUMPDEST PUSH0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x5C9 DUP3 PUSH2 0x57D JUMP JUMPDEST PUSH2 0x5D3 DUP2 DUP6 PUSH2 0x587 JUMP JUMPDEST SWAP4 POP PUSH2 0x5E3 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x597 JUMP JUMPDEST PUSH2 0x5EC DUP2 PUSH2 0x366 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x60F DUP2 DUP5 PUSH2 0x5BF JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x62A PUSH0 DUP4 ADD DUP7 PUSH2 0x4F2 JUMP JUMPDEST PUSH2 0x637 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x4F2 JUMP JUMPDEST PUSH2 0x644 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x292 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SUB PUSH19 0xA5E4FDFE2A87CB8B92B3A72A216F3E8E4A6BD5 MSIZE PUSH15 0xCD6AEF5FD55FC282B264736F6C6343 STOP ADDMOD ISZERO STOP CALLER ",
							"sourceMap": "86:1737:1:-:0;;;384:117;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;435:6;422:4;;:20;;;;;;;;;;;;;;;;;;384:117;86:1737;;88:117:13;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:143::-;753:5;784:6;778:13;769:22;;800:33;827:5;800:33;:::i;:::-;696:143;;;;:::o;845:351::-;915:6;964:2;952:9;943:7;939:23;935:32;932:119;;;970:79;;:::i;:::-;932:119;1090:1;1115:64;1171:7;1162:6;1151:9;1147:22;1115:64;:::i;:::-;1105:74;;1061:128;845:351;;;;:::o;86:1737:1:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_nft_125": {
									"entryPoint": 336,
									"id": 125,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_saleNFTmint_149": {
									"entryPoint": 371,
									"id": 149,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@salesNFT_181": {
									"entryPoint": 176,
									"id": 181,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@setApprovalForAll_165": {
									"entryPoint": 507,
									"id": 165,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_decode_available_length_t_string_memory_ptr": {
									"entryPoint": 1068,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_t_bool_fromMemory": {
									"entryPoint": 1342,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_string_memory_ptr": {
									"entryPoint": 1133,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 1362,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_string_memory_ptr": {
									"entryPoint": 1178,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 1266,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 658,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_contract$_MyNFT_$119_to_t_address_fromStack": {
									"entryPoint": 805,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 1471,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed": {
									"entryPoint": 1281,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_bool__to_t_address_t_address_t_bool__fromStack_reversed": {
									"entryPoint": 1559,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 673,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_MyNFT_$119__to_t_address__fromStack_reversed": {
									"entryPoint": 820,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 1527,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_memory": {
									"entryPoint": 980,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": 845,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_allocation_size_t_string_memory_ptr": {
									"entryPoint": 1006,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 1405,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 1415,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 1249,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 647,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 698,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_contract$_MyNFT_$119_to_t_address": {
									"entryPoint": 788,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_address": {
									"entryPoint": 771,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_uint160": {
									"entryPoint": 738,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_calldata_to_memory_with_cleanup": {
									"entryPoint": 1054,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 1431,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"finalize_allocation": {
									"entryPoint": 931,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"identity": {
									"entryPoint": 729,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x41": {
									"entryPoint": 886,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d": {
									"entryPoint": 862,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae": {
									"entryPoint": 866,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": 858,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 854,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 870,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"validator_revert_t_bool": {
									"entryPoint": 1320,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:7382:13",
										"nodeType": "YulBlock",
										"src": "0:7382:13",
										"statements": [
											{
												"body": {
													"nativeSrc": "49:48:13",
													"nodeType": "YulBlock",
													"src": "49:48:13",
													"statements": [
														{
															"nativeSrc": "59:32:13",
															"nodeType": "YulAssignment",
															"src": "59:32:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "84:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "84:5:13"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "77:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "77:6:13"
																		},
																		"nativeSrc": "77:13:13",
																		"nodeType": "YulFunctionCall",
																		"src": "77:13:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "70:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "70:6:13"
																},
																"nativeSrc": "70:21:13",
																"nodeType": "YulFunctionCall",
																"src": "70:21:13"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "59:7:13",
																	"nodeType": "YulIdentifier",
																	"src": "59:7:13"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nativeSrc": "7:90:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "31:5:13",
														"nodeType": "YulTypedName",
														"src": "31:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "41:7:13",
														"nodeType": "YulTypedName",
														"src": "41:7:13",
														"type": ""
													}
												],
												"src": "7:90:13"
											},
											{
												"body": {
													"nativeSrc": "162:50:13",
													"nodeType": "YulBlock",
													"src": "162:50:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "179:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "179:3:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "199:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "199:5:13"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nativeSrc": "184:14:13",
																			"nodeType": "YulIdentifier",
																			"src": "184:14:13"
																		},
																		"nativeSrc": "184:21:13",
																		"nodeType": "YulFunctionCall",
																		"src": "184:21:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "172:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "172:6:13"
																},
																"nativeSrc": "172:34:13",
																"nodeType": "YulFunctionCall",
																"src": "172:34:13"
															},
															"nativeSrc": "172:34:13",
															"nodeType": "YulExpressionStatement",
															"src": "172:34:13"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nativeSrc": "103:109:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "150:5:13",
														"nodeType": "YulTypedName",
														"src": "150:5:13",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "157:3:13",
														"nodeType": "YulTypedName",
														"src": "157:3:13",
														"type": ""
													}
												],
												"src": "103:109:13"
											},
											{
												"body": {
													"nativeSrc": "310:118:13",
													"nodeType": "YulBlock",
													"src": "310:118:13",
													"statements": [
														{
															"nativeSrc": "320:26:13",
															"nodeType": "YulAssignment",
															"src": "320:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "332:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "332:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "343:2:13",
																		"nodeType": "YulLiteral",
																		"src": "343:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "328:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "328:3:13"
																},
																"nativeSrc": "328:18:13",
																"nodeType": "YulFunctionCall",
																"src": "328:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "320:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "320:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "394:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "394:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "407:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "407:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "418:1:13",
																				"nodeType": "YulLiteral",
																				"src": "418:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "403:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "403:3:13"
																		},
																		"nativeSrc": "403:17:13",
																		"nodeType": "YulFunctionCall",
																		"src": "403:17:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nativeSrc": "356:37:13",
																	"nodeType": "YulIdentifier",
																	"src": "356:37:13"
																},
																"nativeSrc": "356:65:13",
																"nodeType": "YulFunctionCall",
																"src": "356:65:13"
															},
															"nativeSrc": "356:65:13",
															"nodeType": "YulExpressionStatement",
															"src": "356:65:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "218:210:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "282:9:13",
														"nodeType": "YulTypedName",
														"src": "282:9:13",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "294:6:13",
														"nodeType": "YulTypedName",
														"src": "294:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "305:4:13",
														"nodeType": "YulTypedName",
														"src": "305:4:13",
														"type": ""
													}
												],
												"src": "218:210:13"
											},
											{
												"body": {
													"nativeSrc": "479:81:13",
													"nodeType": "YulBlock",
													"src": "479:81:13",
													"statements": [
														{
															"nativeSrc": "489:65:13",
															"nodeType": "YulAssignment",
															"src": "489:65:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "504:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "504:5:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "511:42:13",
																		"nodeType": "YulLiteral",
																		"src": "511:42:13",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "500:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "500:3:13"
																},
																"nativeSrc": "500:54:13",
																"nodeType": "YulFunctionCall",
																"src": "500:54:13"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "489:7:13",
																	"nodeType": "YulIdentifier",
																	"src": "489:7:13"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "434:126:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "461:5:13",
														"nodeType": "YulTypedName",
														"src": "461:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "471:7:13",
														"nodeType": "YulTypedName",
														"src": "471:7:13",
														"type": ""
													}
												],
												"src": "434:126:13"
											},
											{
												"body": {
													"nativeSrc": "598:28:13",
													"nodeType": "YulBlock",
													"src": "598:28:13",
													"statements": [
														{
															"nativeSrc": "608:12:13",
															"nodeType": "YulAssignment",
															"src": "608:12:13",
															"value": {
																"name": "value",
																"nativeSrc": "615:5:13",
																"nodeType": "YulIdentifier",
																"src": "615:5:13"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "608:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "608:3:13"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "566:60:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "584:5:13",
														"nodeType": "YulTypedName",
														"src": "584:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "594:3:13",
														"nodeType": "YulTypedName",
														"src": "594:3:13",
														"type": ""
													}
												],
												"src": "566:60:13"
											},
											{
												"body": {
													"nativeSrc": "692:82:13",
													"nodeType": "YulBlock",
													"src": "692:82:13",
													"statements": [
														{
															"nativeSrc": "702:66:13",
															"nodeType": "YulAssignment",
															"src": "702:66:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "760:5:13",
																						"nodeType": "YulIdentifier",
																						"src": "760:5:13"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint160",
																					"nativeSrc": "742:17:13",
																					"nodeType": "YulIdentifier",
																					"src": "742:17:13"
																				},
																				"nativeSrc": "742:24:13",
																				"nodeType": "YulFunctionCall",
																				"src": "742:24:13"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "733:8:13",
																			"nodeType": "YulIdentifier",
																			"src": "733:8:13"
																		},
																		"nativeSrc": "733:34:13",
																		"nodeType": "YulFunctionCall",
																		"src": "733:34:13"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "715:17:13",
																	"nodeType": "YulIdentifier",
																	"src": "715:17:13"
																},
																"nativeSrc": "715:53:13",
																"nodeType": "YulFunctionCall",
																"src": "715:53:13"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "702:9:13",
																	"nodeType": "YulIdentifier",
																	"src": "702:9:13"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_uint160",
												"nativeSrc": "632:142:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "672:5:13",
														"nodeType": "YulTypedName",
														"src": "672:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "682:9:13",
														"nodeType": "YulTypedName",
														"src": "682:9:13",
														"type": ""
													}
												],
												"src": "632:142:13"
											},
											{
												"body": {
													"nativeSrc": "840:66:13",
													"nodeType": "YulBlock",
													"src": "840:66:13",
													"statements": [
														{
															"nativeSrc": "850:50:13",
															"nodeType": "YulAssignment",
															"src": "850:50:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "894:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "894:5:13"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_uint160",
																	"nativeSrc": "863:30:13",
																	"nodeType": "YulIdentifier",
																	"src": "863:30:13"
																},
																"nativeSrc": "863:37:13",
																"nodeType": "YulFunctionCall",
																"src": "863:37:13"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "850:9:13",
																	"nodeType": "YulIdentifier",
																	"src": "850:9:13"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_address",
												"nativeSrc": "780:126:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "820:5:13",
														"nodeType": "YulTypedName",
														"src": "820:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "830:9:13",
														"nodeType": "YulTypedName",
														"src": "830:9:13",
														"type": ""
													}
												],
												"src": "780:126:13"
											},
											{
												"body": {
													"nativeSrc": "985:66:13",
													"nodeType": "YulBlock",
													"src": "985:66:13",
													"statements": [
														{
															"nativeSrc": "995:50:13",
															"nodeType": "YulAssignment",
															"src": "995:50:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1039:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "1039:5:13"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_address",
																	"nativeSrc": "1008:30:13",
																	"nodeType": "YulIdentifier",
																	"src": "1008:30:13"
																},
																"nativeSrc": "1008:37:13",
																"nodeType": "YulFunctionCall",
																"src": "1008:37:13"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "995:9:13",
																	"nodeType": "YulIdentifier",
																	"src": "995:9:13"
																}
															]
														}
													]
												},
												"name": "convert_t_contract$_MyNFT_$119_to_t_address",
												"nativeSrc": "912:139:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "965:5:13",
														"nodeType": "YulTypedName",
														"src": "965:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "975:9:13",
														"nodeType": "YulTypedName",
														"src": "975:9:13",
														"type": ""
													}
												],
												"src": "912:139:13"
											},
											{
												"body": {
													"nativeSrc": "1135:79:13",
													"nodeType": "YulBlock",
													"src": "1135:79:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1152:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "1152:3:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1201:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "1201:5:13"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_contract$_MyNFT_$119_to_t_address",
																			"nativeSrc": "1157:43:13",
																			"nodeType": "YulIdentifier",
																			"src": "1157:43:13"
																		},
																		"nativeSrc": "1157:50:13",
																		"nodeType": "YulFunctionCall",
																		"src": "1157:50:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1145:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "1145:6:13"
																},
																"nativeSrc": "1145:63:13",
																"nodeType": "YulFunctionCall",
																"src": "1145:63:13"
															},
															"nativeSrc": "1145:63:13",
															"nodeType": "YulExpressionStatement",
															"src": "1145:63:13"
														}
													]
												},
												"name": "abi_encode_t_contract$_MyNFT_$119_to_t_address_fromStack",
												"nativeSrc": "1057:157:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1123:5:13",
														"nodeType": "YulTypedName",
														"src": "1123:5:13",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "1130:3:13",
														"nodeType": "YulTypedName",
														"src": "1130:3:13",
														"type": ""
													}
												],
												"src": "1057:157:13"
											},
											{
												"body": {
													"nativeSrc": "1331:137:13",
													"nodeType": "YulBlock",
													"src": "1331:137:13",
													"statements": [
														{
															"nativeSrc": "1341:26:13",
															"nodeType": "YulAssignment",
															"src": "1341:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1353:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "1353:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1364:2:13",
																		"nodeType": "YulLiteral",
																		"src": "1364:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1349:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "1349:3:13"
																},
																"nativeSrc": "1349:18:13",
																"nodeType": "YulFunctionCall",
																"src": "1349:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1341:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "1341:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1434:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "1434:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1447:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "1447:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1458:1:13",
																				"nodeType": "YulLiteral",
																				"src": "1458:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1443:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "1443:3:13"
																		},
																		"nativeSrc": "1443:17:13",
																		"nodeType": "YulFunctionCall",
																		"src": "1443:17:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_contract$_MyNFT_$119_to_t_address_fromStack",
																	"nativeSrc": "1377:56:13",
																	"nodeType": "YulIdentifier",
																	"src": "1377:56:13"
																},
																"nativeSrc": "1377:84:13",
																"nodeType": "YulFunctionCall",
																"src": "1377:84:13"
															},
															"nativeSrc": "1377:84:13",
															"nodeType": "YulExpressionStatement",
															"src": "1377:84:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_MyNFT_$119__to_t_address__fromStack_reversed",
												"nativeSrc": "1220:248:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1303:9:13",
														"nodeType": "YulTypedName",
														"src": "1303:9:13",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1315:6:13",
														"nodeType": "YulTypedName",
														"src": "1315:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1326:4:13",
														"nodeType": "YulTypedName",
														"src": "1326:4:13",
														"type": ""
													}
												],
												"src": "1220:248:13"
											},
											{
												"body": {
													"nativeSrc": "1514:35:13",
													"nodeType": "YulBlock",
													"src": "1514:35:13",
													"statements": [
														{
															"nativeSrc": "1524:19:13",
															"nodeType": "YulAssignment",
															"src": "1524:19:13",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1540:2:13",
																		"nodeType": "YulLiteral",
																		"src": "1540:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1534:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "1534:5:13"
																},
																"nativeSrc": "1534:9:13",
																"nodeType": "YulFunctionCall",
																"src": "1534:9:13"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "1524:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "1524:6:13"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "1474:75:13",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "1507:6:13",
														"nodeType": "YulTypedName",
														"src": "1507:6:13",
														"type": ""
													}
												],
												"src": "1474:75:13"
											},
											{
												"body": {
													"nativeSrc": "1644:28:13",
													"nodeType": "YulBlock",
													"src": "1644:28:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1661:1:13",
																		"nodeType": "YulLiteral",
																		"src": "1661:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1664:1:13",
																		"nodeType": "YulLiteral",
																		"src": "1664:1:13",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1654:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "1654:6:13"
																},
																"nativeSrc": "1654:12:13",
																"nodeType": "YulFunctionCall",
																"src": "1654:12:13"
															},
															"nativeSrc": "1654:12:13",
															"nodeType": "YulExpressionStatement",
															"src": "1654:12:13"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "1555:117:13",
												"nodeType": "YulFunctionDefinition",
												"src": "1555:117:13"
											},
											{
												"body": {
													"nativeSrc": "1767:28:13",
													"nodeType": "YulBlock",
													"src": "1767:28:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1784:1:13",
																		"nodeType": "YulLiteral",
																		"src": "1784:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1787:1:13",
																		"nodeType": "YulLiteral",
																		"src": "1787:1:13",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1777:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "1777:6:13"
																},
																"nativeSrc": "1777:12:13",
																"nodeType": "YulFunctionCall",
																"src": "1777:12:13"
															},
															"nativeSrc": "1777:12:13",
															"nodeType": "YulExpressionStatement",
															"src": "1777:12:13"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "1678:117:13",
												"nodeType": "YulFunctionDefinition",
												"src": "1678:117:13"
											},
											{
												"body": {
													"nativeSrc": "1890:28:13",
													"nodeType": "YulBlock",
													"src": "1890:28:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1907:1:13",
																		"nodeType": "YulLiteral",
																		"src": "1907:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1910:1:13",
																		"nodeType": "YulLiteral",
																		"src": "1910:1:13",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1900:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "1900:6:13"
																},
																"nativeSrc": "1900:12:13",
																"nodeType": "YulFunctionCall",
																"src": "1900:12:13"
															},
															"nativeSrc": "1900:12:13",
															"nodeType": "YulExpressionStatement",
															"src": "1900:12:13"
														}
													]
												},
												"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
												"nativeSrc": "1801:117:13",
												"nodeType": "YulFunctionDefinition",
												"src": "1801:117:13"
											},
											{
												"body": {
													"nativeSrc": "2013:28:13",
													"nodeType": "YulBlock",
													"src": "2013:28:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2030:1:13",
																		"nodeType": "YulLiteral",
																		"src": "2030:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2033:1:13",
																		"nodeType": "YulLiteral",
																		"src": "2033:1:13",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "2023:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "2023:6:13"
																},
																"nativeSrc": "2023:12:13",
																"nodeType": "YulFunctionCall",
																"src": "2023:12:13"
															},
															"nativeSrc": "2023:12:13",
															"nodeType": "YulExpressionStatement",
															"src": "2023:12:13"
														}
													]
												},
												"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
												"nativeSrc": "1924:117:13",
												"nodeType": "YulFunctionDefinition",
												"src": "1924:117:13"
											},
											{
												"body": {
													"nativeSrc": "2095:54:13",
													"nodeType": "YulBlock",
													"src": "2095:54:13",
													"statements": [
														{
															"nativeSrc": "2105:38:13",
															"nodeType": "YulAssignment",
															"src": "2105:38:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2123:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "2123:5:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2130:2:13",
																				"nodeType": "YulLiteral",
																				"src": "2130:2:13",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2119:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "2119:3:13"
																		},
																		"nativeSrc": "2119:14:13",
																		"nodeType": "YulFunctionCall",
																		"src": "2119:14:13"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "2139:2:13",
																				"nodeType": "YulLiteral",
																				"src": "2139:2:13",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "2135:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "2135:3:13"
																		},
																		"nativeSrc": "2135:7:13",
																		"nodeType": "YulFunctionCall",
																		"src": "2135:7:13"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "2115:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "2115:3:13"
																},
																"nativeSrc": "2115:28:13",
																"nodeType": "YulFunctionCall",
																"src": "2115:28:13"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "2105:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "2105:6:13"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nativeSrc": "2047:102:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2078:5:13",
														"nodeType": "YulTypedName",
														"src": "2078:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "2088:6:13",
														"nodeType": "YulTypedName",
														"src": "2088:6:13",
														"type": ""
													}
												],
												"src": "2047:102:13"
											},
											{
												"body": {
													"nativeSrc": "2183:152:13",
													"nodeType": "YulBlock",
													"src": "2183:152:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2200:1:13",
																		"nodeType": "YulLiteral",
																		"src": "2200:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2203:77:13",
																		"nodeType": "YulLiteral",
																		"src": "2203:77:13",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2193:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "2193:6:13"
																},
																"nativeSrc": "2193:88:13",
																"nodeType": "YulFunctionCall",
																"src": "2193:88:13"
															},
															"nativeSrc": "2193:88:13",
															"nodeType": "YulExpressionStatement",
															"src": "2193:88:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2297:1:13",
																		"nodeType": "YulLiteral",
																		"src": "2297:1:13",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2300:4:13",
																		"nodeType": "YulLiteral",
																		"src": "2300:4:13",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2290:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "2290:6:13"
																},
																"nativeSrc": "2290:15:13",
																"nodeType": "YulFunctionCall",
																"src": "2290:15:13"
															},
															"nativeSrc": "2290:15:13",
															"nodeType": "YulExpressionStatement",
															"src": "2290:15:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2321:1:13",
																		"nodeType": "YulLiteral",
																		"src": "2321:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2324:4:13",
																		"nodeType": "YulLiteral",
																		"src": "2324:4:13",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "2314:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "2314:6:13"
																},
																"nativeSrc": "2314:15:13",
																"nodeType": "YulFunctionCall",
																"src": "2314:15:13"
															},
															"nativeSrc": "2314:15:13",
															"nodeType": "YulExpressionStatement",
															"src": "2314:15:13"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "2155:180:13",
												"nodeType": "YulFunctionDefinition",
												"src": "2155:180:13"
											},
											{
												"body": {
													"nativeSrc": "2384:238:13",
													"nodeType": "YulBlock",
													"src": "2384:238:13",
													"statements": [
														{
															"nativeSrc": "2394:58:13",
															"nodeType": "YulVariableDeclaration",
															"src": "2394:58:13",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "2416:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "2416:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "size",
																				"nativeSrc": "2446:4:13",
																				"nodeType": "YulIdentifier",
																				"src": "2446:4:13"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "2424:21:13",
																			"nodeType": "YulIdentifier",
																			"src": "2424:21:13"
																		},
																		"nativeSrc": "2424:27:13",
																		"nodeType": "YulFunctionCall",
																		"src": "2424:27:13"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2412:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "2412:3:13"
																},
																"nativeSrc": "2412:40:13",
																"nodeType": "YulFunctionCall",
																"src": "2412:40:13"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nativeSrc": "2398:10:13",
																	"nodeType": "YulTypedName",
																	"src": "2398:10:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "2563:22:13",
																"nodeType": "YulBlock",
																"src": "2563:22:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "2565:16:13",
																				"nodeType": "YulIdentifier",
																				"src": "2565:16:13"
																			},
																			"nativeSrc": "2565:18:13",
																			"nodeType": "YulFunctionCall",
																			"src": "2565:18:13"
																		},
																		"nativeSrc": "2565:18:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "2565:18:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "2506:10:13",
																				"nodeType": "YulIdentifier",
																				"src": "2506:10:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2518:18:13",
																				"nodeType": "YulLiteral",
																				"src": "2518:18:13",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "2503:2:13",
																			"nodeType": "YulIdentifier",
																			"src": "2503:2:13"
																		},
																		"nativeSrc": "2503:34:13",
																		"nodeType": "YulFunctionCall",
																		"src": "2503:34:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "2542:10:13",
																				"nodeType": "YulIdentifier",
																				"src": "2542:10:13"
																			},
																			{
																				"name": "memPtr",
																				"nativeSrc": "2554:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "2554:6:13"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "2539:2:13",
																			"nodeType": "YulIdentifier",
																			"src": "2539:2:13"
																		},
																		"nativeSrc": "2539:22:13",
																		"nodeType": "YulFunctionCall",
																		"src": "2539:22:13"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "2500:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "2500:2:13"
																},
																"nativeSrc": "2500:62:13",
																"nodeType": "YulFunctionCall",
																"src": "2500:62:13"
															},
															"nativeSrc": "2497:88:13",
															"nodeType": "YulIf",
															"src": "2497:88:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2601:2:13",
																		"nodeType": "YulLiteral",
																		"src": "2601:2:13",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nativeSrc": "2605:10:13",
																		"nodeType": "YulIdentifier",
																		"src": "2605:10:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2594:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "2594:6:13"
																},
																"nativeSrc": "2594:22:13",
																"nodeType": "YulFunctionCall",
																"src": "2594:22:13"
															},
															"nativeSrc": "2594:22:13",
															"nodeType": "YulExpressionStatement",
															"src": "2594:22:13"
														}
													]
												},
												"name": "finalize_allocation",
												"nativeSrc": "2341:281:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "2370:6:13",
														"nodeType": "YulTypedName",
														"src": "2370:6:13",
														"type": ""
													},
													{
														"name": "size",
														"nativeSrc": "2378:4:13",
														"nodeType": "YulTypedName",
														"src": "2378:4:13",
														"type": ""
													}
												],
												"src": "2341:281:13"
											},
											{
												"body": {
													"nativeSrc": "2669:88:13",
													"nodeType": "YulBlock",
													"src": "2669:88:13",
													"statements": [
														{
															"nativeSrc": "2679:30:13",
															"nodeType": "YulAssignment",
															"src": "2679:30:13",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "allocate_unbounded",
																	"nativeSrc": "2689:18:13",
																	"nodeType": "YulIdentifier",
																	"src": "2689:18:13"
																},
																"nativeSrc": "2689:20:13",
																"nodeType": "YulFunctionCall",
																"src": "2689:20:13"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "2679:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "2679:6:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "2738:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "2738:6:13"
																	},
																	{
																		"name": "size",
																		"nativeSrc": "2746:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "2746:4:13"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nativeSrc": "2718:19:13",
																	"nodeType": "YulIdentifier",
																	"src": "2718:19:13"
																},
																"nativeSrc": "2718:33:13",
																"nodeType": "YulFunctionCall",
																"src": "2718:33:13"
															},
															"nativeSrc": "2718:33:13",
															"nodeType": "YulExpressionStatement",
															"src": "2718:33:13"
														}
													]
												},
												"name": "allocate_memory",
												"nativeSrc": "2628:129:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "size",
														"nativeSrc": "2653:4:13",
														"nodeType": "YulTypedName",
														"src": "2653:4:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "2662:6:13",
														"nodeType": "YulTypedName",
														"src": "2662:6:13",
														"type": ""
													}
												],
												"src": "2628:129:13"
											},
											{
												"body": {
													"nativeSrc": "2830:241:13",
													"nodeType": "YulBlock",
													"src": "2830:241:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "2935:22:13",
																"nodeType": "YulBlock",
																"src": "2935:22:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "2937:16:13",
																				"nodeType": "YulIdentifier",
																				"src": "2937:16:13"
																			},
																			"nativeSrc": "2937:18:13",
																			"nodeType": "YulFunctionCall",
																			"src": "2937:18:13"
																		},
																		"nativeSrc": "2937:18:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "2937:18:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "2907:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "2907:6:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2915:18:13",
																		"nodeType": "YulLiteral",
																		"src": "2915:18:13",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "2904:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "2904:2:13"
																},
																"nativeSrc": "2904:30:13",
																"nodeType": "YulFunctionCall",
																"src": "2904:30:13"
															},
															"nativeSrc": "2901:56:13",
															"nodeType": "YulIf",
															"src": "2901:56:13"
														},
														{
															"nativeSrc": "2967:37:13",
															"nodeType": "YulAssignment",
															"src": "2967:37:13",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "2997:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "2997:6:13"
																	}
																],
																"functionName": {
																	"name": "round_up_to_mul_of_32",
																	"nativeSrc": "2975:21:13",
																	"nodeType": "YulIdentifier",
																	"src": "2975:21:13"
																},
																"nativeSrc": "2975:29:13",
																"nodeType": "YulFunctionCall",
																"src": "2975:29:13"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "2967:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "2967:4:13"
																}
															]
														},
														{
															"nativeSrc": "3041:23:13",
															"nodeType": "YulAssignment",
															"src": "3041:23:13",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nativeSrc": "3053:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "3053:4:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3059:4:13",
																		"nodeType": "YulLiteral",
																		"src": "3059:4:13",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3049:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "3049:3:13"
																},
																"nativeSrc": "3049:15:13",
																"nodeType": "YulFunctionCall",
																"src": "3049:15:13"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "3041:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "3041:4:13"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_string_memory_ptr",
												"nativeSrc": "2763:308:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nativeSrc": "2814:6:13",
														"nodeType": "YulTypedName",
														"src": "2814:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nativeSrc": "2825:4:13",
														"nodeType": "YulTypedName",
														"src": "2825:4:13",
														"type": ""
													}
												],
												"src": "2763:308:13"
											},
											{
												"body": {
													"nativeSrc": "3141:82:13",
													"nodeType": "YulBlock",
													"src": "3141:82:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nativeSrc": "3164:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "3164:3:13"
																	},
																	{
																		"name": "src",
																		"nativeSrc": "3169:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "3169:3:13"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "3174:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "3174:6:13"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nativeSrc": "3151:12:13",
																	"nodeType": "YulIdentifier",
																	"src": "3151:12:13"
																},
																"nativeSrc": "3151:30:13",
																"nodeType": "YulFunctionCall",
																"src": "3151:30:13"
															},
															"nativeSrc": "3151:30:13",
															"nodeType": "YulExpressionStatement",
															"src": "3151:30:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "3201:3:13",
																				"nodeType": "YulIdentifier",
																				"src": "3201:3:13"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "3206:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "3206:6:13"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3197:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "3197:3:13"
																		},
																		"nativeSrc": "3197:16:13",
																		"nodeType": "YulFunctionCall",
																		"src": "3197:16:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3215:1:13",
																		"nodeType": "YulLiteral",
																		"src": "3215:1:13",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3190:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "3190:6:13"
																},
																"nativeSrc": "3190:27:13",
																"nodeType": "YulFunctionCall",
																"src": "3190:27:13"
															},
															"nativeSrc": "3190:27:13",
															"nodeType": "YulExpressionStatement",
															"src": "3190:27:13"
														}
													]
												},
												"name": "copy_calldata_to_memory_with_cleanup",
												"nativeSrc": "3077:146:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "3123:3:13",
														"nodeType": "YulTypedName",
														"src": "3123:3:13",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "3128:3:13",
														"nodeType": "YulTypedName",
														"src": "3128:3:13",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "3133:6:13",
														"nodeType": "YulTypedName",
														"src": "3133:6:13",
														"type": ""
													}
												],
												"src": "3077:146:13"
											},
											{
												"body": {
													"nativeSrc": "3313:341:13",
													"nodeType": "YulBlock",
													"src": "3313:341:13",
													"statements": [
														{
															"nativeSrc": "3323:75:13",
															"nodeType": "YulAssignment",
															"src": "3323:75:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "3390:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "3390:6:13"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_string_memory_ptr",
																			"nativeSrc": "3348:41:13",
																			"nodeType": "YulIdentifier",
																			"src": "3348:41:13"
																		},
																		"nativeSrc": "3348:49:13",
																		"nodeType": "YulFunctionCall",
																		"src": "3348:49:13"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nativeSrc": "3332:15:13",
																	"nodeType": "YulIdentifier",
																	"src": "3332:15:13"
																},
																"nativeSrc": "3332:66:13",
																"nodeType": "YulFunctionCall",
																"src": "3332:66:13"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "3323:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "3323:5:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "3414:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "3414:5:13"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "3421:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "3421:6:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3407:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "3407:6:13"
																},
																"nativeSrc": "3407:21:13",
																"nodeType": "YulFunctionCall",
																"src": "3407:21:13"
															},
															"nativeSrc": "3407:21:13",
															"nodeType": "YulExpressionStatement",
															"src": "3407:21:13"
														},
														{
															"nativeSrc": "3437:27:13",
															"nodeType": "YulVariableDeclaration",
															"src": "3437:27:13",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "3452:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "3452:5:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3459:4:13",
																		"nodeType": "YulLiteral",
																		"src": "3459:4:13",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3448:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "3448:3:13"
																},
																"nativeSrc": "3448:16:13",
																"nodeType": "YulFunctionCall",
																"src": "3448:16:13"
															},
															"variables": [
																{
																	"name": "dst",
																	"nativeSrc": "3441:3:13",
																	"nodeType": "YulTypedName",
																	"src": "3441:3:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "3502:83:13",
																"nodeType": "YulBlock",
																"src": "3502:83:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
																				"nativeSrc": "3504:77:13",
																				"nodeType": "YulIdentifier",
																				"src": "3504:77:13"
																			},
																			"nativeSrc": "3504:79:13",
																			"nodeType": "YulFunctionCall",
																			"src": "3504:79:13"
																		},
																		"nativeSrc": "3504:79:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "3504:79:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nativeSrc": "3483:3:13",
																				"nodeType": "YulIdentifier",
																				"src": "3483:3:13"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "3488:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "3488:6:13"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3479:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "3479:3:13"
																		},
																		"nativeSrc": "3479:16:13",
																		"nodeType": "YulFunctionCall",
																		"src": "3479:16:13"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "3497:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "3497:3:13"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "3476:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "3476:2:13"
																},
																"nativeSrc": "3476:25:13",
																"nodeType": "YulFunctionCall",
																"src": "3476:25:13"
															},
															"nativeSrc": "3473:112:13",
															"nodeType": "YulIf",
															"src": "3473:112:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "3631:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "3631:3:13"
																	},
																	{
																		"name": "dst",
																		"nativeSrc": "3636:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "3636:3:13"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "3641:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "3641:6:13"
																	}
																],
																"functionName": {
																	"name": "copy_calldata_to_memory_with_cleanup",
																	"nativeSrc": "3594:36:13",
																	"nodeType": "YulIdentifier",
																	"src": "3594:36:13"
																},
																"nativeSrc": "3594:54:13",
																"nodeType": "YulFunctionCall",
																"src": "3594:54:13"
															},
															"nativeSrc": "3594:54:13",
															"nodeType": "YulExpressionStatement",
															"src": "3594:54:13"
														}
													]
												},
												"name": "abi_decode_available_length_t_string_memory_ptr",
												"nativeSrc": "3229:425:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "3286:3:13",
														"nodeType": "YulTypedName",
														"src": "3286:3:13",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "3291:6:13",
														"nodeType": "YulTypedName",
														"src": "3291:6:13",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "3299:3:13",
														"nodeType": "YulTypedName",
														"src": "3299:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "3307:5:13",
														"nodeType": "YulTypedName",
														"src": "3307:5:13",
														"type": ""
													}
												],
												"src": "3229:425:13"
											},
											{
												"body": {
													"nativeSrc": "3736:278:13",
													"nodeType": "YulBlock",
													"src": "3736:278:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "3785:83:13",
																"nodeType": "YulBlock",
																"src": "3785:83:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nativeSrc": "3787:77:13",
																				"nodeType": "YulIdentifier",
																				"src": "3787:77:13"
																			},
																			"nativeSrc": "3787:79:13",
																			"nodeType": "YulFunctionCall",
																			"src": "3787:79:13"
																		},
																		"nativeSrc": "3787:79:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "3787:79:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "3764:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "3764:6:13"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "3772:4:13",
																						"nodeType": "YulLiteral",
																						"src": "3772:4:13",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3760:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "3760:3:13"
																				},
																				"nativeSrc": "3760:17:13",
																				"nodeType": "YulFunctionCall",
																				"src": "3760:17:13"
																			},
																			{
																				"name": "end",
																				"nativeSrc": "3779:3:13",
																				"nodeType": "YulIdentifier",
																				"src": "3779:3:13"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "3756:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "3756:3:13"
																		},
																		"nativeSrc": "3756:27:13",
																		"nodeType": "YulFunctionCall",
																		"src": "3756:27:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "3749:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "3749:6:13"
																},
																"nativeSrc": "3749:35:13",
																"nodeType": "YulFunctionCall",
																"src": "3749:35:13"
															},
															"nativeSrc": "3746:122:13",
															"nodeType": "YulIf",
															"src": "3746:122:13"
														},
														{
															"nativeSrc": "3877:34:13",
															"nodeType": "YulVariableDeclaration",
															"src": "3877:34:13",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "3904:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "3904:6:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "3891:12:13",
																	"nodeType": "YulIdentifier",
																	"src": "3891:12:13"
																},
																"nativeSrc": "3891:20:13",
																"nodeType": "YulFunctionCall",
																"src": "3891:20:13"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "3881:6:13",
																	"nodeType": "YulTypedName",
																	"src": "3881:6:13",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "3920:88:13",
															"nodeType": "YulAssignment",
															"src": "3920:88:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "3981:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "3981:6:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3989:4:13",
																				"nodeType": "YulLiteral",
																				"src": "3989:4:13",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3977:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "3977:3:13"
																		},
																		"nativeSrc": "3977:17:13",
																		"nodeType": "YulFunctionCall",
																		"src": "3977:17:13"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "3996:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "3996:6:13"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "4004:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "4004:3:13"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_string_memory_ptr",
																	"nativeSrc": "3929:47:13",
																	"nodeType": "YulIdentifier",
																	"src": "3929:47:13"
																},
																"nativeSrc": "3929:79:13",
																"nodeType": "YulFunctionCall",
																"src": "3929:79:13"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "3920:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "3920:5:13"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_string_memory_ptr",
												"nativeSrc": "3674:340:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "3714:6:13",
														"nodeType": "YulTypedName",
														"src": "3714:6:13",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "3722:3:13",
														"nodeType": "YulTypedName",
														"src": "3722:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "3730:5:13",
														"nodeType": "YulTypedName",
														"src": "3730:5:13",
														"type": ""
													}
												],
												"src": "3674:340:13"
											},
											{
												"body": {
													"nativeSrc": "4096:433:13",
													"nodeType": "YulBlock",
													"src": "4096:433:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "4142:83:13",
																"nodeType": "YulBlock",
																"src": "4142:83:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "4144:77:13",
																				"nodeType": "YulIdentifier",
																				"src": "4144:77:13"
																			},
																			"nativeSrc": "4144:79:13",
																			"nodeType": "YulFunctionCall",
																			"src": "4144:79:13"
																		},
																		"nativeSrc": "4144:79:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "4144:79:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4117:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "4117:7:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4126:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "4126:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4113:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "4113:3:13"
																		},
																		"nativeSrc": "4113:23:13",
																		"nodeType": "YulFunctionCall",
																		"src": "4113:23:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4138:2:13",
																		"nodeType": "YulLiteral",
																		"src": "4138:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "4109:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "4109:3:13"
																},
																"nativeSrc": "4109:32:13",
																"nodeType": "YulFunctionCall",
																"src": "4109:32:13"
															},
															"nativeSrc": "4106:119:13",
															"nodeType": "YulIf",
															"src": "4106:119:13"
														},
														{
															"nativeSrc": "4235:287:13",
															"nodeType": "YulBlock",
															"src": "4235:287:13",
															"statements": [
																{
																	"nativeSrc": "4250:45:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4250:45:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4281:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "4281:9:13"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "4292:1:13",
																						"nodeType": "YulLiteral",
																						"src": "4292:1:13",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4277:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "4277:3:13"
																				},
																				"nativeSrc": "4277:17:13",
																				"nodeType": "YulFunctionCall",
																				"src": "4277:17:13"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nativeSrc": "4264:12:13",
																			"nodeType": "YulIdentifier",
																			"src": "4264:12:13"
																		},
																		"nativeSrc": "4264:31:13",
																		"nodeType": "YulFunctionCall",
																		"src": "4264:31:13"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4254:6:13",
																			"nodeType": "YulTypedName",
																			"src": "4254:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "4342:83:13",
																		"nodeType": "YulBlock",
																		"src": "4342:83:13",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "4344:77:13",
																						"nodeType": "YulIdentifier",
																						"src": "4344:77:13"
																					},
																					"nativeSrc": "4344:79:13",
																					"nodeType": "YulFunctionCall",
																					"src": "4344:79:13"
																				},
																				"nativeSrc": "4344:79:13",
																				"nodeType": "YulExpressionStatement",
																				"src": "4344:79:13"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "4314:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "4314:6:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4322:18:13",
																				"nodeType": "YulLiteral",
																				"src": "4322:18:13",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "4311:2:13",
																			"nodeType": "YulIdentifier",
																			"src": "4311:2:13"
																		},
																		"nativeSrc": "4311:30:13",
																		"nodeType": "YulFunctionCall",
																		"src": "4311:30:13"
																	},
																	"nativeSrc": "4308:117:13",
																	"nodeType": "YulIf",
																	"src": "4308:117:13"
																},
																{
																	"nativeSrc": "4439:73:13",
																	"nodeType": "YulAssignment",
																	"src": "4439:73:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4484:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "4484:9:13"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4495:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "4495:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4480:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "4480:3:13"
																				},
																				"nativeSrc": "4480:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "4480:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4504:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "4504:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_string_memory_ptr",
																			"nativeSrc": "4449:30:13",
																			"nodeType": "YulIdentifier",
																			"src": "4449:30:13"
																		},
																		"nativeSrc": "4449:63:13",
																		"nodeType": "YulFunctionCall",
																		"src": "4449:63:13"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "4439:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "4439:6:13"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_string_memory_ptr",
												"nativeSrc": "4020:509:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4066:9:13",
														"nodeType": "YulTypedName",
														"src": "4066:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "4077:7:13",
														"nodeType": "YulTypedName",
														"src": "4077:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "4089:6:13",
														"nodeType": "YulTypedName",
														"src": "4089:6:13",
														"type": ""
													}
												],
												"src": "4020:509:13"
											},
											{
												"body": {
													"nativeSrc": "4580:51:13",
													"nodeType": "YulBlock",
													"src": "4580:51:13",
													"statements": [
														{
															"nativeSrc": "4590:35:13",
															"nodeType": "YulAssignment",
															"src": "4590:35:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "4619:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "4619:5:13"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "4601:17:13",
																	"nodeType": "YulIdentifier",
																	"src": "4601:17:13"
																},
																"nativeSrc": "4601:24:13",
																"nodeType": "YulFunctionCall",
																"src": "4601:24:13"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "4590:7:13",
																	"nodeType": "YulIdentifier",
																	"src": "4590:7:13"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "4535:96:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4562:5:13",
														"nodeType": "YulTypedName",
														"src": "4562:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "4572:7:13",
														"nodeType": "YulTypedName",
														"src": "4572:7:13",
														"type": ""
													}
												],
												"src": "4535:96:13"
											},
											{
												"body": {
													"nativeSrc": "4702:53:13",
													"nodeType": "YulBlock",
													"src": "4702:53:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4719:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "4719:3:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4742:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "4742:5:13"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "4724:17:13",
																			"nodeType": "YulIdentifier",
																			"src": "4724:17:13"
																		},
																		"nativeSrc": "4724:24:13",
																		"nodeType": "YulFunctionCall",
																		"src": "4724:24:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4712:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "4712:6:13"
																},
																"nativeSrc": "4712:37:13",
																"nodeType": "YulFunctionCall",
																"src": "4712:37:13"
															},
															"nativeSrc": "4712:37:13",
															"nodeType": "YulExpressionStatement",
															"src": "4712:37:13"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "4637:118:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4690:5:13",
														"nodeType": "YulTypedName",
														"src": "4690:5:13",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "4697:3:13",
														"nodeType": "YulTypedName",
														"src": "4697:3:13",
														"type": ""
													}
												],
												"src": "4637:118:13"
											},
											{
												"body": {
													"nativeSrc": "4887:206:13",
													"nodeType": "YulBlock",
													"src": "4887:206:13",
													"statements": [
														{
															"nativeSrc": "4897:26:13",
															"nodeType": "YulAssignment",
															"src": "4897:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4909:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "4909:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4920:2:13",
																		"nodeType": "YulLiteral",
																		"src": "4920:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4905:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "4905:3:13"
																},
																"nativeSrc": "4905:18:13",
																"nodeType": "YulFunctionCall",
																"src": "4905:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4897:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "4897:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "4977:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "4977:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4990:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "4990:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5001:1:13",
																				"nodeType": "YulLiteral",
																				"src": "5001:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4986:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "4986:3:13"
																		},
																		"nativeSrc": "4986:17:13",
																		"nodeType": "YulFunctionCall",
																		"src": "4986:17:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "4933:43:13",
																	"nodeType": "YulIdentifier",
																	"src": "4933:43:13"
																},
																"nativeSrc": "4933:71:13",
																"nodeType": "YulFunctionCall",
																"src": "4933:71:13"
															},
															"nativeSrc": "4933:71:13",
															"nodeType": "YulExpressionStatement",
															"src": "4933:71:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "5058:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "5058:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5071:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "5071:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5082:2:13",
																				"nodeType": "YulLiteral",
																				"src": "5082:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5067:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "5067:3:13"
																		},
																		"nativeSrc": "5067:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "5067:18:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "5014:43:13",
																	"nodeType": "YulIdentifier",
																	"src": "5014:43:13"
																},
																"nativeSrc": "5014:72:13",
																"nodeType": "YulFunctionCall",
																"src": "5014:72:13"
															},
															"nativeSrc": "5014:72:13",
															"nodeType": "YulExpressionStatement",
															"src": "5014:72:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed",
												"nativeSrc": "4761:332:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4851:9:13",
														"nodeType": "YulTypedName",
														"src": "4851:9:13",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "4863:6:13",
														"nodeType": "YulTypedName",
														"src": "4863:6:13",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "4871:6:13",
														"nodeType": "YulTypedName",
														"src": "4871:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4882:4:13",
														"nodeType": "YulTypedName",
														"src": "4882:4:13",
														"type": ""
													}
												],
												"src": "4761:332:13"
											},
											{
												"body": {
													"nativeSrc": "5139:76:13",
													"nodeType": "YulBlock",
													"src": "5139:76:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "5193:16:13",
																"nodeType": "YulBlock",
																"src": "5193:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "5202:1:13",
																					"nodeType": "YulLiteral",
																					"src": "5202:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "5205:1:13",
																					"nodeType": "YulLiteral",
																					"src": "5205:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "5195:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "5195:6:13"
																			},
																			"nativeSrc": "5195:12:13",
																			"nodeType": "YulFunctionCall",
																			"src": "5195:12:13"
																		},
																		"nativeSrc": "5195:12:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "5195:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "5162:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "5162:5:13"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "5184:5:13",
																						"nodeType": "YulIdentifier",
																						"src": "5184:5:13"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nativeSrc": "5169:14:13",
																					"nodeType": "YulIdentifier",
																					"src": "5169:14:13"
																				},
																				"nativeSrc": "5169:21:13",
																				"nodeType": "YulFunctionCall",
																				"src": "5169:21:13"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "5159:2:13",
																			"nodeType": "YulIdentifier",
																			"src": "5159:2:13"
																		},
																		"nativeSrc": "5159:32:13",
																		"nodeType": "YulFunctionCall",
																		"src": "5159:32:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "5152:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "5152:6:13"
																},
																"nativeSrc": "5152:40:13",
																"nodeType": "YulFunctionCall",
																"src": "5152:40:13"
															},
															"nativeSrc": "5149:60:13",
															"nodeType": "YulIf",
															"src": "5149:60:13"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nativeSrc": "5099:116:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5132:5:13",
														"nodeType": "YulTypedName",
														"src": "5132:5:13",
														"type": ""
													}
												],
												"src": "5099:116:13"
											},
											{
												"body": {
													"nativeSrc": "5281:77:13",
													"nodeType": "YulBlock",
													"src": "5281:77:13",
													"statements": [
														{
															"nativeSrc": "5291:22:13",
															"nodeType": "YulAssignment",
															"src": "5291:22:13",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "5306:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "5306:6:13"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "5300:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "5300:5:13"
																},
																"nativeSrc": "5300:13:13",
																"nodeType": "YulFunctionCall",
																"src": "5300:13:13"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "5291:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "5291:5:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "5346:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "5346:5:13"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nativeSrc": "5322:23:13",
																	"nodeType": "YulIdentifier",
																	"src": "5322:23:13"
																},
																"nativeSrc": "5322:30:13",
																"nodeType": "YulFunctionCall",
																"src": "5322:30:13"
															},
															"nativeSrc": "5322:30:13",
															"nodeType": "YulExpressionStatement",
															"src": "5322:30:13"
														}
													]
												},
												"name": "abi_decode_t_bool_fromMemory",
												"nativeSrc": "5221:137:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "5259:6:13",
														"nodeType": "YulTypedName",
														"src": "5259:6:13",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "5267:3:13",
														"nodeType": "YulTypedName",
														"src": "5267:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "5275:5:13",
														"nodeType": "YulTypedName",
														"src": "5275:5:13",
														"type": ""
													}
												],
												"src": "5221:137:13"
											},
											{
												"body": {
													"nativeSrc": "5438:271:13",
													"nodeType": "YulBlock",
													"src": "5438:271:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "5484:83:13",
																"nodeType": "YulBlock",
																"src": "5484:83:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "5486:77:13",
																				"nodeType": "YulIdentifier",
																				"src": "5486:77:13"
																			},
																			"nativeSrc": "5486:79:13",
																			"nodeType": "YulFunctionCall",
																			"src": "5486:79:13"
																		},
																		"nativeSrc": "5486:79:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "5486:79:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5459:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "5459:7:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "5468:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "5468:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5455:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "5455:3:13"
																		},
																		"nativeSrc": "5455:23:13",
																		"nodeType": "YulFunctionCall",
																		"src": "5455:23:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5480:2:13",
																		"nodeType": "YulLiteral",
																		"src": "5480:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "5451:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "5451:3:13"
																},
																"nativeSrc": "5451:32:13",
																"nodeType": "YulFunctionCall",
																"src": "5451:32:13"
															},
															"nativeSrc": "5448:119:13",
															"nodeType": "YulIf",
															"src": "5448:119:13"
														},
														{
															"nativeSrc": "5577:125:13",
															"nodeType": "YulBlock",
															"src": "5577:125:13",
															"statements": [
																{
																	"nativeSrc": "5592:15:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5592:15:13",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5606:1:13",
																		"nodeType": "YulLiteral",
																		"src": "5606:1:13",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5596:6:13",
																			"nodeType": "YulTypedName",
																			"src": "5596:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5621:71:13",
																	"nodeType": "YulAssignment",
																	"src": "5621:71:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5664:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "5664:9:13"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5675:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "5675:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5660:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "5660:3:13"
																				},
																				"nativeSrc": "5660:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "5660:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5684:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "5684:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool_fromMemory",
																			"nativeSrc": "5631:28:13",
																			"nodeType": "YulIdentifier",
																			"src": "5631:28:13"
																		},
																		"nativeSrc": "5631:61:13",
																		"nodeType": "YulFunctionCall",
																		"src": "5631:61:13"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "5621:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "5621:6:13"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nativeSrc": "5364:345:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5408:9:13",
														"nodeType": "YulTypedName",
														"src": "5408:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "5419:7:13",
														"nodeType": "YulTypedName",
														"src": "5419:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "5431:6:13",
														"nodeType": "YulTypedName",
														"src": "5431:6:13",
														"type": ""
													}
												],
												"src": "5364:345:13"
											},
											{
												"body": {
													"nativeSrc": "5774:40:13",
													"nodeType": "YulBlock",
													"src": "5774:40:13",
													"statements": [
														{
															"nativeSrc": "5785:22:13",
															"nodeType": "YulAssignment",
															"src": "5785:22:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "5801:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "5801:5:13"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "5795:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "5795:5:13"
																},
																"nativeSrc": "5795:12:13",
																"nodeType": "YulFunctionCall",
																"src": "5795:12:13"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "5785:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "5785:6:13"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "5715:99:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5757:5:13",
														"nodeType": "YulTypedName",
														"src": "5757:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "5767:6:13",
														"nodeType": "YulTypedName",
														"src": "5767:6:13",
														"type": ""
													}
												],
												"src": "5715:99:13"
											},
											{
												"body": {
													"nativeSrc": "5916:73:13",
													"nodeType": "YulBlock",
													"src": "5916:73:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5933:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "5933:3:13"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "5938:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "5938:6:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5926:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "5926:6:13"
																},
																"nativeSrc": "5926:19:13",
																"nodeType": "YulFunctionCall",
																"src": "5926:19:13"
															},
															"nativeSrc": "5926:19:13",
															"nodeType": "YulExpressionStatement",
															"src": "5926:19:13"
														},
														{
															"nativeSrc": "5954:29:13",
															"nodeType": "YulAssignment",
															"src": "5954:29:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5973:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "5973:3:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5978:4:13",
																		"nodeType": "YulLiteral",
																		"src": "5978:4:13",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5969:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "5969:3:13"
																},
																"nativeSrc": "5969:14:13",
																"nodeType": "YulFunctionCall",
																"src": "5969:14:13"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "5954:11:13",
																	"nodeType": "YulIdentifier",
																	"src": "5954:11:13"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "5820:169:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "5888:3:13",
														"nodeType": "YulTypedName",
														"src": "5888:3:13",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "5893:6:13",
														"nodeType": "YulTypedName",
														"src": "5893:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "5904:11:13",
														"nodeType": "YulTypedName",
														"src": "5904:11:13",
														"type": ""
													}
												],
												"src": "5820:169:13"
											},
											{
												"body": {
													"nativeSrc": "6057:184:13",
													"nodeType": "YulBlock",
													"src": "6057:184:13",
													"statements": [
														{
															"nativeSrc": "6067:10:13",
															"nodeType": "YulVariableDeclaration",
															"src": "6067:10:13",
															"value": {
																"kind": "number",
																"nativeSrc": "6076:1:13",
																"nodeType": "YulLiteral",
																"src": "6076:1:13",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nativeSrc": "6071:1:13",
																	"nodeType": "YulTypedName",
																	"src": "6071:1:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "6136:63:13",
																"nodeType": "YulBlock",
																"src": "6136:63:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nativeSrc": "6161:3:13",
																							"nodeType": "YulIdentifier",
																							"src": "6161:3:13"
																						},
																						{
																							"name": "i",
																							"nativeSrc": "6166:1:13",
																							"nodeType": "YulIdentifier",
																							"src": "6166:1:13"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "6157:3:13",
																						"nodeType": "YulIdentifier",
																						"src": "6157:3:13"
																					},
																					"nativeSrc": "6157:11:13",
																					"nodeType": "YulFunctionCall",
																					"src": "6157:11:13"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nativeSrc": "6180:3:13",
																									"nodeType": "YulIdentifier",
																									"src": "6180:3:13"
																								},
																								{
																									"name": "i",
																									"nativeSrc": "6185:1:13",
																									"nodeType": "YulIdentifier",
																									"src": "6185:1:13"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "6176:3:13",
																								"nodeType": "YulIdentifier",
																								"src": "6176:3:13"
																							},
																							"nativeSrc": "6176:11:13",
																							"nodeType": "YulFunctionCall",
																							"src": "6176:11:13"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nativeSrc": "6170:5:13",
																						"nodeType": "YulIdentifier",
																						"src": "6170:5:13"
																					},
																					"nativeSrc": "6170:18:13",
																					"nodeType": "YulFunctionCall",
																					"src": "6170:18:13"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "6150:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "6150:6:13"
																			},
																			"nativeSrc": "6150:39:13",
																			"nodeType": "YulFunctionCall",
																			"src": "6150:39:13"
																		},
																		"nativeSrc": "6150:39:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "6150:39:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nativeSrc": "6097:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "6097:1:13"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "6100:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "6100:6:13"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "6094:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "6094:2:13"
																},
																"nativeSrc": "6094:13:13",
																"nodeType": "YulFunctionCall",
																"src": "6094:13:13"
															},
															"nativeSrc": "6086:113:13",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "6108:19:13",
																"nodeType": "YulBlock",
																"src": "6108:19:13",
																"statements": [
																	{
																		"nativeSrc": "6110:15:13",
																		"nodeType": "YulAssignment",
																		"src": "6110:15:13",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nativeSrc": "6119:1:13",
																					"nodeType": "YulIdentifier",
																					"src": "6119:1:13"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "6122:2:13",
																					"nodeType": "YulLiteral",
																					"src": "6122:2:13",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "6115:3:13",
																				"nodeType": "YulIdentifier",
																				"src": "6115:3:13"
																			},
																			"nativeSrc": "6115:10:13",
																			"nodeType": "YulFunctionCall",
																			"src": "6115:10:13"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nativeSrc": "6110:1:13",
																				"nodeType": "YulIdentifier",
																				"src": "6110:1:13"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "6090:3:13",
																"nodeType": "YulBlock",
																"src": "6090:3:13",
																"statements": []
															},
															"src": "6086:113:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "6219:3:13",
																				"nodeType": "YulIdentifier",
																				"src": "6219:3:13"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "6224:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "6224:6:13"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6215:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "6215:3:13"
																		},
																		"nativeSrc": "6215:16:13",
																		"nodeType": "YulFunctionCall",
																		"src": "6215:16:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6233:1:13",
																		"nodeType": "YulLiteral",
																		"src": "6233:1:13",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6208:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "6208:6:13"
																},
																"nativeSrc": "6208:27:13",
																"nodeType": "YulFunctionCall",
																"src": "6208:27:13"
															},
															"nativeSrc": "6208:27:13",
															"nodeType": "YulExpressionStatement",
															"src": "6208:27:13"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nativeSrc": "5995:246:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "6039:3:13",
														"nodeType": "YulTypedName",
														"src": "6039:3:13",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "6044:3:13",
														"nodeType": "YulTypedName",
														"src": "6044:3:13",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "6049:6:13",
														"nodeType": "YulTypedName",
														"src": "6049:6:13",
														"type": ""
													}
												],
												"src": "5995:246:13"
											},
											{
												"body": {
													"nativeSrc": "6339:285:13",
													"nodeType": "YulBlock",
													"src": "6339:285:13",
													"statements": [
														{
															"nativeSrc": "6349:53:13",
															"nodeType": "YulVariableDeclaration",
															"src": "6349:53:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "6396:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "6396:5:13"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "6363:32:13",
																	"nodeType": "YulIdentifier",
																	"src": "6363:32:13"
																},
																"nativeSrc": "6363:39:13",
																"nodeType": "YulFunctionCall",
																"src": "6363:39:13"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "6353:6:13",
																	"nodeType": "YulTypedName",
																	"src": "6353:6:13",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "6411:78:13",
															"nodeType": "YulAssignment",
															"src": "6411:78:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6477:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "6477:3:13"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "6482:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "6482:6:13"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "6418:58:13",
																	"nodeType": "YulIdentifier",
																	"src": "6418:58:13"
																},
																"nativeSrc": "6418:71:13",
																"nodeType": "YulFunctionCall",
																"src": "6418:71:13"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "6411:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "6411:3:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "6537:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "6537:5:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6544:4:13",
																				"nodeType": "YulLiteral",
																				"src": "6544:4:13",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6533:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "6533:3:13"
																		},
																		"nativeSrc": "6533:16:13",
																		"nodeType": "YulFunctionCall",
																		"src": "6533:16:13"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "6551:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "6551:3:13"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "6556:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "6556:6:13"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "6498:34:13",
																	"nodeType": "YulIdentifier",
																	"src": "6498:34:13"
																},
																"nativeSrc": "6498:65:13",
																"nodeType": "YulFunctionCall",
																"src": "6498:65:13"
															},
															"nativeSrc": "6498:65:13",
															"nodeType": "YulExpressionStatement",
															"src": "6498:65:13"
														},
														{
															"nativeSrc": "6572:46:13",
															"nodeType": "YulAssignment",
															"src": "6572:46:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6583:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "6583:3:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "6610:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "6610:6:13"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "6588:21:13",
																			"nodeType": "YulIdentifier",
																			"src": "6588:21:13"
																		},
																		"nativeSrc": "6588:29:13",
																		"nodeType": "YulFunctionCall",
																		"src": "6588:29:13"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6579:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "6579:3:13"
																},
																"nativeSrc": "6579:39:13",
																"nodeType": "YulFunctionCall",
																"src": "6579:39:13"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "6572:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "6572:3:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "6247:377:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6320:5:13",
														"nodeType": "YulTypedName",
														"src": "6320:5:13",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "6327:3:13",
														"nodeType": "YulTypedName",
														"src": "6327:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "6335:3:13",
														"nodeType": "YulTypedName",
														"src": "6335:3:13",
														"type": ""
													}
												],
												"src": "6247:377:13"
											},
											{
												"body": {
													"nativeSrc": "6748:195:13",
													"nodeType": "YulBlock",
													"src": "6748:195:13",
													"statements": [
														{
															"nativeSrc": "6758:26:13",
															"nodeType": "YulAssignment",
															"src": "6758:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6770:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "6770:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6781:2:13",
																		"nodeType": "YulLiteral",
																		"src": "6781:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6766:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "6766:3:13"
																},
																"nativeSrc": "6766:18:13",
																"nodeType": "YulFunctionCall",
																"src": "6766:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6758:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "6758:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6805:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "6805:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6816:1:13",
																				"nodeType": "YulLiteral",
																				"src": "6816:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6801:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "6801:3:13"
																		},
																		"nativeSrc": "6801:17:13",
																		"nodeType": "YulFunctionCall",
																		"src": "6801:17:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "6824:4:13",
																				"nodeType": "YulIdentifier",
																				"src": "6824:4:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "6830:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "6830:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "6820:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "6820:3:13"
																		},
																		"nativeSrc": "6820:20:13",
																		"nodeType": "YulFunctionCall",
																		"src": "6820:20:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6794:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "6794:6:13"
																},
																"nativeSrc": "6794:47:13",
																"nodeType": "YulFunctionCall",
																"src": "6794:47:13"
															},
															"nativeSrc": "6794:47:13",
															"nodeType": "YulExpressionStatement",
															"src": "6794:47:13"
														},
														{
															"nativeSrc": "6850:86:13",
															"nodeType": "YulAssignment",
															"src": "6850:86:13",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "6922:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "6922:6:13"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "6931:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "6931:4:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "6858:63:13",
																	"nodeType": "YulIdentifier",
																	"src": "6858:63:13"
																},
																"nativeSrc": "6858:78:13",
																"nodeType": "YulFunctionCall",
																"src": "6858:78:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6850:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "6850:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "6630:313:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6720:9:13",
														"nodeType": "YulTypedName",
														"src": "6720:9:13",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "6732:6:13",
														"nodeType": "YulTypedName",
														"src": "6732:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6743:4:13",
														"nodeType": "YulTypedName",
														"src": "6743:4:13",
														"type": ""
													}
												],
												"src": "6630:313:13"
											},
											{
												"body": {
													"nativeSrc": "7097:282:13",
													"nodeType": "YulBlock",
													"src": "7097:282:13",
													"statements": [
														{
															"nativeSrc": "7107:26:13",
															"nodeType": "YulAssignment",
															"src": "7107:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7119:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "7119:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7130:2:13",
																		"nodeType": "YulLiteral",
																		"src": "7130:2:13",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7115:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "7115:3:13"
																},
																"nativeSrc": "7115:18:13",
																"nodeType": "YulFunctionCall",
																"src": "7115:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7107:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "7107:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "7187:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "7187:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7200:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "7200:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7211:1:13",
																				"nodeType": "YulLiteral",
																				"src": "7211:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7196:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "7196:3:13"
																		},
																		"nativeSrc": "7196:17:13",
																		"nodeType": "YulFunctionCall",
																		"src": "7196:17:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "7143:43:13",
																	"nodeType": "YulIdentifier",
																	"src": "7143:43:13"
																},
																"nativeSrc": "7143:71:13",
																"nodeType": "YulFunctionCall",
																"src": "7143:71:13"
															},
															"nativeSrc": "7143:71:13",
															"nodeType": "YulExpressionStatement",
															"src": "7143:71:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "7268:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "7268:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7281:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "7281:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7292:2:13",
																				"nodeType": "YulLiteral",
																				"src": "7292:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7277:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "7277:3:13"
																		},
																		"nativeSrc": "7277:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "7277:18:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "7224:43:13",
																	"nodeType": "YulIdentifier",
																	"src": "7224:43:13"
																},
																"nativeSrc": "7224:72:13",
																"nodeType": "YulFunctionCall",
																"src": "7224:72:13"
															},
															"nativeSrc": "7224:72:13",
															"nodeType": "YulExpressionStatement",
															"src": "7224:72:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "7344:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "7344:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7357:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "7357:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7368:2:13",
																				"nodeType": "YulLiteral",
																				"src": "7368:2:13",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7353:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "7353:3:13"
																		},
																		"nativeSrc": "7353:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "7353:18:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nativeSrc": "7306:37:13",
																	"nodeType": "YulIdentifier",
																	"src": "7306:37:13"
																},
																"nativeSrc": "7306:66:13",
																"nodeType": "YulFunctionCall",
																"src": "7306:66:13"
															},
															"nativeSrc": "7306:66:13",
															"nodeType": "YulExpressionStatement",
															"src": "7306:66:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_bool__to_t_address_t_address_t_bool__fromStack_reversed",
												"nativeSrc": "6949:430:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7053:9:13",
														"nodeType": "YulTypedName",
														"src": "7053:9:13",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "7065:6:13",
														"nodeType": "YulTypedName",
														"src": "7065:6:13",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "7073:6:13",
														"nodeType": "YulTypedName",
														"src": "7073:6:13",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "7081:6:13",
														"nodeType": "YulTypedName",
														"src": "7081:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7092:4:13",
														"nodeType": "YulTypedName",
														"src": "7092:4:13",
														"type": ""
													}
												],
												"src": "6949:430:13"
											}
										]
									},
									"contents": "{\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint160_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(identity(cleanup_t_uint160(value)))\n    }\n\n    function convert_t_uint160_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_MyNFT_$119_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_contract$_MyNFT_$119_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_MyNFT_$119_to_t_address(value))\n    }\n\n    function abi_encode_tuple_t_contract$_MyNFT_$119__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_MyNFT_$119_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_string_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_calldata_to_memory_with_cleanup(src, dst, length) {\n        calldatacopy(dst, src, length)\n        mstore(add(dst, length), 0)\n    }\n\n    function abi_decode_available_length_t_string_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_string_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_calldata_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // string\n    function abi_decode_t_string_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_string_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_string_memory_ptr(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := calldataload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_string_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_bool__to_t_address_t_address_t_bool__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_bool_to_t_bool_fromStack(value2,  add(headStart, 64))\n\n    }\n\n}\n",
									"id": 13,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b506004361061004a575f3560e01c80636aa5e3761461004e57806398300e181461006c578063a15db9d01461008a578063cc9562a5146100a6575b5f80fd5b6100566100b0565b60405161006391906102a1565b60405180910390f35b610074610150565b6040516100819190610334565b60405180910390f35b6100a4600480360381019061009f919061049a565b610173565b005b6100ae6101fb565b005b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663e985e9c533306040518363ffffffff1660e01b815260040161010c929190610501565b602060405180830381865afa158015610127573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061014b9190610552565b905090565b5f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b5f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16630bdc9008826040518263ffffffff1660e01b81526004016101cb91906105f7565b5f604051808303815f87803b1580156101e2575f80fd5b505af11580156101f4573d5f803e3d5ffd5b5050505050565b5f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166329d6724e333060016040518463ffffffff1660e01b815260040161025893929190610617565b5f604051808303815f87803b15801561026f575f80fd5b505af1158015610281573d5f803e3d5ffd5b50505050565b5f8115159050919050565b61029b81610287565b82525050565b5f6020820190506102b45f830184610292565b92915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f819050919050565b5f6102fc6102f76102f2846102ba565b6102d9565b6102ba565b9050919050565b5f61030d826102e2565b9050919050565b5f61031e82610303565b9050919050565b61032e81610314565b82525050565b5f6020820190506103475f830184610325565b92915050565b5f604051905090565b5f80fd5b5f80fd5b5f80fd5b5f80fd5b5f601f19601f8301169050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b6103ac82610366565b810181811067ffffffffffffffff821117156103cb576103ca610376565b5b80604052505050565b5f6103dd61034d565b90506103e982826103a3565b919050565b5f67ffffffffffffffff82111561040857610407610376565b5b61041182610366565b9050602081019050919050565b828183375f83830152505050565b5f61043e610439846103ee565b6103d4565b90508281526020810184848401111561045a57610459610362565b5b61046584828561041e565b509392505050565b5f82601f8301126104815761048061035e565b5b813561049184826020860161042c565b91505092915050565b5f602082840312156104af576104ae610356565b5b5f82013567ffffffffffffffff8111156104cc576104cb61035a565b5b6104d88482850161046d565b91505092915050565b5f6104eb826102ba565b9050919050565b6104fb816104e1565b82525050565b5f6040820190506105145f8301856104f2565b61052160208301846104f2565b9392505050565b61053181610287565b811461053b575f80fd5b50565b5f8151905061054c81610528565b92915050565b5f6020828403121561056757610566610356565b5b5f6105748482850161053e565b91505092915050565b5f81519050919050565b5f82825260208201905092915050565b5f5b838110156105b4578082015181840152602081019050610599565b5f8484015250505050565b5f6105c98261057d565b6105d38185610587565b93506105e3818560208601610597565b6105ec81610366565b840191505092915050565b5f6020820190508181035f83015261060f81846105bf565b905092915050565b5f60608201905061062a5f8301866104f2565b61063760208301856104f2565b6106446040830184610292565b94935050505056fea26469706673582212200372a5e4fdfe2a87cb8b92b3a72a216f3e8e4a6bd5596ecd6aef5fd55fc282b264736f6c63430008150033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x4A JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6AA5E376 EQ PUSH2 0x4E JUMPI DUP1 PUSH4 0x98300E18 EQ PUSH2 0x6C JUMPI DUP1 PUSH4 0xA15DB9D0 EQ PUSH2 0x8A JUMPI DUP1 PUSH4 0xCC9562A5 EQ PUSH2 0xA6 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x56 PUSH2 0xB0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x63 SWAP2 SWAP1 PUSH2 0x2A1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x74 PUSH2 0x150 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x81 SWAP2 SWAP1 PUSH2 0x334 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xA4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x9F SWAP2 SWAP1 PUSH2 0x49A JUMP JUMPDEST PUSH2 0x173 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xAE PUSH2 0x1FB JUMP JUMPDEST STOP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xE985E9C5 CALLER ADDRESS PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x10C SWAP3 SWAP2 SWAP1 PUSH2 0x501 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x127 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x14B SWAP2 SWAP1 PUSH2 0x552 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xBDC9008 DUP3 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1CB SWAP2 SWAP1 PUSH2 0x5F7 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1E2 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1F4 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x29D6724E CALLER ADDRESS PUSH1 0x1 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x258 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x617 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x26F JUMPI PUSH0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x281 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x29B DUP2 PUSH2 0x287 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2B4 PUSH0 DUP4 ADD DUP5 PUSH2 0x292 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x2FC PUSH2 0x2F7 PUSH2 0x2F2 DUP5 PUSH2 0x2BA JUMP JUMPDEST PUSH2 0x2D9 JUMP JUMPDEST PUSH2 0x2BA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x30D DUP3 PUSH2 0x2E2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x31E DUP3 PUSH2 0x303 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x32E DUP2 PUSH2 0x314 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x347 PUSH0 DUP4 ADD DUP5 PUSH2 0x325 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH2 0x3AC DUP3 PUSH2 0x366 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x3CB JUMPI PUSH2 0x3CA PUSH2 0x376 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x3DD PUSH2 0x34D JUMP JUMPDEST SWAP1 POP PUSH2 0x3E9 DUP3 DUP3 PUSH2 0x3A3 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x408 JUMPI PUSH2 0x407 PUSH2 0x376 JUMP JUMPDEST JUMPDEST PUSH2 0x411 DUP3 PUSH2 0x366 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x43E PUSH2 0x439 DUP5 PUSH2 0x3EE JUMP JUMPDEST PUSH2 0x3D4 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x45A JUMPI PUSH2 0x459 PUSH2 0x362 JUMP JUMPDEST JUMPDEST PUSH2 0x465 DUP5 DUP3 DUP6 PUSH2 0x41E JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x481 JUMPI PUSH2 0x480 PUSH2 0x35E JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x491 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x42C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x4AF JUMPI PUSH2 0x4AE PUSH2 0x356 JUMP JUMPDEST JUMPDEST PUSH0 DUP3 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x4CC JUMPI PUSH2 0x4CB PUSH2 0x35A JUMP JUMPDEST JUMPDEST PUSH2 0x4D8 DUP5 DUP3 DUP6 ADD PUSH2 0x46D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x4EB DUP3 PUSH2 0x2BA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x4FB DUP2 PUSH2 0x4E1 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x514 PUSH0 DUP4 ADD DUP6 PUSH2 0x4F2 JUMP JUMPDEST PUSH2 0x521 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x4F2 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x531 DUP2 PUSH2 0x287 JUMP JUMPDEST DUP2 EQ PUSH2 0x53B JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x54C DUP2 PUSH2 0x528 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x567 JUMPI PUSH2 0x566 PUSH2 0x356 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x574 DUP5 DUP3 DUP6 ADD PUSH2 0x53E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x5B4 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x599 JUMP JUMPDEST PUSH0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x5C9 DUP3 PUSH2 0x57D JUMP JUMPDEST PUSH2 0x5D3 DUP2 DUP6 PUSH2 0x587 JUMP JUMPDEST SWAP4 POP PUSH2 0x5E3 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x597 JUMP JUMPDEST PUSH2 0x5EC DUP2 PUSH2 0x366 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x60F DUP2 DUP5 PUSH2 0x5BF JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x62A PUSH0 DUP4 ADD DUP7 PUSH2 0x4F2 JUMP JUMPDEST PUSH2 0x637 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x4F2 JUMP JUMPDEST PUSH2 0x644 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x292 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SUB PUSH19 0xA5E4FDFE2A87CB8B92B3A72A216F3E8E4A6BD5 MSIZE PUSH15 0xCD6AEF5FD55FC282B264736F6C6343 STOP ADDMOD ISZERO STOP CALLER ",
							"sourceMap": "86:1737:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1248:121;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;294:17;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;509:145;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;835:220;;;:::i;:::-;;1248:121;1289:4;1313;;;;;;;;;;;:21;;;1335:10;1355:4;1313:48;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1306:55;;1248:121;:::o;294:17::-;;;;;;;;;;;;:::o;509:145::-;629:4;;;;;;;;;;:12;;;642:3;629:17;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;509:145;:::o;835:220::-;1000:4;;;;;;;;;;:14;;;1015:10;1035:4;1042;1000:47;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;835:220::o;7:90:13:-;41:7;84:5;77:13;70:21;59:32;;7:90;;;:::o;103:109::-;184:21;199:5;184:21;:::i;:::-;179:3;172:34;103:109;;:::o;218:210::-;305:4;343:2;332:9;328:18;320:26;;356:65;418:1;407:9;403:17;394:6;356:65;:::i;:::-;218:210;;;;:::o;434:126::-;471:7;511:42;504:5;500:54;489:65;;434:126;;;:::o;566:60::-;594:3;615:5;608:12;;566:60;;;:::o;632:142::-;682:9;715:53;733:34;742:24;760:5;742:24;:::i;:::-;733:34;:::i;:::-;715:53;:::i;:::-;702:66;;632:142;;;:::o;780:126::-;830:9;863:37;894:5;863:37;:::i;:::-;850:50;;780:126;;;:::o;912:139::-;975:9;1008:37;1039:5;1008:37;:::i;:::-;995:50;;912:139;;;:::o;1057:157::-;1157:50;1201:5;1157:50;:::i;:::-;1152:3;1145:63;1057:157;;:::o;1220:248::-;1326:4;1364:2;1353:9;1349:18;1341:26;;1377:84;1458:1;1447:9;1443:17;1434:6;1377:84;:::i;:::-;1220:248;;;;:::o;1474:75::-;1507:6;1540:2;1534:9;1524:19;;1474:75;:::o;1555:117::-;1664:1;1661;1654:12;1678:117;1787:1;1784;1777:12;1801:117;1910:1;1907;1900:12;1924:117;2033:1;2030;2023:12;2047:102;2088:6;2139:2;2135:7;2130:2;2123:5;2119:14;2115:28;2105:38;;2047:102;;;:::o;2155:180::-;2203:77;2200:1;2193:88;2300:4;2297:1;2290:15;2324:4;2321:1;2314:15;2341:281;2424:27;2446:4;2424:27;:::i;:::-;2416:6;2412:40;2554:6;2542:10;2539:22;2518:18;2506:10;2503:34;2500:62;2497:88;;;2565:18;;:::i;:::-;2497:88;2605:10;2601:2;2594:22;2384:238;2341:281;;:::o;2628:129::-;2662:6;2689:20;;:::i;:::-;2679:30;;2718:33;2746:4;2738:6;2718:33;:::i;:::-;2628:129;;;:::o;2763:308::-;2825:4;2915:18;2907:6;2904:30;2901:56;;;2937:18;;:::i;:::-;2901:56;2975:29;2997:6;2975:29;:::i;:::-;2967:37;;3059:4;3053;3049:15;3041:23;;2763:308;;;:::o;3077:146::-;3174:6;3169:3;3164;3151:30;3215:1;3206:6;3201:3;3197:16;3190:27;3077:146;;;:::o;3229:425::-;3307:5;3332:66;3348:49;3390:6;3348:49;:::i;:::-;3332:66;:::i;:::-;3323:75;;3421:6;3414:5;3407:21;3459:4;3452:5;3448:16;3497:3;3488:6;3483:3;3479:16;3476:25;3473:112;;;3504:79;;:::i;:::-;3473:112;3594:54;3641:6;3636:3;3631;3594:54;:::i;:::-;3313:341;3229:425;;;;;:::o;3674:340::-;3730:5;3779:3;3772:4;3764:6;3760:17;3756:27;3746:122;;3787:79;;:::i;:::-;3746:122;3904:6;3891:20;3929:79;4004:3;3996:6;3989:4;3981:6;3977:17;3929:79;:::i;:::-;3920:88;;3736:278;3674:340;;;;:::o;4020:509::-;4089:6;4138:2;4126:9;4117:7;4113:23;4109:32;4106:119;;;4144:79;;:::i;:::-;4106:119;4292:1;4281:9;4277:17;4264:31;4322:18;4314:6;4311:30;4308:117;;;4344:79;;:::i;:::-;4308:117;4449:63;4504:7;4495:6;4484:9;4480:22;4449:63;:::i;:::-;4439:73;;4235:287;4020:509;;;;:::o;4535:96::-;4572:7;4601:24;4619:5;4601:24;:::i;:::-;4590:35;;4535:96;;;:::o;4637:118::-;4724:24;4742:5;4724:24;:::i;:::-;4719:3;4712:37;4637:118;;:::o;4761:332::-;4882:4;4920:2;4909:9;4905:18;4897:26;;4933:71;5001:1;4990:9;4986:17;4977:6;4933:71;:::i;:::-;5014:72;5082:2;5071:9;5067:18;5058:6;5014:72;:::i;:::-;4761:332;;;;;:::o;5099:116::-;5169:21;5184:5;5169:21;:::i;:::-;5162:5;5159:32;5149:60;;5205:1;5202;5195:12;5149:60;5099:116;:::o;5221:137::-;5275:5;5306:6;5300:13;5291:22;;5322:30;5346:5;5322:30;:::i;:::-;5221:137;;;;:::o;5364:345::-;5431:6;5480:2;5468:9;5459:7;5455:23;5451:32;5448:119;;;5486:79;;:::i;:::-;5448:119;5606:1;5631:61;5684:7;5675:6;5664:9;5660:22;5631:61;:::i;:::-;5621:71;;5577:125;5364:345;;;;:::o;5715:99::-;5767:6;5801:5;5795:12;5785:22;;5715:99;;;:::o;5820:169::-;5904:11;5938:6;5933:3;5926:19;5978:4;5973:3;5969:14;5954:29;;5820:169;;;;:::o;5995:246::-;6076:1;6086:113;6100:6;6097:1;6094:13;6086:113;;;6185:1;6180:3;6176:11;6170:18;6166:1;6161:3;6157:11;6150:39;6122:2;6119:1;6115:10;6110:15;;6086:113;;;6233:1;6224:6;6219:3;6215:16;6208:27;6057:184;5995:246;;;:::o;6247:377::-;6335:3;6363:39;6396:5;6363:39;:::i;:::-;6418:71;6482:6;6477:3;6418:71;:::i;:::-;6411:78;;6498:65;6556:6;6551:3;6544:4;6537:5;6533:16;6498:65;:::i;:::-;6588:29;6610:6;6588:29;:::i;:::-;6583:3;6579:39;6572:46;;6339:285;6247:377;;;;:::o;6630:313::-;6743:4;6781:2;6770:9;6766:18;6758:26;;6830:9;6824:4;6820:20;6816:1;6805:9;6801:17;6794:47;6858:78;6931:4;6922:6;6858:78;:::i;:::-;6850:86;;6630:313;;;;:::o;6949:430::-;7092:4;7130:2;7119:9;7115:18;7107:26;;7143:71;7211:1;7200:9;7196:17;7187:6;7143:71;:::i;:::-;7224:72;7292:2;7281:9;7277:18;7268:6;7224:72;:::i;:::-;7306:66;7368:2;7357:9;7353:18;7344:6;7306:66;:::i;:::-;6949:430;;;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "333200",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"_nft()": "infinite",
								"_saleNFTmint(string)": "infinite",
								"salesNFT()": "infinite",
								"setApprovalForAll()": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 86,
									"end": 1823,
									"name": "PUSH",
									"source": 1,
									"value": "80"
								},
								{
									"begin": 86,
									"end": 1823,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 86,
									"end": 1823,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 384,
									"end": 501,
									"name": "CALLVALUE",
									"source": 1
								},
								{
									"begin": 384,
									"end": 501,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 384,
									"end": 501,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 384,
									"end": 501,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 384,
									"end": 501,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 384,
									"end": 501,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 384,
									"end": 501,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 384,
									"end": 501,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 384,
									"end": 501,
									"name": "tag",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 384,
									"end": 501,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 384,
									"end": 501,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 384,
									"end": 501,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 384,
									"end": 501,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 384,
									"end": 501,
									"name": "PUSHSIZE",
									"source": 1
								},
								{
									"begin": 384,
									"end": 501,
									"name": "CODESIZE",
									"source": 1
								},
								{
									"begin": 384,
									"end": 501,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 384,
									"end": 501,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 384,
									"end": 501,
									"name": "PUSHSIZE",
									"source": 1
								},
								{
									"begin": 384,
									"end": 501,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 384,
									"end": 501,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 384,
									"end": 501,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 384,
									"end": 501,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 384,
									"end": 501,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 384,
									"end": 501,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 384,
									"end": 501,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 384,
									"end": 501,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 384,
									"end": 501,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 384,
									"end": 501,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 384,
									"end": 501,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 384,
									"end": 501,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 384,
									"end": 501,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 384,
									"end": 501,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 384,
									"end": 501,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 384,
									"end": 501,
									"name": "tag",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 384,
									"end": 501,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 435,
									"end": 441,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 422,
									"end": 426,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 422,
									"end": 426,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 422,
									"end": 442,
									"name": "PUSH",
									"source": 1,
									"value": "100"
								},
								{
									"begin": 422,
									"end": 442,
									"name": "EXP",
									"source": 1
								},
								{
									"begin": 422,
									"end": 442,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 422,
									"end": 442,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 422,
									"end": 442,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 422,
									"end": 442,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 422,
									"end": 442,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 422,
									"end": 442,
									"name": "NOT",
									"source": 1
								},
								{
									"begin": 422,
									"end": 442,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 422,
									"end": 442,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 422,
									"end": 442,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 422,
									"end": 442,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 422,
									"end": 442,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 422,
									"end": 442,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 422,
									"end": 442,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 422,
									"end": 442,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 422,
									"end": 442,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 422,
									"end": 442,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 384,
									"end": 501,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 86,
									"end": 1823,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "6"
								},
								{
									"begin": 86,
									"end": 1823,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 13,
									"value": "8"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 13
								},
								{
									"begin": 334,
									"end": 460,
									"name": "tag",
									"source": 13,
									"value": "10"
								},
								{
									"begin": 334,
									"end": 460,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 371,
									"end": 378,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 453,
									"name": "PUSH",
									"source": 13,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 404,
									"end": 409,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 400,
									"end": 454,
									"name": "AND",
									"source": 13
								},
								{
									"begin": 389,
									"end": 454,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 389,
									"end": 454,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 334,
									"end": 460,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 334,
									"end": 460,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 466,
									"end": 562,
									"name": "tag",
									"source": 13,
									"value": "11"
								},
								{
									"begin": 466,
									"end": 562,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 503,
									"end": 510,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 550,
									"end": 555,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "10"
								},
								{
									"begin": 532,
									"end": 556,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 532,
									"end": 556,
									"name": "tag",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 521,
									"end": 556,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 521,
									"end": 556,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 466,
									"end": 562,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 466,
									"end": 562,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 568,
									"end": 690,
									"name": "tag",
									"source": 13,
									"value": "12"
								},
								{
									"begin": 568,
									"end": 690,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "22"
								},
								{
									"begin": 659,
									"end": 664,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "11"
								},
								{
									"begin": 641,
									"end": 665,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 641,
									"end": 665,
									"name": "tag",
									"source": 13,
									"value": "22"
								},
								{
									"begin": 641,
									"end": 665,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 634,
									"end": 639,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 631,
									"end": 666,
									"name": "EQ",
									"source": 13
								},
								{
									"begin": 621,
									"end": 684,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "23"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 680,
									"end": 681,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 677,
									"end": 678,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 670,
									"end": 682,
									"name": "REVERT",
									"source": 13
								},
								{
									"begin": 621,
									"end": 684,
									"name": "tag",
									"source": 13,
									"value": "23"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 568,
									"end": 690,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 568,
									"end": 690,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 696,
									"end": 839,
									"name": "tag",
									"source": 13,
									"value": "13"
								},
								{
									"begin": 696,
									"end": 839,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 753,
									"end": 758,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 784,
									"end": 790,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 778,
									"end": 791,
									"name": "MLOAD",
									"source": 13
								},
								{
									"begin": 769,
									"end": 791,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 769,
									"end": 791,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "25"
								},
								{
									"begin": 827,
									"end": 832,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "12"
								},
								{
									"begin": 800,
									"end": 833,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 800,
									"end": 833,
									"name": "tag",
									"source": 13,
									"value": "25"
								},
								{
									"begin": 800,
									"end": 833,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP3",
									"source": 13
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 696,
									"end": 839,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "tag",
									"source": 13,
									"value": "3"
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 915,
									"end": 921,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 964,
									"end": 966,
									"name": "PUSH",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 952,
									"end": 961,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 943,
									"end": 950,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 939,
									"end": 962,
									"name": "SUB",
									"source": 13
								},
								{
									"begin": 935,
									"end": 967,
									"name": "SLT",
									"source": 13
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "ISZERO",
									"source": 13
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "27"
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "28"
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "8"
								},
								{
									"begin": 970,
									"end": 1049,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "tag",
									"source": 13,
									"value": "28"
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "tag",
									"source": 13,
									"value": "27"
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 1090,
									"end": 1091,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "29"
								},
								{
									"begin": 1171,
									"end": 1178,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 1162,
									"end": 1168,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 1151,
									"end": 1160,
									"name": "DUP6",
									"source": 13
								},
								{
									"begin": 1147,
									"end": 1169,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "13"
								},
								{
									"begin": 1115,
									"end": 1179,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "tag",
									"source": 13,
									"value": "29"
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 1105,
									"end": 1179,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 1105,
									"end": 1179,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 1061,
									"end": 1189,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "SWAP3",
									"source": 13
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 845,
									"end": 1196,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 86,
									"end": 1823,
									"name": "tag",
									"source": 1,
									"value": "6"
								},
								{
									"begin": 86,
									"end": 1823,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 86,
									"end": 1823,
									"name": "PUSH #[$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 86,
									"end": 1823,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 86,
									"end": 1823,
									"name": "PUSH [$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 86,
									"end": 1823,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 86,
									"end": 1823,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 86,
									"end": 1823,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 86,
									"end": 1823,
									"name": "RETURN",
									"source": 1
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212200372a5e4fdfe2a87cb8b92b3a72a216f3e8e4a6bd5596ecd6aef5fd55fc282b264736f6c63430008150033",
									".code": [
										{
											"begin": 86,
											"end": 1823,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 86,
											"end": 1823,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 86,
											"end": 1823,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 86,
											"end": 1823,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 86,
											"end": 1823,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 86,
											"end": 1823,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 86,
											"end": 1823,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 86,
											"end": 1823,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 86,
											"end": 1823,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 86,
											"end": 1823,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 86,
											"end": 1823,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 86,
											"end": 1823,
											"name": "tag",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 86,
											"end": 1823,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 86,
											"end": 1823,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 86,
											"end": 1823,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 86,
											"end": 1823,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 86,
											"end": 1823,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 86,
											"end": 1823,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 86,
											"end": 1823,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 86,
											"end": 1823,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 86,
											"end": 1823,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 86,
											"end": 1823,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 86,
											"end": 1823,
											"name": "SHR",
											"source": 1
										},
										{
											"begin": 86,
											"end": 1823,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 86,
											"end": 1823,
											"name": "PUSH",
											"source": 1,
											"value": "6AA5E376"
										},
										{
											"begin": 86,
											"end": 1823,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 86,
											"end": 1823,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 86,
											"end": 1823,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 86,
											"end": 1823,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 86,
											"end": 1823,
											"name": "PUSH",
											"source": 1,
											"value": "98300E18"
										},
										{
											"begin": 86,
											"end": 1823,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 86,
											"end": 1823,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 86,
											"end": 1823,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 86,
											"end": 1823,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 86,
											"end": 1823,
											"name": "PUSH",
											"source": 1,
											"value": "A15DB9D0"
										},
										{
											"begin": 86,
											"end": 1823,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 86,
											"end": 1823,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 86,
											"end": 1823,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 86,
											"end": 1823,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 86,
											"end": 1823,
											"name": "PUSH",
											"source": 1,
											"value": "CC9562A5"
										},
										{
											"begin": 86,
											"end": 1823,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 86,
											"end": 1823,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 86,
											"end": 1823,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 86,
											"end": 1823,
											"name": "tag",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 86,
											"end": 1823,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 86,
											"end": 1823,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 86,
											"end": 1823,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 86,
											"end": 1823,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1248,
											"end": 1369,
											"name": "tag",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 1248,
											"end": 1369,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1248,
											"end": 1369,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 1248,
											"end": 1369,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 1248,
											"end": 1369,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1248,
											"end": 1369,
											"name": "tag",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 1248,
											"end": 1369,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1248,
											"end": 1369,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1248,
											"end": 1369,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1248,
											"end": 1369,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 1248,
											"end": 1369,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1248,
											"end": 1369,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1248,
											"end": 1369,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 1248,
											"end": 1369,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1248,
											"end": 1369,
											"name": "tag",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 1248,
											"end": 1369,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1248,
											"end": 1369,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1248,
											"end": 1369,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1248,
											"end": 1369,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1248,
											"end": 1369,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1248,
											"end": 1369,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1248,
											"end": 1369,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1248,
											"end": 1369,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 294,
											"end": 311,
											"name": "tag",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 294,
											"end": 311,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 294,
											"end": 311,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 294,
											"end": 311,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 294,
											"end": 311,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 294,
											"end": 311,
											"name": "tag",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 294,
											"end": 311,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 294,
											"end": 311,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 294,
											"end": 311,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 294,
											"end": 311,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 294,
											"end": 311,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 294,
											"end": 311,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 294,
											"end": 311,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 294,
											"end": 311,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 294,
											"end": 311,
											"name": "tag",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 294,
											"end": 311,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 294,
											"end": 311,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 294,
											"end": 311,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 294,
											"end": 311,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 294,
											"end": 311,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 294,
											"end": 311,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 294,
											"end": 311,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 294,
											"end": 311,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 509,
											"end": 654,
											"name": "tag",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 509,
											"end": 654,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 509,
											"end": 654,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 509,
											"end": 654,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 509,
											"end": 654,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 509,
											"end": 654,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 509,
											"end": 654,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 509,
											"end": 654,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 509,
											"end": 654,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 509,
											"end": 654,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 509,
											"end": 654,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 509,
											"end": 654,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 509,
											"end": 654,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 509,
											"end": 654,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 509,
											"end": 654,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 509,
											"end": 654,
											"name": "tag",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 509,
											"end": 654,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 509,
											"end": 654,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 509,
											"end": 654,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 509,
											"end": 654,
											"name": "tag",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 509,
											"end": 654,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 509,
											"end": 654,
											"name": "STOP",
											"source": 1
										},
										{
											"begin": 835,
											"end": 1055,
											"name": "tag",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 835,
											"end": 1055,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 835,
											"end": 1055,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 835,
											"end": 1055,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 835,
											"end": 1055,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 835,
											"end": 1055,
											"name": "tag",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 835,
											"end": 1055,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 835,
											"end": 1055,
											"name": "STOP",
											"source": 1
										},
										{
											"begin": 1248,
											"end": 1369,
											"name": "tag",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 1248,
											"end": 1369,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1289,
											"end": 1293,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1313,
											"end": 1317,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1313,
											"end": 1317,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1313,
											"end": 1317,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1313,
											"end": 1317,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1313,
											"end": 1317,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1313,
											"end": 1317,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 1313,
											"end": 1317,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 1313,
											"end": 1317,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1313,
											"end": 1317,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 1313,
											"end": 1317,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1313,
											"end": 1317,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1313,
											"end": 1334,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1313,
											"end": 1334,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1313,
											"end": 1334,
											"name": "PUSH",
											"source": 1,
											"value": "E985E9C5"
										},
										{
											"begin": 1335,
											"end": 1345,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 1355,
											"end": 1359,
											"name": "ADDRESS",
											"source": 1
										},
										{
											"begin": 1313,
											"end": 1361,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1313,
											"end": 1361,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1313,
											"end": 1361,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1313,
											"end": 1361,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1313,
											"end": 1361,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1313,
											"end": 1361,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 1313,
											"end": 1361,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 1313,
											"end": 1361,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1313,
											"end": 1361,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1313,
											"end": 1361,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1313,
											"end": 1361,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1313,
											"end": 1361,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 1313,
											"end": 1361,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1313,
											"end": 1361,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1313,
											"end": 1361,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1313,
											"end": 1361,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 1313,
											"end": 1361,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1313,
											"end": 1361,
											"name": "tag",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 1313,
											"end": 1361,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1313,
											"end": 1361,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1313,
											"end": 1361,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1313,
											"end": 1361,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1313,
											"end": 1361,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1313,
											"end": 1361,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1313,
											"end": 1361,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1313,
											"end": 1361,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1313,
											"end": 1361,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 1313,
											"end": 1361,
											"name": "GAS",
											"source": 1
										},
										{
											"begin": 1313,
											"end": 1361,
											"name": "STATICCALL",
											"source": 1
										},
										{
											"begin": 1313,
											"end": 1361,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1313,
											"end": 1361,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1313,
											"end": 1361,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1313,
											"end": 1361,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 1313,
											"end": 1361,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1313,
											"end": 1361,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 1313,
											"end": 1361,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1313,
											"end": 1361,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1313,
											"end": 1361,
											"name": "RETURNDATACOPY",
											"source": 1
										},
										{
											"begin": 1313,
											"end": 1361,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 1313,
											"end": 1361,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1313,
											"end": 1361,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1313,
											"end": 1361,
											"name": "tag",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 1313,
											"end": 1361,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1313,
											"end": 1361,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1313,
											"end": 1361,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1313,
											"end": 1361,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1313,
											"end": 1361,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1313,
											"end": 1361,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1313,
											"end": 1361,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1313,
											"end": 1361,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 1313,
											"end": 1361,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 1313,
											"end": 1361,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 1313,
											"end": 1361,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 1313,
											"end": 1361,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1313,
											"end": 1361,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1313,
											"end": 1361,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1313,
											"end": 1361,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1313,
											"end": 1361,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1313,
											"end": 1361,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1313,
											"end": 1361,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1313,
											"end": 1361,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1313,
											"end": 1361,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1313,
											"end": 1361,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1313,
											"end": 1361,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1313,
											"end": 1361,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1313,
											"end": 1361,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 1313,
											"end": 1361,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1313,
											"end": 1361,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1313,
											"end": 1361,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 1313,
											"end": 1361,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1313,
											"end": 1361,
											"name": "tag",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 1313,
											"end": 1361,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1306,
											"end": 1361,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1306,
											"end": 1361,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1248,
											"end": 1369,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1248,
											"end": 1369,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 294,
											"end": 311,
											"name": "tag",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 294,
											"end": 311,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 294,
											"end": 311,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 294,
											"end": 311,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 294,
											"end": 311,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 294,
											"end": 311,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 294,
											"end": 311,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 294,
											"end": 311,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 294,
											"end": 311,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 294,
											"end": 311,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 294,
											"end": 311,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 294,
											"end": 311,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 294,
											"end": 311,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 294,
											"end": 311,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 509,
											"end": 654,
											"name": "tag",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 509,
											"end": 654,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 629,
											"end": 633,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 629,
											"end": 633,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 629,
											"end": 633,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 629,
											"end": 633,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 629,
											"end": 633,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 629,
											"end": 633,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 629,
											"end": 633,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 629,
											"end": 633,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 629,
											"end": 633,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 629,
											"end": 633,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 629,
											"end": 641,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 629,
											"end": 641,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 629,
											"end": 641,
											"name": "PUSH",
											"source": 1,
											"value": "BDC9008"
										},
										{
											"begin": 642,
											"end": 645,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 629,
											"end": 646,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 629,
											"end": 646,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 629,
											"end": 646,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 629,
											"end": 646,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 629,
											"end": 646,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 629,
											"end": 646,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 629,
											"end": 646,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 629,
											"end": 646,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 629,
											"end": 646,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 629,
											"end": 646,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 629,
											"end": 646,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 629,
											"end": 646,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 629,
											"end": 646,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 629,
											"end": 646,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 629,
											"end": 646,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 629,
											"end": 646,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 629,
											"end": 646,
											"name": "tag",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 629,
											"end": 646,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 629,
											"end": 646,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 629,
											"end": 646,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 629,
											"end": 646,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 629,
											"end": 646,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 629,
											"end": 646,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 629,
											"end": 646,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 629,
											"end": 646,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 629,
											"end": 646,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 629,
											"end": 646,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 629,
											"end": 646,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 629,
											"end": 646,
											"name": "EXTCODESIZE",
											"source": 1
										},
										{
											"begin": 629,
											"end": 646,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 629,
											"end": 646,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 629,
											"end": 646,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 629,
											"end": 646,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 629,
											"end": 646,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 629,
											"end": 646,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 629,
											"end": 646,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 629,
											"end": 646,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 629,
											"end": 646,
											"name": "tag",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 629,
											"end": 646,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 629,
											"end": 646,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 629,
											"end": 646,
											"name": "GAS",
											"source": 1
										},
										{
											"begin": 629,
											"end": 646,
											"name": "CALL",
											"source": 1
										},
										{
											"begin": 629,
											"end": 646,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 629,
											"end": 646,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 629,
											"end": 646,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 629,
											"end": 646,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 629,
											"end": 646,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 629,
											"end": 646,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 629,
											"end": 646,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 629,
											"end": 646,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 629,
											"end": 646,
											"name": "RETURNDATACOPY",
											"source": 1
										},
										{
											"begin": 629,
											"end": 646,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 629,
											"end": 646,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 629,
											"end": 646,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 629,
											"end": 646,
											"name": "tag",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 629,
											"end": 646,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 629,
											"end": 646,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 629,
											"end": 646,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 629,
											"end": 646,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 629,
											"end": 646,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 509,
											"end": 654,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 509,
											"end": 654,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 835,
											"end": 1055,
											"name": "tag",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 835,
											"end": 1055,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1000,
											"end": 1004,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1000,
											"end": 1004,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1000,
											"end": 1004,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1000,
											"end": 1004,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1000,
											"end": 1004,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 1000,
											"end": 1004,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 1000,
											"end": 1004,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1000,
											"end": 1004,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 1000,
											"end": 1004,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1000,
											"end": 1004,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1000,
											"end": 1014,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1000,
											"end": 1014,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1000,
											"end": 1014,
											"name": "PUSH",
											"source": 1,
											"value": "29D6724E"
										},
										{
											"begin": 1015,
											"end": 1025,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 1035,
											"end": 1039,
											"name": "ADDRESS",
											"source": 1
										},
										{
											"begin": 1042,
											"end": 1046,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 1000,
											"end": 1047,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1000,
											"end": 1047,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1000,
											"end": 1047,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1000,
											"end": 1047,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1000,
											"end": 1047,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1000,
											"end": 1047,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 1000,
											"end": 1047,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 1000,
											"end": 1047,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1000,
											"end": 1047,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1000,
											"end": 1047,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1000,
											"end": 1047,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1000,
											"end": 1047,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 1000,
											"end": 1047,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 1000,
											"end": 1047,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1000,
											"end": 1047,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1000,
											"end": 1047,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1000,
											"end": 1047,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 1000,
											"end": 1047,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1000,
											"end": 1047,
											"name": "tag",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 1000,
											"end": 1047,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1000,
											"end": 1047,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1000,
											"end": 1047,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1000,
											"end": 1047,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1000,
											"end": 1047,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1000,
											"end": 1047,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1000,
											"end": 1047,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1000,
											"end": 1047,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1000,
											"end": 1047,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1000,
											"end": 1047,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 1000,
											"end": 1047,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1000,
											"end": 1047,
											"name": "EXTCODESIZE",
											"source": 1
										},
										{
											"begin": 1000,
											"end": 1047,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1000,
											"end": 1047,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1000,
											"end": 1047,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1000,
											"end": 1047,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 1000,
											"end": 1047,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1000,
											"end": 1047,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1000,
											"end": 1047,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1000,
											"end": 1047,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1000,
											"end": 1047,
											"name": "tag",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 1000,
											"end": 1047,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1000,
											"end": 1047,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1000,
											"end": 1047,
											"name": "GAS",
											"source": 1
										},
										{
											"begin": 1000,
											"end": 1047,
											"name": "CALL",
											"source": 1
										},
										{
											"begin": 1000,
											"end": 1047,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1000,
											"end": 1047,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1000,
											"end": 1047,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1000,
											"end": 1047,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 1000,
											"end": 1047,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1000,
											"end": 1047,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 1000,
											"end": 1047,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1000,
											"end": 1047,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1000,
											"end": 1047,
											"name": "RETURNDATACOPY",
											"source": 1
										},
										{
											"begin": 1000,
											"end": 1047,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 1000,
											"end": 1047,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1000,
											"end": 1047,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1000,
											"end": 1047,
											"name": "tag",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 1000,
											"end": 1047,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1000,
											"end": 1047,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1000,
											"end": 1047,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1000,
											"end": 1047,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1000,
											"end": 1047,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 835,
											"end": 1055,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 97,
											"name": "tag",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 7,
											"end": 97,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 41,
											"end": 48,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 84,
											"end": 89,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 77,
											"end": 90,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 70,
											"end": 91,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 59,
											"end": 91,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 59,
											"end": 91,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7,
											"end": 97,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 7,
											"end": 97,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 7,
											"end": 97,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7,
											"end": 97,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 103,
											"end": 212,
											"name": "tag",
											"source": 13,
											"value": "41"
										},
										{
											"begin": 103,
											"end": 212,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 184,
											"end": 205,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "72"
										},
										{
											"begin": 199,
											"end": 204,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 184,
											"end": 205,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 184,
											"end": 205,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 184,
											"end": 205,
											"name": "tag",
											"source": 13,
											"value": "72"
										},
										{
											"begin": 184,
											"end": 205,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 179,
											"end": 182,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 172,
											"end": 206,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 103,
											"end": 212,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 103,
											"end": 212,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 103,
											"end": 212,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 218,
											"end": 428,
											"name": "tag",
											"source": 13,
											"value": "10"
										},
										{
											"begin": 218,
											"end": 428,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 305,
											"end": 309,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 343,
											"end": 345,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 332,
											"end": 341,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 328,
											"end": 346,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 320,
											"end": 346,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 320,
											"end": 346,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 356,
											"end": 421,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "74"
										},
										{
											"begin": 418,
											"end": 419,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 407,
											"end": 416,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 403,
											"end": 420,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 394,
											"end": 400,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 356,
											"end": 421,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "41"
										},
										{
											"begin": 356,
											"end": 421,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 356,
											"end": 421,
											"name": "tag",
											"source": 13,
											"value": "74"
										},
										{
											"begin": 356,
											"end": 421,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 218,
											"end": 428,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 218,
											"end": 428,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 218,
											"end": 428,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 218,
											"end": 428,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 218,
											"end": 428,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 434,
											"end": 560,
											"name": "tag",
											"source": 13,
											"value": "42"
										},
										{
											"begin": 434,
											"end": 560,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 471,
											"end": 478,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 511,
											"end": 553,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 504,
											"end": 509,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 500,
											"end": 554,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 489,
											"end": 554,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 489,
											"end": 554,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 434,
											"end": 560,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 434,
											"end": 560,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 434,
											"end": 560,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 434,
											"end": 560,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 566,
											"end": 626,
											"name": "tag",
											"source": 13,
											"value": "43"
										},
										{
											"begin": 566,
											"end": 626,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 594,
											"end": 597,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 615,
											"end": 620,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 608,
											"end": 620,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 608,
											"end": 620,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 566,
											"end": 626,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 566,
											"end": 626,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 566,
											"end": 626,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 566,
											"end": 626,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 632,
											"end": 774,
											"name": "tag",
											"source": 13,
											"value": "44"
										},
										{
											"begin": 632,
											"end": 774,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 682,
											"end": 691,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 715,
											"end": 768,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "78"
										},
										{
											"begin": 733,
											"end": 767,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "79"
										},
										{
											"begin": 742,
											"end": 766,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "80"
										},
										{
											"begin": 760,
											"end": 765,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 742,
											"end": 766,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "42"
										},
										{
											"begin": 742,
											"end": 766,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 742,
											"end": 766,
											"name": "tag",
											"source": 13,
											"value": "80"
										},
										{
											"begin": 742,
											"end": 766,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 733,
											"end": 767,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "43"
										},
										{
											"begin": 733,
											"end": 767,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 733,
											"end": 767,
											"name": "tag",
											"source": 13,
											"value": "79"
										},
										{
											"begin": 733,
											"end": 767,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 715,
											"end": 768,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "42"
										},
										{
											"begin": 715,
											"end": 768,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 715,
											"end": 768,
											"name": "tag",
											"source": 13,
											"value": "78"
										},
										{
											"begin": 715,
											"end": 768,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 702,
											"end": 768,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 702,
											"end": 768,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 632,
											"end": 774,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 632,
											"end": 774,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 632,
											"end": 774,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 632,
											"end": 774,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 780,
											"end": 906,
											"name": "tag",
											"source": 13,
											"value": "45"
										},
										{
											"begin": 780,
											"end": 906,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 830,
											"end": 839,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 863,
											"end": 900,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "82"
										},
										{
											"begin": 894,
											"end": 899,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 863,
											"end": 900,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "44"
										},
										{
											"begin": 863,
											"end": 900,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 863,
											"end": 900,
											"name": "tag",
											"source": 13,
											"value": "82"
										},
										{
											"begin": 863,
											"end": 900,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 850,
											"end": 900,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 850,
											"end": 900,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 780,
											"end": 906,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 780,
											"end": 906,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 780,
											"end": 906,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 780,
											"end": 906,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 912,
											"end": 1051,
											"name": "tag",
											"source": 13,
											"value": "46"
										},
										{
											"begin": 912,
											"end": 1051,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 975,
											"end": 984,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1008,
											"end": 1045,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "84"
										},
										{
											"begin": 1039,
											"end": 1044,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1008,
											"end": 1045,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "45"
										},
										{
											"begin": 1008,
											"end": 1045,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1008,
											"end": 1045,
											"name": "tag",
											"source": 13,
											"value": "84"
										},
										{
											"begin": 1008,
											"end": 1045,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 995,
											"end": 1045,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 995,
											"end": 1045,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 912,
											"end": 1051,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 912,
											"end": 1051,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 912,
											"end": 1051,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 912,
											"end": 1051,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1057,
											"end": 1214,
											"name": "tag",
											"source": 13,
											"value": "47"
										},
										{
											"begin": 1057,
											"end": 1214,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1157,
											"end": 1207,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "86"
										},
										{
											"begin": 1201,
											"end": 1206,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1157,
											"end": 1207,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "46"
										},
										{
											"begin": 1157,
											"end": 1207,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1157,
											"end": 1207,
											"name": "tag",
											"source": 13,
											"value": "86"
										},
										{
											"begin": 1157,
											"end": 1207,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1152,
											"end": 1155,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1145,
											"end": 1208,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1057,
											"end": 1214,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1057,
											"end": 1214,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1057,
											"end": 1214,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1220,
											"end": 1468,
											"name": "tag",
											"source": 13,
											"value": "14"
										},
										{
											"begin": 1220,
											"end": 1468,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1326,
											"end": 1330,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1364,
											"end": 1366,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 1353,
											"end": 1362,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1349,
											"end": 1367,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1341,
											"end": 1367,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1341,
											"end": 1367,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1377,
											"end": 1461,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "88"
										},
										{
											"begin": 1458,
											"end": 1459,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1447,
											"end": 1456,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 1443,
											"end": 1460,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1434,
											"end": 1440,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 1377,
											"end": 1461,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "47"
										},
										{
											"begin": 1377,
											"end": 1461,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1377,
											"end": 1461,
											"name": "tag",
											"source": 13,
											"value": "88"
										},
										{
											"begin": 1377,
											"end": 1461,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1220,
											"end": 1468,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 1220,
											"end": 1468,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1220,
											"end": 1468,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1220,
											"end": 1468,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1220,
											"end": 1468,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1474,
											"end": 1549,
											"name": "tag",
											"source": 13,
											"value": "48"
										},
										{
											"begin": 1474,
											"end": 1549,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1507,
											"end": 1513,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1540,
											"end": 1542,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 1534,
											"end": 1543,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 1524,
											"end": 1543,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1524,
											"end": 1543,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1474,
											"end": 1549,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1474,
											"end": 1549,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1555,
											"end": 1672,
											"name": "tag",
											"source": 13,
											"value": "49"
										},
										{
											"begin": 1555,
											"end": 1672,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1664,
											"end": 1665,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1661,
											"end": 1662,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1654,
											"end": 1666,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 1678,
											"end": 1795,
											"name": "tag",
											"source": 13,
											"value": "50"
										},
										{
											"begin": 1678,
											"end": 1795,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1787,
											"end": 1788,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1784,
											"end": 1785,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1777,
											"end": 1789,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 1801,
											"end": 1918,
											"name": "tag",
											"source": 13,
											"value": "51"
										},
										{
											"begin": 1801,
											"end": 1918,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1910,
											"end": 1911,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1907,
											"end": 1908,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1900,
											"end": 1912,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 1924,
											"end": 2041,
											"name": "tag",
											"source": 13,
											"value": "52"
										},
										{
											"begin": 1924,
											"end": 2041,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2033,
											"end": 2034,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2030,
											"end": 2031,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 2023,
											"end": 2035,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 2047,
											"end": 2149,
											"name": "tag",
											"source": 13,
											"value": "53"
										},
										{
											"begin": 2047,
											"end": 2149,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2088,
											"end": 2094,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2139,
											"end": 2141,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 2135,
											"end": 2142,
											"name": "NOT",
											"source": 13
										},
										{
											"begin": 2130,
											"end": 2132,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 2123,
											"end": 2128,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 2119,
											"end": 2133,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2115,
											"end": 2143,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 2105,
											"end": 2143,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2105,
											"end": 2143,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2047,
											"end": 2149,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 2047,
											"end": 2149,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2047,
											"end": 2149,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2047,
											"end": 2149,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2155,
											"end": 2335,
											"name": "tag",
											"source": 13,
											"value": "54"
										},
										{
											"begin": 2155,
											"end": 2335,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2203,
											"end": 2280,
											"name": "PUSH",
											"source": 13,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2200,
											"end": 2201,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2193,
											"end": 2281,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 2300,
											"end": 2304,
											"name": "PUSH",
											"source": 13,
											"value": "41"
										},
										{
											"begin": 2297,
											"end": 2298,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 2290,
											"end": 2305,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 2324,
											"end": 2328,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 2321,
											"end": 2322,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2314,
											"end": 2329,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 2341,
											"end": 2622,
											"name": "tag",
											"source": 13,
											"value": "55"
										},
										{
											"begin": 2341,
											"end": 2622,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2424,
											"end": 2451,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "97"
										},
										{
											"begin": 2446,
											"end": 2450,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 2424,
											"end": 2451,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "53"
										},
										{
											"begin": 2424,
											"end": 2451,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2424,
											"end": 2451,
											"name": "tag",
											"source": 13,
											"value": "97"
										},
										{
											"begin": 2424,
											"end": 2451,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2416,
											"end": 2422,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2412,
											"end": 2452,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2554,
											"end": 2560,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2542,
											"end": 2552,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2539,
											"end": 2561,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 2518,
											"end": 2536,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2506,
											"end": 2516,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 2503,
											"end": 2537,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 2500,
											"end": 2562,
											"name": "OR",
											"source": 13
										},
										{
											"begin": 2497,
											"end": 2585,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 2497,
											"end": 2585,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "98"
										},
										{
											"begin": 2497,
											"end": 2585,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 2565,
											"end": 2583,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "99"
										},
										{
											"begin": 2565,
											"end": 2583,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "54"
										},
										{
											"begin": 2565,
											"end": 2583,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2565,
											"end": 2583,
											"name": "tag",
											"source": 13,
											"value": "99"
										},
										{
											"begin": 2565,
											"end": 2583,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2497,
											"end": 2585,
											"name": "tag",
											"source": 13,
											"value": "98"
										},
										{
											"begin": 2497,
											"end": 2585,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2605,
											"end": 2615,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 2601,
											"end": 2603,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 2594,
											"end": 2616,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 2384,
											"end": 2622,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2341,
											"end": 2622,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2341,
											"end": 2622,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2341,
											"end": 2622,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2628,
											"end": 2757,
											"name": "tag",
											"source": 13,
											"value": "56"
										},
										{
											"begin": 2628,
											"end": 2757,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2662,
											"end": 2668,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2689,
											"end": 2709,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "101"
										},
										{
											"begin": 2689,
											"end": 2709,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "48"
										},
										{
											"begin": 2689,
											"end": 2709,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2689,
											"end": 2709,
											"name": "tag",
											"source": 13,
											"value": "101"
										},
										{
											"begin": 2689,
											"end": 2709,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2679,
											"end": 2709,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2679,
											"end": 2709,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2718,
											"end": 2751,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "102"
										},
										{
											"begin": 2746,
											"end": 2750,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 2738,
											"end": 2744,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 2718,
											"end": 2751,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "55"
										},
										{
											"begin": 2718,
											"end": 2751,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2718,
											"end": 2751,
											"name": "tag",
											"source": 13,
											"value": "102"
										},
										{
											"begin": 2718,
											"end": 2751,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2628,
											"end": 2757,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 2628,
											"end": 2757,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2628,
											"end": 2757,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2628,
											"end": 2757,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2763,
											"end": 3071,
											"name": "tag",
											"source": 13,
											"value": "57"
										},
										{
											"begin": 2763,
											"end": 3071,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2825,
											"end": 2829,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2915,
											"end": 2933,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2907,
											"end": 2913,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 2904,
											"end": 2934,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 2901,
											"end": 2957,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 2901,
											"end": 2957,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "104"
										},
										{
											"begin": 2901,
											"end": 2957,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 2937,
											"end": 2955,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "105"
										},
										{
											"begin": 2937,
											"end": 2955,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "54"
										},
										{
											"begin": 2937,
											"end": 2955,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2937,
											"end": 2955,
											"name": "tag",
											"source": 13,
											"value": "105"
										},
										{
											"begin": 2937,
											"end": 2955,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2901,
											"end": 2957,
											"name": "tag",
											"source": 13,
											"value": "104"
										},
										{
											"begin": 2901,
											"end": 2957,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2975,
											"end": 3004,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "106"
										},
										{
											"begin": 2997,
											"end": 3003,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 2975,
											"end": 3004,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "53"
										},
										{
											"begin": 2975,
											"end": 3004,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2975,
											"end": 3004,
											"name": "tag",
											"source": 13,
											"value": "106"
										},
										{
											"begin": 2975,
											"end": 3004,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2967,
											"end": 3004,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2967,
											"end": 3004,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3059,
											"end": 3063,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 3053,
											"end": 3057,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3049,
											"end": 3064,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3041,
											"end": 3064,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3041,
											"end": 3064,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2763,
											"end": 3071,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 2763,
											"end": 3071,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2763,
											"end": 3071,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2763,
											"end": 3071,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3077,
											"end": 3223,
											"name": "tag",
											"source": 13,
											"value": "58"
										},
										{
											"begin": 3077,
											"end": 3223,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3174,
											"end": 3180,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 3169,
											"end": 3172,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3164,
											"end": 3167,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 3151,
											"end": 3181,
											"name": "CALLDATACOPY",
											"source": 13
										},
										{
											"begin": 3215,
											"end": 3216,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3206,
											"end": 3212,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 3201,
											"end": 3204,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 3197,
											"end": 3213,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3190,
											"end": 3217,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 3077,
											"end": 3223,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3077,
											"end": 3223,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3077,
											"end": 3223,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3077,
											"end": 3223,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3229,
											"end": 3654,
											"name": "tag",
											"source": 13,
											"value": "59"
										},
										{
											"begin": 3229,
											"end": 3654,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3307,
											"end": 3312,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3332,
											"end": 3398,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "109"
										},
										{
											"begin": 3348,
											"end": 3397,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "110"
										},
										{
											"begin": 3390,
											"end": 3396,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 3348,
											"end": 3397,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "57"
										},
										{
											"begin": 3348,
											"end": 3397,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3348,
											"end": 3397,
											"name": "tag",
											"source": 13,
											"value": "110"
										},
										{
											"begin": 3348,
											"end": 3397,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3332,
											"end": 3398,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "56"
										},
										{
											"begin": 3332,
											"end": 3398,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3332,
											"end": 3398,
											"name": "tag",
											"source": 13,
											"value": "109"
										},
										{
											"begin": 3332,
											"end": 3398,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3323,
											"end": 3398,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3323,
											"end": 3398,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3421,
											"end": 3427,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 3414,
											"end": 3419,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3407,
											"end": 3428,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 3459,
											"end": 3463,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 3452,
											"end": 3457,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3448,
											"end": 3464,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3497,
											"end": 3500,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 3488,
											"end": 3494,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 3483,
											"end": 3486,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 3479,
											"end": 3495,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3476,
											"end": 3501,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 3473,
											"end": 3585,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 3473,
											"end": 3585,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "111"
										},
										{
											"begin": 3473,
											"end": 3585,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 3504,
											"end": 3583,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "112"
										},
										{
											"begin": 3504,
											"end": 3583,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "52"
										},
										{
											"begin": 3504,
											"end": 3583,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3504,
											"end": 3583,
											"name": "tag",
											"source": 13,
											"value": "112"
										},
										{
											"begin": 3504,
											"end": 3583,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3473,
											"end": 3585,
											"name": "tag",
											"source": 13,
											"value": "111"
										},
										{
											"begin": 3473,
											"end": 3585,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3594,
											"end": 3648,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "113"
										},
										{
											"begin": 3641,
											"end": 3647,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 3636,
											"end": 3639,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 3631,
											"end": 3634,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 3594,
											"end": 3648,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "58"
										},
										{
											"begin": 3594,
											"end": 3648,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3594,
											"end": 3648,
											"name": "tag",
											"source": 13,
											"value": "113"
										},
										{
											"begin": 3594,
											"end": 3648,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3313,
											"end": 3654,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3229,
											"end": 3654,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 3229,
											"end": 3654,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 3229,
											"end": 3654,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3229,
											"end": 3654,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3229,
											"end": 3654,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3229,
											"end": 3654,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3674,
											"end": 4014,
											"name": "tag",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 3674,
											"end": 4014,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3730,
											"end": 3735,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3779,
											"end": 3782,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 3772,
											"end": 3776,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 3764,
											"end": 3770,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 3760,
											"end": 3777,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3756,
											"end": 3783,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 3746,
											"end": 3868,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "115"
										},
										{
											"begin": 3746,
											"end": 3868,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 3787,
											"end": 3866,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "116"
										},
										{
											"begin": 3787,
											"end": 3866,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "51"
										},
										{
											"begin": 3787,
											"end": 3866,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3787,
											"end": 3866,
											"name": "tag",
											"source": 13,
											"value": "116"
										},
										{
											"begin": 3787,
											"end": 3866,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3746,
											"end": 3868,
											"name": "tag",
											"source": 13,
											"value": "115"
										},
										{
											"begin": 3746,
											"end": 3868,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3904,
											"end": 3910,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3891,
											"end": 3911,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 3929,
											"end": 4008,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "117"
										},
										{
											"begin": 4004,
											"end": 4007,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 3996,
											"end": 4002,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 3989,
											"end": 3993,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 3981,
											"end": 3987,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 3977,
											"end": 3994,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3929,
											"end": 4008,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "59"
										},
										{
											"begin": 3929,
											"end": 4008,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3929,
											"end": 4008,
											"name": "tag",
											"source": 13,
											"value": "117"
										},
										{
											"begin": 3929,
											"end": 4008,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3920,
											"end": 4008,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 3920,
											"end": 4008,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3736,
											"end": 4014,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3674,
											"end": 4014,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 3674,
											"end": 4014,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 3674,
											"end": 4014,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3674,
											"end": 4014,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3674,
											"end": 4014,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4020,
											"end": 4529,
											"name": "tag",
											"source": 13,
											"value": "17"
										},
										{
											"begin": 4020,
											"end": 4529,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4089,
											"end": 4095,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4138,
											"end": 4140,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 4126,
											"end": 4135,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 4117,
											"end": 4124,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 4113,
											"end": 4136,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 4109,
											"end": 4141,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 4106,
											"end": 4225,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 4106,
											"end": 4225,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "119"
										},
										{
											"begin": 4106,
											"end": 4225,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 4144,
											"end": 4223,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "120"
										},
										{
											"begin": 4144,
											"end": 4223,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "49"
										},
										{
											"begin": 4144,
											"end": 4223,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4144,
											"end": 4223,
											"name": "tag",
											"source": 13,
											"value": "120"
										},
										{
											"begin": 4144,
											"end": 4223,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4106,
											"end": 4225,
											"name": "tag",
											"source": 13,
											"value": "119"
										},
										{
											"begin": 4106,
											"end": 4225,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4292,
											"end": 4293,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4281,
											"end": 4290,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 4277,
											"end": 4294,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4264,
											"end": 4295,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 4322,
											"end": 4340,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4314,
											"end": 4320,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4311,
											"end": 4341,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 4308,
											"end": 4425,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 4308,
											"end": 4425,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "121"
										},
										{
											"begin": 4308,
											"end": 4425,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 4344,
											"end": 4423,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "122"
										},
										{
											"begin": 4344,
											"end": 4423,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "50"
										},
										{
											"begin": 4344,
											"end": 4423,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4344,
											"end": 4423,
											"name": "tag",
											"source": 13,
											"value": "122"
										},
										{
											"begin": 4344,
											"end": 4423,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4308,
											"end": 4425,
											"name": "tag",
											"source": 13,
											"value": "121"
										},
										{
											"begin": 4308,
											"end": 4425,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4449,
											"end": 4512,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "123"
										},
										{
											"begin": 4504,
											"end": 4511,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 4495,
											"end": 4501,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 4484,
											"end": 4493,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 4480,
											"end": 4502,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4449,
											"end": 4512,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 4449,
											"end": 4512,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4449,
											"end": 4512,
											"name": "tag",
											"source": 13,
											"value": "123"
										},
										{
											"begin": 4449,
											"end": 4512,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4439,
											"end": 4512,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 4439,
											"end": 4512,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4235,
											"end": 4522,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4020,
											"end": 4529,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 4020,
											"end": 4529,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 4020,
											"end": 4529,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4020,
											"end": 4529,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4020,
											"end": 4529,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4535,
											"end": 4631,
											"name": "tag",
											"source": 13,
											"value": "61"
										},
										{
											"begin": 4535,
											"end": 4631,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4572,
											"end": 4579,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4601,
											"end": 4625,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "125"
										},
										{
											"begin": 4619,
											"end": 4624,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 4601,
											"end": 4625,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "42"
										},
										{
											"begin": 4601,
											"end": 4625,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4601,
											"end": 4625,
											"name": "tag",
											"source": 13,
											"value": "125"
										},
										{
											"begin": 4601,
											"end": 4625,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4590,
											"end": 4625,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4590,
											"end": 4625,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4535,
											"end": 4631,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 4535,
											"end": 4631,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4535,
											"end": 4631,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4535,
											"end": 4631,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4637,
											"end": 4755,
											"name": "tag",
											"source": 13,
											"value": "62"
										},
										{
											"begin": 4637,
											"end": 4755,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4724,
											"end": 4748,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "127"
										},
										{
											"begin": 4742,
											"end": 4747,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4724,
											"end": 4748,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "61"
										},
										{
											"begin": 4724,
											"end": 4748,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4724,
											"end": 4748,
											"name": "tag",
											"source": 13,
											"value": "127"
										},
										{
											"begin": 4724,
											"end": 4748,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4719,
											"end": 4722,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 4712,
											"end": 4749,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 4637,
											"end": 4755,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4637,
											"end": 4755,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4637,
											"end": 4755,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4761,
											"end": 5093,
											"name": "tag",
											"source": 13,
											"value": "23"
										},
										{
											"begin": 4761,
											"end": 5093,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4882,
											"end": 4886,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4920,
											"end": 4922,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 4909,
											"end": 4918,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 4905,
											"end": 4923,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4897,
											"end": 4923,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4897,
											"end": 4923,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4933,
											"end": 5004,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "129"
										},
										{
											"begin": 5001,
											"end": 5002,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4990,
											"end": 4999,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 4986,
											"end": 5003,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4977,
											"end": 4983,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 4933,
											"end": 5004,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "62"
										},
										{
											"begin": 4933,
											"end": 5004,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4933,
											"end": 5004,
											"name": "tag",
											"source": 13,
											"value": "129"
										},
										{
											"begin": 4933,
											"end": 5004,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5014,
											"end": 5086,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "130"
										},
										{
											"begin": 5082,
											"end": 5084,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 5071,
											"end": 5080,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 5067,
											"end": 5085,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5058,
											"end": 5064,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 5014,
											"end": 5086,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "62"
										},
										{
											"begin": 5014,
											"end": 5086,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5014,
											"end": 5086,
											"name": "tag",
											"source": 13,
											"value": "130"
										},
										{
											"begin": 5014,
											"end": 5086,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4761,
											"end": 5093,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 4761,
											"end": 5093,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 4761,
											"end": 5093,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4761,
											"end": 5093,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4761,
											"end": 5093,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4761,
											"end": 5093,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5099,
											"end": 5215,
											"name": "tag",
											"source": 13,
											"value": "63"
										},
										{
											"begin": 5099,
											"end": 5215,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5169,
											"end": 5190,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "132"
										},
										{
											"begin": 5184,
											"end": 5189,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 5169,
											"end": 5190,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 5169,
											"end": 5190,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5169,
											"end": 5190,
											"name": "tag",
											"source": 13,
											"value": "132"
										},
										{
											"begin": 5169,
											"end": 5190,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5162,
											"end": 5167,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 5159,
											"end": 5191,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 5149,
											"end": 5209,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "133"
										},
										{
											"begin": 5149,
											"end": 5209,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 5205,
											"end": 5206,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 5202,
											"end": 5203,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 5195,
											"end": 5207,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 5149,
											"end": 5209,
											"name": "tag",
											"source": 13,
											"value": "133"
										},
										{
											"begin": 5149,
											"end": 5209,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5099,
											"end": 5215,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5099,
											"end": 5215,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5221,
											"end": 5358,
											"name": "tag",
											"source": 13,
											"value": "64"
										},
										{
											"begin": 5221,
											"end": 5358,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5275,
											"end": 5280,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 5306,
											"end": 5312,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 5300,
											"end": 5313,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 5291,
											"end": 5313,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5291,
											"end": 5313,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5322,
											"end": 5352,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "135"
										},
										{
											"begin": 5346,
											"end": 5351,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 5322,
											"end": 5352,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "63"
										},
										{
											"begin": 5322,
											"end": 5352,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5322,
											"end": 5352,
											"name": "tag",
											"source": 13,
											"value": "135"
										},
										{
											"begin": 5322,
											"end": 5352,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5221,
											"end": 5358,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 5221,
											"end": 5358,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 5221,
											"end": 5358,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5221,
											"end": 5358,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5221,
											"end": 5358,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5364,
											"end": 5709,
											"name": "tag",
											"source": 13,
											"value": "27"
										},
										{
											"begin": 5364,
											"end": 5709,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5431,
											"end": 5437,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 5480,
											"end": 5482,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 5468,
											"end": 5477,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 5459,
											"end": 5466,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 5455,
											"end": 5478,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 5451,
											"end": 5483,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 5448,
											"end": 5567,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 5448,
											"end": 5567,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "137"
										},
										{
											"begin": 5448,
											"end": 5567,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 5486,
											"end": 5565,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "138"
										},
										{
											"begin": 5486,
											"end": 5565,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "49"
										},
										{
											"begin": 5486,
											"end": 5565,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5486,
											"end": 5565,
											"name": "tag",
											"source": 13,
											"value": "138"
										},
										{
											"begin": 5486,
											"end": 5565,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5448,
											"end": 5567,
											"name": "tag",
											"source": 13,
											"value": "137"
										},
										{
											"begin": 5448,
											"end": 5567,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5606,
											"end": 5607,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 5631,
											"end": 5692,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "139"
										},
										{
											"begin": 5684,
											"end": 5691,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 5675,
											"end": 5681,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 5664,
											"end": 5673,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 5660,
											"end": 5682,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5631,
											"end": 5692,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "64"
										},
										{
											"begin": 5631,
											"end": 5692,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5631,
											"end": 5692,
											"name": "tag",
											"source": 13,
											"value": "139"
										},
										{
											"begin": 5631,
											"end": 5692,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5621,
											"end": 5692,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 5621,
											"end": 5692,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5577,
											"end": 5702,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5364,
											"end": 5709,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 5364,
											"end": 5709,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 5364,
											"end": 5709,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5364,
											"end": 5709,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5364,
											"end": 5709,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5715,
											"end": 5814,
											"name": "tag",
											"source": 13,
											"value": "65"
										},
										{
											"begin": 5715,
											"end": 5814,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5767,
											"end": 5773,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 5801,
											"end": 5806,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 5795,
											"end": 5807,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 5785,
											"end": 5807,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5785,
											"end": 5807,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5715,
											"end": 5814,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 5715,
											"end": 5814,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5715,
											"end": 5814,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5715,
											"end": 5814,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5820,
											"end": 5989,
											"name": "tag",
											"source": 13,
											"value": "66"
										},
										{
											"begin": 5820,
											"end": 5989,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5904,
											"end": 5915,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 5938,
											"end": 5944,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 5933,
											"end": 5936,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 5926,
											"end": 5945,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 5978,
											"end": 5982,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 5973,
											"end": 5976,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 5969,
											"end": 5983,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5954,
											"end": 5983,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5954,
											"end": 5983,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5820,
											"end": 5989,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 5820,
											"end": 5989,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 5820,
											"end": 5989,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5820,
											"end": 5989,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5820,
											"end": 5989,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5995,
											"end": 6241,
											"name": "tag",
											"source": 13,
											"value": "67"
										},
										{
											"begin": 5995,
											"end": 6241,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6076,
											"end": 6077,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 6086,
											"end": 6199,
											"name": "tag",
											"source": 13,
											"value": "143"
										},
										{
											"begin": 6086,
											"end": 6199,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6100,
											"end": 6106,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 6097,
											"end": 6098,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 6094,
											"end": 6107,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 6086,
											"end": 6199,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 6086,
											"end": 6199,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "145"
										},
										{
											"begin": 6086,
											"end": 6199,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 6185,
											"end": 6186,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 6180,
											"end": 6183,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 6176,
											"end": 6187,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6170,
											"end": 6188,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 6166,
											"end": 6167,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 6161,
											"end": 6164,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 6157,
											"end": 6168,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6150,
											"end": 6189,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 6122,
											"end": 6124,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 6119,
											"end": 6120,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 6115,
											"end": 6125,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6110,
											"end": 6125,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 6110,
											"end": 6125,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6086,
											"end": 6199,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "143"
										},
										{
											"begin": 6086,
											"end": 6199,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6086,
											"end": 6199,
											"name": "tag",
											"source": 13,
											"value": "145"
										},
										{
											"begin": 6086,
											"end": 6199,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6233,
											"end": 6234,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 6224,
											"end": 6230,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 6219,
											"end": 6222,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 6215,
											"end": 6231,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6208,
											"end": 6235,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 6057,
											"end": 6241,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5995,
											"end": 6241,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5995,
											"end": 6241,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5995,
											"end": 6241,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5995,
											"end": 6241,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6247,
											"end": 6624,
											"name": "tag",
											"source": 13,
											"value": "68"
										},
										{
											"begin": 6247,
											"end": 6624,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6335,
											"end": 6338,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 6363,
											"end": 6402,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "147"
										},
										{
											"begin": 6396,
											"end": 6401,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 6363,
											"end": 6402,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "65"
										},
										{
											"begin": 6363,
											"end": 6402,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6363,
											"end": 6402,
											"name": "tag",
											"source": 13,
											"value": "147"
										},
										{
											"begin": 6363,
											"end": 6402,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6418,
											"end": 6489,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "148"
										},
										{
											"begin": 6482,
											"end": 6488,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 6477,
											"end": 6480,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 6418,
											"end": 6489,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "66"
										},
										{
											"begin": 6418,
											"end": 6489,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6418,
											"end": 6489,
											"name": "tag",
											"source": 13,
											"value": "148"
										},
										{
											"begin": 6418,
											"end": 6489,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6411,
											"end": 6489,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 6411,
											"end": 6489,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6498,
											"end": 6563,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "149"
										},
										{
											"begin": 6556,
											"end": 6562,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 6551,
											"end": 6554,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 6544,
											"end": 6548,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 6537,
											"end": 6542,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 6533,
											"end": 6549,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6498,
											"end": 6563,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "67"
										},
										{
											"begin": 6498,
											"end": 6563,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6498,
											"end": 6563,
											"name": "tag",
											"source": 13,
											"value": "149"
										},
										{
											"begin": 6498,
											"end": 6563,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6588,
											"end": 6617,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "150"
										},
										{
											"begin": 6610,
											"end": 6616,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 6588,
											"end": 6617,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "53"
										},
										{
											"begin": 6588,
											"end": 6617,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6588,
											"end": 6617,
											"name": "tag",
											"source": 13,
											"value": "150"
										},
										{
											"begin": 6588,
											"end": 6617,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6583,
											"end": 6586,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 6579,
											"end": 6618,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6572,
											"end": 6618,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 6572,
											"end": 6618,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6339,
											"end": 6624,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6247,
											"end": 6624,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 6247,
											"end": 6624,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 6247,
											"end": 6624,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6247,
											"end": 6624,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6247,
											"end": 6624,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6630,
											"end": 6943,
											"name": "tag",
											"source": 13,
											"value": "30"
										},
										{
											"begin": 6630,
											"end": 6943,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6743,
											"end": 6747,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 6781,
											"end": 6783,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 6770,
											"end": 6779,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 6766,
											"end": 6784,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6758,
											"end": 6784,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 6758,
											"end": 6784,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6830,
											"end": 6839,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 6824,
											"end": 6828,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 6820,
											"end": 6840,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 6816,
											"end": 6817,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 6805,
											"end": 6814,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 6801,
											"end": 6818,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6794,
											"end": 6841,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 6858,
											"end": 6936,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "152"
										},
										{
											"begin": 6931,
											"end": 6935,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 6922,
											"end": 6928,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 6858,
											"end": 6936,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "68"
										},
										{
											"begin": 6858,
											"end": 6936,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6858,
											"end": 6936,
											"name": "tag",
											"source": 13,
											"value": "152"
										},
										{
											"begin": 6858,
											"end": 6936,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6850,
											"end": 6936,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 6850,
											"end": 6936,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6630,
											"end": 6943,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 6630,
											"end": 6943,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 6630,
											"end": 6943,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6630,
											"end": 6943,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6630,
											"end": 6943,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6949,
											"end": 7379,
											"name": "tag",
											"source": 13,
											"value": "36"
										},
										{
											"begin": 6949,
											"end": 7379,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7092,
											"end": 7096,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 7130,
											"end": 7132,
											"name": "PUSH",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 7119,
											"end": 7128,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 7115,
											"end": 7133,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 7107,
											"end": 7133,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 7107,
											"end": 7133,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7143,
											"end": 7214,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "154"
										},
										{
											"begin": 7211,
											"end": 7212,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 7200,
											"end": 7209,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 7196,
											"end": 7213,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 7187,
											"end": 7193,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 7143,
											"end": 7214,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "62"
										},
										{
											"begin": 7143,
											"end": 7214,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 7143,
											"end": 7214,
											"name": "tag",
											"source": 13,
											"value": "154"
										},
										{
											"begin": 7143,
											"end": 7214,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7224,
											"end": 7296,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "155"
										},
										{
											"begin": 7292,
											"end": 7294,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 7281,
											"end": 7290,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 7277,
											"end": 7295,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 7268,
											"end": 7274,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 7224,
											"end": 7296,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "62"
										},
										{
											"begin": 7224,
											"end": 7296,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 7224,
											"end": 7296,
											"name": "tag",
											"source": 13,
											"value": "155"
										},
										{
											"begin": 7224,
											"end": 7296,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7306,
											"end": 7372,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "156"
										},
										{
											"begin": 7368,
											"end": 7370,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 7357,
											"end": 7366,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 7353,
											"end": 7371,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 7344,
											"end": 7350,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 7306,
											"end": 7372,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "41"
										},
										{
											"begin": 7306,
											"end": 7372,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 7306,
											"end": 7372,
											"name": "tag",
											"source": 13,
											"value": "156"
										},
										{
											"begin": 7306,
											"end": 7372,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6949,
											"end": 7379,
											"name": "SWAP5",
											"source": 13
										},
										{
											"begin": 6949,
											"end": 7379,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 6949,
											"end": 7379,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6949,
											"end": 7379,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6949,
											"end": 7379,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6949,
											"end": 7379,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6949,
											"end": 7379,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										}
									]
								}
							},
							"sourceList": [
								"contracts/myNFT.sol",
								"contracts/saleNFT.sol",
								"main/node_modules/@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"main/node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol",
								"main/node_modules/@openzeppelin/contracts/token/ERC721/IERC721.sol",
								"main/node_modules/@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
								"main/node_modules/@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
								"main/node_modules/@openzeppelin/contracts/utils/Context.sol",
								"main/node_modules/@openzeppelin/contracts/utils/Strings.sol",
								"main/node_modules/@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"main/node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"main/node_modules/@openzeppelin/contracts/utils/math/Math.sol",
								"main/node_modules/@openzeppelin/contracts/utils/math/SignedMath.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"_nft()": "98300e18",
							"_saleNFTmint(string)": "a15db9d0",
							"salesNFT()": "6aa5e376",
							"setApprovalForAll()": "cc9562a5"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_nftCA\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"_nft\",\"outputs\":[{\"internalType\":\"contract MyNFT\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"url\",\"type\":\"string\"}],\"name\":\"_saleNFTmint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"salesNFT\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/saleNFT.sol\":\"SaleNFT\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/myNFT.sol\":{\"keccak256\":\"0x5d8026465cdb76ecb80000c262ce22d6de60a22f98d417ab1cb9a3c5b110d386\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b18505c3fd19a744a377c2dcb7b734bd6618e89035fbf414c46e98174d462d76\",\"dweb:/ipfs/QmfGbLvH6qE5k7uyH4XR47EUGrtSx5wj3J3ncMkAR44Koz\"]},\"contracts/saleNFT.sol\":{\"keccak256\":\"0xf91835ce16768d34dc270d799fd5bb68f4ddff4e001c11a9633f5b010d323db8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8d42a73af45e8764572d9818fb94177b6612e74e9fdcbff104a4609ef3a4efac\",\"dweb:/ipfs/QmQagdrAqFLJa9Ga7CMSDCWPmhjnNL5v1UyCAsUmtW7oqq\"]},\"main/node_modules/@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"main/node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0x13dd061770956c8489b80cfc89d9cdfc8ea2783d953691ea037a380731d52784\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ed37f0f86e7fe31659e48c3a2a5920a92dd7f13c85cf8991fb79fe5f01e08efd\",\"dweb:/ipfs/QmUtm9bQGvjr9hHGwkPWrbgFmVqzaJcxjkaYDex2oGsonS\"]},\"main/node_modules/@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5ef46daa3b58ef2702279d514780316efaa952915ee1aa3396f041ee2982b0b4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2f8f2a76e23b02fc69e8cd24c3cb47da6c7af3a2d6c3a382f8ac25c6e094ade7\",\"dweb:/ipfs/QmPV4ZS4tPVv4mTCf9ejyZ1ai57EEibDRj7mN2ARDCLV5n\"]},\"main/node_modules/@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0x7f7a26306c79a65fb8b3b6c757cd74660c532cd8a02e165488e30027dd34ca49\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d01e0b2b837ee2f628545e54d8715b49c7ef2befd08356c2e7f6c50dde8a1c22\",\"dweb:/ipfs/QmWBAn6y2D1xgftci97Z3qR9tQnkvwQpYwFwkTvDMvqU4i\"]},\"main/node_modules/@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x37d1aaaa5a2908a09e9dcf56a26ddf762ecf295afb5964695937344fc6802ce1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ed0bfc1b92153c5000e50f4021367b931bbe96372ac6facec3c4961b72053d02\",\"dweb:/ipfs/Qmbwp8VDerjS5SV1quwHH1oMXxPQ93fzfLVqJ2RCqbowGE\"]},\"main/node_modules/@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x75a4ee64c68dbd5f38bddd06e664a64c8271b4caa554fb6f0607dfd672bb4bf3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0c4e6cb30d3601e2f7af5af09e265508147cb275a8dcd99d6f7363645cc56867\",\"dweb:/ipfs/QmNgFkoXNWoUbAyw71rr1sKQ95Rj2GfvYiWg79xEYDn2NY\"]},\"main/node_modules/@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x55f102ea785d8399c0e58d1108e2d289506dde18abc6db1b7f68c1f9f9bc5792\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e52e0a7765c943ef14e5bcf11e46e6139fa044be564881378349236bf2e3453\",\"dweb:/ipfs/QmZEeeXoFPW47amyP35gfzomF9DixqqTEPwzBakv6cZw6i\"]},\"main/node_modules/@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x9e8778b14317ba9e256c30a76fd6c32b960af621987f56069e1e819c77c6a133\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1777404f1dcd0fac188e55a288724ec3c67b45288e49cc64723e95e702b49ab8\",\"dweb:/ipfs/QmZFdC626GButBApwDUvvTnUzdinevC3B24d7yyh57XkiA\"]},\"main/node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]},\"main/node_modules/@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]},\"main/node_modules/@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 125,
								"contract": "contracts/saleNFT.sol:SaleNFT",
								"label": "_nft",
								"offset": 0,
								"slot": "0",
								"type": "t_contract(MyNFT)119"
							}
						],
						"types": {
							"t_contract(MyNFT)119": {
								"encoding": "inplace",
								"label": "contract MyNFT",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"main/node_modules/@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"IERC1155Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC1155InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "idsLength",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "valuesLength",
									"type": "uint256"
								}
							],
							"name": "ERC1155InvalidArrayLength",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC1155MissingApprovalForAll",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.",
						"errors": {
							"ERC1155InsufficientBalance(address,uint256,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC1155InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC1155InvalidArrayLength(uint256,uint256)": [
								{
									"details": "Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.",
									"params": {
										"idsLength": "Length of the array of token identifiers",
										"valuesLength": "Length of the array of token amounts"
									}
								}
							],
							"ERC1155InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC1155InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC1155InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC1155MissingApprovalForAll(address,address)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"owner": "Address of the current owner of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"main/node_modules/@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC1155Errors\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"main/node_modules/@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"main/node_modules/@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC20Errors\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"main/node_modules/@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC721Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.",
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"main/node_modules/@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC721Errors\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"main/node_modules/@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"main/node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol": {
				"ERC721": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "tokenURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including the Metadata extension, but not including the Enumerable extension, which is available separately as {ERC721Enumerable}.",
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "See {IERC721-approve}."
							},
							"balanceOf(address)": {
								"details": "See {IERC721-balanceOf}."
							},
							"constructor": {
								"details": "Initializes the contract by setting a `name` and a `symbol` to the token collection."
							},
							"getApproved(uint256)": {
								"details": "See {IERC721-getApproved}."
							},
							"isApprovedForAll(address,address)": {
								"details": "See {IERC721-isApprovedForAll}."
							},
							"name()": {
								"details": "See {IERC721Metadata-name}."
							},
							"ownerOf(uint256)": {
								"details": "See {IERC721-ownerOf}."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "See {IERC721-safeTransferFrom}."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "See {IERC721-safeTransferFrom}."
							},
							"setApprovalForAll(address,bool)": {
								"details": "See {IERC721-setApprovalForAll}."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							},
							"symbol()": {
								"details": "See {IERC721Metadata-symbol}."
							},
							"tokenURI(uint256)": {
								"details": "See {IERC721Metadata-tokenURI}."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC721-transferFrom}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"name()": "06fdde03",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"symbol()": "95d89b41",
							"tokenURI(uint256)": "c87b56dd",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including the Metadata extension, but not including the Enumerable extension, which is available separately as {ERC721Enumerable}.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"See {IERC721-approve}.\"},\"balanceOf(address)\":{\"details\":\"See {IERC721-balanceOf}.\"},\"constructor\":{\"details\":\"Initializes the contract by setting a `name` and a `symbol` to the token collection.\"},\"getApproved(uint256)\":{\"details\":\"See {IERC721-getApproved}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC721-isApprovedForAll}.\"},\"name()\":{\"details\":\"See {IERC721Metadata-name}.\"},\"ownerOf(uint256)\":{\"details\":\"See {IERC721-ownerOf}.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC721-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"symbol()\":{\"details\":\"See {IERC721Metadata-symbol}.\"},\"tokenURI(uint256)\":{\"details\":\"See {IERC721Metadata-tokenURI}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-transferFrom}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"main/node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":\"ERC721\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"main/node_modules/@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"main/node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0x13dd061770956c8489b80cfc89d9cdfc8ea2783d953691ea037a380731d52784\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ed37f0f86e7fe31659e48c3a2a5920a92dd7f13c85cf8991fb79fe5f01e08efd\",\"dweb:/ipfs/QmUtm9bQGvjr9hHGwkPWrbgFmVqzaJcxjkaYDex2oGsonS\"]},\"main/node_modules/@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5ef46daa3b58ef2702279d514780316efaa952915ee1aa3396f041ee2982b0b4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2f8f2a76e23b02fc69e8cd24c3cb47da6c7af3a2d6c3a382f8ac25c6e094ade7\",\"dweb:/ipfs/QmPV4ZS4tPVv4mTCf9ejyZ1ai57EEibDRj7mN2ARDCLV5n\"]},\"main/node_modules/@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0x7f7a26306c79a65fb8b3b6c757cd74660c532cd8a02e165488e30027dd34ca49\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d01e0b2b837ee2f628545e54d8715b49c7ef2befd08356c2e7f6c50dde8a1c22\",\"dweb:/ipfs/QmWBAn6y2D1xgftci97Z3qR9tQnkvwQpYwFwkTvDMvqU4i\"]},\"main/node_modules/@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x37d1aaaa5a2908a09e9dcf56a26ddf762ecf295afb5964695937344fc6802ce1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ed0bfc1b92153c5000e50f4021367b931bbe96372ac6facec3c4961b72053d02\",\"dweb:/ipfs/Qmbwp8VDerjS5SV1quwHH1oMXxPQ93fzfLVqJ2RCqbowGE\"]},\"main/node_modules/@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x75a4ee64c68dbd5f38bddd06e664a64c8271b4caa554fb6f0607dfd672bb4bf3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0c4e6cb30d3601e2f7af5af09e265508147cb275a8dcd99d6f7363645cc56867\",\"dweb:/ipfs/QmNgFkoXNWoUbAyw71rr1sKQ95Rj2GfvYiWg79xEYDn2NY\"]},\"main/node_modules/@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x55f102ea785d8399c0e58d1108e2d289506dde18abc6db1b7f68c1f9f9bc5792\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e52e0a7765c943ef14e5bcf11e46e6139fa044be564881378349236bf2e3453\",\"dweb:/ipfs/QmZEeeXoFPW47amyP35gfzomF9DixqqTEPwzBakv6cZw6i\"]},\"main/node_modules/@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x9e8778b14317ba9e256c30a76fd6c32b960af621987f56069e1e819c77c6a133\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1777404f1dcd0fac188e55a288724ec3c67b45288e49cc64723e95e702b49ab8\",\"dweb:/ipfs/QmZFdC626GButBApwDUvvTnUzdinevC3B24d7yyh57XkiA\"]},\"main/node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]},\"main/node_modules/@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]},\"main/node_modules/@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 352,
								"contract": "main/node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721",
								"label": "_name",
								"offset": 0,
								"slot": "0",
								"type": "t_string_storage"
							},
							{
								"astId": 354,
								"contract": "main/node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721",
								"label": "_symbol",
								"offset": 0,
								"slot": "1",
								"type": "t_string_storage"
							},
							{
								"astId": 358,
								"contract": "main/node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721",
								"label": "_owners",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_uint256,t_address)"
							},
							{
								"astId": 362,
								"contract": "main/node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721",
								"label": "_balances",
								"offset": 0,
								"slot": "3",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 366,
								"contract": "main/node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721",
								"label": "_tokenApprovals",
								"offset": 0,
								"slot": "4",
								"type": "t_mapping(t_uint256,t_address)"
							},
							{
								"astId": 372,
								"contract": "main/node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721",
								"label": "_operatorApprovals",
								"offset": 0,
								"slot": "5",
								"type": "t_mapping(t_address,t_mapping(t_address,t_bool))"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_bool))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => bool))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_bool)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_uint256,t_address)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => address)",
								"numberOfBytes": "32",
								"value": "t_address"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"main/node_modules/@openzeppelin/contracts/token/ERC721/IERC721.sol": {
				"IERC721": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Required interface of an ERC721 compliant contract.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the number of tokens in ``owner``'s account."
							},
							"getApproved(uint256)": {
								"details": "Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"
							},
							"ownerOf(uint256)": {
								"details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Required interface of an ERC721 compliant contract.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"main/node_modules/@openzeppelin/contracts/token/ERC721/IERC721.sol\":\"IERC721\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"main/node_modules/@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5ef46daa3b58ef2702279d514780316efaa952915ee1aa3396f041ee2982b0b4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2f8f2a76e23b02fc69e8cd24c3cb47da6c7af3a2d6c3a382f8ac25c6e094ade7\",\"dweb:/ipfs/QmPV4ZS4tPVv4mTCf9ejyZ1ai57EEibDRj7mN2ARDCLV5n\"]},\"main/node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"main/node_modules/@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol": {
				"IERC721Receiver": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "onERC721Received",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for any contract that wants to support safeTransfers from ERC721 asset contracts.",
						"kind": "dev",
						"methods": {
							"onERC721Received(address,address,uint256,bytes)": {
								"details": "Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom} by `operator` from `from`, this function is called. It must return its Solidity selector to confirm the token transfer. If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted. The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`."
							}
						},
						"title": "ERC721 token receiver interface",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"onERC721Received(address,address,uint256,bytes)": "150b7a02"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC721Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for any contract that wants to support safeTransfers from ERC721 asset contracts.\",\"kind\":\"dev\",\"methods\":{\"onERC721Received(address,address,uint256,bytes)\":{\"details\":\"Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom} by `operator` from `from`, this function is called. It must return its Solidity selector to confirm the token transfer. If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted. The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\"}},\"title\":\"ERC721 token receiver interface\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"main/node_modules/@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":\"IERC721Receiver\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"main/node_modules/@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0x7f7a26306c79a65fb8b3b6c757cd74660c532cd8a02e165488e30027dd34ca49\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d01e0b2b837ee2f628545e54d8715b49c7ef2befd08356c2e7f6c50dde8a1c22\",\"dweb:/ipfs/QmWBAn6y2D1xgftci97Z3qR9tQnkvwQpYwFwkTvDMvqU4i\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"main/node_modules/@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol": {
				"IERC721Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "tokenURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "See https://eips.ethereum.org/EIPS/eip-721",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the number of tokens in ``owner``'s account."
							},
							"getApproved(uint256)": {
								"details": "Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"
							},
							"name()": {
								"details": "Returns the token collection name."
							},
							"ownerOf(uint256)": {
								"details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"symbol()": {
								"details": "Returns the token collection symbol."
							},
							"tokenURI(uint256)": {
								"details": "Returns the Uniform Resource Identifier (URI) for `tokenId` token."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."
							}
						},
						"title": "ERC-721 Non-Fungible Token Standard, optional metadata extension",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"name()": "06fdde03",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"symbol()": "95d89b41",
							"tokenURI(uint256)": "c87b56dd",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"See https://eips.ethereum.org/EIPS/eip-721\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"name()\":{\"details\":\"Returns the token collection name.\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"symbol()\":{\"details\":\"Returns the token collection symbol.\"},\"tokenURI(uint256)\":{\"details\":\"Returns the Uniform Resource Identifier (URI) for `tokenId` token.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"title\":\"ERC-721 Non-Fungible Token Standard, optional metadata extension\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"main/node_modules/@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":\"IERC721Metadata\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"main/node_modules/@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5ef46daa3b58ef2702279d514780316efaa952915ee1aa3396f041ee2982b0b4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2f8f2a76e23b02fc69e8cd24c3cb47da6c7af3a2d6c3a382f8ac25c6e094ade7\",\"dweb:/ipfs/QmPV4ZS4tPVv4mTCf9ejyZ1ai57EEibDRj7mN2ARDCLV5n\"]},\"main/node_modules/@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x37d1aaaa5a2908a09e9dcf56a26ddf762ecf295afb5964695937344fc6802ce1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ed0bfc1b92153c5000e50f4021367b931bbe96372ac6facec3c4961b72053d02\",\"dweb:/ipfs/Qmbwp8VDerjS5SV1quwHH1oMXxPQ93fzfLVqJ2RCqbowGE\"]},\"main/node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"main/node_modules/@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"main/node_modules/@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"main/node_modules/@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x75a4ee64c68dbd5f38bddd06e664a64c8271b4caa554fb6f0607dfd672bb4bf3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0c4e6cb30d3601e2f7af5af09e265508147cb275a8dcd99d6f7363645cc56867\",\"dweb:/ipfs/QmNgFkoXNWoUbAyw71rr1sKQ95Rj2GfvYiWg79xEYDn2NY\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"main/node_modules/@openzeppelin/contracts/utils/Strings.sol": {
				"Strings": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "length",
									"type": "uint256"
								}
							],
							"name": "StringsInsufficientHexLength",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "String operations.",
						"errors": {
							"StringsInsufficientHexLength(uint256,uint256)": [
								{
									"details": "The `value` string doesn't fit in the specified `length`."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"main/node_modules/@openzeppelin/contracts/utils/Strings.sol\":251:3098  library Strings {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"main/node_modules/@openzeppelin/contracts/utils/Strings.sol\":251:3098  library Strings {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220177a6eb98ada15e61a0b99b7b7b26869ac4319fd36597ab19cd1bfc6485e702064736f6c63430008150033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220177a6eb98ada15e61a0b99b7b7b26869ac4319fd36597ab19cd1bfc6485e702064736f6c63430008150033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 OR PUSH27 0x6EB98ADA15E61A0B99B7B7B26869AC4319FD36597AB19CD1BFC648 0x5E PUSH17 0x2064736F6C634300081500330000000000 ",
							"sourceMap": "251:2847:8:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220177a6eb98ada15e61a0b99b7b7b26869ac4319fd36597ab19cd1bfc6485e702064736f6c63430008150033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 OR PUSH27 0x6EB98ADA15E61A0B99B7B7B26869AC4319FD36597AB19CD1BFC648 0x5E PUSH17 0x2064736F6C634300081500330000000000 ",
							"sourceMap": "251:2847:8:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"equal(string memory,string memory)": "infinite",
								"toHexString(address)": "infinite",
								"toHexString(uint256)": "infinite",
								"toHexString(uint256,uint256)": "infinite",
								"toString(uint256)": "infinite",
								"toStringSigned(int256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH #[$]",
									"source": 8,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH [$]",
									"source": 8,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 8,
									"value": "B"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "CODECOPY",
									"source": 8
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "BYTE",
									"source": 8
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 8,
									"value": "73"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "EQ",
									"source": 8
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 8,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 8,
									"value": "4"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 8,
									"value": "24"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "tag",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "ADDRESS",
									"source": 8
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 8,
									"value": "73"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "MSTORE8",
									"source": 8
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "RETURN",
									"source": 8
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220177a6eb98ada15e61a0b99b7b7b26869ac4319fd36597ab19cd1bfc6485e702064736f6c63430008150033",
									".code": [
										{
											"begin": 251,
											"end": 3098,
											"name": "PUSHDEPLOYADDRESS",
											"source": 8
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "ADDRESS",
											"source": 8
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "PUSH",
											"source": 8,
											"value": "80"
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "REVERT",
											"source": 8
										}
									]
								}
							},
							"sourceList": [
								"contracts/myNFT.sol",
								"contracts/saleNFT.sol",
								"main/node_modules/@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"main/node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol",
								"main/node_modules/@openzeppelin/contracts/token/ERC721/IERC721.sol",
								"main/node_modules/@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
								"main/node_modules/@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
								"main/node_modules/@openzeppelin/contracts/utils/Context.sol",
								"main/node_modules/@openzeppelin/contracts/utils/Strings.sol",
								"main/node_modules/@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"main/node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"main/node_modules/@openzeppelin/contracts/utils/math/Math.sol",
								"main/node_modules/@openzeppelin/contracts/utils/math/SignedMath.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"StringsInsufficientHexLength\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"String operations.\",\"errors\":{\"StringsInsufficientHexLength(uint256,uint256)\":[{\"details\":\"The `value` string doesn't fit in the specified `length`.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"main/node_modules/@openzeppelin/contracts/utils/Strings.sol\":\"Strings\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"main/node_modules/@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x55f102ea785d8399c0e58d1108e2d289506dde18abc6db1b7f68c1f9f9bc5792\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e52e0a7765c943ef14e5bcf11e46e6139fa044be564881378349236bf2e3453\",\"dweb:/ipfs/QmZEeeXoFPW47amyP35gfzomF9DixqqTEPwzBakv6cZw6i\"]},\"main/node_modules/@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]},\"main/node_modules/@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"main/node_modules/@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"ERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ```",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ```\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"main/node_modules/@openzeppelin/contracts/utils/introspection/ERC165.sol\":\"ERC165\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"main/node_modules/@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x9e8778b14317ba9e256c30a76fd6c32b960af621987f56069e1e819c77c6a133\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1777404f1dcd0fac188e55a288724ec3c67b45288e49cc64723e95e702b49ab8\",\"dweb:/ipfs/QmZFdC626GButBApwDUvvTnUzdinevC3B24d7yyh57XkiA\"]},\"main/node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"main/node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"IERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"main/node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"main/node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"main/node_modules/@openzeppelin/contracts/utils/math/Math.sol": {
				"Math": {
					"abi": [
						{
							"inputs": [],
							"name": "MathOverflowedMulDiv",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard math utilities missing in the Solidity language.",
						"errors": {
							"MathOverflowedMulDiv()": [
								{
									"details": "Muldiv operation overflow."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"main/node_modules/@openzeppelin/contracts/utils/math/Math.sol\":203:15117  library Math {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"main/node_modules/@openzeppelin/contracts/utils/math/Math.sol\":203:15117  library Math {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212204d9a5d908ebb7f7c9ca627c8d23aa91721c948420cf3061ff71f1f94cdca595964736f6c63430008150033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212204d9a5d908ebb7f7c9ca627c8d23aa91721c948420cf3061ff71f1f94cdca595964736f6c63430008150033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x4D SWAP11 0x5D SWAP1 DUP15 0xBB PUSH32 0x7C9CA627C8D23AA91721C948420CF3061FF71F1F94CDCA595964736F6C634300 ADDMOD ISZERO STOP CALLER ",
							"sourceMap": "203:14914:11:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212204d9a5d908ebb7f7c9ca627c8d23aa91721c948420cf3061ff71f1f94cdca595964736f6c63430008150033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x4D SWAP11 0x5D SWAP1 DUP15 0xBB PUSH32 0x7C9CA627C8D23AA91721C948420CF3061FF71F1F94CDCA595964736F6C634300 ADDMOD ISZERO STOP CALLER ",
							"sourceMap": "203:14914:11:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"average(uint256,uint256)": "infinite",
								"ceilDiv(uint256,uint256)": "infinite",
								"log10(uint256)": "infinite",
								"log10(uint256,enum Math.Rounding)": "infinite",
								"log2(uint256)": "infinite",
								"log2(uint256,enum Math.Rounding)": "infinite",
								"log256(uint256)": "infinite",
								"log256(uint256,enum Math.Rounding)": "infinite",
								"max(uint256,uint256)": "infinite",
								"min(uint256,uint256)": "infinite",
								"mulDiv(uint256,uint256,uint256)": "infinite",
								"mulDiv(uint256,uint256,uint256,enum Math.Rounding)": "infinite",
								"sqrt(uint256)": "infinite",
								"sqrt(uint256,enum Math.Rounding)": "infinite",
								"tryAdd(uint256,uint256)": "infinite",
								"tryDiv(uint256,uint256)": "infinite",
								"tryMod(uint256,uint256)": "infinite",
								"tryMul(uint256,uint256)": "infinite",
								"trySub(uint256,uint256)": "infinite",
								"unsignedRoundsUp(enum Math.Rounding)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH #[$]",
									"source": 11,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH [$]",
									"source": 11,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 11,
									"value": "B"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "CODECOPY",
									"source": 11
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "MLOAD",
									"source": 11
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "BYTE",
									"source": 11
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 11,
									"value": "73"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "EQ",
									"source": 11
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "1"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 11,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 11,
									"value": "4"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 11,
									"value": "24"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "REVERT",
									"source": 11
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "tag",
									"source": 11,
									"value": "1"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "ADDRESS",
									"source": 11
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 11,
									"value": "73"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "MSTORE8",
									"source": 11
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "RETURN",
									"source": 11
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212204d9a5d908ebb7f7c9ca627c8d23aa91721c948420cf3061ff71f1f94cdca595964736f6c63430008150033",
									".code": [
										{
											"begin": 203,
											"end": 15117,
											"name": "PUSHDEPLOYADDRESS",
											"source": 11
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "ADDRESS",
											"source": 11
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "PUSH",
											"source": 11,
											"value": "80"
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "REVERT",
											"source": 11
										}
									]
								}
							},
							"sourceList": [
								"contracts/myNFT.sol",
								"contracts/saleNFT.sol",
								"main/node_modules/@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"main/node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol",
								"main/node_modules/@openzeppelin/contracts/token/ERC721/IERC721.sol",
								"main/node_modules/@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
								"main/node_modules/@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
								"main/node_modules/@openzeppelin/contracts/utils/Context.sol",
								"main/node_modules/@openzeppelin/contracts/utils/Strings.sol",
								"main/node_modules/@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"main/node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"main/node_modules/@openzeppelin/contracts/utils/math/Math.sol",
								"main/node_modules/@openzeppelin/contracts/utils/math/SignedMath.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"MathOverflowedMulDiv\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard math utilities missing in the Solidity language.\",\"errors\":{\"MathOverflowedMulDiv()\":[{\"details\":\"Muldiv operation overflow.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"main/node_modules/@openzeppelin/contracts/utils/math/Math.sol\":\"Math\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"main/node_modules/@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"main/node_modules/@openzeppelin/contracts/utils/math/SignedMath.sol": {
				"SignedMath": {
					"abi": [],
					"devdoc": {
						"details": "Standard signed math utilities missing in the Solidity language.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"main/node_modules/@openzeppelin/contracts/utils/math/SignedMath.sol\":216:1263  library SignedMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"main/node_modules/@openzeppelin/contracts/utils/math/SignedMath.sol\":216:1263  library SignedMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212200c48275017195f7e18f7a01215b75093d1ec028e2587878d3f871ac2f3d34d9964736f6c63430008150033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212200c48275017195f7e18f7a01215b75093d1ec028e2587878d3f871ac2f3d34d9964736f6c63430008150033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC BASEFEE 0x27 POP OR NOT PUSH0 PUSH31 0x18F7A01215B75093D1EC028E2587878D3F871AC2F3D34D9964736F6C634300 ADDMOD ISZERO STOP CALLER ",
							"sourceMap": "216:1047:12:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212200c48275017195f7e18f7a01215b75093d1ec028e2587878d3f871ac2f3d34d9964736f6c63430008150033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC BASEFEE 0x27 POP OR NOT PUSH0 PUSH31 0x18F7A01215B75093D1EC028E2587878D3F871AC2F3D34D9964736F6C634300 ADDMOD ISZERO STOP CALLER ",
							"sourceMap": "216:1047:12:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"abs(int256)": "infinite",
								"average(int256,int256)": "infinite",
								"max(int256,int256)": "infinite",
								"min(int256,int256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH #[$]",
									"source": 12,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH [$]",
									"source": 12,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 12,
									"value": "B"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "CODECOPY",
									"source": 12
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "BYTE",
									"source": 12
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 12,
									"value": "73"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "EQ",
									"source": 12
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 12,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 12,
									"value": "4"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 12,
									"value": "24"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "REVERT",
									"source": 12
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "tag",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "ADDRESS",
									"source": 12
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 12,
									"value": "73"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "MSTORE8",
									"source": 12
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "RETURN",
									"source": 12
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212200c48275017195f7e18f7a01215b75093d1ec028e2587878d3f871ac2f3d34d9964736f6c63430008150033",
									".code": [
										{
											"begin": 216,
											"end": 1263,
											"name": "PUSHDEPLOYADDRESS",
											"source": 12
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "ADDRESS",
											"source": 12
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "PUSH",
											"source": 12,
											"value": "80"
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "REVERT",
											"source": 12
										}
									]
								}
							},
							"sourceList": [
								"contracts/myNFT.sol",
								"contracts/saleNFT.sol",
								"main/node_modules/@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"main/node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol",
								"main/node_modules/@openzeppelin/contracts/token/ERC721/IERC721.sol",
								"main/node_modules/@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
								"main/node_modules/@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
								"main/node_modules/@openzeppelin/contracts/utils/Context.sol",
								"main/node_modules/@openzeppelin/contracts/utils/Strings.sol",
								"main/node_modules/@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"main/node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"main/node_modules/@openzeppelin/contracts/utils/math/Math.sol",
								"main/node_modules/@openzeppelin/contracts/utils/math/SignedMath.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard signed math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"main/node_modules/@openzeppelin/contracts/utils/math/SignedMath.sol\":\"SignedMath\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"main/node_modules/@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "2519",
				"formattedMessage": "Warning: This declaration shadows an existing declaration.\n  --> contracts/myNFT.sol:15:22:\n   |\n15 |     function minting(string memory tokenURI) public {\n   |                      ^^^^^^^^^^^^^^^^^^^^^^\nNote: The shadowed declaration is here:\n  --> contracts/myNFT.sol:22:5:\n   |\n22 |     function tokenURI(\n   |     ^ (Relevant source part starts here and spans across multiple lines).\n\n",
				"message": "This declaration shadows an existing declaration.",
				"secondarySourceLocations": [
					{
						"end": 942,
						"file": "contracts/myNFT.sol",
						"message": "The shadowed declaration is here:",
						"start": 701
					}
				],
				"severity": "warning",
				"sourceLocation": {
					"end": 418,
					"file": "contracts/myNFT.sol",
					"start": 396
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "2018",
				"formattedMessage": "Warning: Function state mutability can be restricted to pure\n  --> contracts/myNFT.sol:31:5:\n   |\n31 |     function _baseURI() internal view override returns (string memory) {\n   |     ^ (Relevant source part starts here and spans across multiple lines).\n\n",
				"message": "Function state mutability can be restricted to pure",
				"severity": "warning",
				"sourceLocation": {
					"end": 1099,
					"file": "contracts/myNFT.sol",
					"start": 950
				},
				"type": "Warning"
			}
		],
		"sources": {
			"contracts/myNFT.sol": {
				"ast": {
					"absolutePath": "contracts/myNFT.sol",
					"exportedSymbols": {
						"Context": [
							1513
						],
						"ERC165": [
							1792
						],
						"ERC721": [
							1328
						],
						"IERC165": [
							1804
						],
						"IERC721": [
							1445
						],
						"IERC721Errors": [
							272
						],
						"IERC721Metadata": [
							1491
						],
						"IERC721Receiver": [
							1463
						],
						"MyNFT": [
							119
						],
						"Strings": [
							1768
						]
					},
					"id": 120,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "33:24:0"
						},
						{
							"absolutePath": "main/node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol",
							"file": "../main/node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol",
							"id": 2,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 120,
							"sourceUnit": 1329,
							"src": "61:78:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 3,
										"name": "ERC721",
										"nameLocations": [
											"161:6:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1328,
										"src": "161:6:0"
									},
									"id": 4,
									"nodeType": "InheritanceSpecifier",
									"src": "161:6:0"
								}
							],
							"canonicalName": "MyNFT",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 119,
							"linearizedBaseContracts": [
								119,
								1328,
								272,
								1491,
								1445,
								1792,
								1804,
								1513
							],
							"name": "MyNFT",
							"nameLocation": "152:5:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 15,
										"nodeType": "Block",
										"src": "279:2:0",
										"statements": []
									},
									"id": 16,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 11,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 6,
													"src": "263:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												{
													"id": 12,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "270:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												}
											],
											"id": 13,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 10,
												"name": "ERC721",
												"nameLocations": [
													"256:6:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1328,
												"src": "256:6:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "256:22:0"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 9,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 6,
												"mutability": "mutable",
												"name": "_name",
												"nameLocation": "211:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 16,
												"src": "197:19:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 5,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "197:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 8,
												"mutability": "mutable",
												"name": "_symbol",
												"nameLocation": "241:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 16,
												"src": "227:21:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 7,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "227:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "186:69:0"
									},
									"returnParameters": {
										"id": 14,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "279:0:0"
									},
									"scope": 119,
									"src": "175:106:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 20,
									"mutability": "mutable",
									"name": "_tokenURIs",
									"nameLocation": "333:10:0",
									"nodeType": "VariableDeclaration",
									"scope": 119,
									"src": "289:54:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_string_storage_$",
										"typeString": "mapping(uint256 => string)"
									},
									"typeName": {
										"id": 19,
										"keyName": "tokenId",
										"keyNameLocation": "305:7:0",
										"keyType": {
											"id": 17,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "297:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "289:43:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_string_storage_$",
											"typeString": "mapping(uint256 => string)"
										},
										"valueName": "tokenURI",
										"valueNameLocation": "323:8:0",
										"valueType": {
											"id": 18,
											"name": "string",
											"nodeType": "ElementaryTypeName",
											"src": "316:6:0",
											"typeDescriptions": {
												"typeIdentifier": "t_string_storage_ptr",
												"typeString": "string"
											}
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 23,
									"mutability": "mutable",
									"name": "totalSupply",
									"nameLocation": "355:11:0",
									"nodeType": "VariableDeclaration",
									"scope": 119,
									"src": "350:20:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 21,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "350:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "30",
										"id": 22,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "369:1:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_0_by_1",
											"typeString": "int_const 0"
										},
										"value": "0"
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 44,
										"nodeType": "Block",
										"src": "427:121:0",
										"statements": [
											{
												"expression": {
													"id": 32,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 28,
															"name": "_tokenURIs",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 20,
															"src": "438:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_string_storage_$",
																"typeString": "mapping(uint256 => string storage ref)"
															}
														},
														"id": 30,
														"indexExpression": {
															"id": 29,
															"name": "totalSupply",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 23,
															"src": "449:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "438:23:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 31,
														"name": "tokenURI",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 25,
														"src": "464:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "438:34:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 33,
												"nodeType": "ExpressionStatement",
												"src": "438:34:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 35,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "489:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 36,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "493:6:0",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "489:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 37,
															"name": "totalSupply",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 23,
															"src": "501:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 34,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 935,
														"src": "483:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 38,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "483:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 39,
												"nodeType": "ExpressionStatement",
												"src": "483:30:0"
											},
											{
												"expression": {
													"id": 42,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 40,
														"name": "totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 23,
														"src": "524:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"hexValue": "31",
														"id": 41,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "539:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "524:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 43,
												"nodeType": "ExpressionStatement",
												"src": "524:16:0"
											}
										]
									},
									"functionSelector": "0bdc9008",
									"id": 45,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "minting",
									"nameLocation": "388:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 26,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 25,
												"mutability": "mutable",
												"name": "tokenURI",
												"nameLocation": "410:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 45,
												"src": "396:22:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 24,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "396:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "395:24:0"
									},
									"returnParameters": {
										"id": 27,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "427:0:0"
									},
									"scope": 119,
									"src": "379:169:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										515
									],
									"body": {
										"id": 57,
										"nodeType": "Block",
										"src": "798:144:0",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 53,
														"name": "_tokenURIs",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 20,
														"src": "914:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_string_storage_$",
															"typeString": "mapping(uint256 => string storage ref)"
														}
													},
													"id": 55,
													"indexExpression": {
														"id": 54,
														"name": "_tokenId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 47,
														"src": "925:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "914:20:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 52,
												"id": 56,
												"nodeType": "Return",
												"src": "907:27:0"
											}
										]
									},
									"functionSelector": "c87b56dd",
									"id": 58,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tokenURI",
									"nameLocation": "710:8:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 49,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "765:8:0"
									},
									"parameters": {
										"id": 48,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 47,
												"mutability": "mutable",
												"name": "_tokenId",
												"nameLocation": "737:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 58,
												"src": "729:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 46,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "729:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "718:34:0"
									},
									"returnParameters": {
										"id": 52,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 51,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 58,
												"src": "783:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 50,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "783:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "782:15:0"
									},
									"scope": 119,
									"src": "701:241:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										524
									],
									"body": {
										"id": 66,
										"nodeType": "Block",
										"src": "1017:82:0",
										"statements": [
											{
												"expression": {
													"hexValue": "68747470733a2f2f69766f72792d747261646974696f6e616c2d636f642d3335302e6d7970696e6174612e636c6f75642f697066732f",
													"id": 64,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1035:56:0",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_faa93274cc08f9b7030710bde5c2f7fb59641f469fb1a75e3e71d63158dd59a2",
														"typeString": "literal_string \"https://ivory-traditional-cod-350.mypinata.cloud/ipfs/\""
													},
													"value": "https://ivory-traditional-cod-350.mypinata.cloud/ipfs/"
												},
												"functionReturnParameters": 63,
												"id": 65,
												"nodeType": "Return",
												"src": "1028:63:0"
											}
										]
									},
									"id": 67,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_baseURI",
									"nameLocation": "959:8:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 60,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "984:8:0"
									},
									"parameters": {
										"id": 59,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "967:2:0"
									},
									"returnParameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 67,
												"src": "1002:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 61,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1002:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1001:15:0"
									},
									"scope": 119,
									"src": "950:149:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 82,
										"nodeType": "Block",
										"src": "1316:64:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 77,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 69,
															"src": "1346:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 78,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 71,
															"src": "1353:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 79,
															"name": "approved",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 73,
															"src": "1363:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 76,
														"name": "_setApprovalForAll",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1234,
														"src": "1327:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$",
															"typeString": "function (address,address,bool)"
														}
													},
													"id": 80,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1327:45:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 81,
												"nodeType": "ExpressionStatement",
												"src": "1327:45:0"
											}
										]
									},
									"functionSelector": "29d6724e",
									"id": 83,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "setAppAll",
									"nameLocation": "1251:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 74,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 69,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1269:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 83,
												"src": "1261:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 68,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1261:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 71,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "1284:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 83,
												"src": "1276:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 70,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1276:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 73,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "1299:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 83,
												"src": "1294:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 72,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1294:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1260:48:0"
									},
									"returnParameters": {
										"id": 75,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1316:0:0"
									},
									"scope": 119,
									"src": "1242:138:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 94,
										"nodeType": "Block",
										"src": "1453:41:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 91,
															"name": "index",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 85,
															"src": "1480:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 90,
														"name": "_ownerOf",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 693,
														"src": "1471:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 92,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1471:15:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 89,
												"id": 93,
												"nodeType": "Return",
												"src": "1464:22:0"
											}
										]
									},
									"functionSelector": "83638710",
									"id": 95,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getOwnerOf",
									"nameLocation": "1397:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 86,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 85,
												"mutability": "mutable",
												"name": "index",
												"nameLocation": "1416:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 95,
												"src": "1408:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 84,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1408:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1407:15:0"
									},
									"returnParameters": {
										"id": 89,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 88,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 95,
												"src": "1444:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 87,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1444:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1443:9:0"
									},
									"scope": 119,
									"src": "1388:106:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 102,
										"nodeType": "Block",
										"src": "1558:37:0",
										"statements": [
											{
												"expression": {
													"id": 100,
													"name": "totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 23,
													"src": "1576:11:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 99,
												"id": 101,
												"nodeType": "Return",
												"src": "1569:18:0"
											}
										]
									},
									"functionSelector": "c4e41b22",
									"id": 103,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getTotalSupply",
									"nameLocation": "1511:14:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 96,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1525:2:0"
									},
									"returnParameters": {
										"id": 99,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 98,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 103,
												"src": "1549:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 97,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1549:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1548:9:0"
									},
									"scope": 119,
									"src": "1502:93:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 117,
										"nodeType": "Block",
										"src": "1729:56:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 111,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1753:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 112,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1757:6:0",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1753:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 113,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 105,
															"src": "1765:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 114,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 107,
															"src": "1769:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 110,
														"name": "transferFrom",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															118,
															636
														],
														"referencedDeclaration": 636,
														"src": "1740:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 115,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1740:37:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 116,
												"nodeType": "ExpressionStatement",
												"src": "1740:37:0"
											}
										]
									},
									"functionSelector": "01c6adc3",
									"id": 118,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "1672:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 108,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 105,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1693:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 118,
												"src": "1685:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 104,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1685:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 107,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1705:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 118,
												"src": "1697:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 106,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1697:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1684:29:0"
									},
									"returnParameters": {
										"id": 109,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1729:0:0"
									},
									"scope": 119,
									"src": "1663:122:0",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 120,
							"src": "143:1645:0",
							"usedErrors": [
								230,
								235,
								244,
								249,
								254,
								261,
								266,
								271
							],
							"usedEvents": [
								1344,
								1353,
								1362
							]
						}
					],
					"src": "33:1757:0"
				},
				"id": 0
			},
			"contracts/saleNFT.sol": {
				"ast": {
					"absolutePath": "contracts/saleNFT.sol",
					"exportedSymbols": {
						"Context": [
							1513
						],
						"ERC165": [
							1792
						],
						"ERC721": [
							1328
						],
						"IERC165": [
							1804
						],
						"IERC721": [
							1445
						],
						"IERC721Errors": [
							272
						],
						"IERC721Metadata": [
							1491
						],
						"IERC721Receiver": [
							1463
						],
						"MyNFT": [
							119
						],
						"SaleNFT": [
							182
						],
						"Strings": [
							1768
						]
					},
					"id": 183,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 121,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "33:24:1"
						},
						{
							"absolutePath": "contracts/myNFT.sol",
							"file": "./myNFT.sol",
							"id": 122,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 183,
							"sourceUnit": 120,
							"src": "61:21:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SaleNFT",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 182,
							"linearizedBaseContracts": [
								182
							],
							"name": "SaleNFT",
							"nameLocation": "95:7:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "98300e18",
									"id": 125,
									"mutability": "mutable",
									"name": "_nft",
									"nameLocation": "307:4:1",
									"nodeType": "VariableDeclaration",
									"scope": 182,
									"src": "294:17:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_MyNFT_$119",
										"typeString": "contract MyNFT"
									},
									"typeName": {
										"id": 124,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 123,
											"name": "MyNFT",
											"nameLocations": [
												"294:5:1"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 119,
											"src": "294:5:1"
										},
										"referencedDeclaration": 119,
										"src": "294:5:1",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_MyNFT_$119",
											"typeString": "contract MyNFT"
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 136,
										"nodeType": "Block",
										"src": "411:90:1",
										"statements": [
											{
												"expression": {
													"id": 134,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 130,
														"name": "_nft",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 125,
														"src": "422:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_MyNFT_$119",
															"typeString": "contract MyNFT"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 132,
																"name": "_nftCA",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 127,
																"src": "435:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 131,
															"name": "MyNFT",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 119,
															"src": "429:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_MyNFT_$119_$",
																"typeString": "type(contract MyNFT)"
															}
														},
														"id": 133,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "429:13:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_MyNFT_$119",
															"typeString": "contract MyNFT"
														}
													},
													"src": "422:20:1",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_MyNFT_$119",
														"typeString": "contract MyNFT"
													}
												},
												"id": 135,
												"nodeType": "ExpressionStatement",
												"src": "422:20:1"
											}
										]
									},
									"id": 137,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 128,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 127,
												"mutability": "mutable",
												"name": "_nftCA",
												"nameLocation": "404:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 137,
												"src": "396:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 126,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "396:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "395:16:1"
									},
									"returnParameters": {
										"id": 129,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "411:0:1"
									},
									"scope": 182,
									"src": "384:117:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 148,
										"nodeType": "Block",
										"src": "557:97:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 145,
															"name": "url",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 139,
															"src": "642:3:1",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"expression": {
															"id": 142,
															"name": "_nft",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 125,
															"src": "629:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_MyNFT_$119",
																"typeString": "contract MyNFT"
															}
														},
														"id": 144,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "634:7:1",
														"memberName": "minting",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 45,
														"src": "629:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (string memory) external"
														}
													},
													"id": 146,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "629:17:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 147,
												"nodeType": "ExpressionStatement",
												"src": "629:17:1"
											}
										]
									},
									"functionSelector": "a15db9d0",
									"id": 149,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_saleNFTmint",
									"nameLocation": "518:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 140,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 139,
												"mutability": "mutable",
												"name": "url",
												"nameLocation": "545:3:1",
												"nodeType": "VariableDeclaration",
												"scope": 149,
												"src": "531:17:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 138,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "531:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "530:19:1"
									},
									"returnParameters": {
										"id": 141,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "557:0:1"
									},
									"scope": 182,
									"src": "509:145:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 164,
										"nodeType": "Block",
										"src": "871:184:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 155,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1015:3:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 156,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1019:6:1",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1015:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 159,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "1035:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_SaleNFT_$182",
																		"typeString": "contract SaleNFT"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_SaleNFT_$182",
																		"typeString": "contract SaleNFT"
																	}
																],
																"id": 158,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1027:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 157,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1027:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 160,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1027:13:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"hexValue": "74727565",
															"id": 161,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1042:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"expression": {
															"id": 152,
															"name": "_nft",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 125,
															"src": "1000:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_MyNFT_$119",
																"typeString": "contract MyNFT"
															}
														},
														"id": 154,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1005:9:1",
														"memberName": "setAppAll",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 83,
														"src": "1000:14:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$",
															"typeString": "function (address,address,bool) external"
														}
													},
													"id": 162,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1000:47:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 163,
												"nodeType": "ExpressionStatement",
												"src": "1000:47:1"
											}
										]
									},
									"functionSelector": "cc9562a5",
									"id": 165,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "setApprovalForAll",
									"nameLocation": "844:17:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 150,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "861:2:1"
									},
									"returnParameters": {
										"id": 151,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "871:0:1"
									},
									"scope": 182,
									"src": "835:220:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 180,
										"nodeType": "Block",
										"src": "1295:74:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 172,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1335:3:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 173,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1339:6:1",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1335:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 176,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "1355:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_SaleNFT_$182",
																		"typeString": "contract SaleNFT"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_SaleNFT_$182",
																		"typeString": "contract SaleNFT"
																	}
																],
																"id": 175,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1347:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 174,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1347:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 177,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1347:13:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 170,
															"name": "_nft",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 125,
															"src": "1313:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_MyNFT_$119",
																"typeString": "contract MyNFT"
															}
														},
														"id": 171,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1318:16:1",
														"memberName": "isApprovedForAll",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 590,
														"src": "1313:21:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_bool_$",
															"typeString": "function (address,address) view external returns (bool)"
														}
													},
													"id": 178,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1313:48:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 169,
												"id": 179,
												"nodeType": "Return",
												"src": "1306:55:1"
											}
										]
									},
									"functionSelector": "6aa5e376",
									"id": 181,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "salesNFT",
									"nameLocation": "1257:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 166,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1265:2:1"
									},
									"returnParameters": {
										"id": 169,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 168,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 181,
												"src": "1289:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 167,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1289:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1288:6:1"
									},
									"scope": 182,
									"src": "1248:121:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 183,
							"src": "86:1737:1",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "33:1792:1"
				},
				"id": 1
			},
			"main/node_modules/@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"ast": {
					"absolutePath": "main/node_modules/@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
					"exportedSymbols": {
						"IERC1155Errors": [
							319
						],
						"IERC20Errors": [
							224
						],
						"IERC721Errors": [
							272
						]
					},
					"id": 320,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 184,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "112:24:2"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 185,
								"nodeType": "StructuredDocumentation",
								"src": "138:139:2",
								"text": " @dev Standard ERC20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens."
							},
							"fullyImplemented": true,
							"id": 224,
							"linearizedBaseContracts": [
								224
							],
							"name": "IERC20Errors",
							"nameLocation": "288:12:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 186,
										"nodeType": "StructuredDocumentation",
										"src": "307:309:2",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "e450d38c",
									"id": 194,
									"name": "ERC20InsufficientBalance",
									"nameLocation": "627:24:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 193,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 188,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "660:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 194,
												"src": "652:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 187,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "652:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 190,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "676:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 194,
												"src": "668:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 189,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "668:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 192,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "693:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 194,
												"src": "685:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 191,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "685:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "651:49:2"
									},
									"src": "621:80:2"
								},
								{
									"documentation": {
										"id": 195,
										"nodeType": "StructuredDocumentation",
										"src": "707:152:2",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "96c6fd1e",
									"id": 199,
									"name": "ERC20InvalidSender",
									"nameLocation": "870:18:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 198,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 197,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "897:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 199,
												"src": "889:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 196,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "889:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "888:16:2"
									},
									"src": "864:41:2"
								},
								{
									"documentation": {
										"id": 200,
										"nodeType": "StructuredDocumentation",
										"src": "911:159:2",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "ec442f05",
									"id": 204,
									"name": "ERC20InvalidReceiver",
									"nameLocation": "1081:20:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 203,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 202,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "1110:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 204,
												"src": "1102:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 201,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1102:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1101:18:2"
									},
									"src": "1075:45:2"
								},
								{
									"documentation": {
										"id": 205,
										"nodeType": "StructuredDocumentation",
										"src": "1126:345:2",
										"text": " @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "fb8f41b2",
									"id": 213,
									"name": "ERC20InsufficientAllowance",
									"nameLocation": "1482:26:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 212,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 207,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1517:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 213,
												"src": "1509:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 206,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1509:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 209,
												"mutability": "mutable",
												"name": "allowance",
												"nameLocation": "1534:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 213,
												"src": "1526:17:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 208,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1526:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 211,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "1553:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 213,
												"src": "1545:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 210,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1545:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1508:52:2"
									},
									"src": "1476:85:2"
								},
								{
									"documentation": {
										"id": 214,
										"nodeType": "StructuredDocumentation",
										"src": "1567:174:2",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "e602df05",
									"id": 218,
									"name": "ERC20InvalidApprover",
									"nameLocation": "1752:20:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 217,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 216,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "1781:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 218,
												"src": "1773:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 215,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1773:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1772:18:2"
									},
									"src": "1746:45:2"
								},
								{
									"documentation": {
										"id": 219,
										"nodeType": "StructuredDocumentation",
										"src": "1797:195:2",
										"text": " @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "94280d62",
									"id": 223,
									"name": "ERC20InvalidSpender",
									"nameLocation": "2003:19:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 222,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 221,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2031:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 223,
												"src": "2023:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 220,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2023:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2022:17:2"
									},
									"src": "1997:43:2"
								}
							],
							"scope": 320,
							"src": "278:1764:2",
							"usedErrors": [
								194,
								199,
								204,
								213,
								218,
								223
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 225,
								"nodeType": "StructuredDocumentation",
								"src": "2044:141:2",
								"text": " @dev Standard ERC721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens."
							},
							"fullyImplemented": true,
							"id": 272,
							"linearizedBaseContracts": [
								272
							],
							"name": "IERC721Errors",
							"nameLocation": "2196:13:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 226,
										"nodeType": "StructuredDocumentation",
										"src": "2216:219:2",
										"text": " @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "89c62b64",
									"id": 230,
									"name": "ERC721InvalidOwner",
									"nameLocation": "2446:18:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 229,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 228,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2473:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 230,
												"src": "2465:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 227,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2465:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2464:15:2"
									},
									"src": "2440:40:2"
								},
								{
									"documentation": {
										"id": 231,
										"nodeType": "StructuredDocumentation",
										"src": "2486:132:2",
										"text": " @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "7e273289",
									"id": 235,
									"name": "ERC721NonexistentToken",
									"nameLocation": "2629:22:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 234,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 233,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2660:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 235,
												"src": "2652:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 232,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2652:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2651:17:2"
									},
									"src": "2623:46:2"
								},
								{
									"documentation": {
										"id": 236,
										"nodeType": "StructuredDocumentation",
										"src": "2675:289:2",
										"text": " @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "64283d7b",
									"id": 244,
									"name": "ERC721IncorrectOwner",
									"nameLocation": "2975:20:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 243,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 238,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3004:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 244,
												"src": "2996:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 237,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2996:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 240,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3020:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 244,
												"src": "3012:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 239,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3012:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 242,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3037:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 244,
												"src": "3029:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 241,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3029:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2995:48:2"
									},
									"src": "2969:75:2"
								},
								{
									"documentation": {
										"id": 245,
										"nodeType": "StructuredDocumentation",
										"src": "3050:152:2",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "73c6ac6e",
									"id": 249,
									"name": "ERC721InvalidSender",
									"nameLocation": "3213:19:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 248,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 247,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3241:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "3233:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 246,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3233:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3232:16:2"
									},
									"src": "3207:42:2"
								},
								{
									"documentation": {
										"id": 250,
										"nodeType": "StructuredDocumentation",
										"src": "3255:159:2",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "64a0ae92",
									"id": 254,
									"name": "ERC721InvalidReceiver",
									"nameLocation": "3425:21:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 253,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 252,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "3455:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 254,
												"src": "3447:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 251,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3447:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3446:18:2"
									},
									"src": "3419:46:2"
								},
								{
									"documentation": {
										"id": 255,
										"nodeType": "StructuredDocumentation",
										"src": "3471:247:2",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "177e802f",
									"id": 261,
									"name": "ERC721InsufficientApproval",
									"nameLocation": "3729:26:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 260,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 257,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3764:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 261,
												"src": "3756:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 256,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3756:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 259,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3782:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 261,
												"src": "3774:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 258,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3774:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3755:35:2"
									},
									"src": "3723:68:2"
								},
								{
									"documentation": {
										"id": 262,
										"nodeType": "StructuredDocumentation",
										"src": "3797:174:2",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "a9fbf51f",
									"id": 266,
									"name": "ERC721InvalidApprover",
									"nameLocation": "3982:21:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 265,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 264,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "4012:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 266,
												"src": "4004:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 263,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4004:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4003:18:2"
									},
									"src": "3976:46:2"
								},
								{
									"documentation": {
										"id": 267,
										"nodeType": "StructuredDocumentation",
										"src": "4028:197:2",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "5b08ba18",
									"id": 271,
									"name": "ERC721InvalidOperator",
									"nameLocation": "4236:21:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 270,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 269,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4266:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 271,
												"src": "4258:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 268,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4258:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4257:18:2"
									},
									"src": "4230:46:2"
								}
							],
							"scope": 320,
							"src": "2186:2092:2",
							"usedErrors": [
								230,
								235,
								244,
								249,
								254,
								261,
								266,
								271
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC1155Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 273,
								"nodeType": "StructuredDocumentation",
								"src": "4280:143:2",
								"text": " @dev Standard ERC1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens."
							},
							"fullyImplemented": true,
							"id": 319,
							"linearizedBaseContracts": [
								319
							],
							"name": "IERC1155Errors",
							"nameLocation": "4434:14:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 274,
										"nodeType": "StructuredDocumentation",
										"src": "4455:361:2",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "03dee4c5",
									"id": 284,
									"name": "ERC1155InsufficientBalance",
									"nameLocation": "4827:26:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 283,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 276,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "4862:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 284,
												"src": "4854:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 275,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4854:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 278,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "4878:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 284,
												"src": "4870:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 277,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4870:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 280,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "4895:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 284,
												"src": "4887:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 279,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4887:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 282,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4911:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 284,
												"src": "4903:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 281,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4903:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4853:66:2"
									},
									"src": "4821:99:2"
								},
								{
									"documentation": {
										"id": 285,
										"nodeType": "StructuredDocumentation",
										"src": "4926:152:2",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "01a83514",
									"id": 289,
									"name": "ERC1155InvalidSender",
									"nameLocation": "5089:20:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 288,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 287,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "5118:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 289,
												"src": "5110:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 286,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5110:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5109:16:2"
									},
									"src": "5083:43:2"
								},
								{
									"documentation": {
										"id": 290,
										"nodeType": "StructuredDocumentation",
										"src": "5132:159:2",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "57f447ce",
									"id": 294,
									"name": "ERC1155InvalidReceiver",
									"nameLocation": "5302:22:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 293,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 292,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "5333:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 294,
												"src": "5325:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 291,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5325:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5324:18:2"
									},
									"src": "5296:47:2"
								},
								{
									"documentation": {
										"id": 295,
										"nodeType": "StructuredDocumentation",
										"src": "5349:256:2",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "e237d922",
									"id": 301,
									"name": "ERC1155MissingApprovalForAll",
									"nameLocation": "5616:28:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 300,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 297,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "5653:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 301,
												"src": "5645:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 296,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5645:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 299,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "5671:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 301,
												"src": "5663:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 298,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5663:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5644:33:2"
									},
									"src": "5610:68:2"
								},
								{
									"documentation": {
										"id": 302,
										"nodeType": "StructuredDocumentation",
										"src": "5684:174:2",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "3e31884e",
									"id": 306,
									"name": "ERC1155InvalidApprover",
									"nameLocation": "5869:22:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 305,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 304,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "5900:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 306,
												"src": "5892:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 303,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5892:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5891:18:2"
									},
									"src": "5863:47:2"
								},
								{
									"documentation": {
										"id": 307,
										"nodeType": "StructuredDocumentation",
										"src": "5916:197:2",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "ced3e100",
									"id": 311,
									"name": "ERC1155InvalidOperator",
									"nameLocation": "6124:22:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 310,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 309,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "6155:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 311,
												"src": "6147:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 308,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6147:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6146:18:2"
									},
									"src": "6118:47:2"
								},
								{
									"documentation": {
										"id": 312,
										"nodeType": "StructuredDocumentation",
										"src": "6171:280:2",
										"text": " @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"
									},
									"errorSelector": "5b059991",
									"id": 318,
									"name": "ERC1155InvalidArrayLength",
									"nameLocation": "6462:25:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 317,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 314,
												"mutability": "mutable",
												"name": "idsLength",
												"nameLocation": "6496:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 318,
												"src": "6488:17:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 313,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6488:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 316,
												"mutability": "mutable",
												"name": "valuesLength",
												"nameLocation": "6515:12:2",
												"nodeType": "VariableDeclaration",
												"scope": 318,
												"src": "6507:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 315,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6507:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6487:41:2"
									},
									"src": "6456:73:2"
								}
							],
							"scope": 320,
							"src": "4424:2107:2",
							"usedErrors": [
								284,
								289,
								294,
								301,
								306,
								311,
								318
							],
							"usedEvents": []
						}
					],
					"src": "112:6420:2"
				},
				"id": 2
			},
			"main/node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol": {
				"ast": {
					"absolutePath": "main/node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol",
					"exportedSymbols": {
						"Context": [
							1513
						],
						"ERC165": [
							1792
						],
						"ERC721": [
							1328
						],
						"IERC165": [
							1804
						],
						"IERC721": [
							1445
						],
						"IERC721Errors": [
							272
						],
						"IERC721Metadata": [
							1491
						],
						"IERC721Receiver": [
							1463
						],
						"Strings": [
							1768
						]
					},
					"id": 1329,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 321,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "107:24:3"
						},
						{
							"absolutePath": "main/node_modules/@openzeppelin/contracts/token/ERC721/IERC721.sol",
							"file": "./IERC721.sol",
							"id": 323,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1329,
							"sourceUnit": 1446,
							"src": "133:38:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 322,
										"name": "IERC721",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1445,
										"src": "141:7:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "main/node_modules/@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
							"file": "./IERC721Receiver.sol",
							"id": 325,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1329,
							"sourceUnit": 1464,
							"src": "172:54:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 324,
										"name": "IERC721Receiver",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1463,
										"src": "180:15:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "main/node_modules/@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
							"file": "./extensions/IERC721Metadata.sol",
							"id": 327,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1329,
							"sourceUnit": 1492,
							"src": "227:65:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 326,
										"name": "IERC721Metadata",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1491,
										"src": "235:15:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "main/node_modules/@openzeppelin/contracts/utils/Context.sol",
							"file": "../../utils/Context.sol",
							"id": 329,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1329,
							"sourceUnit": 1514,
							"src": "293:48:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 328,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1513,
										"src": "301:7:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "main/node_modules/@openzeppelin/contracts/utils/Strings.sol",
							"file": "../../utils/Strings.sol",
							"id": 331,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1329,
							"sourceUnit": 1769,
							"src": "342:48:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 330,
										"name": "Strings",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1768,
										"src": "350:7:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "main/node_modules/@openzeppelin/contracts/utils/introspection/ERC165.sol",
							"file": "../../utils/introspection/ERC165.sol",
							"id": 334,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1329,
							"sourceUnit": 1793,
							"src": "391:69:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 332,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1804,
										"src": "399:7:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								},
								{
									"foreign": {
										"id": 333,
										"name": "ERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1792,
										"src": "408:6:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "main/node_modules/@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
							"file": "../../interfaces/draft-IERC6093.sol",
							"id": 336,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1329,
							"sourceUnit": 320,
							"src": "461:66:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 335,
										"name": "IERC721Errors",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 272,
										"src": "469:13:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 338,
										"name": "Context",
										"nameLocations": [
											"804:7:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1513,
										"src": "804:7:3"
									},
									"id": 339,
									"nodeType": "InheritanceSpecifier",
									"src": "804:7:3"
								},
								{
									"baseName": {
										"id": 340,
										"name": "ERC165",
										"nameLocations": [
											"813:6:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1792,
										"src": "813:6:3"
									},
									"id": 341,
									"nodeType": "InheritanceSpecifier",
									"src": "813:6:3"
								},
								{
									"baseName": {
										"id": 342,
										"name": "IERC721",
										"nameLocations": [
											"821:7:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1445,
										"src": "821:7:3"
									},
									"id": 343,
									"nodeType": "InheritanceSpecifier",
									"src": "821:7:3"
								},
								{
									"baseName": {
										"id": 344,
										"name": "IERC721Metadata",
										"nameLocations": [
											"830:15:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1491,
										"src": "830:15:3"
									},
									"id": 345,
									"nodeType": "InheritanceSpecifier",
									"src": "830:15:3"
								},
								{
									"baseName": {
										"id": 346,
										"name": "IERC721Errors",
										"nameLocations": [
											"847:13:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 272,
										"src": "847:13:3"
									},
									"id": 347,
									"nodeType": "InheritanceSpecifier",
									"src": "847:13:3"
								}
							],
							"canonicalName": "ERC721",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 337,
								"nodeType": "StructuredDocumentation",
								"src": "529:246:3",
								"text": " @dev Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including\n the Metadata extension, but not including the Enumerable extension, which is available separately as\n {ERC721Enumerable}."
							},
							"fullyImplemented": true,
							"id": 1328,
							"linearizedBaseContracts": [
								1328,
								272,
								1491,
								1445,
								1792,
								1804,
								1513
							],
							"name": "ERC721",
							"nameLocation": "794:6:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 350,
									"libraryName": {
										"id": 348,
										"name": "Strings",
										"nameLocations": [
											"873:7:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1768,
										"src": "873:7:3"
									},
									"nodeType": "UsingForDirective",
									"src": "867:26:3",
									"typeName": {
										"id": 349,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "885:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"constant": false,
									"id": 352,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "932:5:3",
									"nodeType": "VariableDeclaration",
									"scope": 1328,
									"src": "917:20:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 351,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "917:6:3",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 354,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "979:7:3",
									"nodeType": "VariableDeclaration",
									"scope": 1328,
									"src": "964:22:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 353,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "964:6:3",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 358,
									"mutability": "mutable",
									"name": "_owners",
									"nameLocation": "1037:7:3",
									"nodeType": "VariableDeclaration",
									"scope": 1328,
									"src": "993:51:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
										"typeString": "mapping(uint256 => address)"
									},
									"typeName": {
										"id": 357,
										"keyName": "tokenId",
										"keyNameLocation": "1009:7:3",
										"keyType": {
											"id": 355,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1001:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "993:35:3",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
											"typeString": "mapping(uint256 => address)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 356,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1020:7:3",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 362,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "1093:9:3",
									"nodeType": "VariableDeclaration",
									"scope": 1328,
									"src": "1051:51:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 361,
										"keyName": "owner",
										"keyNameLocation": "1067:5:3",
										"keyType": {
											"id": 359,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1059:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1051:33:3",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 360,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1076:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 366,
									"mutability": "mutable",
									"name": "_tokenApprovals",
									"nameLocation": "1153:15:3",
									"nodeType": "VariableDeclaration",
									"scope": 1328,
									"src": "1109:59:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
										"typeString": "mapping(uint256 => address)"
									},
									"typeName": {
										"id": 365,
										"keyName": "tokenId",
										"keyNameLocation": "1125:7:3",
										"keyType": {
											"id": 363,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1117:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "1109:35:3",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
											"typeString": "mapping(uint256 => address)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 364,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1136:7:3",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 372,
									"mutability": "mutable",
									"name": "_operatorApprovals",
									"nameLocation": "1243:18:3",
									"nodeType": "VariableDeclaration",
									"scope": 1328,
									"src": "1175:86:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
										"typeString": "mapping(address => mapping(address => bool))"
									},
									"typeName": {
										"id": 371,
										"keyName": "owner",
										"keyNameLocation": "1191:5:3",
										"keyType": {
											"id": 367,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1183:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1175:59:3",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
											"typeString": "mapping(address => mapping(address => bool))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 370,
											"keyName": "operator",
											"keyNameLocation": "1216:8:3",
											"keyType": {
												"id": 368,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1208:7:3",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "1200:33:3",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
												"typeString": "mapping(address => bool)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 369,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "1228:4:3",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 388,
										"nodeType": "Block",
										"src": "1437:57:3",
										"statements": [
											{
												"expression": {
													"id": 382,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 380,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 352,
														"src": "1447:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 381,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 375,
														"src": "1455:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1447:13:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 383,
												"nodeType": "ExpressionStatement",
												"src": "1447:13:3"
											},
											{
												"expression": {
													"id": 386,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 384,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 354,
														"src": "1470:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 385,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 377,
														"src": "1480:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1470:17:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 387,
												"nodeType": "ExpressionStatement",
												"src": "1470:17:3"
											}
										]
									},
									"documentation": {
										"id": 373,
										"nodeType": "StructuredDocumentation",
										"src": "1268:108:3",
										"text": " @dev Initializes the contract by setting a `name` and a `symbol` to the token collection."
									},
									"id": 389,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 378,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 375,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "1407:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 389,
												"src": "1393:19:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 374,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1393:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 377,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "1428:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 389,
												"src": "1414:21:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 376,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1414:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1392:44:3"
									},
									"returnParameters": {
										"id": 379,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1437:0:3"
									},
									"scope": 1328,
									"src": "1381:113:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										1791,
										1803
									],
									"body": {
										"id": 419,
										"nodeType": "Block",
										"src": "1669:192:3",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 417,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"id": 412,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															},
															"id": 405,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 400,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 392,
																"src": "1698:11:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 402,
																			"name": "IERC721",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1445,
																			"src": "1718:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC721_$1445_$",
																				"typeString": "type(contract IERC721)"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_type$_t_contract$_IERC721_$1445_$",
																				"typeString": "type(contract IERC721)"
																			}
																		],
																		"id": 401,
																		"name": "type",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967269,
																		"src": "1713:4:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																			"typeString": "function () pure"
																		}
																	},
																	"id": 403,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1713:13:3",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_meta_type_t_contract$_IERC721_$1445",
																		"typeString": "type(contract IERC721)"
																	}
																},
																"id": 404,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1727:11:3",
																"memberName": "interfaceId",
																"nodeType": "MemberAccess",
																"src": "1713:25:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"src": "1698:40:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "||",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															},
															"id": 411,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 406,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 392,
																"src": "1754:11:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 408,
																			"name": "IERC721Metadata",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1491,
																			"src": "1774:15:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC721Metadata_$1491_$",
																				"typeString": "type(contract IERC721Metadata)"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_type$_t_contract$_IERC721Metadata_$1491_$",
																				"typeString": "type(contract IERC721Metadata)"
																			}
																		],
																		"id": 407,
																		"name": "type",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967269,
																		"src": "1769:4:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																			"typeString": "function () pure"
																		}
																	},
																	"id": 409,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1769:21:3",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_meta_type_t_contract$_IERC721Metadata_$1491",
																		"typeString": "type(contract IERC721Metadata)"
																	}
																},
																"id": 410,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1791:11:3",
																"memberName": "interfaceId",
																"nodeType": "MemberAccess",
																"src": "1769:33:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"src": "1754:48:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"src": "1698:104:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"arguments": [
															{
																"id": 415,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 392,
																"src": "1842:11:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															],
															"expression": {
																"id": 413,
																"name": "super",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967271,
																"src": "1818:5:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_super$_ERC721_$1328_$",
																	"typeString": "type(contract super ERC721)"
																}
															},
															"id": 414,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1824:17:3",
															"memberName": "supportsInterface",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1791,
															"src": "1818:23:3",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes4_$returns$_t_bool_$",
																"typeString": "function (bytes4) view returns (bool)"
															}
														},
														"id": 416,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1818:36:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "1698:156:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 399,
												"id": 418,
												"nodeType": "Return",
												"src": "1679:175:3"
											}
										]
									},
									"documentation": {
										"id": 390,
										"nodeType": "StructuredDocumentation",
										"src": "1500:56:3",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 420,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "1570:17:3",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 396,
										"nodeType": "OverrideSpecifier",
										"overrides": [
											{
												"id": 394,
												"name": "ERC165",
												"nameLocations": [
													"1637:6:3"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1792,
												"src": "1637:6:3"
											},
											{
												"id": 395,
												"name": "IERC165",
												"nameLocations": [
													"1645:7:3"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1804,
												"src": "1645:7:3"
											}
										],
										"src": "1628:25:3"
									},
									"parameters": {
										"id": 393,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 392,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "1595:11:3",
												"nodeType": "VariableDeclaration",
												"scope": 420,
												"src": "1588:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 391,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "1588:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1587:20:3"
									},
									"returnParameters": {
										"id": 399,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 398,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 420,
												"src": "1663:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 397,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1663:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1662:6:3"
									},
									"scope": 1328,
									"src": "1561:300:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1370
									],
									"body": {
										"id": 447,
										"nodeType": "Block",
										"src": "1992:136:3",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 433,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 428,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 423,
														"src": "2006:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 431,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2023:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 430,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2015:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 429,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2015:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 432,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2015:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2006:19:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 442,
												"nodeType": "IfStatement",
												"src": "2002:87:3",
												"trueBody": {
													"id": 441,
													"nodeType": "Block",
													"src": "2027:62:3",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 437,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2075:1:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 436,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2067:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 435,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2067:7:3",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 438,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2067:10:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 434,
																	"name": "ERC721InvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 230,
																	"src": "2048:18:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 439,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2048:30:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 440,
															"nodeType": "RevertStatement",
															"src": "2041:37:3"
														}
													]
												}
											},
											{
												"expression": {
													"baseExpression": {
														"id": 443,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 362,
														"src": "2105:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 445,
													"indexExpression": {
														"id": 444,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 423,
														"src": "2115:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2105:16:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 427,
												"id": 446,
												"nodeType": "Return",
												"src": "2098:23:3"
											}
										]
									},
									"documentation": {
										"id": 421,
										"nodeType": "StructuredDocumentation",
										"src": "1867:48:3",
										"text": " @dev See {IERC721-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 448,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "1929:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 424,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 423,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1947:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 448,
												"src": "1939:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 422,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1939:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1938:15:3"
									},
									"returnParameters": {
										"id": 427,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 426,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 448,
												"src": "1983:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 425,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1983:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1982:9:3"
									},
									"scope": 1328,
									"src": "1920:208:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1378
									],
									"body": {
										"id": 460,
										"nodeType": "Block",
										"src": "2257:46:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 457,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 451,
															"src": "2288:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 456,
														"name": "_requireOwned",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1263,
														"src": "2274:13:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 458,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2274:22:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 455,
												"id": 459,
												"nodeType": "Return",
												"src": "2267:29:3"
											}
										]
									},
									"documentation": {
										"id": 449,
										"nodeType": "StructuredDocumentation",
										"src": "2134:46:3",
										"text": " @dev See {IERC721-ownerOf}."
									},
									"functionSelector": "6352211e",
									"id": 461,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "ownerOf",
									"nameLocation": "2194:7:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 452,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 451,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2210:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 461,
												"src": "2202:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 450,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2202:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2201:17:3"
									},
									"returnParameters": {
										"id": 455,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 454,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 461,
												"src": "2248:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 453,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2248:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2247:9:3"
									},
									"scope": 1328,
									"src": "2185:118:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1476
									],
									"body": {
										"id": 469,
										"nodeType": "Block",
										"src": "2425:29:3",
										"statements": [
											{
												"expression": {
													"id": 467,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 352,
													"src": "2442:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 466,
												"id": 468,
												"nodeType": "Return",
												"src": "2435:12:3"
											}
										]
									},
									"documentation": {
										"id": 462,
										"nodeType": "StructuredDocumentation",
										"src": "2309:51:3",
										"text": " @dev See {IERC721Metadata-name}."
									},
									"functionSelector": "06fdde03",
									"id": 470,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "2374:4:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 463,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2378:2:3"
									},
									"returnParameters": {
										"id": 466,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 465,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 470,
												"src": "2410:13:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 464,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2410:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2409:15:3"
									},
									"scope": 1328,
									"src": "2365:89:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1482
									],
									"body": {
										"id": 478,
										"nodeType": "Block",
										"src": "2580:31:3",
										"statements": [
											{
												"expression": {
													"id": 476,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 354,
													"src": "2597:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 475,
												"id": 477,
												"nodeType": "Return",
												"src": "2590:14:3"
											}
										]
									},
									"documentation": {
										"id": 471,
										"nodeType": "StructuredDocumentation",
										"src": "2460:53:3",
										"text": " @dev See {IERC721Metadata-symbol}."
									},
									"functionSelector": "95d89b41",
									"id": 479,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "2527:6:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 472,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2533:2:3"
									},
									"returnParameters": {
										"id": 475,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 474,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 479,
												"src": "2565:13:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 473,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2565:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2564:15:3"
									},
									"scope": 1328,
									"src": "2518:93:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1490
									],
									"body": {
										"id": 514,
										"nodeType": "Block",
										"src": "2756:176:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 488,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 482,
															"src": "2780:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 487,
														"name": "_requireOwned",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1263,
														"src": "2766:13:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 489,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2766:22:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 490,
												"nodeType": "ExpressionStatement",
												"src": "2766:22:3"
											},
											{
												"assignments": [
													492
												],
												"declarations": [
													{
														"constant": false,
														"id": 492,
														"mutability": "mutable",
														"name": "baseURI",
														"nameLocation": "2813:7:3",
														"nodeType": "VariableDeclaration",
														"scope": 514,
														"src": "2799:21:3",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string"
														},
														"typeName": {
															"id": 491,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "2799:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_string_storage_ptr",
																"typeString": "string"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 495,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 493,
														"name": "_baseURI",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 524,
														"src": "2823:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_string_memory_ptr_$",
															"typeString": "function () view returns (string memory)"
														}
													},
													"id": 494,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2823:10:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2799:34:3"
											},
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 502,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 498,
																		"name": "baseURI",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 492,
																		"src": "2856:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 497,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2850:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																		"typeString": "type(bytes storage pointer)"
																	},
																	"typeName": {
																		"id": 496,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "2850:5:3",
																		"typeDescriptions": {}
																	}
																},
																"id": 499,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2850:14:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 500,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2865:6:3",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "2850:21:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "30",
															"id": 501,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2874:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "2850:25:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"hexValue": "",
														"id": 511,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2923:2:3",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
															"typeString": "literal_string \"\""
														},
														"value": ""
													},
													"id": 512,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "2850:75:3",
													"trueExpression": {
														"arguments": [
															{
																"id": 506,
																"name": "baseURI",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 492,
																"src": "2892:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																}
															},
															{
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"expression": {
																		"id": 507,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 482,
																		"src": "2901:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 508,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2909:8:3",
																	"memberName": "toString",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1581,
																	"src": "2901:16:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$attached_to$_t_uint256_$",
																		"typeString": "function (uint256) pure returns (string memory)"
																	}
																},
																"id": 509,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2901:18:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																},
																{
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																}
															],
															"expression": {
																"id": 504,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2878:6:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_string_storage_ptr_$",
																	"typeString": "type(string storage pointer)"
																},
																"typeName": {
																	"id": 503,
																	"name": "string",
																	"nodeType": "ElementaryTypeName",
																	"src": "2878:6:3",
																	"typeDescriptions": {}
																}
															},
															"id": 505,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2885:6:3",
															"memberName": "concat",
															"nodeType": "MemberAccess",
															"src": "2878:13:3",
															"typeDescriptions": {
																"typeIdentifier": "t_function_stringconcat_pure$__$returns$_t_string_memory_ptr_$",
																"typeString": "function () pure returns (string memory)"
															}
														},
														"id": 510,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2878:42:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 486,
												"id": 513,
												"nodeType": "Return",
												"src": "2843:82:3"
											}
										]
									},
									"documentation": {
										"id": 480,
										"nodeType": "StructuredDocumentation",
										"src": "2617:55:3",
										"text": " @dev See {IERC721Metadata-tokenURI}."
									},
									"functionSelector": "c87b56dd",
									"id": 515,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tokenURI",
									"nameLocation": "2686:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 483,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 482,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2703:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 515,
												"src": "2695:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 481,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2695:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2694:17:3"
									},
									"returnParameters": {
										"id": 486,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 485,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 515,
												"src": "2741:13:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 484,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2741:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2740:15:3"
									},
									"scope": 1328,
									"src": "2677:255:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 523,
										"nodeType": "Block",
										"src": "3240:26:3",
										"statements": [
											{
												"expression": {
													"hexValue": "",
													"id": 521,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3257:2:3",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
														"typeString": "literal_string \"\""
													},
													"value": ""
												},
												"functionReturnParameters": 520,
												"id": 522,
												"nodeType": "Return",
												"src": "3250:9:3"
											}
										]
									},
									"documentation": {
										"id": 516,
										"nodeType": "StructuredDocumentation",
										"src": "2938:231:3",
										"text": " @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\n token will be the concatenation of the `baseURI` and the `tokenId`. Empty\n by default, can be overridden in child contracts."
									},
									"id": 524,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_baseURI",
									"nameLocation": "3183:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 517,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3191:2:3"
									},
									"returnParameters": {
										"id": 520,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 519,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 524,
												"src": "3225:13:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 518,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3225:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3224:15:3"
									},
									"scope": 1328,
									"src": "3174:92:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										1418
									],
									"body": {
										"id": 539,
										"nodeType": "Block",
										"src": "3384:52:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 533,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 527,
															"src": "3403:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 534,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 529,
															"src": "3407:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 535,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1503,
																"src": "3416:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 536,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3416:12:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 532,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1131,
															1197
														],
														"referencedDeclaration": 1131,
														"src": "3394:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$__$",
															"typeString": "function (address,uint256,address)"
														}
													},
													"id": 537,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3394:35:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 538,
												"nodeType": "ExpressionStatement",
												"src": "3394:35:3"
											}
										]
									},
									"documentation": {
										"id": 525,
										"nodeType": "StructuredDocumentation",
										"src": "3272:46:3",
										"text": " @dev See {IERC721-approve}."
									},
									"functionSelector": "095ea7b3",
									"id": 540,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "3332:7:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 530,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 527,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3348:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 540,
												"src": "3340:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 526,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3340:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 529,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3360:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 540,
												"src": "3352:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 528,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3352:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3339:29:3"
									},
									"returnParameters": {
										"id": 531,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3384:0:3"
									},
									"scope": 1328,
									"src": "3323:113:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1434
									],
									"body": {
										"id": 556,
										"nodeType": "Block",
										"src": "3573:78:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 549,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 543,
															"src": "3597:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 548,
														"name": "_requireOwned",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1263,
														"src": "3583:13:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 550,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3583:22:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 551,
												"nodeType": "ExpressionStatement",
												"src": "3583:22:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 553,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 543,
															"src": "3636:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 552,
														"name": "_getApproved",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 706,
														"src": "3623:12:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 554,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3623:21:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 547,
												"id": 555,
												"nodeType": "Return",
												"src": "3616:28:3"
											}
										]
									},
									"documentation": {
										"id": 541,
										"nodeType": "StructuredDocumentation",
										"src": "3442:50:3",
										"text": " @dev See {IERC721-getApproved}."
									},
									"functionSelector": "081812fc",
									"id": 557,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getApproved",
									"nameLocation": "3506:11:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 544,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 543,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3526:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 557,
												"src": "3518:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 542,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3518:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3517:17:3"
									},
									"returnParameters": {
										"id": 547,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 546,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 557,
												"src": "3564:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 545,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3564:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3563:9:3"
									},
									"scope": 1328,
									"src": "3497:154:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1426
									],
									"body": {
										"id": 572,
										"nodeType": "Block",
										"src": "3793:69:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 566,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1503,
																"src": "3822:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 567,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3822:12:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 568,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 560,
															"src": "3836:8:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 569,
															"name": "approved",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 562,
															"src": "3846:8:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 565,
														"name": "_setApprovalForAll",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1234,
														"src": "3803:18:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$",
															"typeString": "function (address,address,bool)"
														}
													},
													"id": 570,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3803:52:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 571,
												"nodeType": "ExpressionStatement",
												"src": "3803:52:3"
											}
										]
									},
									"documentation": {
										"id": 558,
										"nodeType": "StructuredDocumentation",
										"src": "3657:56:3",
										"text": " @dev See {IERC721-setApprovalForAll}."
									},
									"functionSelector": "a22cb465",
									"id": 573,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "setApprovalForAll",
									"nameLocation": "3727:17:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 563,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 560,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3753:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 573,
												"src": "3745:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 559,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3745:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 562,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "3768:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 573,
												"src": "3763:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 561,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3763:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3744:33:3"
									},
									"returnParameters": {
										"id": 564,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3793:0:3"
									},
									"scope": 1328,
									"src": "3718:144:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1444
									],
									"body": {
										"id": 589,
										"nodeType": "Block",
										"src": "4022:59:3",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 583,
															"name": "_operatorApprovals",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 372,
															"src": "4039:18:3",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
																"typeString": "mapping(address => mapping(address => bool))"
															}
														},
														"id": 585,
														"indexExpression": {
															"id": 584,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 576,
															"src": "4058:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "4039:25:3",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
															"typeString": "mapping(address => bool)"
														}
													},
													"id": 587,
													"indexExpression": {
														"id": 586,
														"name": "operator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 578,
														"src": "4065:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "4039:35:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 582,
												"id": 588,
												"nodeType": "Return",
												"src": "4032:42:3"
											}
										]
									},
									"documentation": {
										"id": 574,
										"nodeType": "StructuredDocumentation",
										"src": "3868:55:3",
										"text": " @dev See {IERC721-isApprovedForAll}."
									},
									"functionSelector": "e985e9c5",
									"id": 590,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isApprovedForAll",
									"nameLocation": "3937:16:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 579,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 576,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3962:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 590,
												"src": "3954:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 575,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3954:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 578,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3977:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 590,
												"src": "3969:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 577,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3969:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3953:33:3"
									},
									"returnParameters": {
										"id": 582,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 581,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 590,
												"src": "4016:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 580,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4016:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4015:6:3"
									},
									"scope": 1328,
									"src": "3928:153:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1410
									],
									"body": {
										"id": 635,
										"nodeType": "Block",
										"src": "4223:498:3",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 605,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 600,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 595,
														"src": "4237:2:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 603,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4251:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 602,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "4243:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 601,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "4243:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 604,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4243:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "4237:16:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 614,
												"nodeType": "IfStatement",
												"src": "4233:87:3",
												"trueBody": {
													"id": 613,
													"nodeType": "Block",
													"src": "4255:65:3",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 609,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "4306:1:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 608,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "4298:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 607,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "4298:7:3",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 610,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4298:10:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 606,
																	"name": "ERC721InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 254,
																	"src": "4276:21:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 611,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4276:33:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 612,
															"nodeType": "RevertStatement",
															"src": "4269:40:3"
														}
													]
												}
											},
											{
												"assignments": [
													616
												],
												"declarations": [
													{
														"constant": false,
														"id": 616,
														"mutability": "mutable",
														"name": "previousOwner",
														"nameLocation": "4546:13:3",
														"nodeType": "VariableDeclaration",
														"scope": 635,
														"src": "4538:21:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 615,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4538:7:3",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 623,
												"initialValue": {
													"arguments": [
														{
															"id": 618,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 595,
															"src": "4570:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 619,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 597,
															"src": "4574:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 620,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1503,
																"src": "4583:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 621,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4583:12:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 617,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 885,
														"src": "4562:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_address_$",
															"typeString": "function (address,uint256,address) returns (address)"
														}
													},
													"id": 622,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4562:34:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4538:58:3"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 626,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 624,
														"name": "previousOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 616,
														"src": "4610:13:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 625,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 593,
														"src": "4627:4:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "4610:21:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 634,
												"nodeType": "IfStatement",
												"src": "4606:109:3",
												"trueBody": {
													"id": 633,
													"nodeType": "Block",
													"src": "4633:82:3",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 628,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 593,
																		"src": "4675:4:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 629,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 597,
																		"src": "4681:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 630,
																		"name": "previousOwner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 616,
																		"src": "4690:13:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 627,
																	"name": "ERC721IncorrectOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 244,
																	"src": "4654:20:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_address_$returns$__$",
																		"typeString": "function (address,uint256,address) pure"
																	}
																},
																"id": 631,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4654:50:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 632,
															"nodeType": "RevertStatement",
															"src": "4647:57:3"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 591,
										"nodeType": "StructuredDocumentation",
										"src": "4087:51:3",
										"text": " @dev See {IERC721-transferFrom}."
									},
									"functionSelector": "23b872dd",
									"id": 636,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "4152:12:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 598,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 593,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "4173:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 636,
												"src": "4165:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 592,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4165:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 595,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4187:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 636,
												"src": "4179:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 594,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4179:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 597,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4199:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 636,
												"src": "4191:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 596,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4191:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4164:43:3"
									},
									"returnParameters": {
										"id": 599,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4223:0:3"
									},
									"scope": 1328,
									"src": "4143:578:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1400
									],
									"body": {
										"id": 653,
										"nodeType": "Block",
										"src": "4863:56:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 647,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 639,
															"src": "4890:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 648,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 641,
															"src": "4896:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 649,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 643,
															"src": "4900:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "",
															"id": 650,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4909:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"id": 646,
														"name": "safeTransferFrom",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															654,
															680
														],
														"referencedDeclaration": 680,
														"src": "4873:16:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256,bytes memory)"
														}
													},
													"id": 651,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4873:39:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 652,
												"nodeType": "ExpressionStatement",
												"src": "4873:39:3"
											}
										]
									},
									"documentation": {
										"id": 637,
										"nodeType": "StructuredDocumentation",
										"src": "4727:55:3",
										"text": " @dev See {IERC721-safeTransferFrom}."
									},
									"functionSelector": "42842e0e",
									"id": 654,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "4796:16:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 644,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 639,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "4821:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 654,
												"src": "4813:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 638,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4813:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 641,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4835:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 654,
												"src": "4827:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 640,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4827:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 643,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4847:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 654,
												"src": "4839:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 642,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4839:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4812:43:3"
									},
									"returnParameters": {
										"id": 645,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4863:0:3"
									},
									"scope": 1328,
									"src": "4787:132:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1390
									],
									"body": {
										"id": 679,
										"nodeType": "Block",
										"src": "5088:105:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 667,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 657,
															"src": "5111:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 668,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 659,
															"src": "5117:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 669,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 661,
															"src": "5121:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 666,
														"name": "transferFrom",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 636,
														"src": "5098:12:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 670,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5098:31:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 671,
												"nodeType": "ExpressionStatement",
												"src": "5098:31:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 673,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 657,
															"src": "5162:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 674,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 659,
															"src": "5168:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 675,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 661,
															"src": "5172:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 676,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 663,
															"src": "5181:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 672,
														"name": "_checkOnERC721Received",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1327,
														"src": "5139:22:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256,bytes memory)"
														}
													},
													"id": 677,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5139:47:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 678,
												"nodeType": "ExpressionStatement",
												"src": "5139:47:3"
											}
										]
									},
									"documentation": {
										"id": 655,
										"nodeType": "StructuredDocumentation",
										"src": "4925:55:3",
										"text": " @dev See {IERC721-safeTransferFrom}."
									},
									"functionSelector": "b88d4fde",
									"id": 680,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "4994:16:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 664,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 657,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5019:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 680,
												"src": "5011:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 656,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5011:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 659,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5033:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 680,
												"src": "5025:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 658,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5025:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 661,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "5045:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 680,
												"src": "5037:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 660,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5037:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 663,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5067:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 680,
												"src": "5054:17:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 662,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5054:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5010:62:3"
									},
									"returnParameters": {
										"id": 665,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5088:0:3"
									},
									"scope": 1328,
									"src": "4985:208:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 692,
										"nodeType": "Block",
										"src": "5782:40:3",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 688,
														"name": "_owners",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 358,
														"src": "5799:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
															"typeString": "mapping(uint256 => address)"
														}
													},
													"id": 690,
													"indexExpression": {
														"id": 689,
														"name": "tokenId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 683,
														"src": "5807:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "5799:16:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 687,
												"id": 691,
												"nodeType": "Return",
												"src": "5792:23:3"
											}
										]
									},
									"documentation": {
										"id": 681,
										"nodeType": "StructuredDocumentation",
										"src": "5199:503:3",
										"text": " @dev Returns the owner of the `tokenId`. Does NOT revert if token doesn't exist\n IMPORTANT: Any overrides to this function that add ownership of tokens not tracked by the\n core ERC721 logic MUST be matched with the use of {_increaseBalance} to keep balances\n consistent with ownership. The invariant to preserve is that for any address `a` the value returned by\n `balanceOf(a)` must be equal to the number of tokens such that `_ownerOf(tokenId)` is `a`."
									},
									"id": 693,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_ownerOf",
									"nameLocation": "5716:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 684,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 683,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "5733:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 693,
												"src": "5725:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 682,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5725:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5724:17:3"
									},
									"returnParameters": {
										"id": 687,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 686,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 693,
												"src": "5773:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 685,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5773:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5772:9:3"
									},
									"scope": 1328,
									"src": "5707:115:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 705,
										"nodeType": "Block",
										"src": "6017:48:3",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 701,
														"name": "_tokenApprovals",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 366,
														"src": "6034:15:3",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
															"typeString": "mapping(uint256 => address)"
														}
													},
													"id": 703,
													"indexExpression": {
														"id": 702,
														"name": "tokenId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 696,
														"src": "6050:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "6034:24:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 700,
												"id": 704,
												"nodeType": "Return",
												"src": "6027:31:3"
											}
										]
									},
									"documentation": {
										"id": 694,
										"nodeType": "StructuredDocumentation",
										"src": "5828:105:3",
										"text": " @dev Returns the approved address for `tokenId`. Returns 0 if `tokenId` is not minted."
									},
									"id": 706,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getApproved",
									"nameLocation": "5947:12:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 697,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 696,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "5968:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 706,
												"src": "5960:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 695,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5960:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5959:17:3"
									},
									"returnParameters": {
										"id": 700,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 699,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 706,
												"src": "6008:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 698,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6008:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6007:9:3"
									},
									"scope": 1328,
									"src": "5938:127:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 741,
										"nodeType": "Block",
										"src": "6485:163:3",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 739,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 723,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 718,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 711,
															"src": "6514:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 721,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6533:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 720,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "6525:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 719,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "6525:7:3",
																	"typeDescriptions": {}
																}
															},
															"id": 722,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6525:10:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "6514:21:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 737,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"id": 731,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"commonType": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		"id": 726,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 724,
																			"name": "owner",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 709,
																			"src": "6552:5:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"id": 725,
																			"name": "spender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 711,
																			"src": "6561:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"src": "6552:16:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "||",
																	"rightExpression": {
																		"arguments": [
																			{
																				"id": 728,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 709,
																				"src": "6589:5:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 729,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 711,
																				"src": "6596:7:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 727,
																			"name": "isApprovedForAll",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 590,
																			"src": "6572:16:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
																				"typeString": "function (address,address) view returns (bool)"
																			}
																		},
																		"id": 730,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6572:32:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"src": "6552:52:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "||",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	"id": 736,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"arguments": [
																			{
																				"id": 733,
																				"name": "tokenId",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 713,
																				"src": "6621:7:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 732,
																			"name": "_getApproved",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 706,
																			"src": "6608:12:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
																				"typeString": "function (uint256) view returns (address)"
																			}
																		},
																		"id": 734,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6608:21:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"id": 735,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 711,
																		"src": "6633:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"src": "6608:32:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "6552:88:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															}
														],
														"id": 738,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "6551:90:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "6514:127:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 717,
												"id": 740,
												"nodeType": "Return",
												"src": "6495:146:3"
											}
										]
									},
									"documentation": {
										"id": 707,
										"nodeType": "StructuredDocumentation",
										"src": "6071:300:3",
										"text": " @dev Returns whether `spender` is allowed to manage `owner`'s tokens, or `tokenId` in\n particular (ignoring whether it is owned by `owner`).\n WARNING: This function assumes that `owner` is the actual owner of `tokenId` and does not verify this\n assumption."
									},
									"id": 742,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_isAuthorized",
									"nameLocation": "6385:13:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 714,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 709,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "6407:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 742,
												"src": "6399:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 708,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6399:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 711,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "6422:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 742,
												"src": "6414:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 710,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6414:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 713,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "6439:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 742,
												"src": "6431:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 712,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6431:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6398:49:3"
									},
									"returnParameters": {
										"id": 717,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 716,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 742,
												"src": "6479:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 715,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6479:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6478:6:3"
									},
									"scope": 1328,
									"src": "6376:272:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 778,
										"nodeType": "Block",
										"src": "7179:271:3",
										"statements": [
											{
												"condition": {
													"id": 757,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "7193:39:3",
													"subExpression": {
														"arguments": [
															{
																"id": 753,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 745,
																"src": "7208:5:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"id": 754,
																"name": "spender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 747,
																"src": "7215:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"id": 755,
																"name": "tokenId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 749,
																"src": "7224:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 752,
															"name": "_isAuthorized",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 742,
															"src": "7194:13:3",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																"typeString": "function (address,address,uint256) view returns (bool)"
															}
														},
														"id": 756,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7194:38:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 777,
												"nodeType": "IfStatement",
												"src": "7189:255:3",
												"trueBody": {
													"id": 776,
													"nodeType": "Block",
													"src": "7234:210:3",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 763,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 758,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 745,
																	"src": "7252:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"arguments": [
																		{
																			"hexValue": "30",
																			"id": 761,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "7269:1:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			}
																		],
																		"id": 760,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "7261:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 759,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "7261:7:3",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 762,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "7261:10:3",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "7252:19:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"id": 774,
																"nodeType": "Block",
																"src": "7350:84:3",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 770,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 747,
																					"src": "7402:7:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 771,
																					"name": "tokenId",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 749,
																					"src": "7411:7:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 769,
																				"name": "ERC721InsufficientApproval",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 261,
																				"src": "7375:26:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$returns$__$",
																					"typeString": "function (address,uint256) pure"
																				}
																			},
																			"id": 772,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7375:44:3",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 773,
																		"nodeType": "RevertStatement",
																		"src": "7368:51:3"
																	}
																]
															},
															"id": 775,
															"nodeType": "IfStatement",
															"src": "7248:186:3",
															"trueBody": {
																"id": 768,
																"nodeType": "Block",
																"src": "7273:71:3",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 765,
																					"name": "tokenId",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 749,
																					"src": "7321:7:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 764,
																				"name": "ERC721NonexistentToken",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 235,
																				"src": "7298:22:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_uint256_$returns$__$",
																					"typeString": "function (uint256) pure"
																				}
																			},
																			"id": 766,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7298:31:3",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 767,
																		"nodeType": "RevertStatement",
																		"src": "7291:38:3"
																	}
																]
															}
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 743,
										"nodeType": "StructuredDocumentation",
										"src": "6654:423:3",
										"text": " @dev Checks if `spender` can operate on `tokenId`, assuming the provided `owner` is the actual owner.\n Reverts if `spender` does not have approval from the provided `owner` for the given token or for all its assets\n the `spender` for the specific `tokenId`.\n WARNING: This function assumes that `owner` is the actual owner of `tokenId` and does not verify this\n assumption."
									},
									"id": 779,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkAuthorized",
									"nameLocation": "7091:16:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 750,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 745,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "7116:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 779,
												"src": "7108:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 744,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7108:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 747,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "7131:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 779,
												"src": "7123:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 746,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7123:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 749,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "7148:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 779,
												"src": "7140:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 748,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7140:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7107:49:3"
									},
									"returnParameters": {
										"id": 751,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7179:0:3"
									},
									"scope": 1328,
									"src": "7082:368:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 794,
										"nodeType": "Block",
										"src": "8167:78:3",
										"statements": [
											{
												"id": 793,
												"nodeType": "UncheckedBlock",
												"src": "8177:62:3",
												"statements": [
													{
														"expression": {
															"id": 791,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 787,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 362,
																	"src": "8201:9:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 789,
																"indexExpression": {
																	"id": 788,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 782,
																	"src": "8211:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "8201:18:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "+=",
															"rightHandSide": {
																"id": 790,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 784,
																"src": "8223:5:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint128",
																	"typeString": "uint128"
																}
															},
															"src": "8201:27:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 792,
														"nodeType": "ExpressionStatement",
														"src": "8201:27:3"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 780,
										"nodeType": "StructuredDocumentation",
										"src": "7456:631:3",
										"text": " @dev Unsafe write access to the balances, used by extensions that \"mint\" tokens using an {ownerOf} override.\n NOTE: the value is limited to type(uint128).max. This protect against _balance overflow. It is unrealistic that\n a uint256 would ever overflow from increments when these increments are bounded to uint128 values.\n WARNING: Increasing an account's balance using this function tends to be paired with an override of the\n {_ownerOf} function to resolve the ownership of the corresponding tokens so that balances and ownership\n remain consistent with one another."
									},
									"id": 795,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_increaseBalance",
									"nameLocation": "8101:16:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 785,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 782,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "8126:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 795,
												"src": "8118:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 781,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8118:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 784,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8143:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 795,
												"src": "8135:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 783,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "8135:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8117:32:3"
									},
									"returnParameters": {
										"id": 786,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8167:0:3"
									},
									"scope": 1328,
									"src": "8092:153:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 884,
										"nodeType": "Block",
										"src": "8933:700:3",
										"statements": [
											{
												"assignments": [
													808
												],
												"declarations": [
													{
														"constant": false,
														"id": 808,
														"mutability": "mutable",
														"name": "from",
														"nameLocation": "8951:4:3",
														"nodeType": "VariableDeclaration",
														"scope": 884,
														"src": "8943:12:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 807,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "8943:7:3",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 812,
												"initialValue": {
													"arguments": [
														{
															"id": 810,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 800,
															"src": "8967:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 809,
														"name": "_ownerOf",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 693,
														"src": "8958:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 811,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8958:17:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8943:32:3"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 818,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 813,
														"name": "auth",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 802,
														"src": "9035:4:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 816,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9051:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 815,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9043:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 814,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9043:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 817,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9043:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9035:18:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 826,
												"nodeType": "IfStatement",
												"src": "9031:86:3",
												"trueBody": {
													"id": 825,
													"nodeType": "Block",
													"src": "9055:62:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 820,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 808,
																		"src": "9086:4:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 821,
																		"name": "auth",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 802,
																		"src": "9092:4:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 822,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 800,
																		"src": "9098:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 819,
																	"name": "_checkAuthorized",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 779,
																	"src": "9069:16:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256) view"
																	}
																},
																"id": 823,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9069:37:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 824,
															"nodeType": "ExpressionStatement",
															"src": "9069:37:3"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 832,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 827,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 808,
														"src": "9161:4:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 830,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9177:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 829,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9169:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 828,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9169:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 831,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9169:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9161:18:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 854,
												"nodeType": "IfStatement",
												"src": "9157:256:3",
												"trueBody": {
													"id": 853,
													"nodeType": "Block",
													"src": "9181:232:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 836,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9294:1:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 835,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9286:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 834,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9286:7:3",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 837,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9286:10:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 838,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 800,
																		"src": "9298:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 841,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9315:1:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 840,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9307:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 839,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9307:7:3",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 842,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9307:10:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"hexValue": "66616c7365",
																		"id": 843,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9319:5:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	],
																	"id": 833,
																	"name": "_approve",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		1131,
																		1197
																	],
																	"referencedDeclaration": 1197,
																	"src": "9277:8:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$_t_bool_$returns$__$",
																		"typeString": "function (address,uint256,address,bool)"
																	}
																},
																"id": 844,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9277:48:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 845,
															"nodeType": "ExpressionStatement",
															"src": "9277:48:3"
														},
														{
															"id": 852,
															"nodeType": "UncheckedBlock",
															"src": "9340:63:3",
															"statements": [
																{
																	"expression": {
																		"id": 850,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 846,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 362,
																				"src": "9368:9:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 848,
																			"indexExpression": {
																				"id": 847,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 808,
																				"src": "9378:4:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "9368:15:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "-=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 849,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9387:1:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "9368:20:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 851,
																	"nodeType": "ExpressionStatement",
																	"src": "9368:20:3"
																}
															]
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 860,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 855,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 798,
														"src": "9427:2:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 858,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9441:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 857,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9433:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 856,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9433:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 859,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9433:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9427:16:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 869,
												"nodeType": "IfStatement",
												"src": "9423:107:3",
												"trueBody": {
													"id": 868,
													"nodeType": "Block",
													"src": "9445:85:3",
													"statements": [
														{
															"id": 867,
															"nodeType": "UncheckedBlock",
															"src": "9459:61:3",
															"statements": [
																{
																	"expression": {
																		"id": 865,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 861,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 362,
																				"src": "9487:9:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 863,
																			"indexExpression": {
																				"id": 862,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 798,
																				"src": "9497:2:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "9487:13:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 864,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9504:1:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "9487:18:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 866,
																	"nodeType": "ExpressionStatement",
																	"src": "9487:18:3"
																}
															]
														}
													]
												}
											},
											{
												"expression": {
													"id": 874,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 870,
															"name": "_owners",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 358,
															"src": "9540:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
																"typeString": "mapping(uint256 => address)"
															}
														},
														"id": 872,
														"indexExpression": {
															"id": 871,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 800,
															"src": "9548:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "9540:16:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 873,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 798,
														"src": "9559:2:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9540:21:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 875,
												"nodeType": "ExpressionStatement",
												"src": "9540:21:3"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 877,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 808,
															"src": "9586:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 878,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 798,
															"src": "9592:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 879,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 800,
															"src": "9596:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 876,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1344,
														"src": "9577:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 880,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9577:27:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 881,
												"nodeType": "EmitStatement",
												"src": "9572:32:3"
											},
											{
												"expression": {
													"id": 882,
													"name": "from",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 808,
													"src": "9622:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 806,
												"id": 883,
												"nodeType": "Return",
												"src": "9615:11:3"
											}
										]
									},
									"documentation": {
										"id": 796,
										"nodeType": "StructuredDocumentation",
										"src": "8251:582:3",
										"text": " @dev Transfers `tokenId` from its current owner to `to`, or alternatively mints (or burns) if the current owner\n (or `to`) is the zero address. Returns the owner of the `tokenId` before the update.\n The `auth` argument is optional. If the value passed is non 0, then this function will check that\n `auth` is either the owner of the token, or approved to operate on the token (by the owner).\n Emits a {Transfer} event.\n NOTE: If overriding this function in a way that tracks balances, see also {_increaseBalance}."
									},
									"id": 885,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_update",
									"nameLocation": "8847:7:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 803,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 798,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "8863:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 885,
												"src": "8855:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 797,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8855:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 800,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "8875:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 885,
												"src": "8867:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 799,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8867:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 802,
												"mutability": "mutable",
												"name": "auth",
												"nameLocation": "8892:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 885,
												"src": "8884:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 801,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8884:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8854:43:3"
									},
									"returnParameters": {
										"id": 806,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 805,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 885,
												"src": "8924:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 804,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8924:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8923:9:3"
									},
									"scope": 1328,
									"src": "8838:795:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 934,
										"nodeType": "Block",
										"src": "10008:274:3",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 898,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 893,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 888,
														"src": "10022:2:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 896,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10036:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 895,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "10028:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 894,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "10028:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 897,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10028:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "10022:16:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 907,
												"nodeType": "IfStatement",
												"src": "10018:87:3",
												"trueBody": {
													"id": 906,
													"nodeType": "Block",
													"src": "10040:65:3",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 902,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10091:1:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 901,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "10083:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 900,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "10083:7:3",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 903,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10083:10:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 899,
																	"name": "ERC721InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 254,
																	"src": "10061:21:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 904,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10061:33:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 905,
															"nodeType": "RevertStatement",
															"src": "10054:40:3"
														}
													]
												}
											},
											{
												"assignments": [
													909
												],
												"declarations": [
													{
														"constant": false,
														"id": 909,
														"mutability": "mutable",
														"name": "previousOwner",
														"nameLocation": "10122:13:3",
														"nodeType": "VariableDeclaration",
														"scope": 934,
														"src": "10114:21:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 908,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "10114:7:3",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 918,
												"initialValue": {
													"arguments": [
														{
															"id": 911,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 888,
															"src": "10146:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 912,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 890,
															"src": "10150:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 915,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10167:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 914,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "10159:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 913,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "10159:7:3",
																	"typeDescriptions": {}
																}
															},
															"id": 916,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10159:10:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 910,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 885,
														"src": "10138:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_address_$",
															"typeString": "function (address,uint256,address) returns (address)"
														}
													},
													"id": 917,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10138:32:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10114:56:3"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 924,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 919,
														"name": "previousOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 909,
														"src": "10184:13:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 922,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10209:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 921,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "10201:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 920,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "10201:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 923,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10201:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "10184:27:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 933,
												"nodeType": "IfStatement",
												"src": "10180:96:3",
												"trueBody": {
													"id": 932,
													"nodeType": "Block",
													"src": "10213:63:3",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 928,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10262:1:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 927,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "10254:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 926,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "10254:7:3",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 929,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10254:10:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 925,
																	"name": "ERC721InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 249,
																	"src": "10234:19:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 930,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10234:31:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 931,
															"nodeType": "RevertStatement",
															"src": "10227:38:3"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 886,
										"nodeType": "StructuredDocumentation",
										"src": "9639:311:3",
										"text": " @dev Mints `tokenId` and transfers it to `to`.\n WARNING: Usage of this method is discouraged, use {_safeMint} whenever possible\n Requirements:\n - `tokenId` must not exist.\n - `to` cannot be the zero address.\n Emits a {Transfer} event."
									},
									"id": 935,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "9964:5:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 891,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 888,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "9978:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 935,
												"src": "9970:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 887,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9970:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 890,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "9990:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 935,
												"src": "9982:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 889,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9982:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9969:29:3"
									},
									"returnParameters": {
										"id": 892,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10008:0:3"
									},
									"scope": 1328,
									"src": "9955:327:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 949,
										"nodeType": "Block",
										"src": "10690:43:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 944,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 938,
															"src": "10710:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 945,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 940,
															"src": "10714:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "",
															"id": 946,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10723:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"id": 943,
														"name": "_safeMint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															950,
															976
														],
														"referencedDeclaration": 976,
														"src": "10700:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,uint256,bytes memory)"
														}
													},
													"id": 947,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10700:26:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 948,
												"nodeType": "ExpressionStatement",
												"src": "10700:26:3"
											}
										]
									},
									"documentation": {
										"id": 936,
										"nodeType": "StructuredDocumentation",
										"src": "10288:340:3",
										"text": " @dev Mints `tokenId`, transfers it to `to` and checks for `to` acceptance.\n Requirements:\n - `tokenId` must not exist.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
									},
									"id": 950,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeMint",
									"nameLocation": "10642:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 941,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 938,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "10660:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 950,
												"src": "10652:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 937,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10652:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 940,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "10672:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 950,
												"src": "10664:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 939,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10664:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10651:29:3"
									},
									"returnParameters": {
										"id": 942,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10690:0:3"
									},
									"scope": 1328,
									"src": "10633:100:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 975,
										"nodeType": "Block",
										"src": "11038:98:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 961,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 953,
															"src": "11054:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 962,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 955,
															"src": "11058:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 960,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 935,
														"src": "11048:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 963,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11048:18:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 964,
												"nodeType": "ExpressionStatement",
												"src": "11048:18:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 968,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11107:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 967,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "11099:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 966,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "11099:7:3",
																	"typeDescriptions": {}
																}
															},
															"id": 969,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11099:10:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 970,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 953,
															"src": "11111:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 971,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 955,
															"src": "11115:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 972,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 957,
															"src": "11124:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 965,
														"name": "_checkOnERC721Received",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1327,
														"src": "11076:22:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256,bytes memory)"
														}
													},
													"id": 973,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11076:53:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 974,
												"nodeType": "ExpressionStatement",
												"src": "11076:53:3"
											}
										]
									},
									"documentation": {
										"id": 951,
										"nodeType": "StructuredDocumentation",
										"src": "10739:210:3",
										"text": " @dev Same as {xref-ERC721-_safeMint-address-uint256-}[`_safeMint`], with an additional `data` parameter which is\n forwarded in {IERC721Receiver-onERC721Received} to contract recipients."
									},
									"id": 976,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeMint",
									"nameLocation": "10963:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 958,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 953,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "10981:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 976,
												"src": "10973:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 952,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10973:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 955,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "10993:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 976,
												"src": "10985:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 954,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10985:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 957,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "11015:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 976,
												"src": "11002:17:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 956,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "11002:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10972:48:3"
									},
									"returnParameters": {
										"id": 959,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11038:0:3"
									},
									"scope": 1328,
									"src": "10954:182:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1008,
										"nodeType": "Block",
										"src": "11503:186:3",
										"statements": [
											{
												"assignments": [
													983
												],
												"declarations": [
													{
														"constant": false,
														"id": 983,
														"mutability": "mutable",
														"name": "previousOwner",
														"nameLocation": "11521:13:3",
														"nodeType": "VariableDeclaration",
														"scope": 1008,
														"src": "11513:21:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 982,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "11513:7:3",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 995,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 987,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11553:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 986,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "11545:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 985,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "11545:7:3",
																	"typeDescriptions": {}
																}
															},
															"id": 988,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11545:10:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 989,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 979,
															"src": "11557:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 992,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11574:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 991,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "11566:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 990,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "11566:7:3",
																	"typeDescriptions": {}
																}
															},
															"id": 993,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11566:10:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 984,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 885,
														"src": "11537:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_address_$",
															"typeString": "function (address,uint256,address) returns (address)"
														}
													},
													"id": 994,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11537:40:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11513:64:3"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1001,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 996,
														"name": "previousOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 983,
														"src": "11591:13:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 999,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11616:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 998,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "11608:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 997,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "11608:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 1000,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "11608:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "11591:27:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1007,
												"nodeType": "IfStatement",
												"src": "11587:96:3",
												"trueBody": {
													"id": 1006,
													"nodeType": "Block",
													"src": "11620:63:3",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 1003,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 979,
																		"src": "11664:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1002,
																	"name": "ERC721NonexistentToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 235,
																	"src": "11641:22:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$returns$__$",
																		"typeString": "function (uint256) pure"
																	}
																},
																"id": 1004,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11641:31:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1005,
															"nodeType": "RevertStatement",
															"src": "11634:38:3"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 977,
										"nodeType": "StructuredDocumentation",
										"src": "11142:315:3",
										"text": " @dev Destroys `tokenId`.\n The approval is cleared when the token is burned.\n This is an internal function that does not check if the sender is authorized to operate on the token.\n Requirements:\n - `tokenId` must exist.\n Emits a {Transfer} event."
									},
									"id": 1009,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "11471:5:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 980,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 979,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "11485:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1009,
												"src": "11477:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 978,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11477:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11476:17:3"
									},
									"returnParameters": {
										"id": 981,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11503:0:3"
									},
									"scope": 1328,
									"src": "11462:227:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1068,
										"nodeType": "Block",
										"src": "12084:389:3",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1024,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1019,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1014,
														"src": "12098:2:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1022,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "12112:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1021,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "12104:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1020,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "12104:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 1023,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "12104:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "12098:16:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1033,
												"nodeType": "IfStatement",
												"src": "12094:87:3",
												"trueBody": {
													"id": 1032,
													"nodeType": "Block",
													"src": "12116:65:3",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 1028,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12167:1:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 1027,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "12159:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1026,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "12159:7:3",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1029,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "12159:10:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1025,
																	"name": "ERC721InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 254,
																	"src": "12137:21:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 1030,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "12137:33:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1031,
															"nodeType": "RevertStatement",
															"src": "12130:40:3"
														}
													]
												}
											},
											{
												"assignments": [
													1035
												],
												"declarations": [
													{
														"constant": false,
														"id": 1035,
														"mutability": "mutable",
														"name": "previousOwner",
														"nameLocation": "12198:13:3",
														"nodeType": "VariableDeclaration",
														"scope": 1068,
														"src": "12190:21:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1034,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "12190:7:3",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1044,
												"initialValue": {
													"arguments": [
														{
															"id": 1037,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1014,
															"src": "12222:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1038,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1016,
															"src": "12226:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1041,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12243:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1040,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "12235:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1039,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "12235:7:3",
																	"typeDescriptions": {}
																}
															},
															"id": 1042,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "12235:10:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1036,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 885,
														"src": "12214:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_address_$",
															"typeString": "function (address,uint256,address) returns (address)"
														}
													},
													"id": 1043,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12214:32:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "12190:56:3"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1050,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1045,
														"name": "previousOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1035,
														"src": "12260:13:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1048,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "12285:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1047,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "12277:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1046,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "12277:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 1049,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "12277:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "12260:27:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 1058,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1056,
															"name": "previousOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1035,
															"src": "12362:13:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"id": 1057,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1012,
															"src": "12379:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "12362:21:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 1066,
													"nodeType": "IfStatement",
													"src": "12358:109:3",
													"trueBody": {
														"id": 1065,
														"nodeType": "Block",
														"src": "12385:82:3",
														"statements": [
															{
																"errorCall": {
																	"arguments": [
																		{
																			"id": 1060,
																			"name": "from",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1012,
																			"src": "12427:4:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 1061,
																			"name": "tokenId",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1016,
																			"src": "12433:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		{
																			"id": 1062,
																			"name": "previousOwner",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1035,
																			"src": "12442:13:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 1059,
																		"name": "ERC721IncorrectOwner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 244,
																		"src": "12406:20:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_address_$returns$__$",
																			"typeString": "function (address,uint256,address) pure"
																		}
																	},
																	"id": 1063,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "12406:50:3",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$__$",
																		"typeString": "tuple()"
																	}
																},
																"id": 1064,
																"nodeType": "RevertStatement",
																"src": "12399:57:3"
															}
														]
													}
												},
												"id": 1067,
												"nodeType": "IfStatement",
												"src": "12256:211:3",
												"trueBody": {
													"id": 1055,
													"nodeType": "Block",
													"src": "12289:63:3",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 1052,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1016,
																		"src": "12333:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1051,
																	"name": "ERC721NonexistentToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 235,
																	"src": "12310:22:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$returns$__$",
																		"typeString": "function (uint256) pure"
																	}
																},
																"id": 1053,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "12310:31:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1054,
															"nodeType": "RevertStatement",
															"src": "12303:38:3"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1010,
										"nodeType": "StructuredDocumentation",
										"src": "11695:313:3",
										"text": " @dev Transfers `tokenId` from `from` to `to`.\n  As opposed to {transferFrom}, this imposes no restrictions on msg.sender.\n Requirements:\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n Emits a {Transfer} event."
									},
									"id": 1069,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "12022:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1017,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1012,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "12040:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 1069,
												"src": "12032:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1011,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12032:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1014,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "12054:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 1069,
												"src": "12046:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1013,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12046:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1016,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "12066:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1069,
												"src": "12058:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1015,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12058:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12031:43:3"
									},
									"returnParameters": {
										"id": 1018,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12084:0:3"
									},
									"scope": 1328,
									"src": "12013:460:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1086,
										"nodeType": "Block",
										"src": "13481:53:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1080,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1072,
															"src": "13505:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1081,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1074,
															"src": "13511:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1082,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1076,
															"src": "13515:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "",
															"id": 1083,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "13524:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"id": 1079,
														"name": "_safeTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1087,
															1113
														],
														"referencedDeclaration": 1113,
														"src": "13491:13:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256,bytes memory)"
														}
													},
													"id": 1084,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13491:36:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1085,
												"nodeType": "ExpressionStatement",
												"src": "13491:36:3"
											}
										]
									},
									"documentation": {
										"id": 1070,
										"nodeType": "StructuredDocumentation",
										"src": "12479:922:3",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`, checking that contract recipients\n are aware of the ERC721 standard to prevent tokens from being forever locked.\n `data` is additional data, it has no specified format and it is sent in call to `to`.\n This internal function is like {safeTransferFrom} in the sense that it invokes\n {IERC721Receiver-onERC721Received} on the receiver, and can be used to e.g.\n implement alternative mechanisms to perform token transfer, such as signature-based.\n Requirements:\n - `tokenId` token must exist and be owned by `from`.\n - `to` cannot be the zero address.\n - `from` cannot be the zero address.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
									},
									"id": 1087,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeTransfer",
									"nameLocation": "13415:13:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1077,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1072,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "13437:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 1087,
												"src": "13429:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1071,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13429:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1074,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "13451:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 1087,
												"src": "13443:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1073,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13443:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1076,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "13463:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1087,
												"src": "13455:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1075,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13455:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13428:43:3"
									},
									"returnParameters": {
										"id": 1078,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13481:0:3"
									},
									"scope": 1328,
									"src": "13406:128:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1112,
										"nodeType": "Block",
										"src": "13873:102:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1100,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1090,
															"src": "13893:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1101,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1092,
															"src": "13899:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1102,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1094,
															"src": "13903:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1099,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1069,
														"src": "13883:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1103,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13883:28:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1104,
												"nodeType": "ExpressionStatement",
												"src": "13883:28:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1106,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1090,
															"src": "13944:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1107,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1092,
															"src": "13950:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1108,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1094,
															"src": "13954:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1109,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1096,
															"src": "13963:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1105,
														"name": "_checkOnERC721Received",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1327,
														"src": "13921:22:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256,bytes memory)"
														}
													},
													"id": 1110,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13921:47:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1111,
												"nodeType": "ExpressionStatement",
												"src": "13921:47:3"
											}
										]
									},
									"documentation": {
										"id": 1088,
										"nodeType": "StructuredDocumentation",
										"src": "13540:226:3",
										"text": " @dev Same as {xref-ERC721-_safeTransfer-address-address-uint256-}[`_safeTransfer`], with an additional `data` parameter which is\n forwarded in {IERC721Receiver-onERC721Received} to contract recipients."
									},
									"id": 1113,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeTransfer",
									"nameLocation": "13780:13:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1097,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1090,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "13802:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 1113,
												"src": "13794:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1089,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13794:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1092,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "13816:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 1113,
												"src": "13808:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1091,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13808:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1094,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "13828:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1113,
												"src": "13820:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1093,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13820:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1096,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "13850:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 1113,
												"src": "13837:17:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1095,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "13837:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13793:62:3"
									},
									"returnParameters": {
										"id": 1098,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13873:0:3"
									},
									"scope": 1328,
									"src": "13771:204:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1130,
										"nodeType": "Block",
										"src": "14488:50:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1124,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1116,
															"src": "14507:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1125,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1118,
															"src": "14511:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1126,
															"name": "auth",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1120,
															"src": "14520:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"hexValue": "74727565",
															"id": 1127,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "14526:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1123,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1131,
															1197
														],
														"referencedDeclaration": 1197,
														"src": "14498:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$_t_bool_$returns$__$",
															"typeString": "function (address,uint256,address,bool)"
														}
													},
													"id": 1128,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14498:33:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1129,
												"nodeType": "ExpressionStatement",
												"src": "14498:33:3"
											}
										]
									},
									"documentation": {
										"id": 1114,
										"nodeType": "StructuredDocumentation",
										"src": "13981:432:3",
										"text": " @dev Approve `to` to operate on `tokenId`\n The `auth` argument is optional. If the value passed is non 0, then this function will check that `auth` is\n either the owner of the token, or approved to operate on all tokens held by this owner.\n Emits an {Approval} event.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."
									},
									"id": 1131,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "14427:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1121,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1116,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "14444:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 1131,
												"src": "14436:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1115,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14436:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1118,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "14456:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1131,
												"src": "14448:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1117,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14448:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1120,
												"mutability": "mutable",
												"name": "auth",
												"nameLocation": "14473:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 1131,
												"src": "14465:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1119,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14465:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14435:43:3"
									},
									"returnParameters": {
										"id": 1122,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "14488:0:3"
									},
									"scope": 1328,
									"src": "14418:120:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1196,
										"nodeType": "Block",
										"src": "14814:568:3",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1150,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1143,
														"name": "emitEvent",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1140,
														"src": "14880:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 1149,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1144,
															"name": "auth",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1138,
															"src": "14893:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1147,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14909:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1146,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "14901:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1145,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "14901:7:3",
																	"typeDescriptions": {}
																}
															},
															"id": 1148,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "14901:10:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "14893:18:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "14880:31:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1189,
												"nodeType": "IfStatement",
												"src": "14876:460:3",
												"trueBody": {
													"id": 1188,
													"nodeType": "Block",
													"src": "14913:423:3",
													"statements": [
														{
															"assignments": [
																1152
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1152,
																	"mutability": "mutable",
																	"name": "owner",
																	"nameLocation": "14935:5:3",
																	"nodeType": "VariableDeclaration",
																	"scope": 1188,
																	"src": "14927:13:3",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	"typeName": {
																		"id": 1151,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "14927:7:3",
																		"stateMutability": "nonpayable",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1156,
															"initialValue": {
																"arguments": [
																	{
																		"id": 1154,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1136,
																		"src": "14957:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1153,
																	"name": "_requireOwned",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1263,
																	"src": "14943:13:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
																		"typeString": "function (uint256) view returns (address)"
																	}
																},
																"id": 1155,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "14943:22:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "14927:38:3"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 1172,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"id": 1166,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"commonType": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		"id": 1162,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1157,
																			"name": "auth",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1138,
																			"src": "15093:4:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "!=",
																		"rightExpression": {
																			"arguments": [
																				{
																					"hexValue": "30",
																					"id": 1160,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "15109:1:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					},
																					"value": "0"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					}
																				],
																				"id": 1159,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "15101:7:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 1158,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "15101:7:3",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 1161,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "15101:10:3",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"src": "15093:18:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "&&",
																	"rightExpression": {
																		"commonType": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		"id": 1165,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1163,
																			"name": "owner",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1152,
																			"src": "15115:5:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "!=",
																		"rightExpression": {
																			"id": 1164,
																			"name": "auth",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1138,
																			"src": "15124:4:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"src": "15115:13:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"src": "15093:35:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&&",
																"rightExpression": {
																	"id": 1171,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "UnaryOperation",
																	"operator": "!",
																	"prefix": true,
																	"src": "15132:30:3",
																	"subExpression": {
																		"arguments": [
																			{
																				"id": 1168,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1152,
																				"src": "15150:5:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 1169,
																				"name": "auth",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1138,
																				"src": "15157:4:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 1167,
																			"name": "isApprovedForAll",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 590,
																			"src": "15133:16:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
																				"typeString": "function (address,address) view returns (bool)"
																			}
																		},
																		"id": 1170,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "15133:29:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "15093:69:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1178,
															"nodeType": "IfStatement",
															"src": "15089:142:3",
															"trueBody": {
																"id": 1177,
																"nodeType": "Block",
																"src": "15164:67:3",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 1174,
																					"name": "auth",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1138,
																					"src": "15211:4:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"id": 1173,
																				"name": "ERC721InvalidApprover",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 266,
																				"src": "15189:21:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																					"typeString": "function (address) pure"
																				}
																			},
																			"id": 1175,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "15189:27:3",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1176,
																		"nodeType": "RevertStatement",
																		"src": "15182:34:3"
																	}
																]
															}
														},
														{
															"condition": {
																"id": 1179,
																"name": "emitEvent",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1140,
																"src": "15249:9:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1187,
															"nodeType": "IfStatement",
															"src": "15245:81:3",
															"trueBody": {
																"id": 1186,
																"nodeType": "Block",
																"src": "15260:66:3",
																"statements": [
																	{
																		"eventCall": {
																			"arguments": [
																				{
																					"id": 1181,
																					"name": "owner",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1152,
																					"src": "15292:5:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 1182,
																					"name": "to",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1134,
																					"src": "15299:2:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 1183,
																					"name": "tokenId",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1136,
																					"src": "15303:7:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 1180,
																				"name": "Approval",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1353,
																				"src": "15283:8:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																					"typeString": "function (address,address,uint256)"
																				}
																			},
																			"id": 1184,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "15283:28:3",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1185,
																		"nodeType": "EmitStatement",
																		"src": "15278:33:3"
																	}
																]
															}
														}
													]
												}
											},
											{
												"expression": {
													"id": 1194,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1190,
															"name": "_tokenApprovals",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 366,
															"src": "15346:15:3",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
																"typeString": "mapping(uint256 => address)"
															}
														},
														"id": 1192,
														"indexExpression": {
															"id": 1191,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1136,
															"src": "15362:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "15346:24:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1193,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1134,
														"src": "15373:2:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "15346:29:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1195,
												"nodeType": "ExpressionStatement",
												"src": "15346:29:3"
											}
										]
									},
									"documentation": {
										"id": 1132,
										"nodeType": "StructuredDocumentation",
										"src": "14544:171:3",
										"text": " @dev Variant of `_approve` with an optional flag to enable or disable the {Approval} event. The event is not\n emitted in the context of transfers."
									},
									"id": 1197,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "14729:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1141,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1134,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "14746:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 1197,
												"src": "14738:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1133,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14738:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1136,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "14758:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1197,
												"src": "14750:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1135,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14750:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1138,
												"mutability": "mutable",
												"name": "auth",
												"nameLocation": "14775:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 1197,
												"src": "14767:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1137,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14767:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1140,
												"mutability": "mutable",
												"name": "emitEvent",
												"nameLocation": "14786:9:3",
												"nodeType": "VariableDeclaration",
												"scope": 1197,
												"src": "14781:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1139,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "14781:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14737:59:3"
									},
									"returnParameters": {
										"id": 1142,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "14814:0:3"
									},
									"scope": 1328,
									"src": "14720:662:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1233,
										"nodeType": "Block",
										"src": "15684:219:3",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1212,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1207,
														"name": "operator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1202,
														"src": "15698:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1210,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "15718:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1209,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "15710:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1208,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "15710:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 1211,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "15710:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "15698:22:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1218,
												"nodeType": "IfStatement",
												"src": "15694:91:3",
												"trueBody": {
													"id": 1217,
													"nodeType": "Block",
													"src": "15722:63:3",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 1214,
																		"name": "operator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1202,
																		"src": "15765:8:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1213,
																	"name": "ERC721InvalidOperator",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 271,
																	"src": "15743:21:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 1215,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "15743:31:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1216,
															"nodeType": "RevertStatement",
															"src": "15736:38:3"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1225,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 1219,
																"name": "_operatorApprovals",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 372,
																"src": "15794:18:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
																	"typeString": "mapping(address => mapping(address => bool))"
																}
															},
															"id": 1222,
															"indexExpression": {
																"id": 1220,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1200,
																"src": "15813:5:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "15794:25:3",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 1223,
														"indexExpression": {
															"id": 1221,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1202,
															"src": "15820:8:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "15794:35:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1224,
														"name": "approved",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1204,
														"src": "15832:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "15794:46:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1226,
												"nodeType": "ExpressionStatement",
												"src": "15794:46:3"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1228,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1200,
															"src": "15870:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1229,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1202,
															"src": "15877:8:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1230,
															"name": "approved",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1204,
															"src": "15887:8:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1227,
														"name": "ApprovalForAll",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1362,
														"src": "15855:14:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$",
															"typeString": "function (address,address,bool)"
														}
													},
													"id": 1231,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15855:41:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1232,
												"nodeType": "EmitStatement",
												"src": "15850:46:3"
											}
										]
									},
									"documentation": {
										"id": 1198,
										"nodeType": "StructuredDocumentation",
										"src": "15388:198:3",
										"text": " @dev Approve `operator` to operate on all of `owner` tokens\n Requirements:\n - operator can't be the address zero.\n Emits an {ApprovalForAll} event."
									},
									"id": 1234,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setApprovalForAll",
									"nameLocation": "15600:18:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1205,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1200,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "15627:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 1234,
												"src": "15619:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1199,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15619:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1202,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "15642:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 1234,
												"src": "15634:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1201,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15634:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1204,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "15657:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 1234,
												"src": "15652:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1203,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "15652:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15618:48:3"
									},
									"returnParameters": {
										"id": 1206,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "15684:0:3"
									},
									"scope": 1328,
									"src": "15591:312:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1262,
										"nodeType": "Block",
										"src": "16210:169:3",
										"statements": [
											{
												"assignments": [
													1243
												],
												"declarations": [
													{
														"constant": false,
														"id": 1243,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "16228:5:3",
														"nodeType": "VariableDeclaration",
														"scope": 1262,
														"src": "16220:13:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1242,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "16220:7:3",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1247,
												"initialValue": {
													"arguments": [
														{
															"id": 1245,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1237,
															"src": "16245:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1244,
														"name": "_ownerOf",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 693,
														"src": "16236:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 1246,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16236:17:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "16220:33:3"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1253,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1248,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1243,
														"src": "16267:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1251,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "16284:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1250,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "16276:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1249,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "16276:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 1252,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "16276:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "16267:19:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1259,
												"nodeType": "IfStatement",
												"src": "16263:88:3",
												"trueBody": {
													"id": 1258,
													"nodeType": "Block",
													"src": "16288:63:3",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 1255,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1237,
																		"src": "16332:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1254,
																	"name": "ERC721NonexistentToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 235,
																	"src": "16309:22:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$returns$__$",
																		"typeString": "function (uint256) pure"
																	}
																},
																"id": 1256,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "16309:31:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1257,
															"nodeType": "RevertStatement",
															"src": "16302:38:3"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1260,
													"name": "owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1243,
													"src": "16367:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1241,
												"id": 1261,
												"nodeType": "Return",
												"src": "16360:12:3"
											}
										]
									},
									"documentation": {
										"id": 1235,
										"nodeType": "StructuredDocumentation",
										"src": "15909:224:3",
										"text": " @dev Reverts if the `tokenId` doesn't have a current owner (it hasn't been minted, or it has been burned).\n Returns the owner.\n Overrides to ownership logic should be done to {_ownerOf}."
									},
									"id": 1263,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_requireOwned",
									"nameLocation": "16147:13:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1238,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1237,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "16169:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1263,
												"src": "16161:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1236,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16161:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16160:17:3"
									},
									"returnParameters": {
										"id": 1241,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1240,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1263,
												"src": "16201:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1239,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16201:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16200:9:3"
									},
									"scope": 1328,
									"src": "16138:241:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1326,
										"nodeType": "Block",
										"src": "17020:680:3",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1279,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 1275,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1268,
																"src": "17034:2:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1276,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "17037:4:3",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "17034:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1277,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "17042:6:3",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "17034:14:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1278,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "17051:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "17034:18:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1325,
												"nodeType": "IfStatement",
												"src": "17030:664:3",
												"trueBody": {
													"id": 1324,
													"nodeType": "Block",
													"src": "17054:640:3",
													"statements": [
														{
															"clauses": [
																{
																	"block": {
																		"id": 1304,
																		"nodeType": "Block",
																		"src": "17168:162:3",
																		"statements": [
																			{
																				"condition": {
																					"commonType": {
																						"typeIdentifier": "t_bytes4",
																						"typeString": "bytes4"
																					},
																					"id": 1297,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 1293,
																						"name": "retval",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1291,
																						"src": "17190:6:3",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes4",
																							"typeString": "bytes4"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "!=",
																					"rightExpression": {
																						"expression": {
																							"expression": {
																								"id": 1294,
																								"name": "IERC721Receiver",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1463,
																								"src": "17200:15:3",
																								"typeDescriptions": {
																									"typeIdentifier": "t_type$_t_contract$_IERC721Receiver_$1463_$",
																									"typeString": "type(contract IERC721Receiver)"
																								}
																							},
																							"id": 1295,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"memberLocation": "17216:16:3",
																							"memberName": "onERC721Received",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 1462,
																							"src": "17200:32:3",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_declaration_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_calldata_ptr_$returns$_t_bytes4_$",
																								"typeString": "function IERC721Receiver.onERC721Received(address,address,uint256,bytes calldata) returns (bytes4)"
																							}
																						},
																						"id": 1296,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"memberLocation": "17233:8:3",
																						"memberName": "selector",
																						"nodeType": "MemberAccess",
																						"src": "17200:41:3",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes4",
																							"typeString": "bytes4"
																						}
																					},
																					"src": "17190:51:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"id": 1303,
																				"nodeType": "IfStatement",
																				"src": "17186:130:3",
																				"trueBody": {
																					"id": 1302,
																					"nodeType": "Block",
																					"src": "17243:73:3",
																					"statements": [
																						{
																							"errorCall": {
																								"arguments": [
																									{
																										"id": 1299,
																										"name": "to",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 1268,
																										"src": "17294:2:3",
																										"typeDescriptions": {
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									],
																									"id": 1298,
																									"name": "ERC721InvalidReceiver",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 254,
																									"src": "17272:21:3",
																									"typeDescriptions": {
																										"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																										"typeString": "function (address) pure"
																									}
																								},
																								"id": 1300,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "functionCall",
																								"lValueRequested": false,
																								"nameLocations": [],
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "17272:25:3",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_tuple$__$",
																									"typeString": "tuple()"
																								}
																							},
																							"id": 1301,
																							"nodeType": "RevertStatement",
																							"src": "17265:32:3"
																						}
																					]
																				}
																			}
																		]
																	},
																	"errorName": "",
																	"id": 1305,
																	"nodeType": "TryCatchClause",
																	"parameters": {
																		"id": 1292,
																		"nodeType": "ParameterList",
																		"parameters": [
																			{
																				"constant": false,
																				"id": 1291,
																				"mutability": "mutable",
																				"name": "retval",
																				"nameLocation": "17160:6:3",
																				"nodeType": "VariableDeclaration",
																				"scope": 1305,
																				"src": "17153:13:3",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes4",
																					"typeString": "bytes4"
																				},
																				"typeName": {
																					"id": 1290,
																					"name": "bytes4",
																					"nodeType": "ElementaryTypeName",
																					"src": "17153:6:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes4",
																						"typeString": "bytes4"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"src": "17152:15:3"
																	},
																	"src": "17144:186:3"
																},
																{
																	"block": {
																		"id": 1321,
																		"nodeType": "Block",
																		"src": "17359:325:3",
																		"statements": [
																			{
																				"condition": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1312,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"expression": {
																							"id": 1309,
																							"name": "reason",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1307,
																							"src": "17381:6:3",
																							"typeDescriptions": {
																								"typeIdentifier": "t_bytes_memory_ptr",
																								"typeString": "bytes memory"
																							}
																						},
																						"id": 1310,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberLocation": "17388:6:3",
																						"memberName": "length",
																						"nodeType": "MemberAccess",
																						"src": "17381:13:3",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "==",
																					"rightExpression": {
																						"hexValue": "30",
																						"id": 1311,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "17398:1:3",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_0_by_1",
																							"typeString": "int_const 0"
																						},
																						"value": "0"
																					},
																					"src": "17381:18:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"falseBody": {
																					"id": 1319,
																					"nodeType": "Block",
																					"src": "17480:190:3",
																					"statements": [
																						{
																							"AST": {
																								"nativeSrc": "17566:86:3",
																								"nodeType": "YulBlock",
																								"src": "17566:86:3",
																								"statements": [
																									{
																										"expression": {
																											"arguments": [
																												{
																													"arguments": [
																														{
																															"kind": "number",
																															"nativeSrc": "17603:2:3",
																															"nodeType": "YulLiteral",
																															"src": "17603:2:3",
																															"type": "",
																															"value": "32"
																														},
																														{
																															"name": "reason",
																															"nativeSrc": "17607:6:3",
																															"nodeType": "YulIdentifier",
																															"src": "17607:6:3"
																														}
																													],
																													"functionName": {
																														"name": "add",
																														"nativeSrc": "17599:3:3",
																														"nodeType": "YulIdentifier",
																														"src": "17599:3:3"
																													},
																													"nativeSrc": "17599:15:3",
																													"nodeType": "YulFunctionCall",
																													"src": "17599:15:3"
																												},
																												{
																													"arguments": [
																														{
																															"name": "reason",
																															"nativeSrc": "17622:6:3",
																															"nodeType": "YulIdentifier",
																															"src": "17622:6:3"
																														}
																													],
																													"functionName": {
																														"name": "mload",
																														"nativeSrc": "17616:5:3",
																														"nodeType": "YulIdentifier",
																														"src": "17616:5:3"
																													},
																													"nativeSrc": "17616:13:3",
																													"nodeType": "YulFunctionCall",
																													"src": "17616:13:3"
																												}
																											],
																											"functionName": {
																												"name": "revert",
																												"nativeSrc": "17592:6:3",
																												"nodeType": "YulIdentifier",
																												"src": "17592:6:3"
																											},
																											"nativeSrc": "17592:38:3",
																											"nodeType": "YulFunctionCall",
																											"src": "17592:38:3"
																										},
																										"nativeSrc": "17592:38:3",
																										"nodeType": "YulExpressionStatement",
																										"src": "17592:38:3"
																									}
																								]
																							},
																							"documentation": "@solidity memory-safe-assembly",
																							"evmVersion": "shanghai",
																							"externalReferences": [
																								{
																									"declaration": 1307,
																									"isOffset": false,
																									"isSlot": false,
																									"src": "17607:6:3",
																									"valueSize": 1
																								},
																								{
																									"declaration": 1307,
																									"isOffset": false,
																									"isSlot": false,
																									"src": "17622:6:3",
																									"valueSize": 1
																								}
																							],
																							"id": 1318,
																							"nodeType": "InlineAssembly",
																							"src": "17557:95:3"
																						}
																					]
																				},
																				"id": 1320,
																				"nodeType": "IfStatement",
																				"src": "17377:293:3",
																				"trueBody": {
																					"id": 1317,
																					"nodeType": "Block",
																					"src": "17401:73:3",
																					"statements": [
																						{
																							"errorCall": {
																								"arguments": [
																									{
																										"id": 1314,
																										"name": "to",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 1268,
																										"src": "17452:2:3",
																										"typeDescriptions": {
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									],
																									"id": 1313,
																									"name": "ERC721InvalidReceiver",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 254,
																									"src": "17430:21:3",
																									"typeDescriptions": {
																										"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																										"typeString": "function (address) pure"
																									}
																								},
																								"id": 1315,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "functionCall",
																								"lValueRequested": false,
																								"nameLocations": [],
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "17430:25:3",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_tuple$__$",
																									"typeString": "tuple()"
																								}
																							},
																							"id": 1316,
																							"nodeType": "RevertStatement",
																							"src": "17423:32:3"
																						}
																					]
																				}
																			}
																		]
																	},
																	"errorName": "",
																	"id": 1322,
																	"nodeType": "TryCatchClause",
																	"parameters": {
																		"id": 1308,
																		"nodeType": "ParameterList",
																		"parameters": [
																			{
																				"constant": false,
																				"id": 1307,
																				"mutability": "mutable",
																				"name": "reason",
																				"nameLocation": "17351:6:3",
																				"nodeType": "VariableDeclaration",
																				"scope": 1322,
																				"src": "17338:19:3",
																				"stateVariable": false,
																				"storageLocation": "memory",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes"
																				},
																				"typeName": {
																					"id": 1306,
																					"name": "bytes",
																					"nodeType": "ElementaryTypeName",
																					"src": "17338:5:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_storage_ptr",
																						"typeString": "bytes"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"src": "17337:21:3"
																	},
																	"src": "17331:353:3"
																}
															],
															"externalCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 1284,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1503,
																			"src": "17109:10:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 1285,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "17109:12:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1286,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1266,
																		"src": "17123:4:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1287,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1270,
																		"src": "17129:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 1288,
																		"name": "data",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1272,
																		"src": "17138:4:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 1281,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1268,
																				"src": "17088:2:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 1280,
																			"name": "IERC721Receiver",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1463,
																			"src": "17072:15:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC721Receiver_$1463_$",
																				"typeString": "type(contract IERC721Receiver)"
																			}
																		},
																		"id": 1282,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "17072:19:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC721Receiver_$1463",
																			"typeString": "contract IERC721Receiver"
																		}
																	},
																	"id": 1283,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "17092:16:3",
																	"memberName": "onERC721Received",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1462,
																	"src": "17072:36:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes4_$",
																		"typeString": "function (address,address,uint256,bytes memory) external returns (bytes4)"
																	}
																},
																"id": 1289,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "17072:71:3",
																"tryCall": true,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"id": 1323,
															"nodeType": "TryStatement",
															"src": "17068:616:3"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1264,
										"nodeType": "StructuredDocumentation",
										"src": "16385:528:3",
										"text": " @dev Private function to invoke {IERC721Receiver-onERC721Received} on a target address. This will revert if the\n recipient doesn't accept the token transfer. The call is not executed if the target address is not a contract.\n @param from address representing the previous owner of the given token ID\n @param to target address that will receive the tokens\n @param tokenId uint256 ID of the token to be transferred\n @param data bytes optional data to send along with the call"
									},
									"id": 1327,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOnERC721Received",
									"nameLocation": "16927:22:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1273,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1266,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "16958:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 1327,
												"src": "16950:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1265,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16950:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1268,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "16972:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 1327,
												"src": "16964:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1267,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16964:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1270,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "16984:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1327,
												"src": "16976:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1269,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16976:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1272,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "17006:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 1327,
												"src": "16993:17:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1271,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "16993:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16949:62:3"
									},
									"returnParameters": {
										"id": 1274,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "17020:0:3"
									},
									"scope": 1328,
									"src": "16918:782:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 1329,
							"src": "776:16926:3",
							"usedErrors": [
								230,
								235,
								244,
								249,
								254,
								261,
								266,
								271
							],
							"usedEvents": [
								1344,
								1353,
								1362
							]
						}
					],
					"src": "107:17596:3"
				},
				"id": 3
			},
			"main/node_modules/@openzeppelin/contracts/token/ERC721/IERC721.sol": {
				"ast": {
					"absolutePath": "main/node_modules/@openzeppelin/contracts/token/ERC721/IERC721.sol",
					"exportedSymbols": {
						"IERC165": [
							1804
						],
						"IERC721": [
							1445
						]
					},
					"id": 1446,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1330,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "108:24:4"
						},
						{
							"absolutePath": "main/node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "../../utils/introspection/IERC165.sol",
							"id": 1332,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1446,
							"sourceUnit": 1805,
							"src": "134:62:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1331,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1804,
										"src": "142:7:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1334,
										"name": "IERC165",
										"nameLocations": [
											"287:7:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1804,
										"src": "287:7:4"
									},
									"id": 1335,
									"nodeType": "InheritanceSpecifier",
									"src": "287:7:4"
								}
							],
							"canonicalName": "IERC721",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1333,
								"nodeType": "StructuredDocumentation",
								"src": "198:67:4",
								"text": " @dev Required interface of an ERC721 compliant contract."
							},
							"fullyImplemented": false,
							"id": 1445,
							"linearizedBaseContracts": [
								1445,
								1804
							],
							"name": "IERC721",
							"nameLocation": "276:7:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 1336,
										"nodeType": "StructuredDocumentation",
										"src": "301:88:4",
										"text": " @dev Emitted when `tokenId` token is transferred from `from` to `to`."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 1344,
									"name": "Transfer",
									"nameLocation": "400:8:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1343,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1338,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "425:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1344,
												"src": "409:20:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1337,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "409:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1340,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "447:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 1344,
												"src": "431:18:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1339,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "431:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1342,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "467:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1344,
												"src": "451:23:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1341,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "451:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "408:67:4"
									},
									"src": "394:82:4"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1345,
										"nodeType": "StructuredDocumentation",
										"src": "482:94:4",
										"text": " @dev Emitted when `owner` enables `approved` to manage the `tokenId` token."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 1353,
									"name": "Approval",
									"nameLocation": "587:8:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1352,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1347,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "612:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1353,
												"src": "596:21:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1346,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "596:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1349,
												"indexed": true,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "635:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 1353,
												"src": "619:24:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1348,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "619:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1351,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "661:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1353,
												"src": "645:23:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1350,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "645:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "595:74:4"
									},
									"src": "581:89:4"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1354,
										"nodeType": "StructuredDocumentation",
										"src": "676:117:4",
										"text": " @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
									},
									"eventSelector": "17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31",
									"id": 1362,
									"name": "ApprovalForAll",
									"nameLocation": "804:14:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1361,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1356,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "835:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1362,
												"src": "819:21:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1355,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "819:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1358,
												"indexed": true,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "858:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 1362,
												"src": "842:24:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1357,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "842:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1360,
												"indexed": false,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "873:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 1362,
												"src": "868:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1359,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "868:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "818:64:4"
									},
									"src": "798:85:4"
								},
								{
									"documentation": {
										"id": 1363,
										"nodeType": "StructuredDocumentation",
										"src": "889:76:4",
										"text": " @dev Returns the number of tokens in ``owner``'s account."
									},
									"functionSelector": "70a08231",
									"id": 1370,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "979:9:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1366,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1365,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "997:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1370,
												"src": "989:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1364,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "989:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "988:15:4"
									},
									"returnParameters": {
										"id": 1369,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1368,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "1035:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1370,
												"src": "1027:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1367,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1027:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1026:17:4"
									},
									"scope": 1445,
									"src": "970:74:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1371,
										"nodeType": "StructuredDocumentation",
										"src": "1050:131:4",
										"text": " @dev Returns the owner of the `tokenId` token.\n Requirements:\n - `tokenId` must exist."
									},
									"functionSelector": "6352211e",
									"id": 1378,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "ownerOf",
									"nameLocation": "1195:7:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1374,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1373,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1211:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1378,
												"src": "1203:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1372,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1203:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1202:17:4"
									},
									"returnParameters": {
										"id": 1377,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1376,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1251:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1378,
												"src": "1243:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1375,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1243:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1242:15:4"
									},
									"scope": 1445,
									"src": "1186:72:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1379,
										"nodeType": "StructuredDocumentation",
										"src": "1264:565:4",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n   a safe transfer.\n Emits a {Transfer} event."
									},
									"functionSelector": "b88d4fde",
									"id": 1390,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "1843:16:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1388,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1381,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1868:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1390,
												"src": "1860:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1380,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1860:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1383,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1882:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 1390,
												"src": "1874:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1382,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1874:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1385,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1894:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1390,
												"src": "1886:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1384,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1886:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1387,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "1918:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1390,
												"src": "1903:19:4",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1386,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1903:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1859:64:4"
									},
									"returnParameters": {
										"id": 1389,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1932:0:4"
									},
									"scope": 1445,
									"src": "1834:99:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1391,
										"nodeType": "StructuredDocumentation",
										"src": "1939:705:4",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n are aware of the ERC721 protocol to prevent tokens from being forever locked.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must have been allowed to move this token by either {approve} or\n   {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n   a safe transfer.\n Emits a {Transfer} event."
									},
									"functionSelector": "42842e0e",
									"id": 1400,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "2658:16:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1398,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1393,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2683:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1400,
												"src": "2675:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1392,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2675:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1395,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2697:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 1400,
												"src": "2689:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1394,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2689:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1397,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2709:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1400,
												"src": "2701:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1396,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2701:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2674:43:4"
									},
									"returnParameters": {
										"id": 1399,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2726:0:4"
									},
									"scope": 1445,
									"src": "2649:78:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1401,
										"nodeType": "StructuredDocumentation",
										"src": "2733:732:4",
										"text": " @dev Transfers `tokenId` token from `from` to `to`.\n WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721\n or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\n understand this adds an external call which potentially creates a reentrancy vulnerability.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 1410,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "3479:12:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1408,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1403,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "3500:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1410,
												"src": "3492:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1402,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3492:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1405,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3514:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 1410,
												"src": "3506:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1404,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3506:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1407,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3526:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1410,
												"src": "3518:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1406,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3518:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3491:43:4"
									},
									"returnParameters": {
										"id": 1409,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3543:0:4"
									},
									"scope": 1445,
									"src": "3470:74:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1411,
										"nodeType": "StructuredDocumentation",
										"src": "3550:452:4",
										"text": " @dev Gives permission to `to` to transfer `tokenId` token to another account.\n The approval is cleared when the token is transferred.\n Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n Requirements:\n - The caller must own the token or be an approved operator.\n - `tokenId` must exist.\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 1418,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "4016:7:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1416,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1413,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4032:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 1418,
												"src": "4024:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1412,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4024:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1415,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4044:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1418,
												"src": "4036:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1414,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4036:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4023:29:4"
									},
									"returnParameters": {
										"id": 1417,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4061:0:4"
									},
									"scope": 1445,
									"src": "4007:55:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1419,
										"nodeType": "StructuredDocumentation",
										"src": "4068:315:4",
										"text": " @dev Approve or remove `operator` as an operator for the caller.\n Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n Requirements:\n - The `operator` cannot be the address zero.\n Emits an {ApprovalForAll} event."
									},
									"functionSelector": "a22cb465",
									"id": 1426,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setApprovalForAll",
									"nameLocation": "4397:17:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1424,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1421,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4423:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 1426,
												"src": "4415:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1420,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4415:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1423,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "4438:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 1426,
												"src": "4433:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1422,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4433:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4414:33:4"
									},
									"returnParameters": {
										"id": 1425,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4456:0:4"
									},
									"scope": 1445,
									"src": "4388:69:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1427,
										"nodeType": "StructuredDocumentation",
										"src": "4463:139:4",
										"text": " @dev Returns the account approved for `tokenId` token.\n Requirements:\n - `tokenId` must exist."
									},
									"functionSelector": "081812fc",
									"id": 1434,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getApproved",
									"nameLocation": "4616:11:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1430,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1429,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4636:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1434,
												"src": "4628:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1428,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4628:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4627:17:4"
									},
									"returnParameters": {
										"id": 1433,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1432,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4676:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 1434,
												"src": "4668:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1431,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4668:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4667:18:4"
									},
									"scope": 1445,
									"src": "4607:79:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1435,
										"nodeType": "StructuredDocumentation",
										"src": "4692:138:4",
										"text": " @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n See {setApprovalForAll}"
									},
									"functionSelector": "e985e9c5",
									"id": 1444,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isApprovedForAll",
									"nameLocation": "4844:16:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1440,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1437,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "4869:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1444,
												"src": "4861:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1436,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4861:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1439,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4884:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 1444,
												"src": "4876:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1438,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4876:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4860:33:4"
									},
									"returnParameters": {
										"id": 1443,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1442,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1444,
												"src": "4917:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1441,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4917:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4916:6:4"
									},
									"scope": 1445,
									"src": "4835:88:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1446,
							"src": "266:4659:4",
							"usedErrors": [],
							"usedEvents": [
								1344,
								1353,
								1362
							]
						}
					],
					"src": "108:4818:4"
				},
				"id": 4
			},
			"main/node_modules/@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol": {
				"ast": {
					"absolutePath": "main/node_modules/@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
					"exportedSymbols": {
						"IERC721Receiver": [
							1463
						]
					},
					"id": 1464,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1447,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "116:24:5"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721Receiver",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1448,
								"nodeType": "StructuredDocumentation",
								"src": "142:152:5",
								"text": " @title ERC721 token receiver interface\n @dev Interface for any contract that wants to support safeTransfers\n from ERC721 asset contracts."
							},
							"fullyImplemented": false,
							"id": 1463,
							"linearizedBaseContracts": [
								1463
							],
							"name": "IERC721Receiver",
							"nameLocation": "305:15:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1449,
										"nodeType": "StructuredDocumentation",
										"src": "327:500:5",
										"text": " @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\n by `operator` from `from`, this function is called.\n It must return its Solidity selector to confirm the token transfer.\n If any other value is returned or the interface is not implemented by the recipient, the transfer will be\n reverted.\n The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`."
									},
									"functionSelector": "150b7a02",
									"id": 1462,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "onERC721Received",
									"nameLocation": "841:16:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1458,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1451,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "875:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 1462,
												"src": "867:16:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1450,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "867:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1453,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "901:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1462,
												"src": "893:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1452,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "893:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1455,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "923:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1462,
												"src": "915:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1454,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "915:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1457,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "955:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1462,
												"src": "940:19:5",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1456,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "940:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "857:108:5"
									},
									"returnParameters": {
										"id": 1461,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1460,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1462,
												"src": "984:6:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1459,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "984:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "983:8:5"
									},
									"scope": 1463,
									"src": "832:160:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1464,
							"src": "295:699:5",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "116:879:5"
				},
				"id": 5
			},
			"main/node_modules/@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol": {
				"ast": {
					"absolutePath": "main/node_modules/@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
					"exportedSymbols": {
						"IERC721": [
							1445
						],
						"IERC721Metadata": [
							1491
						]
					},
					"id": 1492,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1465,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "127:24:6"
						},
						{
							"absolutePath": "main/node_modules/@openzeppelin/contracts/token/ERC721/IERC721.sol",
							"file": "../IERC721.sol",
							"id": 1467,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1492,
							"sourceUnit": 1446,
							"src": "153:39:6",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1466,
										"name": "IERC721",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1445,
										"src": "161:7:6",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1469,
										"name": "IERC721",
										"nameLocations": [
											"357:7:6"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1445,
										"src": "357:7:6"
									},
									"id": 1470,
									"nodeType": "InheritanceSpecifier",
									"src": "357:7:6"
								}
							],
							"canonicalName": "IERC721Metadata",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1468,
								"nodeType": "StructuredDocumentation",
								"src": "194:133:6",
								"text": " @title ERC-721 Non-Fungible Token Standard, optional metadata extension\n @dev See https://eips.ethereum.org/EIPS/eip-721"
							},
							"fullyImplemented": false,
							"id": 1491,
							"linearizedBaseContracts": [
								1491,
								1445,
								1804
							],
							"name": "IERC721Metadata",
							"nameLocation": "338:15:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1471,
										"nodeType": "StructuredDocumentation",
										"src": "371:58:6",
										"text": " @dev Returns the token collection name."
									},
									"functionSelector": "06fdde03",
									"id": 1476,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "443:4:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1472,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "447:2:6"
									},
									"returnParameters": {
										"id": 1475,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1474,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1476,
												"src": "473:13:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1473,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "473:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "472:15:6"
									},
									"scope": 1491,
									"src": "434:54:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1477,
										"nodeType": "StructuredDocumentation",
										"src": "494:60:6",
										"text": " @dev Returns the token collection symbol."
									},
									"functionSelector": "95d89b41",
									"id": 1482,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "568:6:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1478,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "574:2:6"
									},
									"returnParameters": {
										"id": 1481,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1480,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1482,
												"src": "600:13:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1479,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "600:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "599:15:6"
									},
									"scope": 1491,
									"src": "559:56:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1483,
										"nodeType": "StructuredDocumentation",
										"src": "621:90:6",
										"text": " @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token."
									},
									"functionSelector": "c87b56dd",
									"id": 1490,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "tokenURI",
									"nameLocation": "725:8:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1486,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1485,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "742:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1490,
												"src": "734:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1484,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "734:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "733:17:6"
									},
									"returnParameters": {
										"id": 1489,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1488,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1490,
												"src": "774:13:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1487,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "774:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "773:15:6"
									},
									"scope": 1491,
									"src": "716:73:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1492,
							"src": "328:463:6",
							"usedErrors": [],
							"usedEvents": [
								1344,
								1353,
								1362
							]
						}
					],
					"src": "127:665:6"
				},
				"id": 6
			},
			"main/node_modules/@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "main/node_modules/@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							1513
						]
					},
					"id": 1514,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1493,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:7"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1494,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:7",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 1513,
							"linearizedBaseContracts": [
								1513
							],
							"name": "Context",
							"nameLocation": "642:7:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1502,
										"nodeType": "Block",
										"src": "718:34:7",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1499,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:7",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1500,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:7",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:7",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1498,
												"id": 1501,
												"nodeType": "Return",
												"src": "728:17:7"
											}
										]
									},
									"id": 1503,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1495,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:7"
									},
									"returnParameters": {
										"id": 1498,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1497,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1503,
												"src": "709:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1496,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:7"
									},
									"scope": 1513,
									"src": "656:96:7",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1511,
										"nodeType": "Block",
										"src": "825:32:7",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1508,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:7",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1509,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:7",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 1507,
												"id": 1510,
												"nodeType": "Return",
												"src": "835:15:7"
											}
										]
									},
									"id": 1512,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1504,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:7"
									},
									"returnParameters": {
										"id": 1507,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1506,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1512,
												"src": "809:14:7",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1505,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:7"
									},
									"scope": 1513,
									"src": "758:99:7",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1514,
							"src": "624:235:7",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:759:7"
				},
				"id": 7
			},
			"main/node_modules/@openzeppelin/contracts/utils/Strings.sol": {
				"ast": {
					"absolutePath": "main/node_modules/@openzeppelin/contracts/utils/Strings.sol",
					"exportedSymbols": {
						"Math": [
							2858
						],
						"SignedMath": [
							2963
						],
						"Strings": [
							1768
						]
					},
					"id": 1769,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1515,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:8"
						},
						{
							"absolutePath": "main/node_modules/@openzeppelin/contracts/utils/math/Math.sol",
							"file": "./math/Math.sol",
							"id": 1517,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1769,
							"sourceUnit": 2859,
							"src": "127:37:8",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1516,
										"name": "Math",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2858,
										"src": "135:4:8",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "main/node_modules/@openzeppelin/contracts/utils/math/SignedMath.sol",
							"file": "./math/SignedMath.sol",
							"id": 1519,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1769,
							"sourceUnit": 2964,
							"src": "165:49:8",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1518,
										"name": "SignedMath",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2963,
										"src": "173:10:8",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Strings",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1520,
								"nodeType": "StructuredDocumentation",
								"src": "216:34:8",
								"text": " @dev String operations."
							},
							"fullyImplemented": true,
							"id": 1768,
							"linearizedBaseContracts": [
								1768
							],
							"name": "Strings",
							"nameLocation": "259:7:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 1523,
									"mutability": "constant",
									"name": "HEX_DIGITS",
									"nameLocation": "298:10:8",
									"nodeType": "VariableDeclaration",
									"scope": 1768,
									"src": "273:56:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes16",
										"typeString": "bytes16"
									},
									"typeName": {
										"id": 1521,
										"name": "bytes16",
										"nodeType": "ElementaryTypeName",
										"src": "273:7:8",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes16",
											"typeString": "bytes16"
										}
									},
									"value": {
										"hexValue": "30313233343536373839616263646566",
										"id": 1522,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "311:18:8",
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_cb29997ed99ead0db59ce4d12b7d3723198c827273e5796737c926d78019c39f",
											"typeString": "literal_string \"0123456789abcdef\""
										},
										"value": "0123456789abcdef"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 1526,
									"mutability": "constant",
									"name": "ADDRESS_LENGTH",
									"nameLocation": "358:14:8",
									"nodeType": "VariableDeclaration",
									"scope": 1768,
									"src": "335:42:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 1524,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "335:5:8",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"value": {
										"hexValue": "3230",
										"id": 1525,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "375:2:8",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_20_by_1",
											"typeString": "int_const 20"
										},
										"value": "20"
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 1527,
										"nodeType": "StructuredDocumentation",
										"src": "384:81:8",
										"text": " @dev The `value` string doesn't fit in the specified `length`."
									},
									"errorSelector": "e22e27eb",
									"id": 1533,
									"name": "StringsInsufficientHexLength",
									"nameLocation": "476:28:8",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1532,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1529,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "513:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1533,
												"src": "505:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1528,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "505:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1531,
												"mutability": "mutable",
												"name": "length",
												"nameLocation": "528:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1533,
												"src": "520:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1530,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "520:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "504:31:8"
									},
									"src": "470:66:8"
								},
								{
									"body": {
										"id": 1580,
										"nodeType": "Block",
										"src": "708:627:8",
										"statements": [
											{
												"id": 1579,
												"nodeType": "UncheckedBlock",
												"src": "718:611:8",
												"statements": [
													{
														"assignments": [
															1542
														],
														"declarations": [
															{
																"constant": false,
																"id": 1542,
																"mutability": "mutable",
																"name": "length",
																"nameLocation": "750:6:8",
																"nodeType": "VariableDeclaration",
																"scope": 1579,
																"src": "742:14:8",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1541,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "742:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1549,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1548,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"id": 1545,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1536,
																		"src": "770:5:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 1543,
																		"name": "Math",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2858,
																		"src": "759:4:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Math_$2858_$",
																			"typeString": "type(library Math)"
																		}
																	},
																	"id": 1544,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "764:5:8",
																	"memberName": "log10",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2678,
																	"src": "759:10:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																		"typeString": "function (uint256) pure returns (uint256)"
																	}
																},
																"id": 1546,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "759:17:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"hexValue": "31",
																"id": 1547,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "779:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "759:21:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "742:38:8"
													},
													{
														"assignments": [
															1551
														],
														"declarations": [
															{
																"constant": false,
																"id": 1551,
																"mutability": "mutable",
																"name": "buffer",
																"nameLocation": "808:6:8",
																"nodeType": "VariableDeclaration",
																"scope": 1579,
																"src": "794:20:8",
																"stateVariable": false,
																"storageLocation": "memory",
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string"
																},
																"typeName": {
																	"id": 1550,
																	"name": "string",
																	"nodeType": "ElementaryTypeName",
																	"src": "794:6:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_storage_ptr",
																		"typeString": "string"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1556,
														"initialValue": {
															"arguments": [
																{
																	"id": 1554,
																	"name": "length",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1542,
																	"src": "828:6:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1553,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "NewExpression",
																"src": "817:10:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
																	"typeString": "function (uint256) pure returns (string memory)"
																},
																"typeName": {
																	"id": 1552,
																	"name": "string",
																	"nodeType": "ElementaryTypeName",
																	"src": "821:6:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_storage_ptr",
																		"typeString": "string"
																	}
																}
															},
															"id": 1555,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "817:18:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "794:41:8"
													},
													{
														"assignments": [
															1558
														],
														"declarations": [
															{
																"constant": false,
																"id": 1558,
																"mutability": "mutable",
																"name": "ptr",
																"nameLocation": "857:3:8",
																"nodeType": "VariableDeclaration",
																"scope": 1579,
																"src": "849:11:8",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1557,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "849:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1559,
														"nodeType": "VariableDeclarationStatement",
														"src": "849:11:8"
													},
													{
														"AST": {
															"nativeSrc": "930:67:8",
															"nodeType": "YulBlock",
															"src": "930:67:8",
															"statements": [
																{
																	"nativeSrc": "948:35:8",
																	"nodeType": "YulAssignment",
																	"src": "948:35:8",
																	"value": {
																		"arguments": [
																			{
																				"name": "buffer",
																				"nativeSrc": "959:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "959:6:8"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "971:2:8",
																						"nodeType": "YulLiteral",
																						"src": "971:2:8",
																						"type": "",
																						"value": "32"
																					},
																					{
																						"name": "length",
																						"nativeSrc": "975:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "975:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "967:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "967:3:8"
																				},
																				"nativeSrc": "967:15:8",
																				"nodeType": "YulFunctionCall",
																				"src": "967:15:8"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "955:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "955:3:8"
																		},
																		"nativeSrc": "955:28:8",
																		"nodeType": "YulFunctionCall",
																		"src": "955:28:8"
																	},
																	"variableNames": [
																		{
																			"name": "ptr",
																			"nativeSrc": "948:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "948:3:8"
																		}
																	]
																}
															]
														},
														"documentation": "@solidity memory-safe-assembly",
														"evmVersion": "shanghai",
														"externalReferences": [
															{
																"declaration": 1551,
																"isOffset": false,
																"isSlot": false,
																"src": "959:6:8",
																"valueSize": 1
															},
															{
																"declaration": 1542,
																"isOffset": false,
																"isSlot": false,
																"src": "975:6:8",
																"valueSize": 1
															},
															{
																"declaration": 1558,
																"isOffset": false,
																"isSlot": false,
																"src": "948:3:8",
																"valueSize": 1
															}
														],
														"id": 1560,
														"nodeType": "InlineAssembly",
														"src": "921:76:8"
													},
													{
														"body": {
															"id": 1575,
															"nodeType": "Block",
															"src": "1023:269:8",
															"statements": [
																{
																	"expression": {
																		"id": 1563,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "UnaryOperation",
																		"operator": "--",
																		"prefix": false,
																		"src": "1041:5:8",
																		"subExpression": {
																			"id": 1562,
																			"name": "ptr",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1558,
																			"src": "1041:3:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1564,
																	"nodeType": "ExpressionStatement",
																	"src": "1041:5:8"
																},
																{
																	"AST": {
																		"nativeSrc": "1124:86:8",
																		"nodeType": "YulBlock",
																		"src": "1124:86:8",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "ptr",
																							"nativeSrc": "1154:3:8",
																							"nodeType": "YulIdentifier",
																							"src": "1154:3:8"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "value",
																											"nativeSrc": "1168:5:8",
																											"nodeType": "YulIdentifier",
																											"src": "1168:5:8"
																										},
																										{
																											"kind": "number",
																											"nativeSrc": "1175:2:8",
																											"nodeType": "YulLiteral",
																											"src": "1175:2:8",
																											"type": "",
																											"value": "10"
																										}
																									],
																									"functionName": {
																										"name": "mod",
																										"nativeSrc": "1164:3:8",
																										"nodeType": "YulIdentifier",
																										"src": "1164:3:8"
																									},
																									"nativeSrc": "1164:14:8",
																									"nodeType": "YulFunctionCall",
																									"src": "1164:14:8"
																								},
																								{
																									"name": "HEX_DIGITS",
																									"nativeSrc": "1180:10:8",
																									"nodeType": "YulIdentifier",
																									"src": "1180:10:8"
																								}
																							],
																							"functionName": {
																								"name": "byte",
																								"nativeSrc": "1159:4:8",
																								"nodeType": "YulIdentifier",
																								"src": "1159:4:8"
																							},
																							"nativeSrc": "1159:32:8",
																							"nodeType": "YulFunctionCall",
																							"src": "1159:32:8"
																						}
																					],
																					"functionName": {
																						"name": "mstore8",
																						"nativeSrc": "1146:7:8",
																						"nodeType": "YulIdentifier",
																						"src": "1146:7:8"
																					},
																					"nativeSrc": "1146:46:8",
																					"nodeType": "YulFunctionCall",
																					"src": "1146:46:8"
																				},
																				"nativeSrc": "1146:46:8",
																				"nodeType": "YulExpressionStatement",
																				"src": "1146:46:8"
																			}
																		]
																	},
																	"documentation": "@solidity memory-safe-assembly",
																	"evmVersion": "shanghai",
																	"externalReferences": [
																		{
																			"declaration": 1523,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "1180:10:8",
																			"valueSize": 1
																		},
																		{
																			"declaration": 1558,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "1154:3:8",
																			"valueSize": 1
																		},
																		{
																			"declaration": 1536,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "1168:5:8",
																			"valueSize": 1
																		}
																	],
																	"id": 1565,
																	"nodeType": "InlineAssembly",
																	"src": "1115:95:8"
																},
																{
																	"expression": {
																		"id": 1568,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1566,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1536,
																			"src": "1227:5:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"hexValue": "3130",
																			"id": 1567,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1236:2:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10_by_1",
																				"typeString": "int_const 10"
																			},
																			"value": "10"
																		},
																		"src": "1227:11:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1569,
																	"nodeType": "ExpressionStatement",
																	"src": "1227:11:8"
																},
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1572,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1570,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1536,
																			"src": "1260:5:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 1571,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1269:1:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1260:10:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"id": 1574,
																	"nodeType": "IfStatement",
																	"src": "1256:21:8",
																	"trueBody": {
																		"id": 1573,
																		"nodeType": "Break",
																		"src": "1272:5:8"
																	}
																}
															]
														},
														"condition": {
															"hexValue": "74727565",
															"id": 1561,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1017:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														},
														"id": 1576,
														"nodeType": "WhileStatement",
														"src": "1010:282:8"
													},
													{
														"expression": {
															"id": 1577,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1551,
															"src": "1312:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														"functionReturnParameters": 1540,
														"id": 1578,
														"nodeType": "Return",
														"src": "1305:13:8"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1534,
										"nodeType": "StructuredDocumentation",
										"src": "542:90:8",
										"text": " @dev Converts a `uint256` to its ASCII `string` decimal representation."
									},
									"id": 1581,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toString",
									"nameLocation": "646:8:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1537,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1536,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "663:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1581,
												"src": "655:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1535,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "655:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "654:15:8"
									},
									"returnParameters": {
										"id": 1540,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1539,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1581,
												"src": "693:13:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1538,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "693:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "692:15:8"
									},
									"scope": 1768,
									"src": "637:698:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1606,
										"nodeType": "Block",
										"src": "1511:92:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 1594,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1592,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1584,
																	"src": "1542:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 1593,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1550:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "1542:9:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseExpression": {
																"hexValue": "",
																"id": 1596,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1560:2:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																},
																"value": ""
															},
															"id": 1597,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "Conditional",
															"src": "1542:20:8",
															"trueExpression": {
																"hexValue": "2d",
																"id": 1595,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1554:3:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_d3b8281179950f98149eefdb158d0e1acb56f56e8e343aa9fefafa7e36959561",
																	"typeString": "literal_string \"-\""
																},
																"value": "-"
															},
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 1601,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1584,
																			"src": "1588:5:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		],
																		"expression": {
																			"id": 1599,
																			"name": "SignedMath",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2963,
																			"src": "1573:10:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_SignedMath_$2963_$",
																				"typeString": "type(library SignedMath)"
																			}
																		},
																		"id": 1600,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "1584:3:8",
																		"memberName": "abs",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 2962,
																		"src": "1573:14:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_int256_$returns$_t_uint256_$",
																			"typeString": "function (int256) pure returns (uint256)"
																		}
																	},
																	"id": 1602,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1573:21:8",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1598,
																"name": "toString",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1581,
																"src": "1564:8:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
																	"typeString": "function (uint256) pure returns (string memory)"
																}
															},
															"id": 1603,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1564:31:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"expression": {
															"id": 1590,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1528:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_string_storage_ptr_$",
																"typeString": "type(string storage pointer)"
															},
															"typeName": {
																"id": 1589,
																"name": "string",
																"nodeType": "ElementaryTypeName",
																"src": "1528:6:8",
																"typeDescriptions": {}
															}
														},
														"id": 1591,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1535:6:8",
														"memberName": "concat",
														"nodeType": "MemberAccess",
														"src": "1528:13:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_stringconcat_pure$__$returns$_t_string_memory_ptr_$",
															"typeString": "function () pure returns (string memory)"
														}
													},
													"id": 1604,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1528:68:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 1588,
												"id": 1605,
												"nodeType": "Return",
												"src": "1521:75:8"
											}
										]
									},
									"documentation": {
										"id": 1582,
										"nodeType": "StructuredDocumentation",
										"src": "1341:89:8",
										"text": " @dev Converts a `int256` to its ASCII `string` decimal representation."
									},
									"id": 1607,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toStringSigned",
									"nameLocation": "1444:14:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1585,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1584,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1466:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1607,
												"src": "1459:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1583,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "1459:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1458:14:8"
									},
									"returnParameters": {
										"id": 1588,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1587,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1607,
												"src": "1496:13:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1586,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1496:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1495:15:8"
									},
									"scope": 1768,
									"src": "1435:168:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1626,
										"nodeType": "Block",
										"src": "1782:100:8",
										"statements": [
											{
												"id": 1625,
												"nodeType": "UncheckedBlock",
												"src": "1792:84:8",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"id": 1616,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1610,
																	"src": "1835:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1622,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"arguments": [
																			{
																				"id": 1619,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1610,
																				"src": "1854:5:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"expression": {
																				"id": 1617,
																				"name": "Math",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2858,
																				"src": "1842:4:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_contract$_Math_$2858_$",
																					"typeString": "type(library Math)"
																				}
																			},
																			"id": 1618,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "1847:6:8",
																			"memberName": "log256",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 2800,
																			"src": "1842:11:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																				"typeString": "function (uint256) pure returns (uint256)"
																			}
																		},
																		"id": 1620,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1842:18:8",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "+",
																	"rightExpression": {
																		"hexValue": "31",
																		"id": 1621,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1863:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	"src": "1842:22:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1615,
																"name": "toHexString",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	1627,
																	1710,
																	1730
																],
																"referencedDeclaration": 1710,
																"src": "1823:11:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$",
																	"typeString": "function (uint256,uint256) pure returns (string memory)"
																}
															},
															"id": 1623,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1823:42:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														"functionReturnParameters": 1614,
														"id": 1624,
														"nodeType": "Return",
														"src": "1816:49:8"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1608,
										"nodeType": "StructuredDocumentation",
										"src": "1609:94:8",
										"text": " @dev Converts a `uint256` to its ASCII `string` hexadecimal representation."
									},
									"id": 1627,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "1717:11:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1611,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1610,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1737:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1627,
												"src": "1729:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1609,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1729:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1728:15:8"
									},
									"returnParameters": {
										"id": 1614,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1613,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1627,
												"src": "1767:13:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1612,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1767:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1766:15:8"
									},
									"scope": 1768,
									"src": "1708:174:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1709,
										"nodeType": "Block",
										"src": "2095:435:8",
										"statements": [
											{
												"assignments": [
													1638
												],
												"declarations": [
													{
														"constant": false,
														"id": 1638,
														"mutability": "mutable",
														"name": "localValue",
														"nameLocation": "2113:10:8",
														"nodeType": "VariableDeclaration",
														"scope": 1709,
														"src": "2105:18:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1637,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2105:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1640,
												"initialValue": {
													"id": 1639,
													"name": "value",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1630,
													"src": "2126:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2105:26:8"
											},
											{
												"assignments": [
													1642
												],
												"declarations": [
													{
														"constant": false,
														"id": 1642,
														"mutability": "mutable",
														"name": "buffer",
														"nameLocation": "2154:6:8",
														"nodeType": "VariableDeclaration",
														"scope": 1709,
														"src": "2141:19:8",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1641,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "2141:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1651,
												"initialValue": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1649,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1647,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 1645,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2173:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 1646,
																	"name": "length",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1632,
																	"src": "2177:6:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2173:10:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"hexValue": "32",
																"id": 1648,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2186:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"src": "2173:14:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1644,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "2163:9:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (uint256) pure returns (bytes memory)"
														},
														"typeName": {
															"id": 1643,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "2167:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														}
													},
													"id": 1650,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2163:25:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2141:47:8"
											},
											{
												"expression": {
													"id": 1656,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1652,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1642,
															"src": "2198:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1654,
														"indexExpression": {
															"hexValue": "30",
															"id": 1653,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2205:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2198:9:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes1",
															"typeString": "bytes1"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 1655,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2210:3:8",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d",
															"typeString": "literal_string \"0\""
														},
														"value": "0"
													},
													"src": "2198:15:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													}
												},
												"id": 1657,
												"nodeType": "ExpressionStatement",
												"src": "2198:15:8"
											},
											{
												"expression": {
													"id": 1662,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1658,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1642,
															"src": "2223:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1660,
														"indexExpression": {
															"hexValue": "31",
															"id": 1659,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2230:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2223:9:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes1",
															"typeString": "bytes1"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "78",
														"id": 1661,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2235:3:8",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_7521d1cadbcfa91eec65aa16715b94ffc1c9654ba57ea2ef1a2127bca1127a83",
															"typeString": "literal_string \"x\""
														},
														"value": "x"
													},
													"src": "2223:15:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													}
												},
												"id": 1663,
												"nodeType": "ExpressionStatement",
												"src": "2223:15:8"
											},
											{
												"body": {
													"id": 1692,
													"nodeType": "Block",
													"src": "2293:95:8",
													"statements": [
														{
															"expression": {
																"id": 1686,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 1678,
																		"name": "buffer",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1642,
																		"src": "2307:6:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 1680,
																	"indexExpression": {
																		"id": 1679,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1665,
																		"src": "2314:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "2307:9:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"baseExpression": {
																		"id": 1681,
																		"name": "HEX_DIGITS",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1523,
																		"src": "2319:10:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes16",
																			"typeString": "bytes16"
																		}
																	},
																	"id": 1685,
																	"indexExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1684,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1682,
																			"name": "localValue",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1638,
																			"src": "2330:10:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "&",
																		"rightExpression": {
																			"hexValue": "307866",
																			"id": 1683,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "2343:3:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_15_by_1",
																				"typeString": "int_const 15"
																			},
																			"value": "0xf"
																		},
																		"src": "2330:16:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "2319:28:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"src": "2307:40:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes1",
																	"typeString": "bytes1"
																}
															},
															"id": 1687,
															"nodeType": "ExpressionStatement",
															"src": "2307:40:8"
														},
														{
															"expression": {
																"id": 1690,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1688,
																	"name": "localValue",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1638,
																	"src": "2361:10:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": ">>=",
																"rightHandSide": {
																	"hexValue": "34",
																	"id": 1689,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2376:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "2361:16:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1691,
															"nodeType": "ExpressionStatement",
															"src": "2361:16:8"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1674,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1672,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1665,
														"src": "2281:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "31",
														"id": 1673,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2285:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "2281:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1693,
												"initializationExpression": {
													"assignments": [
														1665
													],
													"declarations": [
														{
															"constant": false,
															"id": 1665,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "2261:1:8",
															"nodeType": "VariableDeclaration",
															"scope": 1693,
															"src": "2253:9:8",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 1664,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "2253:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 1671,
													"initialValue": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1670,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1668,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"hexValue": "32",
																"id": 1666,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2265:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 1667,
																"name": "length",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1632,
																"src": "2269:6:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2265:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"hexValue": "31",
															"id": 1669,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2278:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "2265:14:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "2253:26:8"
												},
												"loopExpression": {
													"expression": {
														"id": 1676,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "--",
														"prefix": true,
														"src": "2288:3:8",
														"subExpression": {
															"id": 1675,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1665,
															"src": "2290:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1677,
													"nodeType": "ExpressionStatement",
													"src": "2288:3:8"
												},
												"nodeType": "ForStatement",
												"src": "2248:140:8"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1696,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1694,
														"name": "localValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1638,
														"src": "2401:10:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 1695,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2415:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2401:15:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1703,
												"nodeType": "IfStatement",
												"src": "2397:96:8",
												"trueBody": {
													"id": 1702,
													"nodeType": "Block",
													"src": "2418:75:8",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 1698,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1630,
																		"src": "2468:5:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 1699,
																		"name": "length",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1632,
																		"src": "2475:6:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1697,
																	"name": "StringsInsufficientHexLength",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1533,
																	"src": "2439:28:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$_t_uint256_$returns$__$",
																		"typeString": "function (uint256,uint256) pure"
																	}
																},
																"id": 1700,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2439:43:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1701,
															"nodeType": "RevertStatement",
															"src": "2432:50:8"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1706,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1642,
															"src": "2516:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1705,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "2509:6:8",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_string_storage_ptr_$",
															"typeString": "type(string storage pointer)"
														},
														"typeName": {
															"id": 1704,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "2509:6:8",
															"typeDescriptions": {}
														}
													},
													"id": 1707,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2509:14:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 1636,
												"id": 1708,
												"nodeType": "Return",
												"src": "2502:21:8"
											}
										]
									},
									"documentation": {
										"id": 1628,
										"nodeType": "StructuredDocumentation",
										"src": "1888:112:8",
										"text": " @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length."
									},
									"id": 1710,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "2014:11:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1633,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1630,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2034:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1710,
												"src": "2026:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1629,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2026:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1632,
												"mutability": "mutable",
												"name": "length",
												"nameLocation": "2049:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1710,
												"src": "2041:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1631,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2041:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2025:31:8"
									},
									"returnParameters": {
										"id": 1636,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1635,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1710,
												"src": "2080:13:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1634,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2080:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2079:15:8"
									},
									"scope": 1768,
									"src": "2005:525:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1729,
										"nodeType": "Block",
										"src": "2762:75:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 1723,
																			"name": "addr",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1713,
																			"src": "2807:4:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 1722,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2799:7:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint160_$",
																			"typeString": "type(uint160)"
																		},
																		"typeName": {
																			"id": 1721,
																			"name": "uint160",
																			"nodeType": "ElementaryTypeName",
																			"src": "2799:7:8",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1724,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2799:13:8",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																],
																"id": 1720,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2791:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint256_$",
																	"typeString": "type(uint256)"
																},
																"typeName": {
																	"id": 1719,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2791:7:8",
																	"typeDescriptions": {}
																}
															},
															"id": 1725,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2791:22:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1726,
															"name": "ADDRESS_LENGTH",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1526,
															"src": "2815:14:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														],
														"id": 1718,
														"name": "toHexString",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1627,
															1710,
															1730
														],
														"referencedDeclaration": 1710,
														"src": "2779:11:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$",
															"typeString": "function (uint256,uint256) pure returns (string memory)"
														}
													},
													"id": 1727,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2779:51:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 1717,
												"id": 1728,
												"nodeType": "Return",
												"src": "2772:58:8"
											}
										]
									},
									"documentation": {
										"id": 1711,
										"nodeType": "StructuredDocumentation",
										"src": "2536:148:8",
										"text": " @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal\n representation."
									},
									"id": 1730,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "2698:11:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1714,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1713,
												"mutability": "mutable",
												"name": "addr",
												"nameLocation": "2718:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 1730,
												"src": "2710:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1712,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2710:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2709:14:8"
									},
									"returnParameters": {
										"id": 1717,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1716,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1730,
												"src": "2747:13:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1715,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2747:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2746:15:8"
									},
									"scope": 1768,
									"src": "2689:148:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1766,
										"nodeType": "Block",
										"src": "2992:104:8",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1764,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1750,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 1742,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1733,
																		"src": "3015:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 1741,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "3009:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																		"typeString": "type(bytes storage pointer)"
																	},
																	"typeName": {
																		"id": 1740,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "3009:5:8",
																		"typeDescriptions": {}
																	}
																},
																"id": 1743,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3009:8:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 1744,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3018:6:8",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "3009:15:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 1747,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1735,
																		"src": "3034:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 1746,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "3028:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																		"typeString": "type(bytes storage pointer)"
																	},
																	"typeName": {
																		"id": 1745,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "3028:5:8",
																		"typeDescriptions": {}
																	}
																},
																"id": 1748,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3028:8:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 1749,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3037:6:8",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "3028:15:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "3009:34:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"id": 1763,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 1754,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1733,
																			"src": "3063:1:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		],
																		"id": 1753,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "3057:5:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																			"typeString": "type(bytes storage pointer)"
																		},
																		"typeName": {
																			"id": 1752,
																			"name": "bytes",
																			"nodeType": "ElementaryTypeName",
																			"src": "3057:5:8",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1755,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3057:8:8",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"id": 1751,
																"name": "keccak256",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967288,
																"src": "3047:9:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																	"typeString": "function (bytes memory) pure returns (bytes32)"
																}
															},
															"id": 1756,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3047:19:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 1760,
																			"name": "b",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1735,
																			"src": "3086:1:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		],
																		"id": 1759,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "3080:5:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																			"typeString": "type(bytes storage pointer)"
																		},
																		"typeName": {
																			"id": 1758,
																			"name": "bytes",
																			"nodeType": "ElementaryTypeName",
																			"src": "3080:5:8",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1761,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3080:8:8",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"id": 1757,
																"name": "keccak256",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967288,
																"src": "3070:9:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																	"typeString": "function (bytes memory) pure returns (bytes32)"
																}
															},
															"id": 1762,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3070:19:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"src": "3047:42:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "3009:80:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1739,
												"id": 1765,
												"nodeType": "Return",
												"src": "3002:87:8"
											}
										]
									},
									"documentation": {
										"id": 1731,
										"nodeType": "StructuredDocumentation",
										"src": "2843:66:8",
										"text": " @dev Returns true if the two strings are equal."
									},
									"id": 1767,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "equal",
									"nameLocation": "2923:5:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1736,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1733,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2943:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1767,
												"src": "2929:15:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1732,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2929:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1735,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2960:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1767,
												"src": "2946:15:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1734,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2946:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2928:34:8"
									},
									"returnParameters": {
										"id": 1739,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1738,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1767,
												"src": "2986:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1737,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2986:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2985:6:8"
									},
									"scope": 1768,
									"src": "2914:182:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1769,
							"src": "251:2847:8",
							"usedErrors": [
								1533
							],
							"usedEvents": []
						}
					],
					"src": "101:2998:8"
				},
				"id": 8
			},
			"main/node_modules/@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"ast": {
					"absolutePath": "main/node_modules/@openzeppelin/contracts/utils/introspection/ERC165.sol",
					"exportedSymbols": {
						"ERC165": [
							1792
						],
						"IERC165": [
							1804
						]
					},
					"id": 1793,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1770,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "114:24:9"
						},
						{
							"absolutePath": "main/node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "./IERC165.sol",
							"id": 1772,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1793,
							"sourceUnit": 1805,
							"src": "140:38:9",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1771,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1804,
										"src": "148:7:9",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 1774,
										"name": "IERC165",
										"nameLocations": [
											"687:7:9"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1804,
										"src": "687:7:9"
									},
									"id": 1775,
									"nodeType": "InheritanceSpecifier",
									"src": "687:7:9"
								}
							],
							"canonicalName": "ERC165",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1773,
								"nodeType": "StructuredDocumentation",
								"src": "180:478:9",
								"text": " @dev Implementation of the {IERC165} interface.\n Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n for the additional interface id that will be supported. For example:\n ```solidity\n function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n }\n ```"
							},
							"fullyImplemented": true,
							"id": 1792,
							"linearizedBaseContracts": [
								1792,
								1804
							],
							"name": "ERC165",
							"nameLocation": "677:6:9",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"baseFunctions": [
										1803
									],
									"body": {
										"id": 1790,
										"nodeType": "Block",
										"src": "844:64:9",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													},
													"id": 1788,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1783,
														"name": "interfaceId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1778,
														"src": "861:11:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 1785,
																	"name": "IERC165",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1804,
																	"src": "881:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$1804_$",
																		"typeString": "type(contract IERC165)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$1804_$",
																		"typeString": "type(contract IERC165)"
																	}
																],
																"id": 1784,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "876:4:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 1786,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "876:13:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_contract$_IERC165_$1804",
																"typeString": "type(contract IERC165)"
															}
														},
														"id": 1787,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "890:11:9",
														"memberName": "interfaceId",
														"nodeType": "MemberAccess",
														"src": "876:25:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"src": "861:40:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1782,
												"id": 1789,
												"nodeType": "Return",
												"src": "854:47:9"
											}
										]
									},
									"documentation": {
										"id": 1776,
										"nodeType": "StructuredDocumentation",
										"src": "701:56:9",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 1791,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "771:17:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1779,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1778,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "796:11:9",
												"nodeType": "VariableDeclaration",
												"scope": 1791,
												"src": "789:18:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1777,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "789:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "788:20:9"
									},
									"returnParameters": {
										"id": 1782,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1781,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1791,
												"src": "838:4:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1780,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "838:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "837:6:9"
									},
									"scope": 1792,
									"src": "762:146:9",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 1793,
							"src": "659:251:9",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "114:797:9"
				},
				"id": 9
			},
			"main/node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"ast": {
					"absolutePath": "main/node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							1804
						]
					},
					"id": 1805,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1794,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "115:24:10"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC165",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1795,
								"nodeType": "StructuredDocumentation",
								"src": "141:279:10",
								"text": " @dev Interface of the ERC165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[EIP].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."
							},
							"fullyImplemented": false,
							"id": 1804,
							"linearizedBaseContracts": [
								1804
							],
							"name": "IERC165",
							"nameLocation": "431:7:10",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1796,
										"nodeType": "StructuredDocumentation",
										"src": "445:340:10",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 1803,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "799:17:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1799,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1798,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "824:11:10",
												"nodeType": "VariableDeclaration",
												"scope": 1803,
												"src": "817:18:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1797,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "817:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "816:20:10"
									},
									"returnParameters": {
										"id": 1802,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1801,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1803,
												"src": "860:4:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1800,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "860:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "859:6:10"
									},
									"scope": 1804,
									"src": "790:76:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1805,
							"src": "421:447:10",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "115:754:10"
				},
				"id": 10
			},
			"main/node_modules/@openzeppelin/contracts/utils/math/Math.sol": {
				"ast": {
					"absolutePath": "main/node_modules/@openzeppelin/contracts/utils/math/Math.sol",
					"exportedSymbols": {
						"Math": [
							2858
						]
					},
					"id": 2859,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1806,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "103:24:11"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Math",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1807,
								"nodeType": "StructuredDocumentation",
								"src": "129:73:11",
								"text": " @dev Standard math utilities missing in the Solidity language."
							},
							"fullyImplemented": true,
							"id": 2858,
							"linearizedBaseContracts": [
								2858
							],
							"name": "Math",
							"nameLocation": "211:4:11",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1808,
										"nodeType": "StructuredDocumentation",
										"src": "222:50:11",
										"text": " @dev Muldiv operation overflow."
									},
									"errorSelector": "227bc153",
									"id": 1810,
									"name": "MathOverflowedMulDiv",
									"nameLocation": "283:20:11",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1809,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "303:2:11"
									},
									"src": "277:29:11"
								},
								{
									"canonicalName": "Math.Rounding",
									"id": 1815,
									"members": [
										{
											"id": 1811,
											"name": "Floor",
											"nameLocation": "336:5:11",
											"nodeType": "EnumValue",
											"src": "336:5:11"
										},
										{
											"id": 1812,
											"name": "Ceil",
											"nameLocation": "379:4:11",
											"nodeType": "EnumValue",
											"src": "379:4:11"
										},
										{
											"id": 1813,
											"name": "Trunc",
											"nameLocation": "421:5:11",
											"nodeType": "EnumValue",
											"src": "421:5:11"
										},
										{
											"id": 1814,
											"name": "Expand",
											"nameLocation": "451:6:11",
											"nodeType": "EnumValue",
											"src": "451:6:11"
										}
									],
									"name": "Rounding",
									"nameLocation": "317:8:11",
									"nodeType": "EnumDefinition",
									"src": "312:169:11"
								},
								{
									"body": {
										"id": 1846,
										"nodeType": "Block",
										"src": "661:140:11",
										"statements": [
											{
												"id": 1845,
												"nodeType": "UncheckedBlock",
												"src": "671:124:11",
												"statements": [
													{
														"assignments": [
															1828
														],
														"declarations": [
															{
																"constant": false,
																"id": 1828,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "703:1:11",
																"nodeType": "VariableDeclaration",
																"scope": 1845,
																"src": "695:9:11",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1827,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "695:7:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1832,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1831,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1829,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1818,
																"src": "707:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 1830,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1820,
																"src": "711:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "707:5:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "695:17:11"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1835,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1833,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1828,
																"src": "730:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 1834,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1818,
																"src": "734:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "730:5:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1840,
														"nodeType": "IfStatement",
														"src": "726:28:11",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 1836,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "745:5:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 1837,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "752:1:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1838,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "744:10:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1826,
															"id": 1839,
															"nodeType": "Return",
															"src": "737:17:11"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 1841,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "776:4:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 1842,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1828,
																	"src": "782:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1843,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "775:9:11",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 1826,
														"id": 1844,
														"nodeType": "Return",
														"src": "768:16:11"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1816,
										"nodeType": "StructuredDocumentation",
										"src": "487:93:11",
										"text": " @dev Returns the addition of two unsigned integers, with an overflow flag."
									},
									"id": 1847,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryAdd",
									"nameLocation": "594:6:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1821,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1818,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "609:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 1847,
												"src": "601:9:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1817,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "601:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1820,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "620:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 1847,
												"src": "612:9:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1819,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "612:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "600:22:11"
									},
									"returnParameters": {
										"id": 1826,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1823,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1847,
												"src": "646:4:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1822,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "646:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1825,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1847,
												"src": "652:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1824,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "652:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "645:15:11"
									},
									"scope": 2858,
									"src": "585:216:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1874,
										"nodeType": "Block",
										"src": "984:113:11",
										"statements": [
											{
												"id": 1873,
												"nodeType": "UncheckedBlock",
												"src": "994:97:11",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1861,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1859,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1852,
																"src": "1022:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"id": 1860,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1850,
																"src": "1026:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1022:5:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1866,
														"nodeType": "IfStatement",
														"src": "1018:28:11",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 1862,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1037:5:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 1863,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1044:1:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1864,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1036:10:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1858,
															"id": 1865,
															"nodeType": "Return",
															"src": "1029:17:11"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 1867,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1068:4:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1870,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1868,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1850,
																		"src": "1074:1:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 1869,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1852,
																		"src": "1078:1:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1074:5:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1871,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1067:13:11",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 1858,
														"id": 1872,
														"nodeType": "Return",
														"src": "1060:20:11"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1848,
										"nodeType": "StructuredDocumentation",
										"src": "807:96:11",
										"text": " @dev Returns the subtraction of two unsigned integers, with an overflow flag."
									},
									"id": 1875,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "trySub",
									"nameLocation": "917:6:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1853,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1850,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "932:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 1875,
												"src": "924:9:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1849,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "924:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1852,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "943:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 1875,
												"src": "935:9:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1851,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "935:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "923:22:11"
									},
									"returnParameters": {
										"id": 1858,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1855,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1875,
												"src": "969:4:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1854,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "969:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1857,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1875,
												"src": "975:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1856,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "975:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "968:15:11"
									},
									"scope": 2858,
									"src": "908:189:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1916,
										"nodeType": "Block",
										"src": "1283:417:11",
										"statements": [
											{
												"id": 1915,
												"nodeType": "UncheckedBlock",
												"src": "1293:401:11",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1889,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1887,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1878,
																"src": "1551:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 1888,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1556:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1551:6:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1894,
														"nodeType": "IfStatement",
														"src": "1547:28:11",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "74727565",
																		"id": 1890,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1567:4:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "true"
																	},
																	{
																		"hexValue": "30",
																		"id": 1891,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1573:1:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1892,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1566:9:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1886,
															"id": 1893,
															"nodeType": "Return",
															"src": "1559:16:11"
														}
													},
													{
														"assignments": [
															1896
														],
														"declarations": [
															{
																"constant": false,
																"id": 1896,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "1597:1:11",
																"nodeType": "VariableDeclaration",
																"scope": 1915,
																"src": "1589:9:11",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1895,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "1589:7:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1900,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1899,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1897,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1878,
																"src": "1601:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 1898,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1880,
																"src": "1605:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1601:5:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "1589:17:11"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1905,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1903,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1901,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1896,
																	"src": "1624:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 1902,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1878,
																	"src": "1628:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1624:5:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 1904,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1880,
																"src": "1633:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1624:10:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1910,
														"nodeType": "IfStatement",
														"src": "1620:33:11",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 1906,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1644:5:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 1907,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1651:1:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1908,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1643:10:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1886,
															"id": 1909,
															"nodeType": "Return",
															"src": "1636:17:11"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 1911,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1675:4:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 1912,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1896,
																	"src": "1681:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1913,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1674:9:11",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 1886,
														"id": 1914,
														"nodeType": "Return",
														"src": "1667:16:11"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1876,
										"nodeType": "StructuredDocumentation",
										"src": "1103:99:11",
										"text": " @dev Returns the multiplication of two unsigned integers, with an overflow flag."
									},
									"id": 1917,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMul",
									"nameLocation": "1216:6:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1881,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1878,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1231:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 1917,
												"src": "1223:9:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1877,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1223:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1880,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1242:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 1917,
												"src": "1234:9:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1879,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1234:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1222:22:11"
									},
									"returnParameters": {
										"id": 1886,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1883,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1917,
												"src": "1268:4:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1882,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1268:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1885,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1917,
												"src": "1274:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1884,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1274:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1267:15:11"
									},
									"scope": 2858,
									"src": "1207:493:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1944,
										"nodeType": "Block",
										"src": "1887:114:11",
										"statements": [
											{
												"id": 1943,
												"nodeType": "UncheckedBlock",
												"src": "1897:98:11",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1931,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1929,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1922,
																"src": "1925:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 1930,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1930:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1925:6:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1936,
														"nodeType": "IfStatement",
														"src": "1921:29:11",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 1932,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1941:5:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 1933,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1948:1:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1934,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1940:10:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1928,
															"id": 1935,
															"nodeType": "Return",
															"src": "1933:17:11"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 1937,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1972:4:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1940,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1938,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1920,
																		"src": "1978:1:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 1939,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1922,
																		"src": "1982:1:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1978:5:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1941,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1971:13:11",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 1928,
														"id": 1942,
														"nodeType": "Return",
														"src": "1964:20:11"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1918,
										"nodeType": "StructuredDocumentation",
										"src": "1706:100:11",
										"text": " @dev Returns the division of two unsigned integers, with a division by zero flag."
									},
									"id": 1945,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryDiv",
									"nameLocation": "1820:6:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1923,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1920,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1835:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 1945,
												"src": "1827:9:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1919,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1827:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1922,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1846:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 1945,
												"src": "1838:9:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1921,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1838:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1826:22:11"
									},
									"returnParameters": {
										"id": 1928,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1925,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1945,
												"src": "1872:4:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1924,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1872:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1927,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1945,
												"src": "1878:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1926,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1878:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1871:15:11"
									},
									"scope": 2858,
									"src": "1811:190:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1972,
										"nodeType": "Block",
										"src": "2198:114:11",
										"statements": [
											{
												"id": 1971,
												"nodeType": "UncheckedBlock",
												"src": "2208:98:11",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1959,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1957,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1950,
																"src": "2236:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 1958,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2241:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2236:6:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1964,
														"nodeType": "IfStatement",
														"src": "2232:29:11",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 1960,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2252:5:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 1961,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2259:1:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1962,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2251:10:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1956,
															"id": 1963,
															"nodeType": "Return",
															"src": "2244:17:11"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 1965,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2283:4:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1968,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1966,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1948,
																		"src": "2289:1:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "%",
																	"rightExpression": {
																		"id": 1967,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1950,
																		"src": "2293:1:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2289:5:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1969,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2282:13:11",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 1956,
														"id": 1970,
														"nodeType": "Return",
														"src": "2275:20:11"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1946,
										"nodeType": "StructuredDocumentation",
										"src": "2007:110:11",
										"text": " @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag."
									},
									"id": 1973,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMod",
									"nameLocation": "2131:6:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1951,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1948,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2146:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 1973,
												"src": "2138:9:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1947,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2138:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1950,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2157:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 1973,
												"src": "2149:9:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1949,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2149:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2137:22:11"
									},
									"returnParameters": {
										"id": 1956,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1953,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1973,
												"src": "2183:4:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1952,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2183:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1955,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1973,
												"src": "2189:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1954,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2189:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2182:15:11"
									},
									"scope": 2858,
									"src": "2122:190:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1990,
										"nodeType": "Block",
										"src": "2449:37:11",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1985,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1983,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1976,
															"src": "2466:1:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"id": 1984,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1978,
															"src": "2470:1:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2466:5:11",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 1987,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1978,
														"src": "2478:1:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1988,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "2466:13:11",
													"trueExpression": {
														"id": 1986,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1976,
														"src": "2474:1:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1982,
												"id": 1989,
												"nodeType": "Return",
												"src": "2459:20:11"
											}
										]
									},
									"documentation": {
										"id": 1974,
										"nodeType": "StructuredDocumentation",
										"src": "2318:59:11",
										"text": " @dev Returns the largest of two numbers."
									},
									"id": 1991,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "max",
									"nameLocation": "2391:3:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1979,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1976,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2403:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 1991,
												"src": "2395:9:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1975,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2395:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1978,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2414:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 1991,
												"src": "2406:9:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1977,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2406:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2394:22:11"
									},
									"returnParameters": {
										"id": 1982,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1981,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1991,
												"src": "2440:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1980,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2440:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2439:9:11"
									},
									"scope": 2858,
									"src": "2382:104:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2008,
										"nodeType": "Block",
										"src": "2624:37:11",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2003,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2001,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1994,
															"src": "2641:1:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"id": 2002,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1996,
															"src": "2645:1:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2641:5:11",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 2005,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1996,
														"src": "2653:1:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2006,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "2641:13:11",
													"trueExpression": {
														"id": 2004,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1994,
														"src": "2649:1:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2000,
												"id": 2007,
												"nodeType": "Return",
												"src": "2634:20:11"
											}
										]
									},
									"documentation": {
										"id": 1992,
										"nodeType": "StructuredDocumentation",
										"src": "2492:60:11",
										"text": " @dev Returns the smallest of two numbers."
									},
									"id": 2009,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "min",
									"nameLocation": "2566:3:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1997,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1994,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2578:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 2009,
												"src": "2570:9:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1993,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2570:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1996,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2589:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 2009,
												"src": "2581:9:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1995,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2581:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2569:22:11"
									},
									"returnParameters": {
										"id": 2000,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1999,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2009,
												"src": "2615:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1998,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2615:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2614:9:11"
									},
									"scope": 2858,
									"src": "2557:104:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2031,
										"nodeType": "Block",
										"src": "2845:82:11",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2029,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2021,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2019,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2012,
																	"src": "2900:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"id": 2020,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2014,
																	"src": "2904:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2900:5:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 2022,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "2899:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2028,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2025,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2023,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2012,
																		"src": "2910:1:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "^",
																	"rightExpression": {
																		"id": 2024,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2014,
																		"src": "2914:1:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2910:5:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 2026,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2909:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"hexValue": "32",
															"id": 2027,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2919:1:11",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"src": "2909:11:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2899:21:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2018,
												"id": 2030,
												"nodeType": "Return",
												"src": "2892:28:11"
											}
										]
									},
									"documentation": {
										"id": 2010,
										"nodeType": "StructuredDocumentation",
										"src": "2667:102:11",
										"text": " @dev Returns the average of two numbers. The result is rounded towards\n zero."
									},
									"id": 2032,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "average",
									"nameLocation": "2783:7:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2015,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2012,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2799:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 2032,
												"src": "2791:9:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2011,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2791:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2014,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2810:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 2032,
												"src": "2802:9:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2013,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2802:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2790:22:11"
									},
									"returnParameters": {
										"id": 2018,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2017,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2032,
												"src": "2836:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2016,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2836:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2835:9:11"
									},
									"scope": 2858,
									"src": "2774:153:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2065,
										"nodeType": "Block",
										"src": "3219:260:11",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2044,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2042,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2037,
														"src": "3233:1:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 2043,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3238:1:11",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3233:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2050,
												"nodeType": "IfStatement",
												"src": "3229:127:11",
												"trueBody": {
													"id": 2049,
													"nodeType": "Block",
													"src": "3241:115:11",
													"statements": [
														{
															"expression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2047,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2045,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2035,
																	"src": "3340:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 2046,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2037,
																	"src": "3344:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3340:5:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"functionReturnParameters": 2041,
															"id": 2048,
															"nodeType": "Return",
															"src": "3333:12:11"
														}
													]
												}
											},
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2053,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2051,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2035,
															"src": "3444:1:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 2052,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3449:1:11",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "3444:6:11",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2062,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2060,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2057,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2055,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2035,
																			"src": "3458:1:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"hexValue": "31",
																			"id": 2056,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "3462:1:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "3458:5:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 2058,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "3457:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"id": 2059,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2037,
																"src": "3467:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3457:11:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"hexValue": "31",
															"id": 2061,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3471:1:11",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "3457:15:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2063,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "3444:28:11",
													"trueExpression": {
														"hexValue": "30",
														"id": 2054,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3453:1:11",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2041,
												"id": 2064,
												"nodeType": "Return",
												"src": "3437:35:11"
											}
										]
									},
									"documentation": {
										"id": 2033,
										"nodeType": "StructuredDocumentation",
										"src": "2933:210:11",
										"text": " @dev Returns the ceiling of the division of two numbers.\n This differs from standard division with `/` in that it rounds towards infinity instead\n of rounding towards zero."
									},
									"id": 2066,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "ceilDiv",
									"nameLocation": "3157:7:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2038,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2035,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3173:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 2066,
												"src": "3165:9:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2034,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3165:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2037,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3184:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 2066,
												"src": "3176:9:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2036,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3176:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3164:22:11"
									},
									"returnParameters": {
										"id": 2041,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2040,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2066,
												"src": "3210:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2039,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3210:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3209:9:11"
									},
									"scope": 2858,
									"src": "3148:331:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2191,
										"nodeType": "Block",
										"src": "3901:4018:11",
										"statements": [
											{
												"id": 2190,
												"nodeType": "UncheckedBlock",
												"src": "3911:4002:11",
												"statements": [
													{
														"assignments": [
															2079
														],
														"declarations": [
															{
																"constant": false,
																"id": 2079,
																"mutability": "mutable",
																"name": "prod0",
																"nameLocation": "4240:5:11",
																"nodeType": "VariableDeclaration",
																"scope": 2190,
																"src": "4232:13:11",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2078,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "4232:7:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2083,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2082,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2080,
																"name": "x",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2069,
																"src": "4248:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 2081,
																"name": "y",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2071,
																"src": "4252:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4248:5:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "4232:21:11"
													},
													{
														"assignments": [
															2085
														],
														"declarations": [
															{
																"constant": false,
																"id": 2085,
																"mutability": "mutable",
																"name": "prod1",
																"nameLocation": "4320:5:11",
																"nodeType": "VariableDeclaration",
																"scope": 2190,
																"src": "4312:13:11",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2084,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "4312:7:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2086,
														"nodeType": "VariableDeclarationStatement",
														"src": "4312:13:11"
													},
													{
														"AST": {
															"nativeSrc": "4392:122:11",
															"nodeType": "YulBlock",
															"src": "4392:122:11",
															"statements": [
																{
																	"nativeSrc": "4410:30:11",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4410:30:11",
																	"value": {
																		"arguments": [
																			{
																				"name": "x",
																				"nativeSrc": "4427:1:11",
																				"nodeType": "YulIdentifier",
																				"src": "4427:1:11"
																			},
																			{
																				"name": "y",
																				"nativeSrc": "4430:1:11",
																				"nodeType": "YulIdentifier",
																				"src": "4430:1:11"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "4437:1:11",
																						"nodeType": "YulLiteral",
																						"src": "4437:1:11",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "4433:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "4433:3:11"
																				},
																				"nativeSrc": "4433:6:11",
																				"nodeType": "YulFunctionCall",
																				"src": "4433:6:11"
																			}
																		],
																		"functionName": {
																			"name": "mulmod",
																			"nativeSrc": "4420:6:11",
																			"nodeType": "YulIdentifier",
																			"src": "4420:6:11"
																		},
																		"nativeSrc": "4420:20:11",
																		"nodeType": "YulFunctionCall",
																		"src": "4420:20:11"
																	},
																	"variables": [
																		{
																			"name": "mm",
																			"nativeSrc": "4414:2:11",
																			"nodeType": "YulTypedName",
																			"src": "4414:2:11",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4457:43:11",
																	"nodeType": "YulAssignment",
																	"src": "4457:43:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "mm",
																						"nativeSrc": "4474:2:11",
																						"nodeType": "YulIdentifier",
																						"src": "4474:2:11"
																					},
																					{
																						"name": "prod0",
																						"nativeSrc": "4478:5:11",
																						"nodeType": "YulIdentifier",
																						"src": "4478:5:11"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "4470:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "4470:3:11"
																				},
																				"nativeSrc": "4470:14:11",
																				"nodeType": "YulFunctionCall",
																				"src": "4470:14:11"
																			},
																			{
																				"arguments": [
																					{
																						"name": "mm",
																						"nativeSrc": "4489:2:11",
																						"nodeType": "YulIdentifier",
																						"src": "4489:2:11"
																					},
																					{
																						"name": "prod0",
																						"nativeSrc": "4493:5:11",
																						"nodeType": "YulIdentifier",
																						"src": "4493:5:11"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "4486:2:11",
																					"nodeType": "YulIdentifier",
																					"src": "4486:2:11"
																				},
																				"nativeSrc": "4486:13:11",
																				"nodeType": "YulFunctionCall",
																				"src": "4486:13:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4466:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "4466:3:11"
																		},
																		"nativeSrc": "4466:34:11",
																		"nodeType": "YulFunctionCall",
																		"src": "4466:34:11"
																	},
																	"variableNames": [
																		{
																			"name": "prod1",
																			"nativeSrc": "4457:5:11",
																			"nodeType": "YulIdentifier",
																			"src": "4457:5:11"
																		}
																	]
																}
															]
														},
														"evmVersion": "shanghai",
														"externalReferences": [
															{
																"declaration": 2079,
																"isOffset": false,
																"isSlot": false,
																"src": "4478:5:11",
																"valueSize": 1
															},
															{
																"declaration": 2079,
																"isOffset": false,
																"isSlot": false,
																"src": "4493:5:11",
																"valueSize": 1
															},
															{
																"declaration": 2085,
																"isOffset": false,
																"isSlot": false,
																"src": "4457:5:11",
																"valueSize": 1
															},
															{
																"declaration": 2069,
																"isOffset": false,
																"isSlot": false,
																"src": "4427:1:11",
																"valueSize": 1
															},
															{
																"declaration": 2071,
																"isOffset": false,
																"isSlot": false,
																"src": "4430:1:11",
																"valueSize": 1
															}
														],
														"id": 2087,
														"nodeType": "InlineAssembly",
														"src": "4383:131:11"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2090,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2088,
																"name": "prod1",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2085,
																"src": "4595:5:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 2089,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4604:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "4595:10:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2096,
														"nodeType": "IfStatement",
														"src": "4591:368:11",
														"trueBody": {
															"id": 2095,
															"nodeType": "Block",
															"src": "4607:352:11",
															"statements": [
																{
																	"expression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2093,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2091,
																			"name": "prod0",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2079,
																			"src": "4925:5:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "/",
																		"rightExpression": {
																			"id": 2092,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2073,
																			"src": "4933:11:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "4925:19:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"functionReturnParameters": 2077,
																	"id": 2094,
																	"nodeType": "Return",
																	"src": "4918:26:11"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2099,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2097,
																"name": "denominator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2073,
																"src": "5065:11:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 2098,
																"name": "prod1",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2085,
																"src": "5080:5:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5065:20:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2104,
														"nodeType": "IfStatement",
														"src": "5061:88:11",
														"trueBody": {
															"id": 2103,
															"nodeType": "Block",
															"src": "5087:62:11",
															"statements": [
																{
																	"errorCall": {
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 2100,
																			"name": "MathOverflowedMulDiv",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1810,
																			"src": "5112:20:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_error_pure$__$returns$__$",
																				"typeString": "function () pure"
																			}
																		},
																		"id": 2101,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5112:22:11",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 2102,
																	"nodeType": "RevertStatement",
																	"src": "5105:29:11"
																}
															]
														}
													},
													{
														"assignments": [
															2106
														],
														"declarations": [
															{
																"constant": false,
																"id": 2106,
																"mutability": "mutable",
																"name": "remainder",
																"nameLocation": "5412:9:11",
																"nodeType": "VariableDeclaration",
																"scope": 2190,
																"src": "5404:17:11",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2105,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "5404:7:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2107,
														"nodeType": "VariableDeclarationStatement",
														"src": "5404:17:11"
													},
													{
														"AST": {
															"nativeSrc": "5444:291:11",
															"nodeType": "YulBlock",
															"src": "5444:291:11",
															"statements": [
																{
																	"nativeSrc": "5513:38:11",
																	"nodeType": "YulAssignment",
																	"src": "5513:38:11",
																	"value": {
																		"arguments": [
																			{
																				"name": "x",
																				"nativeSrc": "5533:1:11",
																				"nodeType": "YulIdentifier",
																				"src": "5533:1:11"
																			},
																			{
																				"name": "y",
																				"nativeSrc": "5536:1:11",
																				"nodeType": "YulIdentifier",
																				"src": "5536:1:11"
																			},
																			{
																				"name": "denominator",
																				"nativeSrc": "5539:11:11",
																				"nodeType": "YulIdentifier",
																				"src": "5539:11:11"
																			}
																		],
																		"functionName": {
																			"name": "mulmod",
																			"nativeSrc": "5526:6:11",
																			"nodeType": "YulIdentifier",
																			"src": "5526:6:11"
																		},
																		"nativeSrc": "5526:25:11",
																		"nodeType": "YulFunctionCall",
																		"src": "5526:25:11"
																	},
																	"variableNames": [
																		{
																			"name": "remainder",
																			"nativeSrc": "5513:9:11",
																			"nodeType": "YulIdentifier",
																			"src": "5513:9:11"
																		}
																	]
																},
																{
																	"nativeSrc": "5633:41:11",
																	"nodeType": "YulAssignment",
																	"src": "5633:41:11",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod1",
																				"nativeSrc": "5646:5:11",
																				"nodeType": "YulIdentifier",
																				"src": "5646:5:11"
																			},
																			{
																				"arguments": [
																					{
																						"name": "remainder",
																						"nativeSrc": "5656:9:11",
																						"nodeType": "YulIdentifier",
																						"src": "5656:9:11"
																					},
																					{
																						"name": "prod0",
																						"nativeSrc": "5667:5:11",
																						"nodeType": "YulIdentifier",
																						"src": "5667:5:11"
																					}
																				],
																				"functionName": {
																					"name": "gt",
																					"nativeSrc": "5653:2:11",
																					"nodeType": "YulIdentifier",
																					"src": "5653:2:11"
																				},
																				"nativeSrc": "5653:20:11",
																				"nodeType": "YulFunctionCall",
																				"src": "5653:20:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5642:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "5642:3:11"
																		},
																		"nativeSrc": "5642:32:11",
																		"nodeType": "YulFunctionCall",
																		"src": "5642:32:11"
																	},
																	"variableNames": [
																		{
																			"name": "prod1",
																			"nativeSrc": "5633:5:11",
																			"nodeType": "YulIdentifier",
																			"src": "5633:5:11"
																		}
																	]
																},
																{
																	"nativeSrc": "5691:30:11",
																	"nodeType": "YulAssignment",
																	"src": "5691:30:11",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod0",
																				"nativeSrc": "5704:5:11",
																				"nodeType": "YulIdentifier",
																				"src": "5704:5:11"
																			},
																			{
																				"name": "remainder",
																				"nativeSrc": "5711:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "5711:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5700:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "5700:3:11"
																		},
																		"nativeSrc": "5700:21:11",
																		"nodeType": "YulFunctionCall",
																		"src": "5700:21:11"
																	},
																	"variableNames": [
																		{
																			"name": "prod0",
																			"nativeSrc": "5691:5:11",
																			"nodeType": "YulIdentifier",
																			"src": "5691:5:11"
																		}
																	]
																}
															]
														},
														"evmVersion": "shanghai",
														"externalReferences": [
															{
																"declaration": 2073,
																"isOffset": false,
																"isSlot": false,
																"src": "5539:11:11",
																"valueSize": 1
															},
															{
																"declaration": 2079,
																"isOffset": false,
																"isSlot": false,
																"src": "5667:5:11",
																"valueSize": 1
															},
															{
																"declaration": 2079,
																"isOffset": false,
																"isSlot": false,
																"src": "5691:5:11",
																"valueSize": 1
															},
															{
																"declaration": 2079,
																"isOffset": false,
																"isSlot": false,
																"src": "5704:5:11",
																"valueSize": 1
															},
															{
																"declaration": 2085,
																"isOffset": false,
																"isSlot": false,
																"src": "5633:5:11",
																"valueSize": 1
															},
															{
																"declaration": 2085,
																"isOffset": false,
																"isSlot": false,
																"src": "5646:5:11",
																"valueSize": 1
															},
															{
																"declaration": 2106,
																"isOffset": false,
																"isSlot": false,
																"src": "5513:9:11",
																"valueSize": 1
															},
															{
																"declaration": 2106,
																"isOffset": false,
																"isSlot": false,
																"src": "5656:9:11",
																"valueSize": 1
															},
															{
																"declaration": 2106,
																"isOffset": false,
																"isSlot": false,
																"src": "5711:9:11",
																"valueSize": 1
															},
															{
																"declaration": 2069,
																"isOffset": false,
																"isSlot": false,
																"src": "5533:1:11",
																"valueSize": 1
															},
															{
																"declaration": 2071,
																"isOffset": false,
																"isSlot": false,
																"src": "5536:1:11",
																"valueSize": 1
															}
														],
														"id": 2108,
														"nodeType": "InlineAssembly",
														"src": "5435:300:11"
													},
													{
														"assignments": [
															2110
														],
														"declarations": [
															{
																"constant": false,
																"id": 2110,
																"mutability": "mutable",
																"name": "twos",
																"nameLocation": "5947:4:11",
																"nodeType": "VariableDeclaration",
																"scope": 2190,
																"src": "5939:12:11",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2109,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "5939:7:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2117,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2116,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2111,
																"name": "denominator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2073,
																"src": "5954:11:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2114,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "30",
																			"id": 2112,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "5969:1:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"id": 2113,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2073,
																			"src": "5973:11:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "5969:15:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 2115,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "5968:17:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5954:31:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "5939:46:11"
													},
													{
														"AST": {
															"nativeSrc": "6008:362:11",
															"nodeType": "YulBlock",
															"src": "6008:362:11",
															"statements": [
																{
																	"nativeSrc": "6073:37:11",
																	"nodeType": "YulAssignment",
																	"src": "6073:37:11",
																	"value": {
																		"arguments": [
																			{
																				"name": "denominator",
																				"nativeSrc": "6092:11:11",
																				"nodeType": "YulIdentifier",
																				"src": "6092:11:11"
																			},
																			{
																				"name": "twos",
																				"nativeSrc": "6105:4:11",
																				"nodeType": "YulIdentifier",
																				"src": "6105:4:11"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nativeSrc": "6088:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "6088:3:11"
																		},
																		"nativeSrc": "6088:22:11",
																		"nodeType": "YulFunctionCall",
																		"src": "6088:22:11"
																	},
																	"variableNames": [
																		{
																			"name": "denominator",
																			"nativeSrc": "6073:11:11",
																			"nodeType": "YulIdentifier",
																			"src": "6073:11:11"
																		}
																	]
																},
																{
																	"nativeSrc": "6177:25:11",
																	"nodeType": "YulAssignment",
																	"src": "6177:25:11",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod0",
																				"nativeSrc": "6190:5:11",
																				"nodeType": "YulIdentifier",
																				"src": "6190:5:11"
																			},
																			{
																				"name": "twos",
																				"nativeSrc": "6197:4:11",
																				"nodeType": "YulIdentifier",
																				"src": "6197:4:11"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nativeSrc": "6186:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "6186:3:11"
																		},
																		"nativeSrc": "6186:16:11",
																		"nodeType": "YulFunctionCall",
																		"src": "6186:16:11"
																	},
																	"variableNames": [
																		{
																			"name": "prod0",
																			"nativeSrc": "6177:5:11",
																			"nodeType": "YulIdentifier",
																			"src": "6177:5:11"
																		}
																	]
																},
																{
																	"nativeSrc": "6317:39:11",
																	"nodeType": "YulAssignment",
																	"src": "6317:39:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "6337:1:11",
																								"nodeType": "YulLiteral",
																								"src": "6337:1:11",
																								"type": "",
																								"value": "0"
																							},
																							{
																								"name": "twos",
																								"nativeSrc": "6340:4:11",
																								"nodeType": "YulIdentifier",
																								"src": "6340:4:11"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nativeSrc": "6333:3:11",
																							"nodeType": "YulIdentifier",
																							"src": "6333:3:11"
																						},
																						"nativeSrc": "6333:12:11",
																						"nodeType": "YulFunctionCall",
																						"src": "6333:12:11"
																					},
																					{
																						"name": "twos",
																						"nativeSrc": "6347:4:11",
																						"nodeType": "YulIdentifier",
																						"src": "6347:4:11"
																					}
																				],
																				"functionName": {
																					"name": "div",
																					"nativeSrc": "6329:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "6329:3:11"
																				},
																				"nativeSrc": "6329:23:11",
																				"nodeType": "YulFunctionCall",
																				"src": "6329:23:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6354:1:11",
																				"nodeType": "YulLiteral",
																				"src": "6354:1:11",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6325:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "6325:3:11"
																		},
																		"nativeSrc": "6325:31:11",
																		"nodeType": "YulFunctionCall",
																		"src": "6325:31:11"
																	},
																	"variableNames": [
																		{
																			"name": "twos",
																			"nativeSrc": "6317:4:11",
																			"nodeType": "YulIdentifier",
																			"src": "6317:4:11"
																		}
																	]
																}
															]
														},
														"evmVersion": "shanghai",
														"externalReferences": [
															{
																"declaration": 2073,
																"isOffset": false,
																"isSlot": false,
																"src": "6073:11:11",
																"valueSize": 1
															},
															{
																"declaration": 2073,
																"isOffset": false,
																"isSlot": false,
																"src": "6092:11:11",
																"valueSize": 1
															},
															{
																"declaration": 2079,
																"isOffset": false,
																"isSlot": false,
																"src": "6177:5:11",
																"valueSize": 1
															},
															{
																"declaration": 2079,
																"isOffset": false,
																"isSlot": false,
																"src": "6190:5:11",
																"valueSize": 1
															},
															{
																"declaration": 2110,
																"isOffset": false,
																"isSlot": false,
																"src": "6105:4:11",
																"valueSize": 1
															},
															{
																"declaration": 2110,
																"isOffset": false,
																"isSlot": false,
																"src": "6197:4:11",
																"valueSize": 1
															},
															{
																"declaration": 2110,
																"isOffset": false,
																"isSlot": false,
																"src": "6317:4:11",
																"valueSize": 1
															},
															{
																"declaration": 2110,
																"isOffset": false,
																"isSlot": false,
																"src": "6340:4:11",
																"valueSize": 1
															},
															{
																"declaration": 2110,
																"isOffset": false,
																"isSlot": false,
																"src": "6347:4:11",
																"valueSize": 1
															}
														],
														"id": 2118,
														"nodeType": "InlineAssembly",
														"src": "5999:371:11"
													},
													{
														"expression": {
															"id": 2123,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2119,
																"name": "prod0",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2079,
																"src": "6436:5:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "|=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2122,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2120,
																	"name": "prod1",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2085,
																	"src": "6445:5:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 2121,
																	"name": "twos",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2110,
																	"src": "6453:4:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6445:12:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6436:21:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2124,
														"nodeType": "ExpressionStatement",
														"src": "6436:21:11"
													},
													{
														"assignments": [
															2126
														],
														"declarations": [
															{
																"constant": false,
																"id": 2126,
																"mutability": "mutable",
																"name": "inverse",
																"nameLocation": "6783:7:11",
																"nodeType": "VariableDeclaration",
																"scope": 2190,
																"src": "6775:15:11",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2125,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "6775:7:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2133,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2132,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2129,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "33",
																			"id": 2127,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "6794:1:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_3_by_1",
																				"typeString": "int_const 3"
																			},
																			"value": "3"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"id": 2128,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2073,
																			"src": "6798:11:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6794:15:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 2130,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "6793:17:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "^",
															"rightExpression": {
																"hexValue": "32",
																"id": 2131,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6813:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"src": "6793:21:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "6775:39:11"
													},
													{
														"expression": {
															"id": 2140,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2134,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2126,
																"src": "7031:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2139,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2135,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7042:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2138,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2136,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2073,
																		"src": "7046:11:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2137,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2126,
																		"src": "7060:7:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7046:21:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7042:25:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7031:36:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2141,
														"nodeType": "ExpressionStatement",
														"src": "7031:36:11"
													},
													{
														"expression": {
															"id": 2148,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2142,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2126,
																"src": "7100:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2147,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2143,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7111:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2146,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2144,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2073,
																		"src": "7115:11:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2145,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2126,
																		"src": "7129:7:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7115:21:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7111:25:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7100:36:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2149,
														"nodeType": "ExpressionStatement",
														"src": "7100:36:11"
													},
													{
														"expression": {
															"id": 2156,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2150,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2126,
																"src": "7170:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2155,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2151,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7181:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2154,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2152,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2073,
																		"src": "7185:11:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2153,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2126,
																		"src": "7199:7:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7185:21:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7181:25:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7170:36:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2157,
														"nodeType": "ExpressionStatement",
														"src": "7170:36:11"
													},
													{
														"expression": {
															"id": 2164,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2158,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2126,
																"src": "7240:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2163,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2159,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7251:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2162,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2160,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2073,
																		"src": "7255:11:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2161,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2126,
																		"src": "7269:7:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7255:21:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7251:25:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7240:36:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2165,
														"nodeType": "ExpressionStatement",
														"src": "7240:36:11"
													},
													{
														"expression": {
															"id": 2172,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2166,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2126,
																"src": "7310:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2171,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2167,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7321:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2170,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2168,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2073,
																		"src": "7325:11:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2169,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2126,
																		"src": "7339:7:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7325:21:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7321:25:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7310:36:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2173,
														"nodeType": "ExpressionStatement",
														"src": "7310:36:11"
													},
													{
														"expression": {
															"id": 2180,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2174,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2126,
																"src": "7381:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2179,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2175,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7392:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2178,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2176,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2073,
																		"src": "7396:11:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2177,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2126,
																		"src": "7410:7:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7396:21:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7392:25:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7381:36:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2181,
														"nodeType": "ExpressionStatement",
														"src": "7381:36:11"
													},
													{
														"expression": {
															"id": 2186,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2182,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2076,
																"src": "7851:6:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2185,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2183,
																	"name": "prod0",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2079,
																	"src": "7860:5:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 2184,
																	"name": "inverse",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2126,
																	"src": "7868:7:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7860:15:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7851:24:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2187,
														"nodeType": "ExpressionStatement",
														"src": "7851:24:11"
													},
													{
														"expression": {
															"id": 2188,
															"name": "result",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2076,
															"src": "7896:6:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2077,
														"id": 2189,
														"nodeType": "Return",
														"src": "7889:13:11"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2067,
										"nodeType": "StructuredDocumentation",
										"src": "3485:313:11",
										"text": " @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n denominator == 0.\n @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n Uniswap Labs also under MIT license."
									},
									"id": 2192,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mulDiv",
									"nameLocation": "3812:6:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2074,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2069,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "3827:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 2192,
												"src": "3819:9:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2068,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3819:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2071,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "3838:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 2192,
												"src": "3830:9:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2070,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3830:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2073,
												"mutability": "mutable",
												"name": "denominator",
												"nameLocation": "3849:11:11",
												"nodeType": "VariableDeclaration",
												"scope": 2192,
												"src": "3841:19:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2072,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3841:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3818:43:11"
									},
									"returnParameters": {
										"id": 2077,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2076,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "3893:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 2192,
												"src": "3885:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2075,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3885:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3884:16:11"
									},
									"scope": 2858,
									"src": "3803:4116:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2234,
										"nodeType": "Block",
										"src": "8161:192:11",
										"statements": [
											{
												"assignments": [
													2208
												],
												"declarations": [
													{
														"constant": false,
														"id": 2208,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "8179:6:11",
														"nodeType": "VariableDeclaration",
														"scope": 2234,
														"src": "8171:14:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2207,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8171:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2214,
												"initialValue": {
													"arguments": [
														{
															"id": 2210,
															"name": "x",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2195,
															"src": "8195:1:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2211,
															"name": "y",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2197,
															"src": "8198:1:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2212,
															"name": "denominator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2199,
															"src": "8201:11:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2209,
														"name": "mulDiv",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															2192,
															2235
														],
														"referencedDeclaration": 2192,
														"src": "8188:6:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 2213,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8188:25:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8171:42:11"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 2225,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"id": 2216,
																"name": "rounding",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2202,
																"src": "8244:8:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_Rounding_$1815",
																	"typeString": "enum Math.Rounding"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_enum$_Rounding_$1815",
																	"typeString": "enum Math.Rounding"
																}
															],
															"id": 2215,
															"name": "unsignedRoundsUp",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2857,
															"src": "8227:16:11",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$1815_$returns$_t_bool_$",
																"typeString": "function (enum Math.Rounding) pure returns (bool)"
															}
														},
														"id": 2217,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8227:26:11",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2224,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"id": 2219,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2195,
																	"src": "8264:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 2220,
																	"name": "y",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2197,
																	"src": "8267:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 2221,
																	"name": "denominator",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2199,
																	"src": "8270:11:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2218,
																"name": "mulmod",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967280,
																"src": "8257:6:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 2222,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8257:25:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "30",
															"id": 2223,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8285:1:11",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "8257:29:11",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "8227:59:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2231,
												"nodeType": "IfStatement",
												"src": "8223:101:11",
												"trueBody": {
													"id": 2230,
													"nodeType": "Block",
													"src": "8288:36:11",
													"statements": [
														{
															"expression": {
																"id": 2228,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 2226,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2208,
																	"src": "8302:6:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"hexValue": "31",
																	"id": 2227,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8312:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "8302:11:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2229,
															"nodeType": "ExpressionStatement",
															"src": "8302:11:11"
														}
													]
												}
											},
											{
												"expression": {
													"id": 2232,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2208,
													"src": "8340:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2206,
												"id": 2233,
												"nodeType": "Return",
												"src": "8333:13:11"
											}
										]
									},
									"documentation": {
										"id": 2193,
										"nodeType": "StructuredDocumentation",
										"src": "7925:121:11",
										"text": " @notice Calculates x * y / denominator with full precision, following the selected rounding direction."
									},
									"id": 2235,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mulDiv",
									"nameLocation": "8060:6:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2203,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2195,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "8075:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 2235,
												"src": "8067:9:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2194,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8067:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2197,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "8086:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 2235,
												"src": "8078:9:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2196,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8078:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2199,
												"mutability": "mutable",
												"name": "denominator",
												"nameLocation": "8097:11:11",
												"nodeType": "VariableDeclaration",
												"scope": 2235,
												"src": "8089:19:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2198,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8089:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2202,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "8119:8:11",
												"nodeType": "VariableDeclaration",
												"scope": 2235,
												"src": "8110:17:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$1815",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 2201,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2200,
														"name": "Rounding",
														"nameLocations": [
															"8110:8:11"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1815,
														"src": "8110:8:11"
													},
													"referencedDeclaration": 1815,
													"src": "8110:8:11",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$1815",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8066:62:11"
									},
									"returnParameters": {
										"id": 2206,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2205,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2235,
												"src": "8152:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2204,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8152:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8151:9:11"
									},
									"scope": 2858,
									"src": "8051:302:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2346,
										"nodeType": "Block",
										"src": "8644:1585:11",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2245,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2243,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2238,
														"src": "8658:1:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 2244,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "8663:1:11",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "8658:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2249,
												"nodeType": "IfStatement",
												"src": "8654:45:11",
												"trueBody": {
													"id": 2248,
													"nodeType": "Block",
													"src": "8666:33:11",
													"statements": [
														{
															"expression": {
																"hexValue": "30",
																"id": 2246,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8687:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 2242,
															"id": 2247,
															"nodeType": "Return",
															"src": "8680:8:11"
														}
													]
												}
											},
											{
												"assignments": [
													2251
												],
												"declarations": [
													{
														"constant": false,
														"id": 2251,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "9386:6:11",
														"nodeType": "VariableDeclaration",
														"scope": 2346,
														"src": "9378:14:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2250,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9378:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2260,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2259,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"hexValue": "31",
														"id": 2252,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "9395:1:11",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"nodeType": "BinaryOperation",
													"operator": "<<",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2257,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"id": 2254,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2238,
																			"src": "9406:1:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 2253,
																		"name": "log2",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [
																			2514,
																			2549
																		],
																		"referencedDeclaration": 2514,
																		"src": "9401:4:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (uint256) pure returns (uint256)"
																		}
																	},
																	"id": 2255,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "9401:7:11",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2256,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9412:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9401:12:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 2258,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "9400:14:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9395:19:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9378:36:11"
											},
											{
												"id": 2345,
												"nodeType": "UncheckedBlock",
												"src": "9815:408:11",
												"statements": [
													{
														"expression": {
															"id": 2270,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2261,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2251,
																"src": "9839:6:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2269,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2266,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2262,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2251,
																				"src": "9849:6:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2265,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2263,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2238,
																					"src": "9858:1:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2264,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2251,
																					"src": "9862:6:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "9858:10:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "9849:19:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2267,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "9848:21:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2268,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9873:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9848:26:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9839:35:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2271,
														"nodeType": "ExpressionStatement",
														"src": "9839:35:11"
													},
													{
														"expression": {
															"id": 2281,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2272,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2251,
																"src": "9888:6:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2280,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2277,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2273,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2251,
																				"src": "9898:6:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2276,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2274,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2238,
																					"src": "9907:1:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2275,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2251,
																					"src": "9911:6:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "9907:10:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "9898:19:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2278,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "9897:21:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2279,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9922:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9897:26:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9888:35:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2282,
														"nodeType": "ExpressionStatement",
														"src": "9888:35:11"
													},
													{
														"expression": {
															"id": 2292,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2283,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2251,
																"src": "9937:6:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2291,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2288,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2284,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2251,
																				"src": "9947:6:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2287,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2285,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2238,
																					"src": "9956:1:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2286,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2251,
																					"src": "9960:6:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "9956:10:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "9947:19:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2289,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "9946:21:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2290,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9971:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9946:26:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9937:35:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2293,
														"nodeType": "ExpressionStatement",
														"src": "9937:35:11"
													},
													{
														"expression": {
															"id": 2303,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2294,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2251,
																"src": "9986:6:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2302,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2299,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2295,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2251,
																				"src": "9996:6:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2298,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2296,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2238,
																					"src": "10005:1:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2297,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2251,
																					"src": "10009:6:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10005:10:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "9996:19:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2300,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "9995:21:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2301,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10020:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9995:26:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9986:35:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2304,
														"nodeType": "ExpressionStatement",
														"src": "9986:35:11"
													},
													{
														"expression": {
															"id": 2314,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2305,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2251,
																"src": "10035:6:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2313,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2310,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2306,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2251,
																				"src": "10045:6:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2309,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2307,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2238,
																					"src": "10054:1:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2308,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2251,
																					"src": "10058:6:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10054:10:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "10045:19:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2311,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "10044:21:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2312,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10069:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "10044:26:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10035:35:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2315,
														"nodeType": "ExpressionStatement",
														"src": "10035:35:11"
													},
													{
														"expression": {
															"id": 2325,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2316,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2251,
																"src": "10084:6:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2324,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2321,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2317,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2251,
																				"src": "10094:6:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2320,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2318,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2238,
																					"src": "10103:1:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2319,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2251,
																					"src": "10107:6:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10103:10:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "10094:19:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2322,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "10093:21:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2323,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10118:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "10093:26:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10084:35:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2326,
														"nodeType": "ExpressionStatement",
														"src": "10084:35:11"
													},
													{
														"expression": {
															"id": 2336,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2327,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2251,
																"src": "10133:6:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2335,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2332,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2328,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2251,
																				"src": "10143:6:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2331,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2329,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2238,
																					"src": "10152:1:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2330,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2251,
																					"src": "10156:6:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10152:10:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "10143:19:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2333,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "10142:21:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2334,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10167:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "10142:26:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10133:35:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2337,
														"nodeType": "ExpressionStatement",
														"src": "10133:35:11"
													},
													{
														"expression": {
															"arguments": [
																{
																	"id": 2339,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2251,
																	"src": "10193:6:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2342,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2340,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2238,
																		"src": "10201:1:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 2341,
																		"name": "result",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2251,
																		"src": "10205:6:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "10201:10:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2338,
																"name": "min",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2009,
																"src": "10189:3:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 2343,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10189:23:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2242,
														"id": 2344,
														"nodeType": "Return",
														"src": "10182:30:11"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2236,
										"nodeType": "StructuredDocumentation",
										"src": "8359:223:11",
										"text": " @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n towards zero.\n Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11)."
									},
									"id": 2347,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sqrt",
									"nameLocation": "8596:4:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2239,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2238,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "8609:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 2347,
												"src": "8601:9:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2237,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8601:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8600:11:11"
									},
									"returnParameters": {
										"id": 2242,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2241,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2347,
												"src": "8635:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2240,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8635:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8634:9:11"
									},
									"scope": 2858,
									"src": "8587:1642:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2381,
										"nodeType": "Block",
										"src": "10405:164:11",
										"statements": [
											{
												"id": 2380,
												"nodeType": "UncheckedBlock",
												"src": "10415:148:11",
												"statements": [
													{
														"assignments": [
															2359
														],
														"declarations": [
															{
																"constant": false,
																"id": 2359,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "10447:6:11",
																"nodeType": "VariableDeclaration",
																"scope": 2380,
																"src": "10439:14:11",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2358,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "10439:7:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2363,
														"initialValue": {
															"arguments": [
																{
																	"id": 2361,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2350,
																	"src": "10461:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2360,
																"name": "sqrt",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	2347,
																	2382
																],
																"referencedDeclaration": 2347,
																"src": "10456:4:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 2362,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10456:7:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "10439:24:11"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2378,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2364,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2359,
																"src": "10484:6:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 2373,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 2366,
																						"name": "rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2353,
																						"src": "10511:8:11",
																						"typeDescriptions": {
																							"typeIdentifier": "t_enum$_Rounding_$1815",
																							"typeString": "enum Math.Rounding"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_enum$_Rounding_$1815",
																							"typeString": "enum Math.Rounding"
																						}
																					],
																					"id": 2365,
																					"name": "unsignedRoundsUp",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2857,
																					"src": "10494:16:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$1815_$returns$_t_bool_$",
																						"typeString": "function (enum Math.Rounding) pure returns (bool)"
																					}
																				},
																				"id": 2367,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "10494:26:11",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2372,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 2370,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 2368,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2359,
																						"src": "10524:6:11",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "*",
																					"rightExpression": {
																						"id": 2369,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2359,
																						"src": "10533:6:11",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "10524:15:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 2371,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2350,
																					"src": "10542:1:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10524:19:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "10494:49:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 2375,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10550:1:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 2376,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "10494:57:11",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 2374,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10546:1:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 2377,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "10493:59:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "10484:68:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2357,
														"id": 2379,
														"nodeType": "Return",
														"src": "10477:75:11"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2348,
										"nodeType": "StructuredDocumentation",
										"src": "10235:89:11",
										"text": " @notice Calculates sqrt(a), following the selected rounding direction."
									},
									"id": 2382,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sqrt",
									"nameLocation": "10338:4:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2354,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2350,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "10351:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 2382,
												"src": "10343:9:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2349,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10343:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2353,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "10363:8:11",
												"nodeType": "VariableDeclaration",
												"scope": 2382,
												"src": "10354:17:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$1815",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 2352,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2351,
														"name": "Rounding",
														"nameLocations": [
															"10354:8:11"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1815,
														"src": "10354:8:11"
													},
													"referencedDeclaration": 1815,
													"src": "10354:8:11",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$1815",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10342:30:11"
									},
									"returnParameters": {
										"id": 2357,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2356,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2382,
												"src": "10396:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2355,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10396:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10395:9:11"
									},
									"scope": 2858,
									"src": "10329:240:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2513,
										"nodeType": "Block",
										"src": "10760:922:11",
										"statements": [
											{
												"assignments": [
													2391
												],
												"declarations": [
													{
														"constant": false,
														"id": 2391,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "10778:6:11",
														"nodeType": "VariableDeclaration",
														"scope": 2513,
														"src": "10770:14:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2390,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10770:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2393,
												"initialValue": {
													"hexValue": "30",
													"id": 2392,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "10787:1:11",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10770:18:11"
											},
											{
												"id": 2510,
												"nodeType": "UncheckedBlock",
												"src": "10798:855:11",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2398,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2396,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2394,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2385,
																	"src": "10826:5:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "313238",
																	"id": 2395,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10835:3:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_128_by_1",
																		"typeString": "int_const 128"
																	},
																	"value": "128"
																},
																"src": "10826:12:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2397,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10841:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "10826:16:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2408,
														"nodeType": "IfStatement",
														"src": "10822:99:11",
														"trueBody": {
															"id": 2407,
															"nodeType": "Block",
															"src": "10844:77:11",
															"statements": [
																{
																	"expression": {
																		"id": 2401,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2399,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2385,
																			"src": "10862:5:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 2400,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10872:3:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "10862:13:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2402,
																	"nodeType": "ExpressionStatement",
																	"src": "10862:13:11"
																},
																{
																	"expression": {
																		"id": 2405,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2403,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2391,
																			"src": "10893:6:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 2404,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10903:3:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "10893:13:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2406,
																	"nodeType": "ExpressionStatement",
																	"src": "10893:13:11"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2413,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2411,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2409,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2385,
																	"src": "10938:5:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 2410,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10947:2:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "10938:11:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2412,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10952:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "10938:15:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2423,
														"nodeType": "IfStatement",
														"src": "10934:96:11",
														"trueBody": {
															"id": 2422,
															"nodeType": "Block",
															"src": "10955:75:11",
															"statements": [
																{
																	"expression": {
																		"id": 2416,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2414,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2385,
																			"src": "10973:5:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 2415,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10983:2:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "10973:12:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2417,
																	"nodeType": "ExpressionStatement",
																	"src": "10973:12:11"
																},
																{
																	"expression": {
																		"id": 2420,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2418,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2391,
																			"src": "11003:6:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 2419,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11013:2:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "11003:12:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2421,
																	"nodeType": "ExpressionStatement",
																	"src": "11003:12:11"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2428,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2426,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2424,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2385,
																	"src": "11047:5:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 2425,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11056:2:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "11047:11:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2427,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11061:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11047:15:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2438,
														"nodeType": "IfStatement",
														"src": "11043:96:11",
														"trueBody": {
															"id": 2437,
															"nodeType": "Block",
															"src": "11064:75:11",
															"statements": [
																{
																	"expression": {
																		"id": 2431,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2429,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2385,
																			"src": "11082:5:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 2430,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11092:2:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "11082:12:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2432,
																	"nodeType": "ExpressionStatement",
																	"src": "11082:12:11"
																},
																{
																	"expression": {
																		"id": 2435,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2433,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2391,
																			"src": "11112:6:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 2434,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11122:2:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "11112:12:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2436,
																	"nodeType": "ExpressionStatement",
																	"src": "11112:12:11"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2443,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2441,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2439,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2385,
																	"src": "11156:5:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 2440,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11165:2:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "11156:11:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2442,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11170:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11156:15:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2453,
														"nodeType": "IfStatement",
														"src": "11152:96:11",
														"trueBody": {
															"id": 2452,
															"nodeType": "Block",
															"src": "11173:75:11",
															"statements": [
																{
																	"expression": {
																		"id": 2446,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2444,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2385,
																			"src": "11191:5:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 2445,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11201:2:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "11191:12:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2447,
																	"nodeType": "ExpressionStatement",
																	"src": "11191:12:11"
																},
																{
																	"expression": {
																		"id": 2450,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2448,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2391,
																			"src": "11221:6:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 2449,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11231:2:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "11221:12:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2451,
																	"nodeType": "ExpressionStatement",
																	"src": "11221:12:11"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2458,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2456,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2454,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2385,
																	"src": "11265:5:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 2455,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11274:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "11265:10:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2457,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11278:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11265:14:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2468,
														"nodeType": "IfStatement",
														"src": "11261:93:11",
														"trueBody": {
															"id": 2467,
															"nodeType": "Block",
															"src": "11281:73:11",
															"statements": [
																{
																	"expression": {
																		"id": 2461,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2459,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2385,
																			"src": "11299:5:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 2460,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11309:1:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "11299:11:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2462,
																	"nodeType": "ExpressionStatement",
																	"src": "11299:11:11"
																},
																{
																	"expression": {
																		"id": 2465,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2463,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2391,
																			"src": "11328:6:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 2464,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11338:1:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "11328:11:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2466,
																	"nodeType": "ExpressionStatement",
																	"src": "11328:11:11"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2473,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2471,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2469,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2385,
																	"src": "11371:5:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "34",
																	"id": 2470,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11380:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "11371:10:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2472,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11384:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11371:14:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2483,
														"nodeType": "IfStatement",
														"src": "11367:93:11",
														"trueBody": {
															"id": 2482,
															"nodeType": "Block",
															"src": "11387:73:11",
															"statements": [
																{
																	"expression": {
																		"id": 2476,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2474,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2385,
																			"src": "11405:5:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 2475,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11415:1:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "11405:11:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2477,
																	"nodeType": "ExpressionStatement",
																	"src": "11405:11:11"
																},
																{
																	"expression": {
																		"id": 2480,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2478,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2391,
																			"src": "11434:6:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 2479,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11444:1:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "11434:11:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2481,
																	"nodeType": "ExpressionStatement",
																	"src": "11434:11:11"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2488,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2486,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2484,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2385,
																	"src": "11477:5:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "32",
																	"id": 2485,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11486:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "11477:10:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2487,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11490:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11477:14:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2498,
														"nodeType": "IfStatement",
														"src": "11473:93:11",
														"trueBody": {
															"id": 2497,
															"nodeType": "Block",
															"src": "11493:73:11",
															"statements": [
																{
																	"expression": {
																		"id": 2491,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2489,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2385,
																			"src": "11511:5:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 2490,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11521:1:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "11511:11:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2492,
																	"nodeType": "ExpressionStatement",
																	"src": "11511:11:11"
																},
																{
																	"expression": {
																		"id": 2495,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2493,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2391,
																			"src": "11540:6:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 2494,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11550:1:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "11540:11:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2496,
																	"nodeType": "ExpressionStatement",
																	"src": "11540:11:11"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2503,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2501,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2499,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2385,
																	"src": "11583:5:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2500,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11592:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "11583:10:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2502,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11596:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11583:14:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2509,
														"nodeType": "IfStatement",
														"src": "11579:64:11",
														"trueBody": {
															"id": 2508,
															"nodeType": "Block",
															"src": "11599:44:11",
															"statements": [
																{
																	"expression": {
																		"id": 2506,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2504,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2391,
																			"src": "11617:6:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 2505,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11627:1:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "11617:11:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2507,
																	"nodeType": "ExpressionStatement",
																	"src": "11617:11:11"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 2511,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2391,
													"src": "11669:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2389,
												"id": 2512,
												"nodeType": "Return",
												"src": "11662:13:11"
											}
										]
									},
									"documentation": {
										"id": 2383,
										"nodeType": "StructuredDocumentation",
										"src": "10575:119:11",
										"text": " @dev Return the log in base 2 of a positive value rounded towards zero.\n Returns 0 if given 0."
									},
									"id": 2514,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log2",
									"nameLocation": "10708:4:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2386,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2385,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10721:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 2514,
												"src": "10713:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2384,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10713:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10712:15:11"
									},
									"returnParameters": {
										"id": 2389,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2388,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2514,
												"src": "10751:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2387,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10751:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10750:9:11"
									},
									"scope": 2858,
									"src": "10699:983:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2548,
										"nodeType": "Block",
										"src": "11915:168:11",
										"statements": [
											{
												"id": 2547,
												"nodeType": "UncheckedBlock",
												"src": "11925:152:11",
												"statements": [
													{
														"assignments": [
															2526
														],
														"declarations": [
															{
																"constant": false,
																"id": 2526,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "11957:6:11",
																"nodeType": "VariableDeclaration",
																"scope": 2547,
																"src": "11949:14:11",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2525,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "11949:7:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2530,
														"initialValue": {
															"arguments": [
																{
																	"id": 2528,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2517,
																	"src": "11971:5:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2527,
																"name": "log2",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	2514,
																	2549
																],
																"referencedDeclaration": 2514,
																"src": "11966:4:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 2529,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11966:11:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "11949:28:11"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2545,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2531,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2526,
																"src": "11998:6:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 2540,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 2533,
																						"name": "rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2520,
																						"src": "12025:8:11",
																						"typeDescriptions": {
																							"typeIdentifier": "t_enum$_Rounding_$1815",
																							"typeString": "enum Math.Rounding"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_enum$_Rounding_$1815",
																							"typeString": "enum Math.Rounding"
																						}
																					],
																					"id": 2532,
																					"name": "unsignedRoundsUp",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2857,
																					"src": "12008:16:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$1815_$returns$_t_bool_$",
																						"typeString": "function (enum Math.Rounding) pure returns (bool)"
																					}
																				},
																				"id": 2534,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "12008:26:11",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2539,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 2537,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "31",
																						"id": 2535,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "12038:1:11",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1_by_1",
																							"typeString": "int_const 1"
																						},
																						"value": "1"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "<<",
																					"rightExpression": {
																						"id": 2536,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2526,
																						"src": "12043:6:11",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "12038:11:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 2538,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2517,
																					"src": "12052:5:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "12038:19:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "12008:49:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 2542,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12064:1:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 2543,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "12008:57:11",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 2541,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12060:1:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 2544,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "12007:59:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "11998:68:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2524,
														"id": 2546,
														"nodeType": "Return",
														"src": "11991:75:11"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2515,
										"nodeType": "StructuredDocumentation",
										"src": "11688:142:11",
										"text": " @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 2549,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log2",
									"nameLocation": "11844:4:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2521,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2517,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "11857:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 2549,
												"src": "11849:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2516,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11849:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2520,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "11873:8:11",
												"nodeType": "VariableDeclaration",
												"scope": 2549,
												"src": "11864:17:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$1815",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 2519,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2518,
														"name": "Rounding",
														"nameLocations": [
															"11864:8:11"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1815,
														"src": "11864:8:11"
													},
													"referencedDeclaration": 1815,
													"src": "11864:8:11",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$1815",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11848:34:11"
									},
									"returnParameters": {
										"id": 2524,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2523,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2549,
												"src": "11906:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2522,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11906:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11905:9:11"
									},
									"scope": 2858,
									"src": "11835:248:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2677,
										"nodeType": "Block",
										"src": "12276:854:11",
										"statements": [
											{
												"assignments": [
													2558
												],
												"declarations": [
													{
														"constant": false,
														"id": 2558,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "12294:6:11",
														"nodeType": "VariableDeclaration",
														"scope": 2677,
														"src": "12286:14:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2557,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "12286:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2560,
												"initialValue": {
													"hexValue": "30",
													"id": 2559,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "12303:1:11",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "12286:18:11"
											},
											{
												"id": 2674,
												"nodeType": "UncheckedBlock",
												"src": "12314:787:11",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2565,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2561,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2552,
																"src": "12342:5:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(57 digits omitted)...0000"
																},
																"id": 2564,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2562,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12351:2:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 2563,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12357:2:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "12351:8:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(57 digits omitted)...0000"
																}
															},
															"src": "12342:17:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2577,
														"nodeType": "IfStatement",
														"src": "12338:103:11",
														"trueBody": {
															"id": 2576,
															"nodeType": "Block",
															"src": "12361:80:11",
															"statements": [
																{
																	"expression": {
																		"id": 2570,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2566,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2552,
																			"src": "12379:5:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(57 digits omitted)...0000"
																			},
																			"id": 2569,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2567,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12388:2:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3634",
																				"id": 2568,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12394:2:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_64_by_1",
																					"typeString": "int_const 64"
																				},
																				"value": "64"
																			},
																			"src": "12388:8:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(57 digits omitted)...0000"
																			}
																		},
																		"src": "12379:17:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2571,
																	"nodeType": "ExpressionStatement",
																	"src": "12379:17:11"
																},
																{
																	"expression": {
																		"id": 2574,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2572,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2558,
																			"src": "12414:6:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 2573,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12424:2:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "12414:12:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2575,
																	"nodeType": "ExpressionStatement",
																	"src": "12414:12:11"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2582,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2578,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2552,
																"src": "12458:5:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(25 digits omitted)...0000"
																},
																"id": 2581,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2579,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12467:2:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 2580,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12473:2:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "12467:8:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(25 digits omitted)...0000"
																}
															},
															"src": "12458:17:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2594,
														"nodeType": "IfStatement",
														"src": "12454:103:11",
														"trueBody": {
															"id": 2593,
															"nodeType": "Block",
															"src": "12477:80:11",
															"statements": [
																{
																	"expression": {
																		"id": 2587,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2583,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2552,
																			"src": "12495:5:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(25 digits omitted)...0000"
																			},
																			"id": 2586,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2584,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12504:2:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3332",
																				"id": 2585,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12510:2:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_32_by_1",
																					"typeString": "int_const 32"
																				},
																				"value": "32"
																			},
																			"src": "12504:8:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(25 digits omitted)...0000"
																			}
																		},
																		"src": "12495:17:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2588,
																	"nodeType": "ExpressionStatement",
																	"src": "12495:17:11"
																},
																{
																	"expression": {
																		"id": 2591,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2589,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2558,
																			"src": "12530:6:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 2590,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12540:2:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "12530:12:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2592,
																	"nodeType": "ExpressionStatement",
																	"src": "12530:12:11"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2599,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2595,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2552,
																"src": "12574:5:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000000000000000_by_1",
																	"typeString": "int_const 10000000000000000"
																},
																"id": 2598,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2596,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12583:2:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 2597,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12589:2:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "12583:8:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000000000000000_by_1",
																	"typeString": "int_const 10000000000000000"
																}
															},
															"src": "12574:17:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2611,
														"nodeType": "IfStatement",
														"src": "12570:103:11",
														"trueBody": {
															"id": 2610,
															"nodeType": "Block",
															"src": "12593:80:11",
															"statements": [
																{
																	"expression": {
																		"id": 2604,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2600,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2552,
																			"src": "12611:5:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000000000000000_by_1",
																				"typeString": "int_const 10000000000000000"
																			},
																			"id": 2603,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2601,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12620:2:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3136",
																				"id": 2602,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12626:2:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_16_by_1",
																					"typeString": "int_const 16"
																				},
																				"value": "16"
																			},
																			"src": "12620:8:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000000000000000_by_1",
																				"typeString": "int_const 10000000000000000"
																			}
																		},
																		"src": "12611:17:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2605,
																	"nodeType": "ExpressionStatement",
																	"src": "12611:17:11"
																},
																{
																	"expression": {
																		"id": 2608,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2606,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2558,
																			"src": "12646:6:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 2607,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12656:2:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "12646:12:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2609,
																	"nodeType": "ExpressionStatement",
																	"src": "12646:12:11"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2616,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2612,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2552,
																"src": "12690:5:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100000000_by_1",
																	"typeString": "int_const 100000000"
																},
																"id": 2615,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2613,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12699:2:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 2614,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12705:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "12699:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100000000_by_1",
																	"typeString": "int_const 100000000"
																}
															},
															"src": "12690:16:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2628,
														"nodeType": "IfStatement",
														"src": "12686:100:11",
														"trueBody": {
															"id": 2627,
															"nodeType": "Block",
															"src": "12708:78:11",
															"statements": [
																{
																	"expression": {
																		"id": 2621,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2617,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2552,
																			"src": "12726:5:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100000000_by_1",
																				"typeString": "int_const 100000000"
																			},
																			"id": 2620,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2618,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12735:2:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "38",
																				"id": 2619,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12741:1:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_8_by_1",
																					"typeString": "int_const 8"
																				},
																				"value": "8"
																			},
																			"src": "12735:7:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100000000_by_1",
																				"typeString": "int_const 100000000"
																			}
																		},
																		"src": "12726:16:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2622,
																	"nodeType": "ExpressionStatement",
																	"src": "12726:16:11"
																},
																{
																	"expression": {
																		"id": 2625,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2623,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2558,
																			"src": "12760:6:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 2624,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12770:1:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "12760:11:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2626,
																	"nodeType": "ExpressionStatement",
																	"src": "12760:11:11"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2633,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2629,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2552,
																"src": "12803:5:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000_by_1",
																	"typeString": "int_const 10000"
																},
																"id": 2632,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2630,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12812:2:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "34",
																	"id": 2631,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12818:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "12812:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000_by_1",
																	"typeString": "int_const 10000"
																}
															},
															"src": "12803:16:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2645,
														"nodeType": "IfStatement",
														"src": "12799:100:11",
														"trueBody": {
															"id": 2644,
															"nodeType": "Block",
															"src": "12821:78:11",
															"statements": [
																{
																	"expression": {
																		"id": 2638,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2634,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2552,
																			"src": "12839:5:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000_by_1",
																				"typeString": "int_const 10000"
																			},
																			"id": 2637,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2635,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12848:2:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "34",
																				"id": 2636,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12854:1:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_4_by_1",
																					"typeString": "int_const 4"
																				},
																				"value": "4"
																			},
																			"src": "12848:7:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000_by_1",
																				"typeString": "int_const 10000"
																			}
																		},
																		"src": "12839:16:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2639,
																	"nodeType": "ExpressionStatement",
																	"src": "12839:16:11"
																},
																{
																	"expression": {
																		"id": 2642,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2640,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2558,
																			"src": "12873:6:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 2641,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12883:1:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "12873:11:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2643,
																	"nodeType": "ExpressionStatement",
																	"src": "12873:11:11"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2650,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2646,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2552,
																"src": "12916:5:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100_by_1",
																	"typeString": "int_const 100"
																},
																"id": 2649,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2647,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12925:2:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "32",
																	"id": 2648,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12931:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "12925:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100_by_1",
																	"typeString": "int_const 100"
																}
															},
															"src": "12916:16:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2662,
														"nodeType": "IfStatement",
														"src": "12912:100:11",
														"trueBody": {
															"id": 2661,
															"nodeType": "Block",
															"src": "12934:78:11",
															"statements": [
																{
																	"expression": {
																		"id": 2655,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2651,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2552,
																			"src": "12952:5:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100_by_1",
																				"typeString": "int_const 100"
																			},
																			"id": 2654,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2652,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12961:2:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "32",
																				"id": 2653,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12967:1:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_2_by_1",
																					"typeString": "int_const 2"
																				},
																				"value": "2"
																			},
																			"src": "12961:7:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100_by_1",
																				"typeString": "int_const 100"
																			}
																		},
																		"src": "12952:16:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2656,
																	"nodeType": "ExpressionStatement",
																	"src": "12952:16:11"
																},
																{
																	"expression": {
																		"id": 2659,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2657,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2558,
																			"src": "12986:6:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 2658,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12996:1:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "12986:11:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2660,
																	"nodeType": "ExpressionStatement",
																	"src": "12986:11:11"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2667,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2663,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2552,
																"src": "13029:5:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																},
																"id": 2666,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2664,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13038:2:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2665,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13044:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "13038:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																}
															},
															"src": "13029:16:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2673,
														"nodeType": "IfStatement",
														"src": "13025:66:11",
														"trueBody": {
															"id": 2672,
															"nodeType": "Block",
															"src": "13047:44:11",
															"statements": [
																{
																	"expression": {
																		"id": 2670,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2668,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2558,
																			"src": "13065:6:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 2669,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13075:1:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "13065:11:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2671,
																	"nodeType": "ExpressionStatement",
																	"src": "13065:11:11"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 2675,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2558,
													"src": "13117:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2556,
												"id": 2676,
												"nodeType": "Return",
												"src": "13110:13:11"
											}
										]
									},
									"documentation": {
										"id": 2550,
										"nodeType": "StructuredDocumentation",
										"src": "12089:120:11",
										"text": " @dev Return the log in base 10 of a positive value rounded towards zero.\n Returns 0 if given 0."
									},
									"id": 2678,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log10",
									"nameLocation": "12223:5:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2553,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2552,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "12237:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 2678,
												"src": "12229:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2551,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12229:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12228:15:11"
									},
									"returnParameters": {
										"id": 2556,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2555,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2678,
												"src": "12267:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2554,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12267:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12266:9:11"
									},
									"scope": 2858,
									"src": "12214:916:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2712,
										"nodeType": "Block",
										"src": "13365:170:11",
										"statements": [
											{
												"id": 2711,
												"nodeType": "UncheckedBlock",
												"src": "13375:154:11",
												"statements": [
													{
														"assignments": [
															2690
														],
														"declarations": [
															{
																"constant": false,
																"id": 2690,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "13407:6:11",
																"nodeType": "VariableDeclaration",
																"scope": 2711,
																"src": "13399:14:11",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2689,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "13399:7:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2694,
														"initialValue": {
															"arguments": [
																{
																	"id": 2692,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2681,
																	"src": "13422:5:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2691,
																"name": "log10",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	2678,
																	2713
																],
																"referencedDeclaration": 2678,
																"src": "13416:5:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 2693,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "13416:12:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "13399:29:11"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2709,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2695,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2690,
																"src": "13449:6:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 2704,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 2697,
																						"name": "rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2684,
																						"src": "13476:8:11",
																						"typeDescriptions": {
																							"typeIdentifier": "t_enum$_Rounding_$1815",
																							"typeString": "enum Math.Rounding"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_enum$_Rounding_$1815",
																							"typeString": "enum Math.Rounding"
																						}
																					],
																					"id": 2696,
																					"name": "unsignedRoundsUp",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2857,
																					"src": "13459:16:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$1815_$returns$_t_bool_$",
																						"typeString": "function (enum Math.Rounding) pure returns (bool)"
																					}
																				},
																				"id": 2698,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "13459:26:11",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2703,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 2701,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "3130",
																						"id": 2699,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "13489:2:11",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_10_by_1",
																							"typeString": "int_const 10"
																						},
																						"value": "10"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "**",
																					"rightExpression": {
																						"id": 2700,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2690,
																						"src": "13495:6:11",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "13489:12:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 2702,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2681,
																					"src": "13504:5:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "13489:20:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "13459:50:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 2706,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13516:1:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 2707,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "13459:58:11",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 2705,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13512:1:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 2708,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "13458:60:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "13449:69:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2688,
														"id": 2710,
														"nodeType": "Return",
														"src": "13442:76:11"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2679,
										"nodeType": "StructuredDocumentation",
										"src": "13136:143:11",
										"text": " @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 2713,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log10",
									"nameLocation": "13293:5:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2685,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2681,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "13307:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 2713,
												"src": "13299:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2680,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13299:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2684,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "13323:8:11",
												"nodeType": "VariableDeclaration",
												"scope": 2713,
												"src": "13314:17:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$1815",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 2683,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2682,
														"name": "Rounding",
														"nameLocations": [
															"13314:8:11"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1815,
														"src": "13314:8:11"
													},
													"referencedDeclaration": 1815,
													"src": "13314:8:11",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$1815",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13298:34:11"
									},
									"returnParameters": {
										"id": 2688,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2687,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2713,
												"src": "13356:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2686,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13356:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13355:9:11"
									},
									"scope": 2858,
									"src": "13284:251:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2799,
										"nodeType": "Block",
										"src": "13855:600:11",
										"statements": [
											{
												"assignments": [
													2722
												],
												"declarations": [
													{
														"constant": false,
														"id": 2722,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "13873:6:11",
														"nodeType": "VariableDeclaration",
														"scope": 2799,
														"src": "13865:14:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2721,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "13865:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2724,
												"initialValue": {
													"hexValue": "30",
													"id": 2723,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "13882:1:11",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "13865:18:11"
											},
											{
												"id": 2796,
												"nodeType": "UncheckedBlock",
												"src": "13893:533:11",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2729,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2727,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2725,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2716,
																	"src": "13921:5:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "313238",
																	"id": 2726,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13930:3:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_128_by_1",
																		"typeString": "int_const 128"
																	},
																	"value": "128"
																},
																"src": "13921:12:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2728,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "13936:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "13921:16:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2739,
														"nodeType": "IfStatement",
														"src": "13917:98:11",
														"trueBody": {
															"id": 2738,
															"nodeType": "Block",
															"src": "13939:76:11",
															"statements": [
																{
																	"expression": {
																		"id": 2732,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2730,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2716,
																			"src": "13957:5:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 2731,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13967:3:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "13957:13:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2733,
																	"nodeType": "ExpressionStatement",
																	"src": "13957:13:11"
																},
																{
																	"expression": {
																		"id": 2736,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2734,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2722,
																			"src": "13988:6:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 2735,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13998:2:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "13988:12:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2737,
																	"nodeType": "ExpressionStatement",
																	"src": "13988:12:11"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2744,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2742,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2740,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2716,
																	"src": "14032:5:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 2741,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14041:2:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "14032:11:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2743,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14046:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "14032:15:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2754,
														"nodeType": "IfStatement",
														"src": "14028:95:11",
														"trueBody": {
															"id": 2753,
															"nodeType": "Block",
															"src": "14049:74:11",
															"statements": [
																{
																	"expression": {
																		"id": 2747,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2745,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2716,
																			"src": "14067:5:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 2746,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14077:2:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "14067:12:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2748,
																	"nodeType": "ExpressionStatement",
																	"src": "14067:12:11"
																},
																{
																	"expression": {
																		"id": 2751,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2749,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2722,
																			"src": "14097:6:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 2750,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14107:1:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "14097:11:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2752,
																	"nodeType": "ExpressionStatement",
																	"src": "14097:11:11"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2759,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2757,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2755,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2716,
																	"src": "14140:5:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 2756,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14149:2:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "14140:11:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2758,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14154:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "14140:15:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2769,
														"nodeType": "IfStatement",
														"src": "14136:95:11",
														"trueBody": {
															"id": 2768,
															"nodeType": "Block",
															"src": "14157:74:11",
															"statements": [
																{
																	"expression": {
																		"id": 2762,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2760,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2716,
																			"src": "14175:5:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 2761,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14185:2:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "14175:12:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2763,
																	"nodeType": "ExpressionStatement",
																	"src": "14175:12:11"
																},
																{
																	"expression": {
																		"id": 2766,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2764,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2722,
																			"src": "14205:6:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 2765,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14215:1:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "14205:11:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2767,
																	"nodeType": "ExpressionStatement",
																	"src": "14205:11:11"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2774,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2772,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2770,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2716,
																	"src": "14248:5:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 2771,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14257:2:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "14248:11:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2773,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14262:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "14248:15:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2784,
														"nodeType": "IfStatement",
														"src": "14244:95:11",
														"trueBody": {
															"id": 2783,
															"nodeType": "Block",
															"src": "14265:74:11",
															"statements": [
																{
																	"expression": {
																		"id": 2777,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2775,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2716,
																			"src": "14283:5:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 2776,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14293:2:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "14283:12:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2778,
																	"nodeType": "ExpressionStatement",
																	"src": "14283:12:11"
																},
																{
																	"expression": {
																		"id": 2781,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2779,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2722,
																			"src": "14313:6:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 2780,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14323:1:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "14313:11:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2782,
																	"nodeType": "ExpressionStatement",
																	"src": "14313:11:11"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2789,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2787,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2785,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2716,
																	"src": "14356:5:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 2786,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14365:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "14356:10:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2788,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14369:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "14356:14:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2795,
														"nodeType": "IfStatement",
														"src": "14352:64:11",
														"trueBody": {
															"id": 2794,
															"nodeType": "Block",
															"src": "14372:44:11",
															"statements": [
																{
																	"expression": {
																		"id": 2792,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2790,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2722,
																			"src": "14390:6:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 2791,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14400:1:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "14390:11:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2793,
																	"nodeType": "ExpressionStatement",
																	"src": "14390:11:11"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 2797,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2722,
													"src": "14442:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2720,
												"id": 2798,
												"nodeType": "Return",
												"src": "14435:13:11"
											}
										]
									},
									"documentation": {
										"id": 2714,
										"nodeType": "StructuredDocumentation",
										"src": "13541:246:11",
										"text": " @dev Return the log in base 256 of a positive value rounded towards zero.\n Returns 0 if given 0.\n Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string."
									},
									"id": 2800,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log256",
									"nameLocation": "13801:6:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2717,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2716,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "13816:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 2800,
												"src": "13808:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2715,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13808:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13807:15:11"
									},
									"returnParameters": {
										"id": 2720,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2719,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2800,
												"src": "13846:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2718,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13846:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13845:9:11"
									},
									"scope": 2858,
									"src": "13792:663:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2837,
										"nodeType": "Block",
										"src": "14692:177:11",
										"statements": [
											{
												"id": 2836,
												"nodeType": "UncheckedBlock",
												"src": "14702:161:11",
												"statements": [
													{
														"assignments": [
															2812
														],
														"declarations": [
															{
																"constant": false,
																"id": 2812,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "14734:6:11",
																"nodeType": "VariableDeclaration",
																"scope": 2836,
																"src": "14726:14:11",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2811,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "14726:7:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2816,
														"initialValue": {
															"arguments": [
																{
																	"id": 2814,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2803,
																	"src": "14750:5:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2813,
																"name": "log256",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	2800,
																	2838
																],
																"referencedDeclaration": 2800,
																"src": "14743:6:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 2815,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "14743:13:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "14726:30:11"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2834,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2817,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2812,
																"src": "14777:6:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 2829,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 2819,
																						"name": "rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2806,
																						"src": "14804:8:11",
																						"typeDescriptions": {
																							"typeIdentifier": "t_enum$_Rounding_$1815",
																							"typeString": "enum Math.Rounding"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_enum$_Rounding_$1815",
																							"typeString": "enum Math.Rounding"
																						}
																					],
																					"id": 2818,
																					"name": "unsignedRoundsUp",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2857,
																					"src": "14787:16:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$1815_$returns$_t_bool_$",
																						"typeString": "function (enum Math.Rounding) pure returns (bool)"
																					}
																				},
																				"id": 2820,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "14787:26:11",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2828,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 2826,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "31",
																						"id": 2821,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "14817:1:11",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1_by_1",
																							"typeString": "int_const 1"
																						},
																						"value": "1"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "<<",
																					"rightExpression": {
																						"components": [
																							{
																								"commonType": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								"id": 2824,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"leftExpression": {
																									"id": 2822,
																									"name": "result",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 2812,
																									"src": "14823:6:11",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"nodeType": "BinaryOperation",
																								"operator": "<<",
																								"rightExpression": {
																									"hexValue": "33",
																									"id": 2823,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"kind": "number",
																									"lValueRequested": false,
																									"nodeType": "Literal",
																									"src": "14833:1:11",
																									"typeDescriptions": {
																										"typeIdentifier": "t_rational_3_by_1",
																										"typeString": "int_const 3"
																									},
																									"value": "3"
																								},
																								"src": "14823:11:11",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							}
																						],
																						"id": 2825,
																						"isConstant": false,
																						"isInlineArray": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "TupleExpression",
																						"src": "14822:13:11",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "14817:18:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 2827,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2803,
																					"src": "14838:5:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "14817:26:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "14787:56:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 2831,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14850:1:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 2832,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "14787:64:11",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 2830,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14846:1:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 2833,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "14786:66:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "14777:75:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2810,
														"id": 2835,
														"nodeType": "Return",
														"src": "14770:82:11"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2801,
										"nodeType": "StructuredDocumentation",
										"src": "14461:144:11",
										"text": " @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 2838,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log256",
									"nameLocation": "14619:6:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2807,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2803,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "14634:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 2838,
												"src": "14626:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2802,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14626:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2806,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "14650:8:11",
												"nodeType": "VariableDeclaration",
												"scope": 2838,
												"src": "14641:17:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$1815",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 2805,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2804,
														"name": "Rounding",
														"nameLocations": [
															"14641:8:11"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1815,
														"src": "14641:8:11"
													},
													"referencedDeclaration": 1815,
													"src": "14641:8:11",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$1815",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14625:34:11"
									},
									"returnParameters": {
										"id": 2810,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2809,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2838,
												"src": "14683:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2808,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14683:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14682:9:11"
									},
									"scope": 2858,
									"src": "14610:259:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2856,
										"nodeType": "Block",
										"src": "15067:48:11",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													},
													"id": 2854,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														},
														"id": 2852,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"id": 2849,
																	"name": "rounding",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2842,
																	"src": "15090:8:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_enum$_Rounding_$1815",
																		"typeString": "enum Math.Rounding"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_enum$_Rounding_$1815",
																		"typeString": "enum Math.Rounding"
																	}
																],
																"id": 2848,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "15084:5:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint8_$",
																	"typeString": "type(uint8)"
																},
																"typeName": {
																	"id": 2847,
																	"name": "uint8",
																	"nodeType": "ElementaryTypeName",
																	"src": "15084:5:11",
																	"typeDescriptions": {}
																}
															},
															"id": 2850,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "15084:15:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "%",
														"rightExpression": {
															"hexValue": "32",
															"id": 2851,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "15102:1:11",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"src": "15084:19:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "31",
														"id": 2853,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "15107:1:11",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "15084:24:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 2846,
												"id": 2855,
												"nodeType": "Return",
												"src": "15077:31:11"
											}
										]
									},
									"documentation": {
										"id": 2839,
										"nodeType": "StructuredDocumentation",
										"src": "14875:113:11",
										"text": " @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers."
									},
									"id": 2857,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "unsignedRoundsUp",
									"nameLocation": "15002:16:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2843,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2842,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "15028:8:11",
												"nodeType": "VariableDeclaration",
												"scope": 2857,
												"src": "15019:17:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$1815",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 2841,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2840,
														"name": "Rounding",
														"nameLocations": [
															"15019:8:11"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1815,
														"src": "15019:8:11"
													},
													"referencedDeclaration": 1815,
													"src": "15019:8:11",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$1815",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15018:19:11"
									},
									"returnParameters": {
										"id": 2846,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2845,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2857,
												"src": "15061:4:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2844,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "15061:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15060:6:11"
									},
									"scope": 2858,
									"src": "14993:122:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 2859,
							"src": "203:14914:11",
							"usedErrors": [
								1810
							],
							"usedEvents": []
						}
					],
					"src": "103:15015:11"
				},
				"id": 11
			},
			"main/node_modules/@openzeppelin/contracts/utils/math/SignedMath.sol": {
				"ast": {
					"absolutePath": "main/node_modules/@openzeppelin/contracts/utils/math/SignedMath.sol",
					"exportedSymbols": {
						"SignedMath": [
							2963
						]
					},
					"id": 2964,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2860,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "109:24:12"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SignedMath",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 2861,
								"nodeType": "StructuredDocumentation",
								"src": "135:80:12",
								"text": " @dev Standard signed math utilities missing in the Solidity language."
							},
							"fullyImplemented": true,
							"id": 2963,
							"linearizedBaseContracts": [
								2963
							],
							"name": "SignedMath",
							"nameLocation": "224:10:12",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 2878,
										"nodeType": "Block",
										"src": "376:37:12",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"id": 2873,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2871,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2864,
															"src": "393:1:12",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"id": 2872,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2866,
															"src": "397:1:12",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"src": "393:5:12",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 2875,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2866,
														"src": "405:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"id": 2876,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "393:13:12",
													"trueExpression": {
														"id": 2874,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2864,
														"src": "401:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 2870,
												"id": 2877,
												"nodeType": "Return",
												"src": "386:20:12"
											}
										]
									},
									"documentation": {
										"id": 2862,
										"nodeType": "StructuredDocumentation",
										"src": "241:66:12",
										"text": " @dev Returns the largest of two signed numbers."
									},
									"id": 2879,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "max",
									"nameLocation": "321:3:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2867,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2864,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "332:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 2879,
												"src": "325:8:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2863,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "325:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2866,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "342:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 2879,
												"src": "335:8:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2865,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "335:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "324:20:12"
									},
									"returnParameters": {
										"id": 2870,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2869,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2879,
												"src": "368:6:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2868,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "368:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "367:8:12"
									},
									"scope": 2963,
									"src": "312:101:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2896,
										"nodeType": "Block",
										"src": "555:37:12",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"id": 2891,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2889,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2882,
															"src": "572:1:12",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"id": 2890,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2884,
															"src": "576:1:12",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"src": "572:5:12",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 2893,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2884,
														"src": "584:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"id": 2894,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "572:13:12",
													"trueExpression": {
														"id": 2892,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2882,
														"src": "580:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 2888,
												"id": 2895,
												"nodeType": "Return",
												"src": "565:20:12"
											}
										]
									},
									"documentation": {
										"id": 2880,
										"nodeType": "StructuredDocumentation",
										"src": "419:67:12",
										"text": " @dev Returns the smallest of two signed numbers."
									},
									"id": 2897,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "min",
									"nameLocation": "500:3:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2885,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2882,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "511:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 2897,
												"src": "504:8:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2881,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "504:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2884,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "521:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 2897,
												"src": "514:8:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2883,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "514:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "503:20:12"
									},
									"returnParameters": {
										"id": 2888,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2887,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2897,
												"src": "547:6:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2886,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "547:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "546:8:12"
									},
									"scope": 2963,
									"src": "491:101:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2940,
										"nodeType": "Block",
										"src": "797:162:12",
										"statements": [
											{
												"assignments": [
													2908
												],
												"declarations": [
													{
														"constant": false,
														"id": 2908,
														"mutability": "mutable",
														"name": "x",
														"nameLocation": "866:1:12",
														"nodeType": "VariableDeclaration",
														"scope": 2940,
														"src": "859:8:12",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"typeName": {
															"id": 2907,
															"name": "int256",
															"nodeType": "ElementaryTypeName",
															"src": "859:6:12",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2921,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 2920,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 2911,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2909,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2900,
																	"src": "871:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"id": 2910,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2902,
																	"src": "875:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"src": "871:5:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"id": 2912,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "870:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 2918,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			},
																			"id": 2915,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2913,
																				"name": "a",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2900,
																				"src": "882:1:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "^",
																			"rightExpression": {
																				"id": 2914,
																				"name": "b",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2902,
																				"src": "886:1:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"src": "882:5:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		}
																	],
																	"id": 2916,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "881:7:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2917,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "892:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "881:12:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"id": 2919,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "880:14:12",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "870:24:12",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "859:35:12"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 2938,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2922,
														"name": "x",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2908,
														"src": "911:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 2936,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2930,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 2927,
																						"name": "x",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2908,
																						"src": "931:1:12",
																						"typeDescriptions": {
																							"typeIdentifier": "t_int256",
																							"typeString": "int256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_int256",
																							"typeString": "int256"
																						}
																					],
																					"id": 2926,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "923:7:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_uint256_$",
																						"typeString": "type(uint256)"
																					},
																					"typeName": {
																						"id": 2925,
																						"name": "uint256",
																						"nodeType": "ElementaryTypeName",
																						"src": "923:7:12",
																						"typeDescriptions": {}
																					}
																				},
																				"id": 2928,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "923:10:12",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": ">>",
																			"rightExpression": {
																				"hexValue": "323535",
																				"id": 2929,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "937:3:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_255_by_1",
																					"typeString": "int_const 255"
																				},
																				"value": "255"
																			},
																			"src": "923:17:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 2924,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "916:6:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_int256_$",
																			"typeString": "type(int256)"
																		},
																		"typeName": {
																			"id": 2923,
																			"name": "int256",
																			"nodeType": "ElementaryTypeName",
																			"src": "916:6:12",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 2931,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "916:25:12",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			},
																			"id": 2934,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2932,
																				"name": "a",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2900,
																				"src": "945:1:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "^",
																			"rightExpression": {
																				"id": 2933,
																				"name": "b",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2902,
																				"src": "949:1:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"src": "945:5:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		}
																	],
																	"id": 2935,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "944:7:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"src": "916:35:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"id": 2937,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "915:37:12",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "911:41:12",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 2906,
												"id": 2939,
												"nodeType": "Return",
												"src": "904:48:12"
											}
										]
									},
									"documentation": {
										"id": 2898,
										"nodeType": "StructuredDocumentation",
										"src": "598:126:12",
										"text": " @dev Returns the average of two signed numbers without overflow.\n The result is rounded towards zero."
									},
									"id": 2941,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "average",
									"nameLocation": "738:7:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2903,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2900,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "753:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 2941,
												"src": "746:8:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2899,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "746:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2902,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "763:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 2941,
												"src": "756:8:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2901,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "756:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "745:20:12"
									},
									"returnParameters": {
										"id": 2906,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2905,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2941,
												"src": "789:6:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2904,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "789:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "788:8:12"
									},
									"scope": 2963,
									"src": "729:230:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2961,
										"nodeType": "Block",
										"src": "1103:158:12",
										"statements": [
											{
												"id": 2960,
												"nodeType": "UncheckedBlock",
												"src": "1113:142:12",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		},
																		"id": 2953,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2951,
																			"name": "n",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2944,
																			"src": "1228:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">=",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 2952,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1233:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1228:6:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"falseExpression": {
																		"id": 2956,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "UnaryOperation",
																		"operator": "-",
																		"prefix": true,
																		"src": "1241:2:12",
																		"subExpression": {
																			"id": 2955,
																			"name": "n",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2944,
																			"src": "1242:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	},
																	"id": 2957,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "Conditional",
																	"src": "1228:15:12",
																	"trueExpression": {
																		"id": 2954,
																		"name": "n",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2944,
																		"src": "1237:1:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																],
																"id": 2950,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1220:7:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint256_$",
																	"typeString": "type(uint256)"
																},
																"typeName": {
																	"id": 2949,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "1220:7:12",
																	"typeDescriptions": {}
																}
															},
															"id": 2958,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1220:24:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2948,
														"id": 2959,
														"nodeType": "Return",
														"src": "1213:31:12"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2942,
										"nodeType": "StructuredDocumentation",
										"src": "965:78:12",
										"text": " @dev Returns the absolute unsigned value of a signed value."
									},
									"id": 2962,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "abs",
									"nameLocation": "1057:3:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2945,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2944,
												"mutability": "mutable",
												"name": "n",
												"nameLocation": "1068:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 2962,
												"src": "1061:8:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2943,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "1061:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1060:10:12"
									},
									"returnParameters": {
										"id": 2948,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2947,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2962,
												"src": "1094:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2946,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1094:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1093:9:12"
									},
									"scope": 2963,
									"src": "1048:213:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 2964,
							"src": "216:1047:12",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "109:1155:12"
				},
				"id": 12
			}
		}
	}
}